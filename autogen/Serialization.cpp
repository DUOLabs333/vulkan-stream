
#include <ThreadStruct.hpp>
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZMKGzLc=json({});
    
        if (name.pNext==NULL){
            return_ZMKGzLc["null"]=true;
            return return_ZMKGzLc;
        }
        return_ZMKGzLc=[&]() {
    json return_IQPdTzJ=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_ZMKGzLc;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    result.pNext=(VkBaseOutStructure*)malloc(sizeof(VkBaseOutStructure));
[&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jwMTMxE=json({});
    
        if (name.pNext==NULL){
            return_jwMTMxE["null"]=true;
            return return_jwMTMxE;
        }
        return_jwMTMxE=[&]() {
    json return_SdgnKRj=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_jwMTMxE;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_JFhIhIT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JFhIhIT=NULL;
        return;
        }
    temp_JFhIhIT=(VkBaseInStructure*)malloc(sizeof(VkBaseInStructure));
[&]() {
*(temp_JFhIhIT)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_JFhIhIT;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_FKDphYE=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_BQxhYdf=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_FKDphYE=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_WgFSJJb=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_SkfIPXH=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_RFetNSZ=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_hMadGIY=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_RFetNSZ=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_zhBEwMQ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_swfDTVb=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_FGsPpLv=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_AMiJycL=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_yUXMiIr=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_RLiziZV=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_blvmMGR=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_kELGAHK=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_pXfrYGG=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_bwQNSjf=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_wIhUNvP=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_TZsyOkV=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_YQLSton=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_umcvNes=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_FeigWwG=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_TjcDcVw=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_mvpttME=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_nePbvzO=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_wxKUVlP=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_MWYPeDi=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_fDOILmz=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_AzamcVz=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_SudJAuV=json({});
    
        return_SudJAuV["members"]={};
        for(int SudJAuV=0; SudJAuV < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; SudJAuV++){
            json temp;
            temp=[&]() {
    json return_kdyUfNs=json({});
    return serialize_char(name.deviceName[SudJAuV]);}();
            return_SudJAuV["members"].push_back(temp);
        }
        return return_SudJAuV;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_vDxedkq=json({});
    
        return_vDxedkq["members"]={};
        for(int vDxedkq=0; vDxedkq < VK_UUID_SIZE; vDxedkq++){
            json temp;
            temp=[&]() {
    json return_OsqgMSp=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[vDxedkq]);}();
            return_vDxedkq["members"].push_back(temp);
        }
        return return_vDxedkq;
        }();
result["members"]["limits"]=[&]() {
    json return_AzzlbjI=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_pdvWUZe=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int jGLwIiS=0; jGLwIiS < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; jGLwIiS++){
            [&]() {
result.deviceName[jGLwIiS]=deserialize_char(name["members"]["deviceName"]["members"][jGLwIiS]);}();;
        }
        }();
[&]() {

        for (int xMooNAD=0; xMooNAD < VK_UUID_SIZE; xMooNAD++){
            [&]() {
result.pipelineCacheUUID[xMooNAD]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][xMooNAD]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_nzLpbtZ=json({});
    
        return_nzLpbtZ["members"]={};
        for(int nzLpbtZ=0; nzLpbtZ < VK_MAX_EXTENSION_NAME_SIZE; nzLpbtZ++){
            json temp;
            temp=[&]() {
    json return_UZRrDtp=json({});
    return serialize_char(name.extensionName[nzLpbtZ]);}();
            return_nzLpbtZ["members"].push_back(temp);
        }
        return return_nzLpbtZ;
        }();
result["members"]["specVersion"]=[&]() {
    json return_mMnWOJd=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int EuitdlP=0; EuitdlP < VK_MAX_EXTENSION_NAME_SIZE; EuitdlP++){
            [&]() {
result.extensionName[EuitdlP]=deserialize_char(name["members"]["extensionName"]["members"][EuitdlP]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_aRjlpsu=json({});
    
        return_aRjlpsu["members"]={};
        for(int aRjlpsu=0; aRjlpsu < VK_MAX_EXTENSION_NAME_SIZE; aRjlpsu++){
            json temp;
            temp=[&]() {
    json return_aJZRYxa=json({});
    return serialize_char(name.layerName[aRjlpsu]);}();
            return_aRjlpsu["members"].push_back(temp);
        }
        return return_aRjlpsu;
        }();
result["members"]["specVersion"]=[&]() {
    json return_BYJSPcl=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_wcwWKYw=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_elNJOHw=json({});
    
        return_elNJOHw["members"]={};
        for(int elNJOHw=0; elNJOHw < VK_MAX_DESCRIPTION_SIZE; elNJOHw++){
            json temp;
            temp=[&]() {
    json return_GtlYMsa=json({});
    return serialize_char(name.description[elNJOHw]);}();
            return_elNJOHw["members"].push_back(temp);
        }
        return return_elNJOHw;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int aUKmKqB=0; aUKmKqB < VK_MAX_EXTENSION_NAME_SIZE; aUKmKqB++){
            [&]() {
result.layerName[aUKmKqB]=deserialize_char(name["members"]["layerName"]["members"][aUKmKqB]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int avTWzuk=0; avTWzuk < VK_MAX_DESCRIPTION_SIZE; avTWzuk++){
            [&]() {
result.description[avTWzuk]=deserialize_char(name["members"]["description"]["members"][avTWzuk]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["pApplicationName"]=[&]() {
    json return_zvDTisH=json({});
    
        if (name.pApplicationName==NULL){
            return_zvDTisH["null"]=true;
            return return_zvDTisH;
        }
        
        return_zvDTisH["members"]={};
        for(int zvDTisH=0; zvDTisH < strlen(name.pApplicationName)+1; zvDTisH++){
            json temp;
            temp=[&]() {
    json return_CRrVzCv=json({});
    return serialize_char(name.pApplicationName[zvDTisH]);}();
            return_zvDTisH["members"].push_back(temp);
        }
        return return_zvDTisH;
        }();
result["members"]["applicationVersion"]=[&]() {
    json return_tSecHcQ=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_IeqYpMP=json({});
    
        if (name.pEngineName==NULL){
            return_IeqYpMP["null"]=true;
            return return_IeqYpMP;
        }
        
        return_IeqYpMP["members"]={};
        for(int IeqYpMP=0; IeqYpMP < strlen(name.pEngineName)+1; IeqYpMP++){
            json temp;
            temp=[&]() {
    json return_cTdhvDN=json({});
    return serialize_char(name.pEngineName[IeqYpMP]);}();
            return_IeqYpMP["members"].push_back(temp);
        }
        return return_IeqYpMP;
        }();
result["members"]["engineVersion"]=[&]() {
    json return_vhKYzrx=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_KHaUbPt=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
char* temp_mmkIEWW;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_mmkIEWW=NULL;
        return;
        }
    temp_mmkIEWW=(char*)malloc(name["members"]["pApplicationName"]["members"].size()*sizeof(char));
        for (int GbFVFGj=0; GbFVFGj < name["members"]["pApplicationName"]["members"].size(); GbFVFGj++){
            [&]() {
temp_mmkIEWW[GbFVFGj]=deserialize_char(name["members"]["pApplicationName"]["members"][GbFVFGj]);}();;
        }
        }();result.pApplicationName=temp_mmkIEWW;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_wBBxWNt;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_wBBxWNt=NULL;
        return;
        }
    temp_wBBxWNt=(char*)malloc(name["members"]["pEngineName"]["members"].size()*sizeof(char));
        for (int ZkxDLqZ=0; ZkxDLqZ < name["members"]["pEngineName"]["members"].size(); ZkxDLqZ++){
            [&]() {
temp_wBBxWNt[ZkxDLqZ]=deserialize_char(name["members"]["pEngineName"]["members"][ZkxDLqZ]);}();;
        }
        }();result.pEngineName=temp_wBBxWNt;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_dVQBmKT=json({});
    
        if (name.pUserData==NULL){
            return_dVQBmKT["null"]=true;
            return return_dVQBmKT;
        }
        return_dVQBmKT=[&]() {
    json return_ckadoDn=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_ckadoDn["null"]=true;
            return return_ckadoDn;
        }
        
        return_ckadoDn["members"]={};
        for(int ckadoDn=0; ckadoDn < strlen(((char*)(name.pUserData)))+1; ckadoDn++){
            json temp;
            temp=[&]() {
    json return_OMpHlLz=json({});
    return serialize_char(((char*)(name.pUserData))[ckadoDn]);}();
            return_ckadoDn["members"].push_back(temp);
        }
        return return_ckadoDn;
        }();return return_dVQBmKT;}();
result["members"]["pfnAllocation"]=[&]() {
    json return_ZMBXFGp=json({});
    return serialize_PFN_vkAllocationFunction(name.pfnAllocation);}();
result["members"]["pfnReallocation"]=[&]() {
    json return_vLuoELj=json({});
    return serialize_PFN_vkReallocationFunction(name.pfnReallocation);}();
result["members"]["pfnFree"]=[&]() {
    json return_dGqMNqO=json({});
    return serialize_PFN_vkFreeFunction(name.pfnFree);}();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_JVSMkJI=json({});
    return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);}();
result["members"]["pfnInternalFree"]=[&]() {
    json return_OehDwIU=json({});
    return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);}();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int gLWLjWN=0; gLWLjWN < name["members"]["pUserData"]["members"].size(); gLWLjWN++){
            [&]() {
temp[gLWLjWN]=deserialize_char(name["members"]["pUserData"]["members"][gLWLjWN]);}();;
        }
        }();result.pUserData=(void*)temp;
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["flags"]=[&]() {
    json return_DtrvQNw=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_oyWWUBg=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_qjjiQKo=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_BpJJAEA=json({});
    
        if (name.pQueuePriorities==NULL){
            return_BpJJAEA["null"]=true;
            return return_BpJJAEA;
        }
        
        return_BpJJAEA["members"]={};
        for(int BpJJAEA=0; BpJJAEA < name.queueCount; BpJJAEA++){
            json temp;
            temp=[&]() {
    json return_rhaQDLy=json({});
    return serialize_float(name.pQueuePriorities[BpJJAEA]);}();
            return_BpJJAEA["members"].push_back(temp);
        }
        return return_BpJJAEA;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_sibbgvk;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_sibbgvk=NULL;
        return;
        }
    temp_sibbgvk=(float*)malloc(result.queueCount*sizeof(float));
        for (int WDYiYWU=0; WDYiYWU < result.queueCount; WDYiYWU++){
            [&]() {
temp_sibbgvk[WDYiYWU]=deserialize_float(name["members"]["pQueuePriorities"]["members"][WDYiYWU]);}();;
        }
        }();result.pQueuePriorities=temp_sibbgvk;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["flags"]=[&]() {
    json return_ylkFtyM=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_sNTkiGN=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_kvBKdhK=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_kvBKdhK["null"]=true;
            return return_kvBKdhK;
        }
        
        return_kvBKdhK["members"]={};
        for(int kvBKdhK=0; kvBKdhK < name.queueCreateInfoCount; kvBKdhK++){
            json temp;
            temp=[&]() {
    json return_NjsAEka=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[kvBKdhK]);}();
            return_kvBKdhK["members"].push_back(temp);
        }
        return return_kvBKdhK;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_pzDvJvb=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_DbSwPwH=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_DbSwPwH["null"]=true;
            return return_DbSwPwH;
        }
        
        return_DbSwPwH["members"]={};
        for(int DbSwPwH=0; DbSwPwH < name.enabledLayerCount; DbSwPwH++){
            json temp;
            temp=[&]() {
    json return_Ziaryta=json({});
    
        if (name.ppEnabledLayerNames[DbSwPwH]==NULL){
            return_Ziaryta["null"]=true;
            return return_Ziaryta;
        }
        
        return_Ziaryta["members"]={};
        for(int Ziaryta=0; Ziaryta < strlen(name.ppEnabledLayerNames[DbSwPwH])+1; Ziaryta++){
            json temp;
            temp=[&]() {
    json return_VjoYOpl=json({});
    return serialize_char(name.ppEnabledLayerNames[DbSwPwH][Ziaryta]);}();
            return_Ziaryta["members"].push_back(temp);
        }
        return return_Ziaryta;
        }();
            return_DbSwPwH["members"].push_back(temp);
        }
        return return_DbSwPwH;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_IxnIUEW=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_cbpcoAX=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_cbpcoAX["null"]=true;
            return return_cbpcoAX;
        }
        
        return_cbpcoAX["members"]={};
        for(int cbpcoAX=0; cbpcoAX < name.enabledExtensionCount; cbpcoAX++){
            json temp;
            temp=[&]() {
    json return_NTIEHyT=json({});
    
        if (name.ppEnabledExtensionNames[cbpcoAX]==NULL){
            return_NTIEHyT["null"]=true;
            return return_NTIEHyT;
        }
        
        return_NTIEHyT["members"]={};
        for(int NTIEHyT=0; NTIEHyT < strlen(name.ppEnabledExtensionNames[cbpcoAX])+1; NTIEHyT++){
            json temp;
            temp=[&]() {
    json return_KeEVszW=json({});
    return serialize_char(name.ppEnabledExtensionNames[cbpcoAX][NTIEHyT]);}();
            return_NTIEHyT["members"].push_back(temp);
        }
        return return_NTIEHyT;
        }();
            return_cbpcoAX["members"].push_back(temp);
        }
        return return_cbpcoAX;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_ontvixv=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_ontvixv["null"]=true;
            return return_ontvixv;
        }
        return_ontvixv=[&]() {
    json return_GjtYRGc=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_ontvixv;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_HgUjXYH;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_HgUjXYH=NULL;
        return;
        }
    temp_HgUjXYH=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int AQgnnkz=0; AQgnnkz < result.queueCreateInfoCount; AQgnnkz++){
            [&]() {
temp_HgUjXYH[AQgnnkz]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][AQgnnkz]);}();;
        }
        }();result.pQueueCreateInfos=temp_HgUjXYH;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_TFFtnLi;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_TFFtnLi=NULL;
        return;
        }
    temp_TFFtnLi=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int FhFwYWw=0; FhFwYWw < result.enabledLayerCount; FhFwYWw++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw].contains("null")){
        temp_TFFtnLi[FhFwYWw]=NULL;
        return;
        }
    temp_TFFtnLi[FhFwYWw]=(char*)malloc(name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"].size()*sizeof(char));
        for (int UDgMnlK=0; UDgMnlK < name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"].size(); UDgMnlK++){
            [&]() {
temp_TFFtnLi[FhFwYWw][UDgMnlK]=deserialize_char(name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"][UDgMnlK]);}();;
        }
        }();;
        }
        }();result.ppEnabledLayerNames=temp_TFFtnLi;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_zEUymwE;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_zEUymwE=NULL;
        return;
        }
    temp_zEUymwE=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int jvttGCc=0; jvttGCc < result.enabledExtensionCount; jvttGCc++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][jvttGCc].contains("null")){
        temp_zEUymwE[jvttGCc]=NULL;
        return;
        }
    temp_zEUymwE[jvttGCc]=(char*)malloc(name["members"]["ppEnabledExtensionNames"]["members"][jvttGCc]["members"].size()*sizeof(char));
        for (int lpBwPUy=0; lpBwPUy < name["members"]["ppEnabledExtensionNames"]["members"][jvttGCc]["members"].size(); lpBwPUy++){
            [&]() {
temp_zEUymwE[jvttGCc][lpBwPUy]=deserialize_char(name["members"]["ppEnabledExtensionNames"]["members"][jvttGCc]["members"][lpBwPUy]);}();;
        }
        }();;
        }
        }();result.ppEnabledExtensionNames=temp_zEUymwE;}();
[&]() {
VkPhysicalDeviceFeatures* temp_zxTBbXk;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_zxTBbXk=NULL;
        return;
        }
    temp_zxTBbXk=(VkPhysicalDeviceFeatures*)malloc(sizeof(VkPhysicalDeviceFeatures));
[&]() {
*(temp_zxTBbXk)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_zxTBbXk;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["flags"]=[&]() {
    json return_qXEIsjg=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_lLYJVuA=json({});
    
        if (name.pApplicationInfo==NULL){
            return_lLYJVuA["null"]=true;
            return return_lLYJVuA;
        }
        return_lLYJVuA=[&]() {
    json return_NiUdZdJ=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_lLYJVuA;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_pzDvJvb=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_DbSwPwH=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_DbSwPwH["null"]=true;
            return return_DbSwPwH;
        }
        
        return_DbSwPwH["members"]={};
        for(int DbSwPwH=0; DbSwPwH < name.enabledLayerCount; DbSwPwH++){
            json temp;
            temp=[&]() {
    json return_Ziaryta=json({});
    
        if (name.ppEnabledLayerNames[DbSwPwH]==NULL){
            return_Ziaryta["null"]=true;
            return return_Ziaryta;
        }
        
        return_Ziaryta["members"]={};
        for(int Ziaryta=0; Ziaryta < strlen(name.ppEnabledLayerNames[DbSwPwH])+1; Ziaryta++){
            json temp;
            temp=[&]() {
    json return_VjoYOpl=json({});
    return serialize_char(name.ppEnabledLayerNames[DbSwPwH][Ziaryta]);}();
            return_Ziaryta["members"].push_back(temp);
        }
        return return_Ziaryta;
        }();
            return_DbSwPwH["members"].push_back(temp);
        }
        return return_DbSwPwH;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_IxnIUEW=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_lAWYZpe=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_lAWYZpe["null"]=true;
            return return_lAWYZpe;
        }
        
        return_lAWYZpe["members"]={};
        for(int lAWYZpe=0; lAWYZpe < name.enabledExtensionCount; lAWYZpe++){
            json temp;
            temp=[&]() {
    json return_SErTYXn=json({});
    
        if (name.ppEnabledExtensionNames[lAWYZpe]==NULL){
            return_SErTYXn["null"]=true;
            return return_SErTYXn;
        }
        
        return_SErTYXn["members"]={};
        for(int SErTYXn=0; SErTYXn < strlen(name.ppEnabledExtensionNames[lAWYZpe])+1; SErTYXn++){
            json temp;
            temp=[&]() {
    json return_hklhLTn=json({});
    return serialize_char(name.ppEnabledExtensionNames[lAWYZpe][SErTYXn]);}();
            return_SErTYXn["members"].push_back(temp);
        }
        return return_SErTYXn;
        }();
            return_lAWYZpe["members"].push_back(temp);
        }
        return return_lAWYZpe;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_QeAtpAp;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_QeAtpAp=NULL;
        return;
        }
    temp_QeAtpAp=(VkApplicationInfo*)malloc(sizeof(VkApplicationInfo));
[&]() {
*(temp_QeAtpAp)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_QeAtpAp;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_TFFtnLi;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_TFFtnLi=NULL;
        return;
        }
    temp_TFFtnLi=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int FhFwYWw=0; FhFwYWw < result.enabledLayerCount; FhFwYWw++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw].contains("null")){
        temp_TFFtnLi[FhFwYWw]=NULL;
        return;
        }
    temp_TFFtnLi[FhFwYWw]=(char*)malloc(name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"].size()*sizeof(char));
        for (int UDgMnlK=0; UDgMnlK < name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"].size(); UDgMnlK++){
            [&]() {
temp_TFFtnLi[FhFwYWw][UDgMnlK]=deserialize_char(name["members"]["ppEnabledLayerNames"]["members"][FhFwYWw]["members"][UDgMnlK]);}();;
        }
        }();;
        }
        }();result.ppEnabledLayerNames=temp_TFFtnLi;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_SDvRpXY;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_SDvRpXY=NULL;
        return;
        }
    temp_SDvRpXY=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int IomKVOQ=0; IomKVOQ < result.enabledExtensionCount; IomKVOQ++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][IomKVOQ].contains("null")){
        temp_SDvRpXY[IomKVOQ]=NULL;
        return;
        }
    temp_SDvRpXY[IomKVOQ]=(char*)malloc(name["members"]["ppEnabledExtensionNames"]["members"][IomKVOQ]["members"].size()*sizeof(char));
        for (int NWSofxs=0; NWSofxs < name["members"]["ppEnabledExtensionNames"]["members"][IomKVOQ]["members"].size(); NWSofxs++){
            [&]() {
temp_SDvRpXY[IomKVOQ][NWSofxs]=deserialize_char(name["members"]["ppEnabledExtensionNames"]["members"][IomKVOQ]["members"][NWSofxs]);}();;
        }
        }();;
        }
        }();result.ppEnabledExtensionNames=temp_SDvRpXY;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_tnHCupA=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_aOkqHek=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_ssGhqJY=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_HfzpgAr=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_GZbiSrf=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_QvuLctd=json({});
    
        return_QvuLctd["members"]={};
        for(int QvuLctd=0; QvuLctd < VK_MAX_MEMORY_TYPES; QvuLctd++){
            json temp;
            temp=[&]() {
    json return_KULMSLK=json({});
    return serialize_VkMemoryType(name.memoryTypes[QvuLctd]);}();
            return_QvuLctd["members"].push_back(temp);
        }
        return return_QvuLctd;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_jyQmvSY=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_rgGjQLP=json({});
    
        return_rgGjQLP["members"]={};
        for(int rgGjQLP=0; rgGjQLP < VK_MAX_MEMORY_HEAPS; rgGjQLP++){
            json temp;
            temp=[&]() {
    json return_DmomHYb=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[rgGjQLP]);}();
            return_rgGjQLP["members"].push_back(temp);
        }
        return return_rgGjQLP;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int rCcUSFn=0; rCcUSFn < VK_MAX_MEMORY_TYPES; rCcUSFn++){
            [&]() {
result.memoryTypes[rCcUSFn]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][rCcUSFn]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int IbKidaX=0; IbKidaX < VK_MAX_MEMORY_HEAPS; IbKidaX++){
            [&]() {
result.memoryHeaps[IbKidaX]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][IbKidaX]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["allocationSize"]=[&]() {
    json return_anmeYJI=json({});
    return_anmeYJI=[&]() {
    json return_xNGHgBe=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_anmeYJI;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_hyngmKD=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_ttGtuRn=json({});
    return_ttGtuRn=[&]() {
    json return_xBsTbbW=json({});
    return serialize_uint64_t(name.size);}();return return_ttGtuRn;}();
result["members"]["alignment"]=[&]() {
    json return_amdFmMh=json({});
    return_amdFmMh=[&]() {
    json return_sQGEtWt=json({});
    return serialize_uint64_t(name.alignment);}();return return_amdFmMh;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_cQnRvOg=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_mRVtfIm=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_sitgsma=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_BDyFbjv=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_PXJwlua=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_QkateME=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_gqUWusQ=json({});
    return_gqUWusQ=[&]() {
    json return_shzzxuI=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_gqUWusQ;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_WFePyKO=json({});
    return_WFePyKO=[&]() {
    json return_eOylShn=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_WFePyKO;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_UzatXGC=json({});
    return_UzatXGC=[&]() {
    json return_XNIhewQ=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_UzatXGC;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_uCMcyNE=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_LGBSVOw=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_bSreYPk=json({});
    return_bSreYPk=[&]() {
    json return_nAjqynZ=json({});
    return serialize_uint64_t(name.size);}();return return_bSreYPk;}();
result["members"]["flags"]=[&]() {
    json return_KKDSCuo=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["memory"]=[&]() {
    json return_zWVaBqw=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_vcitTpQ=json({});
    return_vcitTpQ=[&]() {
    json return_LHGlDEg=json({});
    return serialize_uint64_t(name.offset);}();return return_vcitTpQ;}();
result["members"]["size"]=[&]() {
    json return_yRlCRYY=json({});
    return_yRlCRYY=[&]() {
    json return_MmugJBg=json({});
    return serialize_uint64_t(name.size);}();return return_yRlCRYY;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_rbDbUjK=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_xmvgOXP=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_GBFeUtB=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_LpfhtGt=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_mvgqMEx=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_mfcnLdO=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_cnEfmhF=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_eIBQBqp=json({});
    return_eIBQBqp=[&]() {
    json return_kDqdvEe=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_eIBQBqp;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_ecVTskP=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_kPSddsk=json({});
    return_kPSddsk=[&]() {
    json return_xGltZls=json({});
    return serialize_uint64_t(name.offset);}();return return_kPSddsk;}();
result["members"]["range"]=[&]() {
    json return_PtuUHko=json({});
    return_PtuUHko=[&]() {
    json return_aWbOXdU=json({});
    return serialize_uint64_t(name.range);}();return return_PtuUHko;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_hmLOucp=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_kOjJunY=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_SKOnvXc=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["dstSet"]=[&]() {
    json return_JdVgkJw=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_kuTcKrh=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_kYlAmyc=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_YfXwEqn=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_UAtPUzv=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_tsYiHXd=json({});
    
        if (name.pImageInfo==NULL){
            return_tsYiHXd["null"]=true;
            return return_tsYiHXd;
        }
        
        return_tsYiHXd["members"]={};
        for(int tsYiHXd=0; tsYiHXd < name.descriptorCount; tsYiHXd++){
            json temp;
            temp=[&]() {
    json return_oZYEWCW=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[tsYiHXd]);}();
            return_tsYiHXd["members"].push_back(temp);
        }
        return return_tsYiHXd;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_xAaVNJu=json({});
    
        if (name.pBufferInfo==NULL){
            return_xAaVNJu["null"]=true;
            return return_xAaVNJu;
        }
        
        return_xAaVNJu["members"]={};
        for(int xAaVNJu=0; xAaVNJu < name.descriptorCount; xAaVNJu++){
            json temp;
            temp=[&]() {
    json return_OjYfyHJ=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[xAaVNJu]);}();
            return_xAaVNJu["members"].push_back(temp);
        }
        return return_xAaVNJu;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_gnpFTOj=json({});
    
        if (name.pTexelBufferView==NULL){
            return_gnpFTOj["null"]=true;
            return return_gnpFTOj;
        }
        
        return_gnpFTOj["members"]={};
        for(int gnpFTOj=0; gnpFTOj < name.descriptorCount; gnpFTOj++){
            json temp;
            temp=[&]() {
    json return_xXZLmRv=json({});
    return serialize_VkBufferView(name.pTexelBufferView[gnpFTOj]);}();
            return_gnpFTOj["members"].push_back(temp);
        }
        return return_gnpFTOj;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_NmsEClj;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_NmsEClj=NULL;
        return;
        }
    temp_NmsEClj=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int XwiFmDU=0; XwiFmDU < result.descriptorCount; XwiFmDU++){
            [&]() {
temp_NmsEClj[XwiFmDU]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][XwiFmDU]);}();;
        }
        }();result.pImageInfo=temp_NmsEClj;}();
[&]() {
VkDescriptorBufferInfo* temp_wMpDjCL;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_wMpDjCL=NULL;
        return;
        }
    temp_wMpDjCL=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int VsjMzOg=0; VsjMzOg < result.descriptorCount; VsjMzOg++){
            [&]() {
temp_wMpDjCL[VsjMzOg]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][VsjMzOg]);}();;
        }
        }();result.pBufferInfo=temp_wMpDjCL;}();
[&]() {
VkBufferView* temp_RFeUzVh;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_RFeUzVh=NULL;
        return;
        }
    temp_RFeUzVh=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int TxZzCXy=0; TxZzCXy < result.descriptorCount; TxZzCXy++){
            [&]() {
temp_RFeUzVh[TxZzCXy]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][TxZzCXy]);}();;
        }
        }();result.pTexelBufferView=temp_RFeUzVh;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcSet"]=[&]() {
    json return_lRGjjLK=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_VEzxOhM=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_PnkffID=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_JdVgkJw=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_NKorERJ=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_dxDXlUK=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_MrwnXjM=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJVuNCu=json({});
    
        if (name.pNext==NULL){
            return_bJVuNCu["null"]=true;
            return return_bJVuNCu;
        }
        return_bJVuNCu=[&]() {
    json return_gSvJhWw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gSvJhWw["null"]=true;
            return return_gSvJhWw;
        }
        
        return_gSvJhWw["members"]={};
        for(int gSvJhWw=0; gSvJhWw < strlen(((char*)(name.pNext)))+1; gSvJhWw++){
            json temp;
            temp=[&]() {
    json return_LmeHFYb=json({});
    return serialize_char(((char*)(name.pNext))[gSvJhWw]);}();
            return_gSvJhWw["members"].push_back(temp);
        }
        return return_gSvJhWw;
        }();return return_bJVuNCu;}();
result["members"]["usage"]=[&]() {
    json return_vnowcEk=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lEvEGvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lEvEGvb=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int HrQiuVE=0; HrQiuVE < name["members"]["pNext"]["members"].size(); HrQiuVE++){
            [&]() {
temp[HrQiuVE]=deserialize_char(name["members"]["pNext"]["members"][HrQiuVE]);}();;
        }
        }();temp_lEvEGvb=(void*)temp;
}();result.pNext=temp_lEvEGvb;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_glpfUoN=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_ttGtuRn=json({});
    return_ttGtuRn=[&]() {
    json return_xBsTbbW=json({});
    return serialize_uint64_t(name.size);}();return return_ttGtuRn;}();
result["members"]["usage"]=[&]() {
    json return_SRObyZk=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_suRtZqa=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_ocrTsnc=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_vJXlkxZ=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_vJXlkxZ["null"]=true;
            return return_vJXlkxZ;
        }
        
        return_vJXlkxZ["members"]={};
        for(int vJXlkxZ=0; vJXlkxZ < name.queueFamilyIndexCount; vJXlkxZ++){
            json temp;
            temp=[&]() {
    json return_ChTUjGM=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[vJXlkxZ]);}();
            return_vJXlkxZ["members"].push_back(temp);
        }
        return return_vJXlkxZ;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_phQGmMk;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_phQGmMk=NULL;
        return;
        }
    temp_phQGmMk=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int WvdaRYL=0; WvdaRYL < result.queueFamilyIndexCount; WvdaRYL++){
            [&]() {
temp_phQGmMk[WvdaRYL]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][WvdaRYL]);}();;
        }
        }();result.pQueueFamilyIndices=temp_phQGmMk;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_hYsPHQn=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_BxvkNgf=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_oEeLRLC=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_OvbjCMg=json({});
    return_OvbjCMg=[&]() {
    json return_VeVyEeU=json({});
    return serialize_uint64_t(name.offset);}();return return_OvbjCMg;}();
result["members"]["range"]=[&]() {
    json return_DVQjAJZ=json({});
    return_DVQjAJZ=[&]() {
    json return_ttQnOUk=json({});
    return serialize_uint64_t(name.range);}();return return_DVQjAJZ;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_YpebgRx=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_MaDdlcg=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_wYmCoAV=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_YpebgRx=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_MaDdlcg=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_sRGxaVk=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_asmZLdY=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_YpebgRx=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_uaQzMLk=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_FSBVXXL=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_sRGxaVk=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_asmZLdY=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcAccessMask"]=[&]() {
    json return_rULjJqo=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_xskHbxu=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcAccessMask"]=[&]() {
    json return_rULjJqo=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_AjjkFNG=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_VDfZCqS=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_IKVFIsp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_vhXHrbC=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_PGlmhWf=json({});
    return_PGlmhWf=[&]() {
    json return_RHucWhr=json({});
    return serialize_uint64_t(name.offset);}();return return_PGlmhWf;}();
result["members"]["size"]=[&]() {
    json return_pIhovJW=json({});
    return_pIhovJW=[&]() {
    json return_WGQJFqc=json({});
    return serialize_uint64_t(name.size);}();return return_pIhovJW;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcAccessMask"]=[&]() {
    json return_rULjJqo=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_AjjkFNG=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_MsBemFL=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_QaRZaXR=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_VDfZCqS=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_IKVFIsp=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_SMOOFTB=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_jPxlGmx=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_UduuegA=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_rdjdaEI=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_VJmNAHW=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_qlXtmUn=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_KqNRNAx=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_nJigKSl=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_eUVKtvP=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_XCcUAja=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_HptYQfC=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_gPaQfdZ=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_weHMLhy=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_SidzSeJ=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_SidzSeJ["null"]=true;
            return return_SidzSeJ;
        }
        
        return_SidzSeJ["members"]={};
        for(int SidzSeJ=0; SidzSeJ < name.queueFamilyIndexCount; SidzSeJ++){
            json temp;
            temp=[&]() {
    json return_gUBMqNs=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[SidzSeJ]);}();
            return_SidzSeJ["members"].push_back(temp);
        }
        return return_SidzSeJ;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_XhvHPMu=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_pYdlAeu;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_pYdlAeu=NULL;
        return;
        }
    temp_pYdlAeu=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int SkHBRTY=0; SkHBRTY < result.queueFamilyIndexCount; SkHBRTY++){
            [&]() {
temp_pYdlAeu[SkHBRTY]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][SkHBRTY]);}();;
        }
        }();result.pQueueFamilyIndices=temp_pYdlAeu;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_OvbjCMg=json({});
    return_OvbjCMg=[&]() {
    json return_VeVyEeU=json({});
    return serialize_uint64_t(name.offset);}();return return_OvbjCMg;}();
result["members"]["size"]=[&]() {
    json return_ttGtuRn=json({});
    return_ttGtuRn=[&]() {
    json return_xBsTbbW=json({});
    return serialize_uint64_t(name.size);}();return return_ttGtuRn;}();
result["members"]["rowPitch"]=[&]() {
    json return_hvJDVHE=json({});
    return_hvJDVHE=[&]() {
    json return_wZdhsiR=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_hvJDVHE;}();
result["members"]["arrayPitch"]=[&]() {
    json return_ppulsqR=json({});
    return_ppulsqR=[&]() {
    json return_cItcwxW=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_ppulsqR;}();
result["members"]["depthPitch"]=[&]() {
    json return_VMsDmrm=json({});
    return_VMsDmrm=[&]() {
    json return_fDaBfUl=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_VMsDmrm;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_NOoHTGe=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_uSQeoWJ=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_ivNdJAd=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_VJmNAHW=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_NzBlICE=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bZbpLHQ=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_nlYyNvU=json({});
    return_nlYyNvU=[&]() {
    json return_MwWZgRs=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_nlYyNvU;}();
result["members"]["dstOffset"]=[&]() {
    json return_YYboWGr=json({});
    return_YYboWGr=[&]() {
    json return_OBBFEpH=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_YYboWGr;}();
result["members"]["size"]=[&]() {
    json return_HpJBrXt=json({});
    return_HpJBrXt=[&]() {
    json return_VsebUkC=json({});
    return serialize_uint64_t(name.size);}();return return_HpJBrXt;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_PmBobkh=json({});
    return_PmBobkh=[&]() {
    json return_JXLqgOr=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_PmBobkh;}();
result["members"]["size"]=[&]() {
    json return_ttGtuRn=json({});
    return_ttGtuRn=[&]() {
    json return_xBsTbbW=json({});
    return serialize_uint64_t(name.size);}();return return_ttGtuRn;}();
result["members"]["memory"]=[&]() {
    json return_QizeEVh=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_yLhbwNr=json({});
    return_yLhbwNr=[&]() {
    json return_sIAbCeu=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_yLhbwNr;}();
result["members"]["flags"]=[&]() {
    json return_UqbPIVK=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_lMUGfEu=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_KROCKuM=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_qlXtmUn=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_QizeEVh=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_yLhbwNr=json({});
    return_yLhbwNr=[&]() {
    json return_sIAbCeu=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_yLhbwNr;}();
result["members"]["flags"]=[&]() {
    json return_UqbPIVK=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_xUyYFCO=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_OnezQMN=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_HEVmDGG=json({});
    
        if (name.pBinds==NULL){
            return_HEVmDGG["null"]=true;
            return return_HEVmDGG;
        }
        
        return_HEVmDGG["members"]={};
        for(int HEVmDGG=0; HEVmDGG < name.bindCount; HEVmDGG++){
            json temp;
            temp=[&]() {
    json return_kdWoZjs=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[HEVmDGG]);}();
            return_HEVmDGG["members"].push_back(temp);
        }
        return return_HEVmDGG;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_xcnniVn;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_xcnniVn=NULL;
        return;
        }
    temp_xcnniVn=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int ieNuvnW=0; ieNuvnW < result.bindCount; ieNuvnW++){
            [&]() {
temp_xcnniVn[ieNuvnW]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][ieNuvnW]);}();;
        }
        }();result.pBinds=temp_xcnniVn;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_gwmpawf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_OnezQMN=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_HEVmDGG=json({});
    
        if (name.pBinds==NULL){
            return_HEVmDGG["null"]=true;
            return return_HEVmDGG;
        }
        
        return_HEVmDGG["members"]={};
        for(int HEVmDGG=0; HEVmDGG < name.bindCount; HEVmDGG++){
            json temp;
            temp=[&]() {
    json return_kdWoZjs=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[HEVmDGG]);}();
            return_HEVmDGG["members"].push_back(temp);
        }
        return return_HEVmDGG;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_xcnniVn;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_xcnniVn=NULL;
        return;
        }
    temp_xcnniVn=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int ieNuvnW=0; ieNuvnW < result.bindCount; ieNuvnW++){
            [&]() {
temp_xcnniVn[ieNuvnW]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][ieNuvnW]);}();;
        }
        }();result.pBinds=temp_xcnniVn;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_gwmpawf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_OnezQMN=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_IRZvUhG=json({});
    
        if (name.pBinds==NULL){
            return_IRZvUhG["null"]=true;
            return return_IRZvUhG;
        }
        
        return_IRZvUhG["members"]={};
        for(int IRZvUhG=0; IRZvUhG < name.bindCount; IRZvUhG++){
            json temp;
            temp=[&]() {
    json return_MUsSVBL=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[IRZvUhG]);}();
            return_IRZvUhG["members"].push_back(temp);
        }
        return return_IRZvUhG;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_qtvsCpn;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_qtvsCpn=NULL;
        return;
        }
    temp_qtvsCpn=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int QNVJRLL=0; QNVJRLL < result.bindCount; QNVJRLL++){
            [&]() {
temp_qtvsCpn[QNVJRLL]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][QNVJRLL]);}();;
        }
        }();result.pBinds=temp_qtvsCpn;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_ZxYxLnu=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_RvYJrfP=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_RvYJrfP["null"]=true;
            return return_RvYJrfP;
        }
        
        return_RvYJrfP["members"]={};
        for(int RvYJrfP=0; RvYJrfP < name.waitSemaphoreCount; RvYJrfP++){
            json temp;
            temp=[&]() {
    json return_FBBxbZH=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[RvYJrfP]);}();
            return_RvYJrfP["members"].push_back(temp);
        }
        return return_RvYJrfP;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_JdSoZlM=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_EwFErVZ=json({});
    
        if (name.pBufferBinds==NULL){
            return_EwFErVZ["null"]=true;
            return return_EwFErVZ;
        }
        
        return_EwFErVZ["members"]={};
        for(int EwFErVZ=0; EwFErVZ < name.bufferBindCount; EwFErVZ++){
            json temp;
            temp=[&]() {
    json return_wsduLMN=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[EwFErVZ]);}();
            return_EwFErVZ["members"].push_back(temp);
        }
        return return_EwFErVZ;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_yvPyRdk=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_zlJCyTE=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_zlJCyTE["null"]=true;
            return return_zlJCyTE;
        }
        
        return_zlJCyTE["members"]={};
        for(int zlJCyTE=0; zlJCyTE < name.imageOpaqueBindCount; zlJCyTE++){
            json temp;
            temp=[&]() {
    json return_bBtdBqh=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[zlJCyTE]);}();
            return_zlJCyTE["members"].push_back(temp);
        }
        return return_zlJCyTE;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_WCuxtPL=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_FegCGgt=json({});
    
        if (name.pImageBinds==NULL){
            return_FegCGgt["null"]=true;
            return return_FegCGgt;
        }
        
        return_FegCGgt["members"]={};
        for(int FegCGgt=0; FegCGgt < name.imageBindCount; FegCGgt++){
            json temp;
            temp=[&]() {
    json return_rDdDxxo=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[FegCGgt]);}();
            return_FegCGgt["members"].push_back(temp);
        }
        return return_FegCGgt;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_egMwmDR=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_ZMUEuEH=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_ZMUEuEH["null"]=true;
            return return_ZMUEuEH;
        }
        
        return_ZMUEuEH["members"]={};
        for(int ZMUEuEH=0; ZMUEuEH < name.signalSemaphoreCount; ZMUEuEH++){
            json temp;
            temp=[&]() {
    json return_LUwhmBS=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[ZMUEuEH]);}();
            return_ZMUEuEH["members"].push_back(temp);
        }
        return return_ZMUEuEH;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_dkXmcbK;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_dkXmcbK=NULL;
        return;
        }
    temp_dkXmcbK=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int sgQfeaS=0; sgQfeaS < result.waitSemaphoreCount; sgQfeaS++){
            [&]() {
temp_dkXmcbK[sgQfeaS]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][sgQfeaS]);}();;
        }
        }();result.pWaitSemaphores=temp_dkXmcbK;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_EkqfWom;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_EkqfWom=NULL;
        return;
        }
    temp_EkqfWom=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int jlGLTFN=0; jlGLTFN < result.bufferBindCount; jlGLTFN++){
            [&]() {
temp_EkqfWom[jlGLTFN]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][jlGLTFN]);}();;
        }
        }();result.pBufferBinds=temp_EkqfWom;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_ZUxUTqh;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_ZUxUTqh=NULL;
        return;
        }
    temp_ZUxUTqh=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int CGDqEaB=0; CGDqEaB < result.imageOpaqueBindCount; CGDqEaB++){
            [&]() {
temp_ZUxUTqh[CGDqEaB]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][CGDqEaB]);}();;
        }
        }();result.pImageOpaqueBinds=temp_ZUxUTqh;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_lwKhXkm;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_lwKhXkm=NULL;
        return;
        }
    temp_lwKhXkm=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int piUwYUO=0; piUwYUO < result.imageBindCount; piUwYUO++){
            [&]() {
temp_lwKhXkm[piUwYUO]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][piUwYUO]);}();;
        }
        }();result.pImageBinds=temp_lwKhXkm;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_iwYJmMp;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_iwYJmMp=NULL;
        return;
        }
    temp_iwYJmMp=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int pKteFJo=0; pKteFJo < result.signalSemaphoreCount; pKteFJo++){
            [&]() {
temp_iwYJmMp[pKteFJo]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][pKteFJo]);}();;
        }
        }();result.pSignalSemaphores=temp_iwYJmMp;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_hzRjIlj=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_GJnfDgX=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_cIsWbMd=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_UlVFGCt=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_nkZpxLG=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_hzRjIlj=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_TLaIHWB=json({});
    
        return_TLaIHWB["members"]={};
        for(int TLaIHWB=0; TLaIHWB < 2; TLaIHWB++){
            json temp;
            temp=[&]() {
    json return_oZsphNY=json({});
    return serialize_VkOffset3D(name.srcOffsets[TLaIHWB]);}();
            return_TLaIHWB["members"].push_back(temp);
        }
        return return_TLaIHWB;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_cIsWbMd=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_smbSIWf=json({});
    
        return_smbSIWf["members"]={};
        for(int smbSIWf=0; smbSIWf < 2; smbSIWf++){
            json temp;
            temp=[&]() {
    json return_awRNiVe=json({});
    return serialize_VkOffset3D(name.dstOffsets[smbSIWf]);}();
            return_smbSIWf["members"].push_back(temp);
        }
        return return_smbSIWf;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int zrCAaIA=0; zrCAaIA < 2; zrCAaIA++){
            [&]() {
result.srcOffsets[zrCAaIA]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][zrCAaIA]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int EPHTsGj=0; EPHTsGj < 2; EPHTsGj++){
            [&]() {
result.dstOffsets[EPHTsGj]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][EPHTsGj]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_lmOzvsD=json({});
    return_lmOzvsD=[&]() {
    json return_sJRyPbk=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_lmOzvsD;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_zTCyGAI=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_sCFQucG=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_HEyykcq=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_SEVGYeY=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_ovxYksW=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_Ernezru=json({});
    return_Ernezru=[&]() {
    json return_OVFYZBW=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_Ernezru;}();
result["members"]["dstAddress"]=[&]() {
    json return_RUMVIFa=json({});
    return_RUMVIFa=[&]() {
    json return_xcXhtas=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_RUMVIFa;}();
result["members"]["size"]=[&]() {
    json return_JCXYVXd=json({});
    return_JCXYVXd=[&]() {
    json return_gOQWRdc=json({});
    return serialize_uint64_t(name.size);}();return return_JCXYVXd;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_Ernezru=json({});
    return_Ernezru=[&]() {
    json return_OVFYZBW=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_Ernezru;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_hGcJJeG=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_epkNasg=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_nlAjdhM=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_heGkphP=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_bXCiNWk=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_hzRjIlj=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_ktPAnCS=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_cIsWbMd=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_EGujxAj=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_EDrwZpM=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EoXzcOW=json({});
    
        if (name.pNext==NULL){
            return_EoXzcOW["null"]=true;
            return return_EoXzcOW;
        }
        return_EoXzcOW=[&]() {
    json return_BspviZs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BspviZs["null"]=true;
            return return_BspviZs;
        }
        
        return_BspviZs["members"]={};
        for(int BspviZs=0; BspviZs < strlen(((char*)(name.pNext)))+1; BspviZs++){
            json temp;
            temp=[&]() {
    json return_myGzYIS=json({});
    return serialize_char(((char*)(name.pNext))[BspviZs]);}();
            return_BspviZs["members"].push_back(temp);
        }
        return return_BspviZs;
        }();return return_EoXzcOW;}();
result["members"]["flags"]=[&]() {
    json return_xSJiPMH=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_CgRbHhi=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_TSoKkuV=json({});
    
        if (name.pCode==NULL){
            return_TSoKkuV["null"]=true;
            return return_TSoKkuV;
        }
        
        return_TSoKkuV["members"]={};
        for(int TSoKkuV=0; TSoKkuV < name.codeSize / 4; TSoKkuV++){
            json temp;
            temp=[&]() {
    json return_lOKzLfr=json({});
    return serialize_uint32_t(name.pCode[TSoKkuV]);}();
            return_TSoKkuV["members"].push_back(temp);
        }
        return return_TSoKkuV;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YSmRZda;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YSmRZda=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XtXGFUI=0; XtXGFUI < name["members"]["pNext"]["members"].size(); XtXGFUI++){
            [&]() {
temp[XtXGFUI]=deserialize_char(name["members"]["pNext"]["members"][XtXGFUI]);}();;
        }
        }();temp_YSmRZda=(void*)temp;
}();result.pNext=temp_YSmRZda;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_tcXIGam;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_tcXIGam=NULL;
        return;
        }
    temp_tcXIGam=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int AzDFKJh=0; AzDFKJh < result.codeSize / 4; AzDFKJh++){
            [&]() {
temp_tcXIGam[AzDFKJh]=deserialize_uint32_t(name["members"]["pCode"]["members"][AzDFKJh]);}();;
        }
        }();result.pCode=temp_tcXIGam;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_uHUTina=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_PkwCNFh=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_uytrrTG=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_oAGkIgX=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_hWZwQGn=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_hWZwQGn["null"]=true;
            return return_hWZwQGn;
        }
        
        return_hWZwQGn["members"]={};
        for(int hWZwQGn=0; hWZwQGn < name.descriptorCount; hWZwQGn++){
            json temp;
            temp=[&]() {
    json return_hYBRpEH=json({});
    return serialize_VkSampler(name.pImmutableSamplers[hWZwQGn]);}();
            return_hWZwQGn["members"].push_back(temp);
        }
        return return_hWZwQGn;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_NyPIqjt;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_NyPIqjt=NULL;
        return;
        }
    temp_NyPIqjt=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int EcxZsSV=0; EcxZsSV < result.descriptorCount; EcxZsSV++){
            [&]() {
temp_NyPIqjt[EcxZsSV]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][EcxZsSV]);}();;
        }
        }();result.pImmutableSamplers=temp_NyPIqjt;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_SEnGICQ=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_mhftHQB=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_MwthkyU=json({});
    
        if (name.pBindings==NULL){
            return_MwthkyU["null"]=true;
            return return_MwthkyU;
        }
        
        return_MwthkyU["members"]={};
        for(int MwthkyU=0; MwthkyU < name.bindingCount; MwthkyU++){
            json temp;
            temp=[&]() {
    json return_GDQifWg=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[MwthkyU]);}();
            return_MwthkyU["members"].push_back(temp);
        }
        return return_MwthkyU;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_gLDQNbv;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_gLDQNbv=NULL;
        return;
        }
    temp_gLDQNbv=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int QtqnpFm=0; QtqnpFm < result.bindingCount; QtqnpFm++){
            [&]() {
temp_gLDQNbv[QtqnpFm]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][QtqnpFm]);}();;
        }
        }();result.pBindings=temp_gLDQNbv;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_eEJaDAy=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_YJfBgmz=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_EbUZuKy=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_FLxDtfV=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_kBdxuzW=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_eeWIcMW=json({});
    
        if (name.pPoolSizes==NULL){
            return_eeWIcMW["null"]=true;
            return return_eeWIcMW;
        }
        
        return_eeWIcMW["members"]={};
        for(int eeWIcMW=0; eeWIcMW < name.poolSizeCount; eeWIcMW++){
            json temp;
            temp=[&]() {
    json return_HGRgfHU=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[eeWIcMW]);}();
            return_eeWIcMW["members"].push_back(temp);
        }
        return return_eeWIcMW;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_YbClZtI;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_YbClZtI=NULL;
        return;
        }
    temp_YbClZtI=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int scuocMg=0; scuocMg < result.poolSizeCount; scuocMg++){
            [&]() {
temp_YbClZtI[scuocMg]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][scuocMg]);}();;
        }
        }();result.pPoolSizes=temp_YbClZtI;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["descriptorPool"]=[&]() {
    json return_EuhLumW=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jSRtnWo=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_smJruWL=json({});
    
        if (name.pSetLayouts==NULL){
            return_smJruWL["null"]=true;
            return return_smJruWL;
        }
        
        return_smJruWL["members"]={};
        for(int smJruWL=0; smJruWL < name.descriptorSetCount; smJruWL++){
            json temp;
            temp=[&]() {
    json return_gjebYss=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[smJruWL]);}();
            return_smJruWL["members"].push_back(temp);
        }
        return return_smJruWL;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_gLmEHlu;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_gLmEHlu=NULL;
        return;
        }
    temp_gLmEHlu=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int pMAnQlw=0; pMAnQlw < result.descriptorSetCount; pMAnQlw++){
            [&]() {
temp_gLmEHlu[pMAnQlw]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][pMAnQlw]);}();;
        }
        }();result.pSetLayouts=temp_gLmEHlu;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_ZlmGgHE=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_pwxUHMS=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_CpIjojt=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_oagVPux=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_uZFpFCT=json({});
    
        if (name.pMapEntries==NULL){
            return_uZFpFCT["null"]=true;
            return return_uZFpFCT;
        }
        
        return_uZFpFCT["members"]={};
        for(int uZFpFCT=0; uZFpFCT < name.mapEntryCount; uZFpFCT++){
            json temp;
            temp=[&]() {
    json return_WYovikH=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[uZFpFCT]);}();
            return_uZFpFCT["members"].push_back(temp);
        }
        return return_uZFpFCT;
        }();
result["members"]["dataSize"]=[&]() {
    json return_DBkADGP=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_GMWDiKZ=json({});
    
        if (name.pData==NULL){
            return_GMWDiKZ["null"]=true;
            return return_GMWDiKZ;
        }
        return_GMWDiKZ=[&]() {
    json return_WptKakQ=json({});
    
        if (((char*)(name.pData))==NULL){
            return_WptKakQ["null"]=true;
            return return_WptKakQ;
        }
        
        return_WptKakQ["members"]={};
        for(int WptKakQ=0; WptKakQ < name.dataSize; WptKakQ++){
            json temp;
            temp=[&]() {
    json return_ynTgiBZ=json({});
    return serialize_char(((char*)(name.pData))[WptKakQ]);}();
            return_WptKakQ["members"].push_back(temp);
        }
        return return_WptKakQ;
        }();return return_GMWDiKZ;}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_NNOvgzZ;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_NNOvgzZ=NULL;
        return;
        }
    temp_NNOvgzZ=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int ROxftcs=0; ROxftcs < result.mapEntryCount; ROxftcs++){
            [&]() {
temp_NNOvgzZ[ROxftcs]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][ROxftcs]);}();;
        }
        }();result.pMapEntries=temp_NNOvgzZ;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_AdkNimA;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_AdkNimA=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.dataSize*sizeof(char));
        for (int goghDGP=0; goghDGP < result.dataSize; goghDGP++){
            [&]() {
temp[goghDGP]=deserialize_char(name["members"]["pData"]["members"][goghDGP]);}();;
        }
        }();temp_AdkNimA=(void*)temp;
}();result.pData=temp_AdkNimA;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_noRSZsT=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_bbrjCxo=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_YuBTkwF=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_bOYNyyd=json({});
    
        if (name.pName==NULL){
            return_bOYNyyd["null"]=true;
            return return_bOYNyyd;
        }
        
        return_bOYNyyd["members"]={};
        for(int bOYNyyd=0; bOYNyyd < strlen(name.pName)+1; bOYNyyd++){
            json temp;
            temp=[&]() {
    json return_wKPuVTC=json({});
    return serialize_char(name.pName[bOYNyyd]);}();
            return_bOYNyyd["members"].push_back(temp);
        }
        return return_bOYNyyd;
        }();
result["members"]["pName"]=[&]() {
    json return_bOYNyyd=json({});
    
        if (name.pName==NULL){
            return_bOYNyyd["null"]=true;
            return return_bOYNyyd;
        }
        
        return_bOYNyyd["members"]={};
        for(int bOYNyyd=0; bOYNyyd < strlen(name.pName)+1; bOYNyyd++){
            json temp;
            temp=[&]() {
    json return_wKPuVTC=json({});
    return serialize_char(name.pName[bOYNyyd]);}();
            return_bOYNyyd["members"].push_back(temp);
        }
        return return_bOYNyyd;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_JaUhJme=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_JaUhJme["null"]=true;
            return return_JaUhJme;
        }
        return_JaUhJme=[&]() {
    json return_esuGYQc=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_JaUhJme;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_bpdPFzV;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_bpdPFzV=NULL;
        return;
        }
    temp_bpdPFzV=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int XfysswB=0; XfysswB < name["members"]["pName"]["members"].size(); XfysswB++){
            [&]() {
temp_bpdPFzV[XfysswB]=deserialize_char(name["members"]["pName"]["members"][XfysswB]);}();;
        }
        }();result.pName=temp_bpdPFzV;}();
[&]() {
char* temp_bpdPFzV;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_bpdPFzV=NULL;
        return;
        }
    temp_bpdPFzV=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int XfysswB=0; XfysswB < name["members"]["pName"]["members"].size(); XfysswB++){
            [&]() {
temp_bpdPFzV[XfysswB]=deserialize_char(name["members"]["pName"]["members"][XfysswB]);}();;
        }
        }();result.pName=temp_bpdPFzV;}();
[&]() {
VkSpecializationInfo* temp_onZzutS;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_onZzutS=NULL;
        return;
        }
    temp_onZzutS=(VkSpecializationInfo*)malloc(sizeof(VkSpecializationInfo));
[&]() {
*(temp_onZzutS)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_onZzutS;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_QEAOBUa=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_fsFjWeB=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_tCCjdPK=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_vtphLvD=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_itbcbqX=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EmyrjNu=json({});
    
        if (name.pNext==NULL){
            return_EmyrjNu["null"]=true;
            return return_EmyrjNu;
        }
        return_EmyrjNu=[&]() {
    json return_DzzZOZU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DzzZOZU["null"]=true;
            return return_DzzZOZU;
        }
        
        return_DzzZOZU["members"]={};
        for(int DzzZOZU=0; DzzZOZU < strlen(((char*)(name.pNext)))+1; DzzZOZU++){
            json temp;
            temp=[&]() {
    json return_KchNDnF=json({});
    return serialize_char(((char*)(name.pNext))[DzzZOZU]);}();
            return_DzzZOZU["members"].push_back(temp);
        }
        return return_DzzZOZU;
        }();return return_EmyrjNu;}();
result["members"]["deviceAddress"]=[&]() {
    json return_geXfwsJ=json({});
    return_geXfwsJ=[&]() {
    json return_SAssPdC=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_geXfwsJ;}();
result["members"]["size"]=[&]() {
    json return_UgxPKcl=json({});
    return_UgxPKcl=[&]() {
    json return_vOBBlbq=json({});
    return serialize_uint64_t(name.size);}();return return_UgxPKcl;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_WErugWs=json({});
    return_WErugWs=[&]() {
    json return_GSotPvo=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_WErugWs;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TczvWNh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TczvWNh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int czfkvZb=0; czfkvZb < name["members"]["pNext"]["members"].size(); czfkvZb++){
            [&]() {
temp[czfkvZb]=deserialize_char(name["members"]["pNext"]["members"][czfkvZb]);}();;
        }
        }();temp_TczvWNh=(void*)temp;
}();result.pNext=temp_TczvWNh;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJVuNCu=json({});
    
        if (name.pNext==NULL){
            return_bJVuNCu["null"]=true;
            return return_bJVuNCu;
        }
        return_bJVuNCu=[&]() {
    json return_gSvJhWw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gSvJhWw["null"]=true;
            return return_gSvJhWw;
        }
        
        return_gSvJhWw["members"]={};
        for(int gSvJhWw=0; gSvJhWw < strlen(((char*)(name.pNext)))+1; gSvJhWw++){
            json temp;
            temp=[&]() {
    json return_LmeHFYb=json({});
    return serialize_char(((char*)(name.pNext))[gSvJhWw]);}();
            return_gSvJhWw["members"].push_back(temp);
        }
        return return_gSvJhWw;
        }();return return_bJVuNCu;}();
result["members"]["flags"]=[&]() {
    json return_Wqiwief=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lEvEGvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lEvEGvb=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int HrQiuVE=0; HrQiuVE < name["members"]["pNext"]["members"].size(); HrQiuVE++){
            [&]() {
temp[HrQiuVE]=deserialize_char(name["members"]["pNext"]["members"][HrQiuVE]);}();;
        }
        }();temp_lEvEGvb=(void*)temp;
}();result.pNext=temp_lEvEGvb;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_oWBfVZt=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_cXMmJul=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_ZHIcKCF=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_wrKWILI=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_oWBfVZt=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_rjkPFLq=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_gRnfGhY=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_PQxqJLE=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_mQTGWrU=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_NEdcUYk=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_NEdcUYk["null"]=true;
            return return_NEdcUYk;
        }
        
        return_NEdcUYk["members"]={};
        for(int NEdcUYk=0; NEdcUYk < name.vertexBindingDescriptionCount; NEdcUYk++){
            json temp;
            temp=[&]() {
    json return_IBqsybB=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[NEdcUYk]);}();
            return_NEdcUYk["members"].push_back(temp);
        }
        return return_NEdcUYk;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_OmehcgV=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_jWyeUvX=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_jWyeUvX["null"]=true;
            return return_jWyeUvX;
        }
        
        return_jWyeUvX["members"]={};
        for(int jWyeUvX=0; jWyeUvX < name.vertexAttributeDescriptionCount; jWyeUvX++){
            json temp;
            temp=[&]() {
    json return_QqbKvds=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[jWyeUvX]);}();
            return_jWyeUvX["members"].push_back(temp);
        }
        return return_jWyeUvX;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_PtJxGLo;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_PtJxGLo=NULL;
        return;
        }
    temp_PtJxGLo=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int bpGCIrY=0; bpGCIrY < result.vertexBindingDescriptionCount; bpGCIrY++){
            [&]() {
temp_PtJxGLo[bpGCIrY]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][bpGCIrY]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_PtJxGLo;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_AuPrAie;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_AuPrAie=NULL;
        return;
        }
    temp_AuPrAie=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int IhZCbXT=0; IhZCbXT < result.vertexAttributeDescriptionCount; IhZCbXT++){
            [&]() {
temp_AuPrAie[IhZCbXT]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][IhZCbXT]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_AuPrAie;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_uKJSnUf=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_ZYFMGrM=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_uYdMcKv=json({});
    return_uYdMcKv=[&]() {
    json return_fsesRcx=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_uYdMcKv;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_lxXWKRz=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_XdfLBwI=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_GFYUabX=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_nWHlswk=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_AOCfgTP=json({});
    
        if (name.pViewports==NULL){
            return_AOCfgTP["null"]=true;
            return return_AOCfgTP;
        }
        
        return_AOCfgTP["members"]={};
        for(int AOCfgTP=0; AOCfgTP < name.viewportCount; AOCfgTP++){
            json temp;
            temp=[&]() {
    json return_daMWxGb=json({});
    return serialize_VkViewport(name.pViewports[AOCfgTP]);}();
            return_AOCfgTP["members"].push_back(temp);
        }
        return return_AOCfgTP;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_jGSFKme=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_BzcfiuH=json({});
    
        if (name.pScissors==NULL){
            return_BzcfiuH["null"]=true;
            return return_BzcfiuH;
        }
        
        return_BzcfiuH["members"]={};
        for(int BzcfiuH=0; BzcfiuH < name.scissorCount; BzcfiuH++){
            json temp;
            temp=[&]() {
    json return_CnGOjgV=json({});
    return serialize_VkRect2D(name.pScissors[BzcfiuH]);}();
            return_BzcfiuH["members"].push_back(temp);
        }
        return return_BzcfiuH;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_hckfvyW;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_hckfvyW=NULL;
        return;
        }
    temp_hckfvyW=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int PLqvDEz=0; PLqvDEz < result.viewportCount; PLqvDEz++){
            [&]() {
temp_hckfvyW[PLqvDEz]=deserialize_VkViewport(name["members"]["pViewports"]["members"][PLqvDEz]);}();;
        }
        }();result.pViewports=temp_hckfvyW;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_GdSNert;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_GdSNert=NULL;
        return;
        }
    temp_GdSNert=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int vvDwFMt=0; vvDwFMt < result.scissorCount; vvDwFMt++){
            [&]() {
temp_GdSNert[vvDwFMt]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][vvDwFMt]);}();;
        }
        }();result.pScissors=temp_GdSNert;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["flags"]=[&]() {
    json return_RDBtCSB=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_xtCiXCk=json({});
    return_xtCiXCk=[&]() {
    json return_mqJpOxv=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_xtCiXCk;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_WryEgFk=json({});
    return_WryEgFk=[&]() {
    json return_oPQFvdP=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_WryEgFk;}();
result["members"]["polygonMode"]=[&]() {
    json return_XkMXmcV=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_ArMXNKk=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_tevHpht=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_iemMJkD=json({});
    return_iemMJkD=[&]() {
    json return_aPmTvZO=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_iemMJkD;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_pPlbluP=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_VtefKHq=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_eKsKVBf=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_qlOFbLd=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_nXJAASI=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_NHEOvhL=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_VszGtYw=json({});
    return_VszGtYw=[&]() {
    json return_OKObDpJ=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_VszGtYw;}();
result["members"]["minSampleShading"]=[&]() {
    json return_KMliJjP=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_iVjchCH=json({});
    
        if (name.pSampleMask==NULL){
            return_iVjchCH["null"]=true;
            return return_iVjchCH;
        }
        
        return_iVjchCH["members"]={};
        for(int iVjchCH=0; iVjchCH < (name.rasterizationSamples + 31) / 32; iVjchCH++){
            json temp;
            temp=[&]() {
    json return_xHqTIbi=json({});
    return_xHqTIbi=[&]() {
    json return_fWgisUC=json({});
    return serialize_uint32_t(name.pSampleMask[iVjchCH]);}();return return_xHqTIbi;}();
            return_iVjchCH["members"].push_back(temp);
        }
        return return_iVjchCH;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_vRstJNo=json({});
    return_vRstJNo=[&]() {
    json return_iklURhL=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_vRstJNo;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_bTeCpph=json({});
    return_bTeCpph=[&]() {
    json return_ZrVcJvk=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_bTeCpph;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_DUursQC;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_DUursQC=NULL;
        return;
        }
    [&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_DUursQC=NULL;
        return;
        }
    temp_DUursQC=(uint32_t*)malloc((result.rasterizationSamples + 31) / 32*sizeof(uint32_t));
        for (int xwSqfTD=0; xwSqfTD < (result.rasterizationSamples + 31) / 32; xwSqfTD++){
            [&]() {
temp_DUursQC[xwSqfTD]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][xwSqfTD]);}();;
        }
        }();}();result.pSampleMask=temp_DUursQC;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_SoKAPgU=json({});
    return_SoKAPgU=[&]() {
    json return_rvxtebp=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_SoKAPgU;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_SggjstU=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_mmyaCPY=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_zbsByFd=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_AGYAhYp=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_iDRvkJc=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_MBTrKKL=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_xeKSlFo=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_omFxUuk=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_LtPrsBR=json({});
    return_LtPrsBR=[&]() {
    json return_MrLxptC=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_LtPrsBR;}();
result["members"]["logicOp"]=[&]() {
    json return_nEdpeYU=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_FQsBqkR=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_CIYzeVE=json({});
    
        if (name.pAttachments==NULL){
            return_CIYzeVE["null"]=true;
            return return_CIYzeVE;
        }
        
        return_CIYzeVE["members"]={};
        for(int CIYzeVE=0; CIYzeVE < name.attachmentCount; CIYzeVE++){
            json temp;
            temp=[&]() {
    json return_ZRTWvei=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[CIYzeVE]);}();
            return_CIYzeVE["members"].push_back(temp);
        }
        return return_CIYzeVE;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_kPFVbpp=json({});
    
        return_kPFVbpp["members"]={};
        for(int kPFVbpp=0; kPFVbpp < 4; kPFVbpp++){
            json temp;
            temp=[&]() {
    json return_uGXqgbm=json({});
    return serialize_float(name.blendConstants[kPFVbpp]);}();
            return_kPFVbpp["members"].push_back(temp);
        }
        return return_kPFVbpp;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_sRZxuzG;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_sRZxuzG=NULL;
        return;
        }
    temp_sRZxuzG=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int fOoSPME=0; fOoSPME < result.attachmentCount; fOoSPME++){
            [&]() {
temp_sRZxuzG[fOoSPME]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][fOoSPME]);}();;
        }
        }();result.pAttachments=temp_sRZxuzG;}();
[&]() {

        for (int oYhpOli=0; oYhpOli < 4; oYhpOli++){
            [&]() {
result.blendConstants[oYhpOli]=deserialize_float(name["members"]["blendConstants"]["members"][oYhpOli]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_STtHZgs=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_veLwhNb=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_DCqXnJM=json({});
    
        if (name.pDynamicStates==NULL){
            return_DCqXnJM["null"]=true;
            return return_DCqXnJM;
        }
        
        return_DCqXnJM["members"]={};
        for(int DCqXnJM=0; DCqXnJM < name.dynamicStateCount; DCqXnJM++){
            json temp;
            temp=[&]() {
    json return_udVJbyw=json({});
    return serialize_VkDynamicState(name.pDynamicStates[DCqXnJM]);}();
            return_DCqXnJM["members"].push_back(temp);
        }
        return return_DCqXnJM;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_FhQdtlK;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_FhQdtlK=NULL;
        return;
        }
    temp_FhQdtlK=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int lNFyUBY=0; lNFyUBY < result.dynamicStateCount; lNFyUBY++){
            [&]() {
temp_FhQdtlK[lNFyUBY]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][lNFyUBY]);}();;
        }
        }();result.pDynamicStates=temp_FhQdtlK;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_RKQqvSh=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_ZtfPzSa=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_hamGxVm=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_gDFooQU=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_VGKZbXW=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_BsywOub=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_EPIVZiZ=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_NZPyvjd=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_LuDyOAc=json({});
    return_LuDyOAc=[&]() {
    json return_URHMStg=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_LuDyOAc;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_aMpBFmq=json({});
    return_aMpBFmq=[&]() {
    json return_pBGqzcC=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_aMpBFmq;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_MmlkSfl=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_WNnFWpw=json({});
    return_WNnFWpw=[&]() {
    json return_tsQTJaC=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_WNnFWpw;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_NanfVpI=json({});
    return_NanfVpI=[&]() {
    json return_CPHBnjd=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_NanfVpI;}();
result["members"]["front"]=[&]() {
    json return_kFuQMZi=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_riTyQVp=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_xPmSHlm=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_dqzIIoP=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_QEAOBUa=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_nKnMIHH=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_GyMJLYM=json({});
    
        if (name.pStages==NULL){
            return_GyMJLYM["null"]=true;
            return return_GyMJLYM;
        }
        
        return_GyMJLYM["members"]={};
        for(int GyMJLYM=0; GyMJLYM < name.stageCount; GyMJLYM++){
            json temp;
            temp=[&]() {
    json return_xYJxTed=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[GyMJLYM]);}();
            return_GyMJLYM["members"].push_back(temp);
        }
        return return_GyMJLYM;
        }();
result["members"]["pStages"]=[&]() {
    json return_GyMJLYM=json({});
    
        if (name.pStages==NULL){
            return_GyMJLYM["null"]=true;
            return return_GyMJLYM;
        }
        
        return_GyMJLYM["members"]={};
        for(int GyMJLYM=0; GyMJLYM < name.stageCount; GyMJLYM++){
            json temp;
            temp=[&]() {
    json return_xYJxTed=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[GyMJLYM]);}();
            return_GyMJLYM["members"].push_back(temp);
        }
        return return_GyMJLYM;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_aqCbodF=json({});
    
        if (name.pVertexInputState==NULL){
            return_aqCbodF["null"]=true;
            return return_aqCbodF;
        }
        return_aqCbodF=[&]() {
    json return_mlMCErf=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_aqCbodF;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_yHJgGvq=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_yHJgGvq["null"]=true;
            return return_yHJgGvq;
        }
        return_yHJgGvq=[&]() {
    json return_KUYrYGQ=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_yHJgGvq;}();
result["members"]["pTessellationState"]=[&]() {
    json return_fTurDqN=json({});
    
        if (name.pTessellationState==NULL){
            return_fTurDqN["null"]=true;
            return return_fTurDqN;
        }
        return_fTurDqN=[&]() {
    json return_MVJyPIj=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_fTurDqN;}();
result["members"]["pViewportState"]=[&]() {
    json return_wMOXIVT=json({});
    
        if (name.pViewportState==NULL){
            return_wMOXIVT["null"]=true;
            return return_wMOXIVT;
        }
        return_wMOXIVT=[&]() {
    json return_jQKQyTi=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_wMOXIVT;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_rtLpEDq=json({});
    
        if (name.pRasterizationState==NULL){
            return_rtLpEDq["null"]=true;
            return return_rtLpEDq;
        }
        return_rtLpEDq=[&]() {
    json return_CsErZTy=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_rtLpEDq;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_TXGDIlQ=json({});
    
        if (name.pMultisampleState==NULL){
            return_TXGDIlQ["null"]=true;
            return return_TXGDIlQ;
        }
        return_TXGDIlQ=[&]() {
    json return_QHEroXM=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_TXGDIlQ;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_llRIaTI=json({});
    
        if (name.pDepthStencilState==NULL){
            return_llRIaTI["null"]=true;
            return return_llRIaTI;
        }
        return_llRIaTI=[&]() {
    json return_GQrkHKy=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_llRIaTI;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_IofYoXu=json({});
    
        if (name.pColorBlendState==NULL){
            return_IofYoXu["null"]=true;
            return return_IofYoXu;
        }
        return_IofYoXu=[&]() {
    json return_DcjQfqz=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_IofYoXu;}();
result["members"]["pDynamicState"]=[&]() {
    json return_QgFlZvL=json({});
    
        if (name.pDynamicState==NULL){
            return_QgFlZvL["null"]=true;
            return return_QgFlZvL;
        }
        return_QgFlZvL=[&]() {
    json return_qizoect=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_QgFlZvL;}();
result["members"]["layout"]=[&]() {
    json return_tCCjdPK=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_vpeIUFX=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_sDgynRT=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_vtphLvD=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_itbcbqX=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_CrfIfUl;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_CrfIfUl=NULL;
        return;
        }
    temp_CrfIfUl=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int lJMHSSw=0; lJMHSSw < result.stageCount; lJMHSSw++){
            [&]() {
temp_CrfIfUl[lJMHSSw]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][lJMHSSw]);}();;
        }
        }();result.pStages=temp_CrfIfUl;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_CrfIfUl;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_CrfIfUl=NULL;
        return;
        }
    temp_CrfIfUl=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int lJMHSSw=0; lJMHSSw < result.stageCount; lJMHSSw++){
            [&]() {
temp_CrfIfUl[lJMHSSw]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][lJMHSSw]);}();;
        }
        }();result.pStages=temp_CrfIfUl;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_TZlmqvS;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_TZlmqvS=NULL;
        return;
        }
    temp_TZlmqvS=(VkPipelineVertexInputStateCreateInfo*)malloc(sizeof(VkPipelineVertexInputStateCreateInfo));
[&]() {
*(temp_TZlmqvS)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_TZlmqvS;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_hdhNJWQ;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_hdhNJWQ=NULL;
        return;
        }
    temp_hdhNJWQ=(VkPipelineInputAssemblyStateCreateInfo*)malloc(sizeof(VkPipelineInputAssemblyStateCreateInfo));
[&]() {
*(temp_hdhNJWQ)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_hdhNJWQ;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_gYjFGYD;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_gYjFGYD=NULL;
        return;
        }
    temp_gYjFGYD=(VkPipelineTessellationStateCreateInfo*)malloc(sizeof(VkPipelineTessellationStateCreateInfo));
[&]() {
*(temp_gYjFGYD)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_gYjFGYD;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_JleTqkC;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_JleTqkC=NULL;
        return;
        }
    temp_JleTqkC=(VkPipelineViewportStateCreateInfo*)malloc(sizeof(VkPipelineViewportStateCreateInfo));
[&]() {
*(temp_JleTqkC)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_JleTqkC;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_rQAUhix;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_rQAUhix=NULL;
        return;
        }
    temp_rQAUhix=(VkPipelineRasterizationStateCreateInfo*)malloc(sizeof(VkPipelineRasterizationStateCreateInfo));
[&]() {
*(temp_rQAUhix)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_rQAUhix;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_yVQsZEV;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_yVQsZEV=NULL;
        return;
        }
    temp_yVQsZEV=(VkPipelineMultisampleStateCreateInfo*)malloc(sizeof(VkPipelineMultisampleStateCreateInfo));
[&]() {
*(temp_yVQsZEV)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_yVQsZEV;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_fhomCGY;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_fhomCGY=NULL;
        return;
        }
    temp_fhomCGY=(VkPipelineDepthStencilStateCreateInfo*)malloc(sizeof(VkPipelineDepthStencilStateCreateInfo));
[&]() {
*(temp_fhomCGY)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_fhomCGY;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_xsygibn;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_xsygibn=NULL;
        return;
        }
    temp_xsygibn=(VkPipelineColorBlendStateCreateInfo*)malloc(sizeof(VkPipelineColorBlendStateCreateInfo));
[&]() {
*(temp_xsygibn)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_xsygibn;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_ghNcoXU;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_ghNcoXU=NULL;
        return;
        }
    temp_ghNcoXU=(VkPipelineDynamicStateCreateInfo*)malloc(sizeof(VkPipelineDynamicStateCreateInfo));
[&]() {
*(temp_ghNcoXU)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_ghNcoXU;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_SkHIeBt=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_PIOgZgG=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_OHxBCje=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_MciKEWg=json({});
    
        if (name.pInitialData==NULL){
            return_MciKEWg["null"]=true;
            return return_MciKEWg;
        }
        return_MciKEWg=[&]() {
    json return_ZSUXspe=json({});
    
        if (((char*)(name.pInitialData))==NULL){
            return_ZSUXspe["null"]=true;
            return return_ZSUXspe;
        }
        
        return_ZSUXspe["members"]={};
        for(int ZSUXspe=0; ZSUXspe < name.initialDataSize; ZSUXspe++){
            json temp;
            temp=[&]() {
    json return_xbDjsAP=json({});
    return serialize_char(((char*)(name.pInitialData))[ZSUXspe]);}();
            return_ZSUXspe["members"].push_back(temp);
        }
        return return_ZSUXspe;
        }();return return_MciKEWg;}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_PVBbpCO;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_PVBbpCO=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.initialDataSize*sizeof(char));
        for (int qUzeWFd=0; qUzeWFd < result.initialDataSize; qUzeWFd++){
            [&]() {
temp[qUzeWFd]=deserialize_char(name["members"]["pInitialData"]["members"][qUzeWFd]);}();;
        }
        }();temp_PVBbpCO=(void*)temp;
}();result.pInitialData=temp_PVBbpCO;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_JDWaDkl=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_kGgCpaV=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_UzxmKCq=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_lcOeawS=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_NpffqHL=json({});
    
        return_NpffqHL["members"]={};
        for(int NpffqHL=0; NpffqHL < VK_UUID_SIZE; NpffqHL++){
            json temp;
            temp=[&]() {
    json return_ZrdzZYV=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[NpffqHL]);}();
            return_NpffqHL["members"].push_back(temp);
        }
        return return_NpffqHL;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int EEWuDHu=0; EEWuDHu < VK_UUID_SIZE; EEWuDHu++){
            [&]() {
result.pipelineCacheUUID[EEWuDHu]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][EEWuDHu]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_kLsYgsQ=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_FITMFVg=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_ouuYRpI=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_ndltPTI=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_cqrhFBE=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_cSfhGJA=json({});
    
        if (name.pSetLayouts==NULL){
            return_cSfhGJA["null"]=true;
            return return_cSfhGJA;
        }
        
        return_cSfhGJA["members"]={};
        for(int cSfhGJA=0; cSfhGJA < name.setLayoutCount; cSfhGJA++){
            json temp;
            temp=[&]() {
    json return_UcBlezs=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[cSfhGJA]);}();
            return_cSfhGJA["members"].push_back(temp);
        }
        return return_cSfhGJA;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_xyPmAqp=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_TcHPEhS=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_TcHPEhS["null"]=true;
            return return_TcHPEhS;
        }
        
        return_TcHPEhS["members"]={};
        for(int TcHPEhS=0; TcHPEhS < name.pushConstantRangeCount; TcHPEhS++){
            json temp;
            temp=[&]() {
    json return_JSMuQjp=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[TcHPEhS]);}();
            return_TcHPEhS["members"].push_back(temp);
        }
        return return_TcHPEhS;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_jpiuipz;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_jpiuipz=NULL;
        return;
        }
    temp_jpiuipz=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int hKzFqqH=0; hKzFqqH < result.setLayoutCount; hKzFqqH++){
            [&]() {
temp_jpiuipz[hKzFqqH]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][hKzFqqH]);}();;
        }
        }();result.pSetLayouts=temp_jpiuipz;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_qrHoRBl;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_qrHoRBl=NULL;
        return;
        }
    temp_qrHoRBl=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int ymbIqhH=0; ymbIqhH < result.pushConstantRangeCount; ymbIqhH++){
            [&]() {
temp_qrHoRBl[ymbIqhH]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][ymbIqhH]);}();;
        }
        }();result.pPushConstantRanges=temp_qrHoRBl;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_JOOMXfn=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_BQZJQBi=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_MtBXqTO=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_LLbqCjH=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_lOUtAoc=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_QgKXihR=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_OmAIkzy=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_gDuKUWS=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_WSuqRKH=json({});
    return_WSuqRKH=[&]() {
    json return_YlRVcoE=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_WSuqRKH;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_BmHQGSo=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_vcvfzYW=json({});
    return_vcvfzYW=[&]() {
    json return_FIeyhSJ=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_vcvfzYW;}();
result["members"]["compareOp"]=[&]() {
    json return_gDFooQU=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_utnZRkt=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_QqqdpOT=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_uflRvOZ=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_LzslZCQ=json({});
    return_LzslZCQ=[&]() {
    json return_QVJOQiY=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_LzslZCQ;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_ioHaTmA=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_WMAftPC=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["commandPool"]=[&]() {
    json return_wLhVdJe=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_NZDdmNK=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_xWaXbyC=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["renderPass"]=[&]() {
    json return_mQIHgpu=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_sDgynRT=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_YkGUzeC=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_CorojfG=json({});
    return_CorojfG=[&]() {
    json return_XgDCqNR=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_CorojfG;}();
result["members"]["queryFlags"]=[&]() {
    json return_GkNIaEX=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_OFLvjEv=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_RwYJjTQ=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_ObDGNJQ=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_ObDGNJQ["null"]=true;
            return return_ObDGNJQ;
        }
        return_ObDGNJQ=[&]() {
    json return_DAFbAHx=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_ObDGNJQ;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_cXQnyUc;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_cXQnyUc=NULL;
        return;
        }
    temp_cXQnyUc=(VkCommandBufferInheritanceInfo*)malloc(sizeof(VkCommandBufferInheritanceInfo));
[&]() {
*(temp_cXQnyUc)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_cXQnyUc;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["renderPass"]=[&]() {
    json return_vpeIUFX=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_GpKSdLA=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_YekLDKg=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_QegNsWP=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_vyooLYX=json({});
    
        if (name.pClearValues==NULL){
            return_vyooLYX["null"]=true;
            return return_vyooLYX;
        }
        
        return_vyooLYX["members"]={};
        for(int vyooLYX=0; vyooLYX < name.clearValueCount; vyooLYX++){
            json temp;
            temp=[&]() {
    json return_iyLJsYP=json({});
    return serialize_VkClearValue(name.pClearValues[vyooLYX]);}();
            return_vyooLYX["members"].push_back(temp);
        }
        return return_vyooLYX;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_pATPAqV;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_pATPAqV=NULL;
        return;
        }
    temp_pATPAqV=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int LxvyyBp=0; LxvyyBp < result.clearValueCount; LxvyyBp++){
            [&]() {
temp_pATPAqV[LxvyyBp]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][LxvyyBp]);}();;
        }
        }();result.pClearValues=temp_pATPAqV;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_byAqhpM=json({});
    
        return_byAqhpM["members"]={};
        for(int byAqhpM=0; byAqhpM < 4; byAqhpM++){
            json temp;
            temp=[&]() {
    json return_eQPepRX=json({});
    return serialize_float(name.float32[byAqhpM]);}();
            return_byAqhpM["members"].push_back(temp);
        }
        return return_byAqhpM;
        }();
result["members"]["int32"]=[&]() {
    json return_wdIzCAc=json({});
    
        return_wdIzCAc["members"]={};
        for(int wdIzCAc=0; wdIzCAc < 4; wdIzCAc++){
            json temp;
            temp=[&]() {
    json return_XSoxZJF=json({});
    return serialize_int32_t(name.int32[wdIzCAc]);}();
            return_wdIzCAc["members"].push_back(temp);
        }
        return return_wdIzCAc;
        }();
result["members"]["uint32"]=[&]() {
    json return_eLnTvEZ=json({});
    
        return_eLnTvEZ["members"]={};
        for(int eLnTvEZ=0; eLnTvEZ < 4; eLnTvEZ++){
            json temp;
            temp=[&]() {
    json return_tAFkrLh=json({});
    return serialize_uint32_t(name.uint32[eLnTvEZ]);}();
            return_eLnTvEZ["members"].push_back(temp);
        }
        return return_eLnTvEZ;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int gYuftGC=0; gYuftGC < 4; gYuftGC++){
            [&]() {
result.float32[gYuftGC]=deserialize_float(name["members"]["float32"]["members"][gYuftGC]);}();;
        }
        }();
[&]() {

        for (int OjfIevs=0; OjfIevs < 4; OjfIevs++){
            [&]() {
result.int32[OjfIevs]=deserialize_int32_t(name["members"]["int32"]["members"][OjfIevs]);}();;
        }
        }();
[&]() {

        for (int siSdtiD=0; siSdtiD < 4; siSdtiD++){
            [&]() {
result.uint32[siSdtiD]=deserialize_uint32_t(name["members"]["uint32"]["members"][siSdtiD]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_ynPknnO=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_vFnJDCS=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_yuSLLzh=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_KVfOJhn=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_YpebgRx=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_qKzdiOp=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_wCSXqNt=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_inDeKZj=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_VJmNAHW=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_eUVKtvP=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_GkRtnPp=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_vFUtruT=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_NvVsguv=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_xisPpMJ=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_EiDuRoD=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_cNXdlbv=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_RNjGmQX=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_eEyrJRK=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_RTYTreH=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_OIQUWwd=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_eBFvhQs=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_hRgpVrJ=json({});
    
        if (name.pInputAttachments==NULL){
            return_hRgpVrJ["null"]=true;
            return return_hRgpVrJ;
        }
        
        return_hRgpVrJ["members"]={};
        for(int hRgpVrJ=0; hRgpVrJ < name.inputAttachmentCount; hRgpVrJ++){
            json temp;
            temp=[&]() {
    json return_FcPKapH=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[hRgpVrJ]);}();
            return_hRgpVrJ["members"].push_back(temp);
        }
        return return_hRgpVrJ;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_tJYAsYD=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_raNmxrT=json({});
    
        if (name.pColorAttachments==NULL){
            return_raNmxrT["null"]=true;
            return return_raNmxrT;
        }
        
        return_raNmxrT["members"]={};
        for(int raNmxrT=0; raNmxrT < name.colorAttachmentCount; raNmxrT++){
            json temp;
            temp=[&]() {
    json return_qKYnBbN=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[raNmxrT]);}();
            return_raNmxrT["members"].push_back(temp);
        }
        return return_raNmxrT;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_ELCLMRh=json({});
    
        if (name.pResolveAttachments==NULL){
            return_ELCLMRh["null"]=true;
            return return_ELCLMRh;
        }
        
        return_ELCLMRh["members"]={};
        for(int ELCLMRh=0; ELCLMRh < name.colorAttachmentCount; ELCLMRh++){
            json temp;
            temp=[&]() {
    json return_hYSVPuX=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[ELCLMRh]);}();
            return_ELCLMRh["members"].push_back(temp);
        }
        return return_ELCLMRh;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_yKiUEjo=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_yKiUEjo["null"]=true;
            return return_yKiUEjo;
        }
        return_yKiUEjo=[&]() {
    json return_JsixDLp=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_yKiUEjo;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_XNYxAme=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_IjSGbln=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_IjSGbln["null"]=true;
            return return_IjSGbln;
        }
        
        return_IjSGbln["members"]={};
        for(int IjSGbln=0; IjSGbln < name.preserveAttachmentCount; IjSGbln++){
            json temp;
            temp=[&]() {
    json return_eqRBaEh=json({});
    return serialize_uint32_t(name.pPreserveAttachments[IjSGbln]);}();
            return_IjSGbln["members"].push_back(temp);
        }
        return return_IjSGbln;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_nLJHUNl;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_nLJHUNl=NULL;
        return;
        }
    temp_nLJHUNl=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int CmEguLX=0; CmEguLX < result.inputAttachmentCount; CmEguLX++){
            [&]() {
temp_nLJHUNl[CmEguLX]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][CmEguLX]);}();;
        }
        }();result.pInputAttachments=temp_nLJHUNl;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_IOlJKxS;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_IOlJKxS=NULL;
        return;
        }
    temp_IOlJKxS=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int mkxVqPH=0; mkxVqPH < result.colorAttachmentCount; mkxVqPH++){
            [&]() {
temp_IOlJKxS[mkxVqPH]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][mkxVqPH]);}();;
        }
        }();result.pColorAttachments=temp_IOlJKxS;}();
[&]() {
VkAttachmentReference* temp_mJzSJAq;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_mJzSJAq=NULL;
        return;
        }
    temp_mJzSJAq=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int KgdHHKZ=0; KgdHHKZ < result.colorAttachmentCount; KgdHHKZ++){
            [&]() {
temp_mJzSJAq[KgdHHKZ]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][KgdHHKZ]);}();;
        }
        }();result.pResolveAttachments=temp_mJzSJAq;}();
[&]() {
VkAttachmentReference* temp_CHvpBeN;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_CHvpBeN=NULL;
        return;
        }
    temp_CHvpBeN=(VkAttachmentReference*)malloc(sizeof(VkAttachmentReference));
[&]() {
*(temp_CHvpBeN)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_CHvpBeN;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_kyqVDUE;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_kyqVDUE=NULL;
        return;
        }
    temp_kyqVDUE=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int OwQylzM=0; OwQylzM < result.preserveAttachmentCount; OwQylzM++){
            [&]() {
temp_kyqVDUE[OwQylzM]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][OwQylzM]);}();;
        }
        }();result.pPreserveAttachments=temp_kyqVDUE;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_iFxAljg=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_cYisdJe=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_XkVUXOq=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_JdEjhRK=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_rULjJqo=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_AjjkFNG=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_HWcPHAk=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_JOGMdHA=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_NcMveYW=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_MUePtxB=json({});
    
        if (name.pAttachments==NULL){
            return_MUePtxB["null"]=true;
            return return_MUePtxB;
        }
        
        return_MUePtxB["members"]={};
        for(int MUePtxB=0; MUePtxB < name.attachmentCount; MUePtxB++){
            json temp;
            temp=[&]() {
    json return_leFYiVr=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[MUePtxB]);}();
            return_MUePtxB["members"].push_back(temp);
        }
        return return_MUePtxB;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_OdATdjp=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_DcOiwVi=json({});
    
        if (name.pSubpasses==NULL){
            return_DcOiwVi["null"]=true;
            return return_DcOiwVi;
        }
        
        return_DcOiwVi["members"]={};
        for(int DcOiwVi=0; DcOiwVi < name.subpassCount; DcOiwVi++){
            json temp;
            temp=[&]() {
    json return_RkQZQRi=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[DcOiwVi]);}();
            return_DcOiwVi["members"].push_back(temp);
        }
        return return_DcOiwVi;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_AzBrIkk=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_zacmoAo=json({});
    
        if (name.pDependencies==NULL){
            return_zacmoAo["null"]=true;
            return return_zacmoAo;
        }
        
        return_zacmoAo["members"]={};
        for(int zacmoAo=0; zacmoAo < name.dependencyCount; zacmoAo++){
            json temp;
            temp=[&]() {
    json return_SwIEtVt=json({});
    return serialize_VkSubpassDependency(name.pDependencies[zacmoAo]);}();
            return_zacmoAo["members"].push_back(temp);
        }
        return return_zacmoAo;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_tkPlddP;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_tkPlddP=NULL;
        return;
        }
    temp_tkPlddP=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int VKPlnpw=0; VKPlnpw < result.attachmentCount; VKPlnpw++){
            [&]() {
temp_tkPlddP[VKPlnpw]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][VKPlnpw]);}();;
        }
        }();result.pAttachments=temp_tkPlddP;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_hmzQZTs;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_hmzQZTs=NULL;
        return;
        }
    temp_hmzQZTs=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int XUeaQoK=0; XUeaQoK < result.subpassCount; XUeaQoK++){
            [&]() {
temp_hmzQZTs[XUeaQoK]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][XUeaQoK]);}();;
        }
        }();result.pSubpasses=temp_hmzQZTs;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_xrsrXRz;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_xrsrXRz=NULL;
        return;
        }
    temp_xrsrXRz=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int UnztpfD=0; UnztpfD < result.dependencyCount; UnztpfD++){
            [&]() {
temp_xrsrXRz[UnztpfD]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][UnztpfD]);}();;
        }
        }();result.pDependencies=temp_xrsrXRz;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_DtEzuzk=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_OzQwhGw=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_EEMvKWh=json({});
    return_EEMvKWh=[&]() {
    json return_OvhZpTu=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_EEMvKWh;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_PpdMqbv=json({});
    return_PpdMqbv=[&]() {
    json return_UrSazpT=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_PpdMqbv;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_ADWaCtZ=json({});
    return_ADWaCtZ=[&]() {
    json return_kCqfbds=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_ADWaCtZ;}();
result["members"]["independentBlend"]=[&]() {
    json return_kYBZfQo=json({});
    return_kYBZfQo=[&]() {
    json return_sFPcLih=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_kYBZfQo;}();
result["members"]["geometryShader"]=[&]() {
    json return_BYnnpUV=json({});
    return_BYnnpUV=[&]() {
    json return_dlqADBM=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_BYnnpUV;}();
result["members"]["tessellationShader"]=[&]() {
    json return_WqNoCWH=json({});
    return_WqNoCWH=[&]() {
    json return_TOvnGaN=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_WqNoCWH;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_hfkzzBK=json({});
    return_hfkzzBK=[&]() {
    json return_FqONezI=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_hfkzzBK;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_HuVDwjY=json({});
    return_HuVDwjY=[&]() {
    json return_uuYtOsA=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_HuVDwjY;}();
result["members"]["logicOp"]=[&]() {
    json return_PIJBQGQ=json({});
    return_PIJBQGQ=[&]() {
    json return_wTdwZXc=json({});
    return serialize_uint32_t(name.logicOp);}();return return_PIJBQGQ;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_HJQyIiZ=json({});
    return_HJQyIiZ=[&]() {
    json return_lkiGLrM=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_HJQyIiZ;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_ReNANOv=json({});
    return_ReNANOv=[&]() {
    json return_nytvzgK=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_ReNANOv;}();
result["members"]["depthClamp"]=[&]() {
    json return_YuXMDYn=json({});
    return_YuXMDYn=[&]() {
    json return_DQMufvS=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_YuXMDYn;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_xHaJCta=json({});
    return_xHaJCta=[&]() {
    json return_GcYqveW=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_xHaJCta;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_vXqXpyW=json({});
    return_vXqXpyW=[&]() {
    json return_nuwdJvN=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_vXqXpyW;}();
result["members"]["depthBounds"]=[&]() {
    json return_bFgSDwl=json({});
    return_bFgSDwl=[&]() {
    json return_zakSJfr=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_bFgSDwl;}();
result["members"]["wideLines"]=[&]() {
    json return_vNolnRC=json({});
    return_vNolnRC=[&]() {
    json return_VfvlyIL=json({});
    return serialize_uint32_t(name.wideLines);}();return return_vNolnRC;}();
result["members"]["largePoints"]=[&]() {
    json return_qRPWehf=json({});
    return_qRPWehf=[&]() {
    json return_AIEfUVO=json({});
    return serialize_uint32_t(name.largePoints);}();return return_qRPWehf;}();
result["members"]["alphaToOne"]=[&]() {
    json return_DrtPnmO=json({});
    return_DrtPnmO=[&]() {
    json return_djtlRqp=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_DrtPnmO;}();
result["members"]["multiViewport"]=[&]() {
    json return_EBdCjmp=json({});
    return_EBdCjmp=[&]() {
    json return_GdmregU=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_EBdCjmp;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_KzNqxbQ=json({});
    return_KzNqxbQ=[&]() {
    json return_XNudzsT=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_KzNqxbQ;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_BqdhTkc=json({});
    return_BqdhTkc=[&]() {
    json return_viyughG=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_BqdhTkc;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_IlZrqhS=json({});
    return_IlZrqhS=[&]() {
    json return_XkoJFvL=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_IlZrqhS;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_OhZZcHo=json({});
    return_OhZZcHo=[&]() {
    json return_XpQThkP=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_OhZZcHo;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_pEosFgU=json({});
    return_pEosFgU=[&]() {
    json return_qObhNoV=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_pEosFgU;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_EfweCyG=json({});
    return_EfweCyG=[&]() {
    json return_WMCNBcN=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_EfweCyG;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_NVzkgSC=json({});
    return_NVzkgSC=[&]() {
    json return_HXrKJxo=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_NVzkgSC;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_zfcVGoH=json({});
    return_zfcVGoH=[&]() {
    json return_cFbaXLZ=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_zfcVGoH;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_OEbpMxx=json({});
    return_OEbpMxx=[&]() {
    json return_HLSXrfG=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_OEbpMxx;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_BvftjDn=json({});
    return_BvftjDn=[&]() {
    json return_iOFaPSF=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_BvftjDn;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_GykNHbH=json({});
    return_GykNHbH=[&]() {
    json return_hklJHuq=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_GykNHbH;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_unokxbO=json({});
    return_unokxbO=[&]() {
    json return_pcQhqES=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_unokxbO;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_rdlflPo=json({});
    return_rdlflPo=[&]() {
    json return_SARsUFs=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_rdlflPo;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_WjaUPtc=json({});
    return_WjaUPtc=[&]() {
    json return_JOnCOEI=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_WjaUPtc;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_bqURuIW=json({});
    return_bqURuIW=[&]() {
    json return_SLzfYBI=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_bqURuIW;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_dyvpUfL=json({});
    return_dyvpUfL=[&]() {
    json return_eYYFFTE=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_dyvpUfL;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_nHpgwAv=json({});
    return_nHpgwAv=[&]() {
    json return_uiQKxDb=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_nHpgwAv;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_rlhgnDR=json({});
    return_rlhgnDR=[&]() {
    json return_pCvINev=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_rlhgnDR;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_zJvTEzb=json({});
    return_zJvTEzb=[&]() {
    json return_FrKbnCz=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_zJvTEzb;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_vcBBdMp=json({});
    return_vcBBdMp=[&]() {
    json return_wzzbAhX=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_vcBBdMp;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_uBvadCo=json({});
    return_uBvadCo=[&]() {
    json return_tqqAHNU=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_uBvadCo;}();
result["members"]["shaderInt64"]=[&]() {
    json return_TiMorxq=json({});
    return_TiMorxq=[&]() {
    json return_CUxCqOa=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_TiMorxq;}();
result["members"]["shaderInt16"]=[&]() {
    json return_ruQrQmz=json({});
    return_ruQrQmz=[&]() {
    json return_FpvKKSU=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_ruQrQmz;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_VieioVl=json({});
    return_VieioVl=[&]() {
    json return_rSIXHqQ=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_VieioVl;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_gSIwEca=json({});
    return_gSIwEca=[&]() {
    json return_MKaxwWj=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_gSIwEca;}();
result["members"]["sparseBinding"]=[&]() {
    json return_ROvKPmY=json({});
    return_ROvKPmY=[&]() {
    json return_UCTqXHl=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_ROvKPmY;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_pmIiUbu=json({});
    return_pmIiUbu=[&]() {
    json return_pRiUuZt=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_pmIiUbu;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_dqmmOzv=json({});
    return_dqmmOzv=[&]() {
    json return_EDGVVxJ=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_dqmmOzv;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_ZEBzYnk=json({});
    return_ZEBzYnk=[&]() {
    json return_UaCIGXd=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_ZEBzYnk;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_bwpuosQ=json({});
    return_bwpuosQ=[&]() {
    json return_BLJvXxx=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_bwpuosQ;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_iVNekvH=json({});
    return_iVNekvH=[&]() {
    json return_VLjJSGv=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_iVNekvH;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_zwdblub=json({});
    return_zwdblub=[&]() {
    json return_WArObha=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_zwdblub;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_LXpRipJ=json({});
    return_LXpRipJ=[&]() {
    json return_ACvaXNt=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_LXpRipJ;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_NxOoCMs=json({});
    return_NxOoCMs=[&]() {
    json return_SXbpOEm=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_NxOoCMs;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_xQGwOwU=json({});
    return_xQGwOwU=[&]() {
    json return_LyFvxmp=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_xQGwOwU;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_mHxcCUO=json({});
    return_mHxcCUO=[&]() {
    json return_ubXoneA=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_mHxcCUO;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_cfKzLxs=json({});
    return_cfKzLxs=[&]() {
    json return_fdLiYFq=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_cfKzLxs;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_gmeUNCo=json({});
    return_gmeUNCo=[&]() {
    json return_cgxZUAa=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_gmeUNCo;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_JLOpCXM=json({});
    return_JLOpCXM=[&]() {
    json return_qESaCxX=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_JLOpCXM;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_amCchAC=json({});
    return_amCchAC=[&]() {
    json return_XpcrNOx=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_amCchAC;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_aCyQnXf=json({});
    return_aCyQnXf=[&]() {
    json return_nNWMXfv=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_aCyQnXf;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_aTgvUOK=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_XcgoOZi=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_eXxYSKL=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_GsCzZBh=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_CaZqvqY=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_sMsvhfi=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_MYBFeWN=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_hhDQUgx=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_cijDHwb=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_lceupXf=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_PNoQobg=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_OEgtvBq=json({});
    return_OEgtvBq=[&]() {
    json return_MlDUumw=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_OEgtvBq;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_jLadMqB=json({});
    return_jLadMqB=[&]() {
    json return_OPxrTdm=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_jLadMqB;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_rSprrOg=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_VezDQKA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_MKFgDpp=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_zqgbqNh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_ISFYfll=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_CQERxiC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_jFMHqEM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_WvDvUAA=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_yvlHogc=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_gScyZvR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_yTokkpl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_QiTPbIU=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_cQdIUHr=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_eMYtFFM=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_WbJnbZF=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_UgIRhmm=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_gReyAgh=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_MjjDPvk=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_fGDaKwj=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_pOtKmxP=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_PYeLRqp=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_GaLzflF=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_dobYrog=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_ctebgSW=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_AiExhPX=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_AvAPQxz=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_RyFdcfS=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_ZnuOTjz=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_vGMbLWr=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_tIWCaNK=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_vibhXHP=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_mJiMZCp=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_FKkqsRv=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_URFYsmb=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_LQRSBSf=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_WiHQHQP=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_lEShaAu=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_zHOOEEf=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_jPoTwbf=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_wawhkpd=json({});
    
        return_wawhkpd["members"]={};
        for(int wawhkpd=0; wawhkpd < 3; wawhkpd++){
            json temp;
            temp=[&]() {
    json return_xlmEKET=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[wawhkpd]);}();
            return_wawhkpd["members"].push_back(temp);
        }
        return return_wawhkpd;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_uQpzJYD=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_jqvrgCt=json({});
    
        return_jqvrgCt["members"]={};
        for(int jqvrgCt=0; jqvrgCt < 3; jqvrgCt++){
            json temp;
            temp=[&]() {
    json return_TFADSnM=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[jqvrgCt]);}();
            return_jqvrgCt["members"].push_back(temp);
        }
        return return_jqvrgCt;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_nFdjcsk=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_CQJrCox=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_NSdERwo=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_vZiNHyn=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_jjTAMsu=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_eyLLsMy=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_YuuhPyh=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_VUMvgJj=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_ZWkwOIu=json({});
    
        return_ZWkwOIu["members"]={};
        for(int ZWkwOIu=0; ZWkwOIu < 2; ZWkwOIu++){
            json temp;
            temp=[&]() {
    json return_zeFkUGg=json({});
    return serialize_uint32_t(name.maxViewportDimensions[ZWkwOIu]);}();
            return_ZWkwOIu["members"].push_back(temp);
        }
        return return_ZWkwOIu;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_qLYuzsU=json({});
    
        return_qLYuzsU["members"]={};
        for(int qLYuzsU=0; qLYuzsU < 2; qLYuzsU++){
            json temp;
            temp=[&]() {
    json return_tRliKYd=json({});
    return serialize_float(name.viewportBoundsRange[qLYuzsU]);}();
            return_qLYuzsU["members"].push_back(temp);
        }
        return return_qLYuzsU;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_QGFeBZF=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_sCodSQb=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_KIyzBUS=json({});
    return_KIyzBUS=[&]() {
    json return_IlRtefJ=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_KIyzBUS;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_NcEDqyx=json({});
    return_NcEDqyx=[&]() {
    json return_ICaJZmj=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_NcEDqyx;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_nXXkMQj=json({});
    return_nXXkMQj=[&]() {
    json return_YcSFutq=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_nXXkMQj;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_tlTvhPA=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_ZbAiWKA=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_lHvTqhC=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_qoqPvzW=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_kmUFJAj=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_VzzqbHN=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_WyEBHvg=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_BRBMCfL=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_XHduXIN=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_BOUIXGc=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_bqHmLwq=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_MehyipH=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_fqbhntt=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_jOaGvPE=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_BtieQzd=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_TIGpobY=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_BslbdCg=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_CcfCnmI=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_EHXSHPF=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_RJveIFG=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_DMWWDlm=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_SJVTlrx=json({});
    return_SJVTlrx=[&]() {
    json return_manxabV=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_SJVTlrx;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_pjqYUyx=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_hFCJIbw=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_cBpciJo=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_JdoJLMu=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_EmkjXiC=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_lVVQcLu=json({});
    
        return_lVVQcLu["members"]={};
        for(int lVVQcLu=0; lVVQcLu < 2; lVVQcLu++){
            json temp;
            temp=[&]() {
    json return_gIOesAh=json({});
    return serialize_float(name.pointSizeRange[lVVQcLu]);}();
            return_lVVQcLu["members"].push_back(temp);
        }
        return return_lVVQcLu;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_MAXxWjv=json({});
    
        return_MAXxWjv["members"]={};
        for(int MAXxWjv=0; MAXxWjv < 2; MAXxWjv++){
            json temp;
            temp=[&]() {
    json return_hbMqpbe=json({});
    return serialize_float(name.lineWidthRange[MAXxWjv]);}();
            return_MAXxWjv["members"].push_back(temp);
        }
        return return_MAXxWjv;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_ZvOmShn=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_Ydnryns=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_hmcZgHQ=json({});
    return_hmcZgHQ=[&]() {
    json return_lpMfMwO=json({});
    return serialize_uint32_t(name.strictLines);}();return return_hmcZgHQ;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_zLDzJEK=json({});
    return_zLDzJEK=[&]() {
    json return_jmgcCWu=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_zLDzJEK;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_DxkFBBK=json({});
    return_DxkFBBK=[&]() {
    json return_eUKjcXK=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_DxkFBBK;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_TzStqIZ=json({});
    return_TzStqIZ=[&]() {
    json return_ZQIBAGb=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_TzStqIZ;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_AdXZzCN=json({});
    return_AdXZzCN=[&]() {
    json return_MLftUfn=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_AdXZzCN;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int CuDeHRu=0; CuDeHRu < 3; CuDeHRu++){
            [&]() {
result.maxComputeWorkGroupCount[CuDeHRu]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][CuDeHRu]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int IJCxeBG=0; IJCxeBG < 3; IJCxeBG++){
            [&]() {
result.maxComputeWorkGroupSize[IJCxeBG]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][IJCxeBG]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int XrxWDTx=0; XrxWDTx < 2; XrxWDTx++){
            [&]() {
result.maxViewportDimensions[XrxWDTx]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][XrxWDTx]);}();;
        }
        }();
[&]() {

        for (int tXKYRsI=0; tXKYRsI < 2; tXKYRsI++){
            [&]() {
result.viewportBoundsRange[tXKYRsI]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][tXKYRsI]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int dXwJlDv=0; dXwJlDv < 2; dXwJlDv++){
            [&]() {
result.pointSizeRange[dXwJlDv]=deserialize_float(name["members"]["pointSizeRange"]["members"][dXwJlDv]);}();;
        }
        }();
[&]() {

        for (int NlIsODw=0; NlIsODw < 2; NlIsODw++){
            [&]() {
result.lineWidthRange[NlIsODw]=deserialize_float(name["members"]["lineWidthRange"]["members"][NlIsODw]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_gyNmMWx=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_mxpFOpD=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_QfVgIVd=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_fWTOYEG=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_WUHZQzx=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_CfGBwIb=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_lJfAiXr=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_AiTiALm=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_AtUmmPC=json({});
    
        if (name.pAttachments==NULL){
            return_AtUmmPC["null"]=true;
            return return_AtUmmPC;
        }
        
        return_AtUmmPC["members"]={};
        for(int AtUmmPC=0; AtUmmPC < name.attachmentCount; AtUmmPC++){
            json temp;
            temp=[&]() {
    json return_KRyIBiG=json({});
    return serialize_VkImageView(name.pAttachments[AtUmmPC]);}();
            return_AtUmmPC["members"].push_back(temp);
        }
        return return_AtUmmPC;
        }();
result["members"]["width"]=[&]() {
    json return_yDcTdlz=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HyEBIoJ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_qPdmEpC=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_aElaQHX;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_aElaQHX=NULL;
        return;
        }
    temp_aElaQHX=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int CwuCQyj=0; CwuCQyj < result.attachmentCount; CwuCQyj++){
            [&]() {
temp_aElaQHX[CwuCQyj]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][CwuCQyj]);}();;
        }
        }();result.pAttachments=temp_aElaQHX;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_zPlfCFj=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_ngACanf=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_swZIjqK=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_OuGfGCC=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_mSWLgyU=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_ngACanf=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_qmfKrPU=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_pQmoriI=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_OuGfGCC=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ivhxfmb=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_hfgRQuK=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_eWgIOoF=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_LVOMArG=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_GuUCLfR=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_nRDZVIQ=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_zfBuTZR=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_vffQSdw=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_cFpZmMf=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_RvYJrfP=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_RvYJrfP["null"]=true;
            return return_RvYJrfP;
        }
        
        return_RvYJrfP["members"]={};
        for(int RvYJrfP=0; RvYJrfP < name.waitSemaphoreCount; RvYJrfP++){
            json temp;
            temp=[&]() {
    json return_FBBxbZH=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[RvYJrfP]);}();
            return_RvYJrfP["members"].push_back(temp);
        }
        return return_RvYJrfP;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_ODPTEhj=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_ODPTEhj["null"]=true;
            return return_ODPTEhj;
        }
        
        return_ODPTEhj["members"]={};
        for(int ODPTEhj=0; ODPTEhj < name.waitSemaphoreCount; ODPTEhj++){
            json temp;
            temp=[&]() {
    json return_jwnybPi=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[ODPTEhj]);}();
            return_ODPTEhj["members"].push_back(temp);
        }
        return return_ODPTEhj;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_WbKJTta=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_RiaQqOq=json({});
    
        if (name.pCommandBuffers==NULL){
            return_RiaQqOq["null"]=true;
            return return_RiaQqOq;
        }
        
        return_RiaQqOq["members"]={};
        for(int RiaQqOq=0; RiaQqOq < name.commandBufferCount; RiaQqOq++){
            json temp;
            temp=[&]() {
    json return_LwYkzfq=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[RiaQqOq]);}();
            return_RiaQqOq["members"].push_back(temp);
        }
        return return_RiaQqOq;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_dqrOCkT=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_ZMUEuEH=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_ZMUEuEH["null"]=true;
            return return_ZMUEuEH;
        }
        
        return_ZMUEuEH["members"]={};
        for(int ZMUEuEH=0; ZMUEuEH < name.signalSemaphoreCount; ZMUEuEH++){
            json temp;
            temp=[&]() {
    json return_LUwhmBS=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[ZMUEuEH]);}();
            return_ZMUEuEH["members"].push_back(temp);
        }
        return return_ZMUEuEH;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_dkXmcbK;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_dkXmcbK=NULL;
        return;
        }
    temp_dkXmcbK=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int sgQfeaS=0; sgQfeaS < result.waitSemaphoreCount; sgQfeaS++){
            [&]() {
temp_dkXmcbK[sgQfeaS]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][sgQfeaS]);}();;
        }
        }();result.pWaitSemaphores=temp_dkXmcbK;}();
[&]() {
VkPipelineStageFlags* temp_KaLJPXd;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_KaLJPXd=NULL;
        return;
        }
    temp_KaLJPXd=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int NqQyGHw=0; NqQyGHw < result.waitSemaphoreCount; NqQyGHw++){
            [&]() {
temp_KaLJPXd[NqQyGHw]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][NqQyGHw]);}();;
        }
        }();result.pWaitDstStageMask=temp_KaLJPXd;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_FfIuDvt;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_FfIuDvt=NULL;
        return;
        }
    temp_FfIuDvt=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int cqZVqIn=0; cqZVqIn < result.commandBufferCount; cqZVqIn++){
            [&]() {
temp_FfIuDvt[cqZVqIn]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][cqZVqIn]);}();;
        }
        }();result.pCommandBuffers=temp_FfIuDvt;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_iwYJmMp;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_iwYJmMp=NULL;
        return;
        }
    temp_iwYJmMp=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int pKteFJo=0; pKteFJo < result.signalSemaphoreCount; pKteFJo++){
            [&]() {
temp_iwYJmMp[pKteFJo]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][pKteFJo]);}();;
        }
        }();result.pSignalSemaphores=temp_iwYJmMp;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_ZVzkqbZ=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_ntDJBDI=json({});
    
        if (name.displayName==NULL){
            return_ntDJBDI["null"]=true;
            return return_ntDJBDI;
        }
        
        return_ntDJBDI["members"]={};
        for(int ntDJBDI=0; ntDJBDI < strlen(name.displayName)+1; ntDJBDI++){
            json temp;
            temp=[&]() {
    json return_gWwbUHx=json({});
    return serialize_char(name.displayName[ntDJBDI]);}();
            return_ntDJBDI["members"].push_back(temp);
        }
        return return_ntDJBDI;
        }();
result["members"]["physicalDimensions"]=[&]() {
    json return_HQcwfRb=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_pKQFnHh=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_nEmJXUv=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_pjRXGuK=json({});
    return_pjRXGuK=[&]() {
    json return_mnSDQXz=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_pjRXGuK;}();
result["members"]["persistentContent"]=[&]() {
    json return_JjdFlKY=json({});
    return_JjdFlKY=[&]() {
    json return_fBrxKNH=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_JjdFlKY;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_OknVlWm;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_OknVlWm=NULL;
        return;
        }
    temp_OknVlWm=(char*)malloc(name["members"]["displayName"]["members"].size()*sizeof(char));
        for (int NmchkhS=0; NmchkhS < name["members"]["displayName"]["members"].size(); NmchkhS++){
            [&]() {
temp_OknVlWm[NmchkhS]=deserialize_char(name["members"]["displayName"]["members"][NmchkhS]);}();;
        }
        }();result.displayName=temp_OknVlWm;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_qZyRzyW=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_eELErER=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_maOZAmO=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_pAKWJJi=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_CGqsDIK=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_khWEAJF=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_HDkASSw=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_khWEAJF=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_jXqSuPG=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_YQXysQZ=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_vAekOnM=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_jAbPekz=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_poQDOkE=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_UvvOlQn=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_LMjJDky=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_qjfjiaf=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_yXrsXRI=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_QkVFZKF=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_XDrNMHc=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_IUQkjhP=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_UEHoAYt=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_XSLvZzp=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_Jiusdcf=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_KsPfRta=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_FupIIAv=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["srcRect"]=[&]() {
    json return_hOFwSbw=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_hvKYzbx=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_GsYLYWh=json({});
    return_GsYLYWh=[&]() {
    json return_gGYlVzj=json({});
    return serialize_uint32_t(name.persistent);}();return return_GsYLYWh;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_cEoXozL=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_dyWKsoQ=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_LDOAxkZ=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_OEfUUVu=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_UjWPdgd=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_vIXyGMc=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_tLvjkHk=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_nMAHyhD=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_CNlURSQ=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_IeNJgDX=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_jEibNzE=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_NONaBBF=json({});
    
        if (name.dpy==NULL){
            return_NONaBBF["null"]=true;
            return return_NONaBBF;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_aycZkJx=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        return;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_vHeDuAL=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_QCUrGYb=json({});
    
        if (name.connection==NULL){
            return_QCUrGYb["null"]=true;
            return return_QCUrGYb;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_QMFQczB=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        return;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_FgGNYyU=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_eeEemtc=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_eLagCMN=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_kukBRfk=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_NfgkzAG=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_rzWznEB=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_DVmhDjj=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_PUDZswZ=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_hRATyXZ=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_IMMaAvI=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_zdcoQGs=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_LytQZiP=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_AjWrxvE=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_AjWrxvE["null"]=true;
            return return_AjWrxvE;
        }
        
        return_AjWrxvE["members"]={};
        for(int AjWrxvE=0; AjWrxvE < name.queueFamilyIndexCount; AjWrxvE++){
            json temp;
            temp=[&]() {
    json return_kGXuika=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[AjWrxvE]);}();
            return_AjWrxvE["members"].push_back(temp);
        }
        return return_AjWrxvE;
        }();
result["members"]["preTransform"]=[&]() {
    json return_FrizPZW=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_GvDbuwh=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_Ojkxkbp=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_SHGdjHf=json({});
    return_SHGdjHf=[&]() {
    json return_DafuVWq=json({});
    return serialize_uint32_t(name.clipped);}();return return_SHGdjHf;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_VQmkfGk=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_SLVybRY=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_KJamWMi;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_KJamWMi=NULL;
        return;
        }
    temp_KJamWMi=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int DLYQKCD=0; DLYQKCD < result.queueFamilyIndexCount; DLYQKCD++){
            [&]() {
temp_KJamWMi[DLYQKCD]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][DLYQKCD]);}();;
        }
        }();result.pQueueFamilyIndices=temp_KJamWMi;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOZPppV=json({});
    
        if (name.pNext==NULL){
            return_uOZPppV["null"]=true;
            return return_uOZPppV;
        }
        return_uOZPppV=[&]() {
    json return_qrfWxRw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qrfWxRw["null"]=true;
            return return_qrfWxRw;
        }
        
        return_qrfWxRw["members"]={};
        for(int qrfWxRw=0; qrfWxRw < strlen(((char*)(name.pNext)))+1; qrfWxRw++){
            json temp;
            temp=[&]() {
    json return_GsYIOzC=json({});
    return serialize_char(((char*)(name.pNext))[qrfWxRw]);}();
            return_qrfWxRw["members"].push_back(temp);
        }
        return return_qrfWxRw;
        }();return return_uOZPppV;}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_JgMASAZ=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_lldCPll=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_lldCPll["null"]=true;
            return return_lldCPll;
        }
        
        return_lldCPll["members"]={};
        for(int lldCPll=0; lldCPll < name.waitSemaphoreCount; lldCPll++){
            json temp;
            temp=[&]() {
    json return_xlCxbAl=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[lldCPll]);}();
            return_lldCPll["members"].push_back(temp);
        }
        return return_lldCPll;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_jNmdPTb=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_zThJpVv=json({});
    
        if (name.pSwapchains==NULL){
            return_zThJpVv["null"]=true;
            return return_zThJpVv;
        }
        
        return_zThJpVv["members"]={};
        for(int zThJpVv=0; zThJpVv < name.swapchainCount; zThJpVv++){
            json temp;
            temp=[&]() {
    json return_uCSkbDt=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[zThJpVv]);}();
            return_zThJpVv["members"].push_back(temp);
        }
        return return_zThJpVv;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_dhkcVKu=json({});
    
        if (name.pImageIndices==NULL){
            return_dhkcVKu["null"]=true;
            return return_dhkcVKu;
        }
        
        return_dhkcVKu["members"]={};
        for(int dhkcVKu=0; dhkcVKu < name.swapchainCount; dhkcVKu++){
            json temp;
            temp=[&]() {
    json return_BbyMEnG=json({});
    return serialize_uint32_t(name.pImageIndices[dhkcVKu]);}();
            return_dhkcVKu["members"].push_back(temp);
        }
        return return_dhkcVKu;
        }();
result["members"]["pResults"]=[&]() {
    json return_NnNnLJL=json({});
    
        if (name.pResults==NULL){
            return_NnNnLJL["null"]=true;
            return return_NnNnLJL;
        }
        
        return_NnNnLJL["members"]={};
        for(int NnNnLJL=0; NnNnLJL < name.swapchainCount; NnNnLJL++){
            json temp;
            temp=[&]() {
    json return_eUmZOXg=json({});
    return serialize_VkResult(name.pResults[NnNnLJL]);}();
            return_NnNnLJL["members"].push_back(temp);
        }
        return return_NnNnLJL;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yMFsvBw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yMFsvBw=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BdMlzmT=0; BdMlzmT < name["members"]["pNext"]["members"].size(); BdMlzmT++){
            [&]() {
temp[BdMlzmT]=deserialize_char(name["members"]["pNext"]["members"][BdMlzmT]);}();;
        }
        }();temp_yMFsvBw=(void*)temp;
}();result.pNext=temp_yMFsvBw;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_cReJtQc;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_cReJtQc=NULL;
        return;
        }
    temp_cReJtQc=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int ATxNwpz=0; ATxNwpz < result.waitSemaphoreCount; ATxNwpz++){
            [&]() {
temp_cReJtQc[ATxNwpz]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][ATxNwpz]);}();;
        }
        }();result.pWaitSemaphores=temp_cReJtQc;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_RBseVVD;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_RBseVVD=NULL;
        return;
        }
    temp_RBseVVD=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int gMMyXNA=0; gMMyXNA < result.swapchainCount; gMMyXNA++){
            [&]() {
temp_RBseVVD[gMMyXNA]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][gMMyXNA]);}();;
        }
        }();result.pSwapchains=temp_RBseVVD;}();
[&]() {
uint32_t* temp_RmdYRQx;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_RmdYRQx=NULL;
        return;
        }
    temp_RmdYRQx=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int TqpWNpO=0; TqpWNpO < result.swapchainCount; TqpWNpO++){
            [&]() {
temp_RmdYRQx[TqpWNpO]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][TqpWNpO]);}();;
        }
        }();result.pImageIndices=temp_RmdYRQx;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        return;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int hVejzjy=0; hVejzjy < result.swapchainCount; hVejzjy++){
            [&]() {
result.pResults[hVejzjy]=deserialize_VkResult(name["members"]["pResults"]["members"][hVejzjy]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_xtIqlkz=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_agBWCvN=json({});
    return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_lWAUjUt=json({});
    
        if (name.pUserData==NULL){
            return_lWAUjUt["null"]=true;
            return return_lWAUjUt;
        }
        return_lWAUjUt=[&]() {
    json return_yFtevbn=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_yFtevbn["null"]=true;
            return return_yFtevbn;
        }
        
        return_yFtevbn["members"]={};
        for(int yFtevbn=0; yFtevbn < strlen(((char*)(name.pUserData)))+1; yFtevbn++){
            json temp;
            temp=[&]() {
    json return_XsYTkgz=json({});
    return serialize_char(((char*)(name.pUserData))[yFtevbn]);}();
            return_yFtevbn["members"].push_back(temp);
        }
        return return_yFtevbn;
        }();return return_lWAUjUt;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int MExKlSf=0; MExKlSf < name["members"]["pUserData"]["members"].size(); MExKlSf++){
            [&]() {
temp[MExKlSf]=deserialize_char(name["members"]["pUserData"]["members"][MExKlSf]);}();;
        }
        }();result.pUserData=(void*)temp;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xsrEFiC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_srTyiRv=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_rkcmcIS=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_rkcmcIS["null"]=true;
            return return_rkcmcIS;
        }
        
        return_rkcmcIS["members"]={};
        for(int rkcmcIS=0; rkcmcIS < name.disabledValidationCheckCount; rkcmcIS++){
            json temp;
            temp=[&]() {
    json return_jztMYFg=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[rkcmcIS]);}();
            return_rkcmcIS["members"].push_back(temp);
        }
        return return_rkcmcIS;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_AJPHPoJ;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_AJPHPoJ=NULL;
        return;
        }
    temp_AJPHPoJ=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int EqPzzQP=0; EqPzzQP < result.disabledValidationCheckCount; EqPzzQP++){
            [&]() {
temp_AJPHPoJ[EqPzzQP]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][EqPzzQP]);}();;
        }
        }();result.pDisabledValidationChecks=temp_AJPHPoJ;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BaZrJdP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_cGrqwSV=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_mQMrUyx=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_mQMrUyx["null"]=true;
            return return_mQMrUyx;
        }
        
        return_mQMrUyx["members"]={};
        for(int mQMrUyx=0; mQMrUyx < name.enabledValidationFeatureCount; mQMrUyx++){
            json temp;
            temp=[&]() {
    json return_nEJtkzk=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[mQMrUyx]);}();
            return_mQMrUyx["members"].push_back(temp);
        }
        return return_mQMrUyx;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_UnPdBtr=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_fsoKuZp=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_fsoKuZp["null"]=true;
            return return_fsoKuZp;
        }
        
        return_fsoKuZp["members"]={};
        for(int fsoKuZp=0; fsoKuZp < name.disabledValidationFeatureCount; fsoKuZp++){
            json temp;
            temp=[&]() {
    json return_pXZPGzB=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[fsoKuZp]);}();
            return_fsoKuZp["members"].push_back(temp);
        }
        return return_fsoKuZp;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_SeXhqnb;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_SeXhqnb=NULL;
        return;
        }
    temp_SeXhqnb=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int lpcDwiU=0; lpcDwiU < result.enabledValidationFeatureCount; lpcDwiU++){
            [&]() {
temp_SeXhqnb[lpcDwiU]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][lpcDwiU]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_SeXhqnb;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_fEYNDgs;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_fEYNDgs=NULL;
        return;
        }
    temp_fEYNDgs=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int jxkyAoZ=0; jxkyAoZ < result.disabledValidationFeatureCount; jxkyAoZ++){
            [&]() {
temp_fEYNDgs[jxkyAoZ]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][jxkyAoZ]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_fEYNDgs;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_ADWDMPu=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["objectType"]=[&]() {
    json return_WkmufmW=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_fqTbjdn=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_mhvUDzw=json({});
    
        if (name.pObjectName==NULL){
            return_mhvUDzw["null"]=true;
            return return_mhvUDzw;
        }
        
        return_mhvUDzw["members"]={};
        for(int mhvUDzw=0; mhvUDzw < strlen(name.pObjectName)+1; mhvUDzw++){
            json temp;
            temp=[&]() {
    json return_wDobBOp=json({});
    return serialize_char(name.pObjectName[mhvUDzw]);}();
            return_mhvUDzw["members"].push_back(temp);
        }
        return return_mhvUDzw;
        }();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_MerXJMg;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_MerXJMg=NULL;
        return;
        }
    temp_MerXJMg=(char*)malloc(name["members"]["pObjectName"]["members"].size()*sizeof(char));
        for (int YqMQdiP=0; YqMQdiP < name["members"]["pObjectName"]["members"].size(); YqMQdiP++){
            [&]() {
temp_MerXJMg[YqMQdiP]=deserialize_char(name["members"]["pObjectName"]["members"][YqMQdiP]);}();;
        }
        }();result.pObjectName=temp_MerXJMg;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["objectType"]=[&]() {
    json return_WkmufmW=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_fqTbjdn=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_jugcWgG=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_xXzRdEM=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_sBECkoh=json({});
    
        if (name.pTag==NULL){
            return_sBECkoh["null"]=true;
            return return_sBECkoh;
        }
        return_sBECkoh=[&]() {
    json return_rpYksQk=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_rpYksQk["null"]=true;
            return return_rpYksQk;
        }
        
        return_rpYksQk["members"]={};
        for(int rpYksQk=0; rpYksQk < name.tagSize; rpYksQk++){
            json temp;
            temp=[&]() {
    json return_ABojsaP=json({});
    return serialize_char(((char*)(name.pTag))[rpYksQk]);}();
            return_rpYksQk["members"].push_back(temp);
        }
        return return_rpYksQk;
        }();return return_sBECkoh;}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_XOowWCN;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_XOowWCN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.tagSize*sizeof(char));
        for (int vETPKDn=0; vETPKDn < result.tagSize; vETPKDn++){
            [&]() {
temp[vETPKDn]=deserialize_char(name["members"]["pTag"]["members"][vETPKDn]);}();;
        }
        }();temp_XOowWCN=(void*)temp;
}();result.pTag=temp_XOowWCN;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["pMarkerName"]=[&]() {
    json return_PrBzFHq=json({});
    
        if (name.pMarkerName==NULL){
            return_PrBzFHq["null"]=true;
            return return_PrBzFHq;
        }
        
        return_PrBzFHq["members"]={};
        for(int PrBzFHq=0; PrBzFHq < strlen(name.pMarkerName)+1; PrBzFHq++){
            json temp;
            temp=[&]() {
    json return_bhXTyDS=json({});
    return serialize_char(name.pMarkerName[PrBzFHq]);}();
            return_PrBzFHq["members"].push_back(temp);
        }
        return return_PrBzFHq;
        }();
result["members"]["color"]=[&]() {
    json return_gVlpCRz=json({});
    
        return_gVlpCRz["members"]={};
        for(int gVlpCRz=0; gVlpCRz < 4; gVlpCRz++){
            json temp;
            temp=[&]() {
    json return_AjuIfrs=json({});
    return serialize_float(name.color[gVlpCRz]);}();
            return_gVlpCRz["members"].push_back(temp);
        }
        return return_gVlpCRz;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
char* temp_OpAxvNb;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_OpAxvNb=NULL;
        return;
        }
    temp_OpAxvNb=(char*)malloc(name["members"]["pMarkerName"]["members"].size()*sizeof(char));
        for (int CsqYngU=0; CsqYngU < name["members"]["pMarkerName"]["members"].size(); CsqYngU++){
            [&]() {
temp_OpAxvNb[CsqYngU]=deserialize_char(name["members"]["pMarkerName"]["members"][CsqYngU]);}();;
        }
        }();result.pMarkerName=temp_OpAxvNb;}();
[&]() {

        for (int rCYTDsS=0; rCYTDsS < 4; rCYTDsS++){
            [&]() {
result.color[rCYTDsS]=deserialize_float(name["members"]["color"]["members"][rCYTDsS]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_DDkVvuo=json({});
    return_DDkVvuo=[&]() {
    json return_imtuaYr=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_DDkVvuo;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_MTAGOZN=json({});
    return_MTAGOZN=[&]() {
    json return_GlyPePi=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_MTAGOZN;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["image"]=[&]() {
    json return_acKrzUP=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_AtHNHEm=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_QKlgkIZ=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_PvhaeEs=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_nVIjtTY=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_EXdQnGM=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_iZVCmWi=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_iZVCmWi=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_gzHWNcO=json({});
    return_gzHWNcO=[&]() {
    json return_lagRpQR=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_gzHWNcO;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UpYPPUm=json({});
    
        if (name.pNext==NULL){
            return_UpYPPUm["null"]=true;
            return return_UpYPPUm;
        }
        return_UpYPPUm=[&]() {
    json return_dnFegcI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dnFegcI["null"]=true;
            return return_dnFegcI;
        }
        
        return_dnFegcI["members"]={};
        for(int dnFegcI=0; dnFegcI < strlen(((char*)(name.pNext)))+1; dnFegcI++){
            json temp;
            temp=[&]() {
    json return_tJPAjpe=json({});
    return serialize_char(((char*)(name.pNext))[dnFegcI]);}();
            return_dnFegcI["members"].push_back(temp);
        }
        return return_dnFegcI;
        }();return return_UpYPPUm;}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_hhWuSxD=json({});
    return_hhWuSxD=[&]() {
    json return_wvqzfPI=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_hhWuSxD;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_iEmHMWN=json({});
    return_iEmHMWN=[&]() {
    json return_FgbAnfX=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_iEmHMWN;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_QZigLKK=json({});
    return_QZigLKK=[&]() {
    json return_IdoFPOZ=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_QZigLKK;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfHoroN=0; XfHoroN < name["members"]["pNext"]["members"].size(); XfHoroN++){
            [&]() {
temp[XfHoroN]=deserialize_char(name["members"]["pNext"]["members"][XfHoroN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_jEIDvlf=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_jEIDvlf=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["flags"]=[&]() {
    json return_lImkiKz=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["flags"]=[&]() {
    json return_lImkiKz=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUmGQDi=json({});
    
        if (name.pNext==NULL){
            return_RUmGQDi["null"]=true;
            return return_RUmGQDi;
        }
        return_RUmGQDi=[&]() {
    json return_iUMONij=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_iUMONij["null"]=true;
            return return_iUMONij;
        }
        
        return_iUMONij["members"]={};
        for(int iUMONij=0; iUMONij < strlen(((char*)(name.pNext)))+1; iUMONij++){
            json temp;
            temp=[&]() {
    json return_jKBjTOw=json({});
    return serialize_char(((char*)(name.pNext))[iUMONij]);}();
            return_iUMONij["members"].push_back(temp);
        }
        return return_iUMONij;
        }();return return_RUmGQDi;}();
result["members"]["privateData"]=[&]() {
    json return_Chzauxm=json({});
    return_Chzauxm=[&]() {
    json return_hrawbft=json({});
    return serialize_uint32_t(name.privateData);}();return return_Chzauxm;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iDKuMMl=0; iDKuMMl < name["members"]["pNext"]["members"].size(); iDKuMMl++){
            [&]() {
temp[iDKuMMl]=deserialize_char(name["members"]["pNext"]["members"][iDKuMMl]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUmGQDi=json({});
    
        if (name.pNext==NULL){
            return_RUmGQDi["null"]=true;
            return return_RUmGQDi;
        }
        return_RUmGQDi=[&]() {
    json return_iUMONij=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_iUMONij["null"]=true;
            return return_iUMONij;
        }
        
        return_iUMONij["members"]={};
        for(int iUMONij=0; iUMONij < strlen(((char*)(name.pNext)))+1; iUMONij++){
            json temp;
            temp=[&]() {
    json return_jKBjTOw=json({});
    return serialize_char(((char*)(name.pNext))[iUMONij]);}();
            return_iUMONij["members"].push_back(temp);
        }
        return return_iUMONij;
        }();return return_RUmGQDi;}();
result["members"]["privateData"]=[&]() {
    json return_Chzauxm=json({});
    return_Chzauxm=[&]() {
    json return_hrawbft=json({});
    return serialize_uint32_t(name.privateData);}();return return_Chzauxm;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iDKuMMl=0; iDKuMMl < name["members"]["pNext"]["members"].size(); iDKuMMl++){
            [&]() {
temp[iDKuMMl]=deserialize_char(name["members"]["pNext"]["members"][iDKuMMl]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_hgoPbKP=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_yrHihYA=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_wqTXSuj=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_ukLRLXT=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_pRqkMwR=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_DzcfGtc=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_LDcHysp=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_gaGeyIE=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_jFRTmum=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_mUPwEGq=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["stageCount"]=[&]() {
    json return_RvnPhDW=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_zoVcGnh=json({});
    
        if (name.pStages==NULL){
            return_zoVcGnh["null"]=true;
            return return_zoVcGnh;
        }
        
        return_zoVcGnh["members"]={};
        for(int zoVcGnh=0; zoVcGnh < name.stageCount; zoVcGnh++){
            json temp;
            temp=[&]() {
    json return_KogSAFD=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[zoVcGnh]);}();
            return_zoVcGnh["members"].push_back(temp);
        }
        return return_zoVcGnh;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_gmlzjcj=json({});
    
        if (name.pVertexInputState==NULL){
            return_gmlzjcj["null"]=true;
            return return_gmlzjcj;
        }
        return_gmlzjcj=[&]() {
    json return_JQObjzN=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_gmlzjcj;}();
result["members"]["pTessellationState"]=[&]() {
    json return_FFxCixG=json({});
    
        if (name.pTessellationState==NULL){
            return_FFxCixG["null"]=true;
            return return_FFxCixG;
        }
        return_FFxCixG=[&]() {
    json return_TZVbLnX=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_FFxCixG;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_NZSYdGm;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_NZSYdGm=NULL;
        return;
        }
    temp_NZSYdGm=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int dKCZTdU=0; dKCZTdU < result.stageCount; dKCZTdU++){
            [&]() {
temp_NZSYdGm[dKCZTdU]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][dKCZTdU]);}();;
        }
        }();result.pStages=temp_NZSYdGm;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_krMiTUW;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_krMiTUW=NULL;
        return;
        }
    temp_krMiTUW=(VkPipelineVertexInputStateCreateInfo*)malloc(sizeof(VkPipelineVertexInputStateCreateInfo));
[&]() {
*(temp_krMiTUW)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_krMiTUW;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_OEjWxAe;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_OEjWxAe=NULL;
        return;
        }
    temp_OEjWxAe=(VkPipelineTessellationStateCreateInfo*)malloc(sizeof(VkPipelineTessellationStateCreateInfo));
[&]() {
*(temp_OEjWxAe)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_OEjWxAe;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sKJJJro=json({});
    
        if (name.pNext==NULL){
            return_sKJJJro["null"]=true;
            return return_sKJJJro;
        }
        return_sKJJJro=[&]() {
    json return_yUuLRrM=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yUuLRrM["null"]=true;
            return return_yUuLRrM;
        }
        
        return_yUuLRrM["members"]={};
        for(int yUuLRrM=0; yUuLRrM < strlen(((char*)(name.pNext)))+1; yUuLRrM++){
            json temp;
            temp=[&]() {
    json return_mbuAVtw=json({});
    return serialize_char(((char*)(name.pNext))[yUuLRrM]);}();
            return_yUuLRrM["members"].push_back(temp);
        }
        return return_yUuLRrM;
        }();return return_sKJJJro;}();
result["members"]["groupCount"]=[&]() {
    json return_EVutDUW=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_leEkXPZ=json({});
    
        if (name.pGroups==NULL){
            return_leEkXPZ["null"]=true;
            return return_leEkXPZ;
        }
        
        return_leEkXPZ["members"]={};
        for(int leEkXPZ=0; leEkXPZ < name.groupCount; leEkXPZ++){
            json temp;
            temp=[&]() {
    json return_AiazVsN=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[leEkXPZ]);}();
            return_leEkXPZ["members"].push_back(temp);
        }
        return return_leEkXPZ;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_nmupuFt=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_XvXqKiS=json({});
    
        if (name.pPipelines==NULL){
            return_XvXqKiS["null"]=true;
            return return_XvXqKiS;
        }
        
        return_XvXqKiS["members"]={};
        for(int XvXqKiS=0; XvXqKiS < name.pipelineCount; XvXqKiS++){
            json temp;
            temp=[&]() {
    json return_kPddaNf=json({});
    return serialize_VkPipeline(name.pPipelines[XvXqKiS]);}();
            return_XvXqKiS["members"].push_back(temp);
        }
        return return_XvXqKiS;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rbkRlJL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rbkRlJL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DxMkVGH=0; DxMkVGH < name["members"]["pNext"]["members"].size(); DxMkVGH++){
            [&]() {
temp[DxMkVGH]=deserialize_char(name["members"]["pNext"]["members"][DxMkVGH]);}();;
        }
        }();temp_rbkRlJL=(void*)temp;
}();result.pNext=temp_rbkRlJL;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_EjQiNOm;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_EjQiNOm=NULL;
        return;
        }
    temp_EjQiNOm=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int rERnsyI=0; rERnsyI < result.groupCount; rERnsyI++){
            [&]() {
temp_EjQiNOm[rERnsyI]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][rERnsyI]);}();;
        }
        }();result.pGroups=temp_EjQiNOm;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_OdiPcHI;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_OdiPcHI=NULL;
        return;
        }
    temp_OdiPcHI=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int NonYvwP=0; NonYvwP < result.pipelineCount; NonYvwP++){
            [&]() {
temp_OdiPcHI[NonYvwP]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][NonYvwP]);}();;
        }
        }();result.pPipelines=temp_OdiPcHI;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_nDvkPqE=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_koHfiie=json({});
    return_koHfiie=[&]() {
    json return_higzGOG=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_koHfiie;}();
result["members"]["size"]=[&]() {
    json return_NCWQWtd=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_uWSjdIL=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_koHfiie=json({});
    return_koHfiie=[&]() {
    json return_higzGOG=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_koHfiie;}();
result["members"]["size"]=[&]() {
    json return_NCWQWtd=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_UcLdZQO=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_NHkWxnG=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_TNkbzCz=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_yVQaHft=json({});
    return_yVQaHft=[&]() {
    json return_UZExILy=json({});
    return serialize_uint64_t(name.offset);}();return return_yVQaHft;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["tokenType"]=[&]() {
    json return_ctyplqM=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_QjJWIro=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_NKVLtwm=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_acUnEIY=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_MmUOVqA=json({});
    return_MmUOVqA=[&]() {
    json return_XdrinTe=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_MmUOVqA;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_gvaHCwR=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_gmznbUV=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_gnArCGV=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_ZkkzBhM=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_sUDcCNk=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_eITxqSO=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_oVjmvHi=json({});
    
        if (name.pIndexTypes==NULL){
            return_oVjmvHi["null"]=true;
            return return_oVjmvHi;
        }
        
        return_oVjmvHi["members"]={};
        for(int oVjmvHi=0; oVjmvHi < name.indexTypeCount; oVjmvHi++){
            json temp;
            temp=[&]() {
    json return_rxoEDdY=json({});
    return serialize_VkIndexType(name.pIndexTypes[oVjmvHi]);}();
            return_oVjmvHi["members"].push_back(temp);
        }
        return return_oVjmvHi;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_OhcsBoh=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_OhcsBoh["null"]=true;
            return return_OhcsBoh;
        }
        
        return_OhcsBoh["members"]={};
        for(int OhcsBoh=0; OhcsBoh < name.indexTypeCount; OhcsBoh++){
            json temp;
            temp=[&]() {
    json return_FMzSXKh=json({});
    return serialize_uint32_t(name.pIndexTypeValues[OhcsBoh]);}();
            return_OhcsBoh["members"].push_back(temp);
        }
        return return_OhcsBoh;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_oGNffve;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_oGNffve=NULL;
        return;
        }
    temp_oGNffve=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int aHWpbeu=0; aHWpbeu < result.indexTypeCount; aHWpbeu++){
            [&]() {
temp_oGNffve[aHWpbeu]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][aHWpbeu]);}();;
        }
        }();result.pIndexTypes=temp_oGNffve;}();
[&]() {
uint32_t* temp_QmDpNWc;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_QmDpNWc=NULL;
        return;
        }
    temp_QmDpNWc=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int zjwAsNp=0; zjwAsNp < result.indexTypeCount; zjwAsNp++){
            [&]() {
temp_QmDpNWc[zjwAsNp]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][zjwAsNp]);}();;
        }
        }();result.pIndexTypeValues=temp_QmDpNWc;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJEaAjM=json({});
    
        if (name.pNext==NULL){
            return_sJEaAjM["null"]=true;
            return return_sJEaAjM;
        }
        return_sJEaAjM=[&]() {
    json return_rBgzMMw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_rBgzMMw["null"]=true;
            return return_rBgzMMw;
        }
        
        return_rBgzMMw["members"]={};
        for(int rBgzMMw=0; rBgzMMw < strlen(((char*)(name.pNext)))+1; rBgzMMw++){
            json temp;
            temp=[&]() {
    json return_ejnGIWb=json({});
    return serialize_char(((char*)(name.pNext))[rBgzMMw]);}();
            return_rBgzMMw["members"].push_back(temp);
        }
        return return_rBgzMMw;
        }();return return_sJEaAjM;}();
result["members"]["flags"]=[&]() {
    json return_nENVYyq=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_rWMIiRt=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_xluxodJ=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_BzCuuLd=json({});
    
        if (name.pTokens==NULL){
            return_BzCuuLd["null"]=true;
            return return_BzCuuLd;
        }
        
        return_BzCuuLd["members"]={};
        for(int BzCuuLd=0; BzCuuLd < name.tokenCount; BzCuuLd++){
            json temp;
            temp=[&]() {
    json return_vPbbWPu=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[BzCuuLd]);}();
            return_BzCuuLd["members"].push_back(temp);
        }
        return return_BzCuuLd;
        }();
result["members"]["streamCount"]=[&]() {
    json return_atBttEK=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_riZvnUz=json({});
    
        if (name.pStreamStrides==NULL){
            return_riZvnUz["null"]=true;
            return return_riZvnUz;
        }
        
        return_riZvnUz["members"]={};
        for(int riZvnUz=0; riZvnUz < name.streamCount; riZvnUz++){
            json temp;
            temp=[&]() {
    json return_sSuobsC=json({});
    return serialize_uint32_t(name.pStreamStrides[riZvnUz]);}();
            return_riZvnUz["members"].push_back(temp);
        }
        return return_riZvnUz;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YvSbgFq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YvSbgFq=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bfrvKlJ=0; bfrvKlJ < name["members"]["pNext"]["members"].size(); bfrvKlJ++){
            [&]() {
temp[bfrvKlJ]=deserialize_char(name["members"]["pNext"]["members"][bfrvKlJ]);}();;
        }
        }();temp_YvSbgFq=(void*)temp;
}();result.pNext=temp_YvSbgFq;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_mERiulj;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_mERiulj=NULL;
        return;
        }
    temp_mERiulj=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int zYDiAzG=0; zYDiAzG < result.tokenCount; zYDiAzG++){
            [&]() {
temp_mERiulj[zYDiAzG]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][zYDiAzG]);}();;
        }
        }();result.pTokens=temp_mERiulj;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_GueghVO;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_GueghVO=NULL;
        return;
        }
    temp_GueghVO=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int cEStVGh=0; cEStVGh < result.streamCount; cEStVGh++){
            [&]() {
temp_GueghVO[cEStVGh]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][cEStVGh]);}();;
        }
        }();result.pStreamStrides=temp_GueghVO;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_CGPdSij=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_JCPbXBf=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_dlVKIEp=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_DUBOYbM=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_ujsjZYR=json({});
    
        if (name.pStreams==NULL){
            return_ujsjZYR["null"]=true;
            return return_ujsjZYR;
        }
        
        return_ujsjZYR["members"]={};
        for(int ujsjZYR=0; ujsjZYR < name.streamCount; ujsjZYR++){
            json temp;
            temp=[&]() {
    json return_xrRztcp=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[ujsjZYR]);}();
            return_ujsjZYR["members"].push_back(temp);
        }
        return return_ujsjZYR;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_RwdlTPD=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_IeSWpAM=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_joRWAGJ=json({});
    return_joRWAGJ=[&]() {
    json return_NxNUeDy=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_joRWAGJ;}();
result["members"]["preprocessSize"]=[&]() {
    json return_bDmCOzM=json({});
    return_bDmCOzM=[&]() {
    json return_tENmAqM=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_bDmCOzM;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_FRGcvpf=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_PlaFcty=json({});
    return_PlaFcty=[&]() {
    json return_IIQFmQK=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_PlaFcty;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_zYubqNv=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_olNqigW=json({});
    return_olNqigW=[&]() {
    json return_mDvoqbZ=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_olNqigW;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_JPVrfOV;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_JPVrfOV=NULL;
        return;
        }
    temp_JPVrfOV=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int QqjYyoM=0; QqjYyoM < result.streamCount; QqjYyoM++){
            [&]() {
temp_JPVrfOV[QqjYyoM]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][QqjYyoM]);}();;
        }
        }();result.pStreams=temp_JPVrfOV;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkrTyoI=json({});
    
        if (name.pNext==NULL){
            return_dkrTyoI["null"]=true;
            return return_dkrTyoI;
        }
        return_dkrTyoI=[&]() {
    json return_HwomHKN=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HwomHKN["null"]=true;
            return return_HwomHKN;
        }
        
        return_HwomHKN["members"]={};
        for(int HwomHKN=0; HwomHKN < strlen(((char*)(name.pNext)))+1; HwomHKN++){
            json temp;
            temp=[&]() {
    json return_kNuhIKz=json({});
    return serialize_char(((char*)(name.pNext))[HwomHKN]);}();
            return_HwomHKN["members"].push_back(temp);
        }
        return return_HwomHKN;
        }();return return_dkrTyoI;}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_SLTkhDR=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_SnvAnPF=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_plIANZs=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_SUjFCYE=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBAOmYt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBAOmYt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RRrHqsk=0; RRrHqsk < name["members"]["pNext"]["members"].size(); RRrHqsk++){
            [&]() {
temp[RRrHqsk]=deserialize_char(name["members"]["pNext"]["members"][RRrHqsk]);}();;
        }
        }();temp_VBAOmYt=(void*)temp;
}();result.pNext=temp_VBAOmYt;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EmyrjNu=json({});
    
        if (name.pNext==NULL){
            return_EmyrjNu["null"]=true;
            return return_EmyrjNu;
        }
        return_EmyrjNu=[&]() {
    json return_DzzZOZU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DzzZOZU["null"]=true;
            return return_DzzZOZU;
        }
        
        return_DzzZOZU["members"]={};
        for(int DzzZOZU=0; DzzZOZU < strlen(((char*)(name.pNext)))+1; DzzZOZU++){
            json temp;
            temp=[&]() {
    json return_KchNDnF=json({});
    return serialize_char(((char*)(name.pNext))[DzzZOZU]);}();
            return_DzzZOZU["members"].push_back(temp);
        }
        return return_DzzZOZU;
        }();return return_EmyrjNu;}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_oVsYAWZ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_EQPmSWs=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TczvWNh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TczvWNh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int czfkvZb=0; czfkvZb < name["members"]["pNext"]["members"].size(); czfkvZb++){
            [&]() {
temp[czfkvZb]=deserialize_char(name["members"]["pNext"]["members"][czfkvZb]);}();;
        }
        }();temp_TczvWNh=(void*)temp;
}();result.pNext=temp_TczvWNh;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_AdJsecb=json({});
    return_AdJsecb=[&]() {
    json return_pxofbRw=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_AdJsecb;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["features"]=[&]() {
    json return_spOYRFy=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["features"]=[&]() {
    json return_spOYRFy=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["properties"]=[&]() {
    json return_jSjhcLo=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["properties"]=[&]() {
    json return_jSjhcLo=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["formatProperties"]=[&]() {
    json return_sIrEbmF=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["formatProperties"]=[&]() {
    json return_sIrEbmF=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_NDVrlFM=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_NDVrlFM=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_wGdAiKa=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_uVdcvuD=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_ZwpfBTC=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_UWNSDmu=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_wGdAiKa=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_uVdcvuD=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_ZwpfBTC=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_UWNSDmu=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_YmKSYta=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_YmKSYta=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["memoryProperties"]=[&]() {
    json return_aewOvjM=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["memoryProperties"]=[&]() {
    json return_aewOvjM=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["properties"]=[&]() {
    json return_cbJVyIa=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["properties"]=[&]() {
    json return_cbJVyIa=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_wGdAiKa=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_jPJohvO=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_ZwpfBTC=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_fFhFdcV=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_wGdAiKa=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_jPJohvO=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_ZwpfBTC=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_fFhFdcV=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_kEQStwi=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_aTQfBZt=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_vglgCZy=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_hismzVT=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_pGuxnju=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_aTQfBZt=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_vglgCZy=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_hismzVT=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_pGuxnju=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["driverID"]=[&]() {
    json return_vMYhTHB=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_GBAoxaj=json({});
    
        return_GBAoxaj["members"]={};
        for(int GBAoxaj=0; GBAoxaj < VK_MAX_DRIVER_NAME_SIZE; GBAoxaj++){
            json temp;
            temp=[&]() {
    json return_aUytuVN=json({});
    return serialize_char(name.driverName[GBAoxaj]);}();
            return_GBAoxaj["members"].push_back(temp);
        }
        return return_GBAoxaj;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_MCMGtMS=json({});
    
        return_MCMGtMS["members"]={};
        for(int MCMGtMS=0; MCMGtMS < VK_MAX_DRIVER_INFO_SIZE; MCMGtMS++){
            json temp;
            temp=[&]() {
    json return_WdNCfot=json({});
    return serialize_char(name.driverInfo[MCMGtMS]);}();
            return_MCMGtMS["members"].push_back(temp);
        }
        return return_MCMGtMS;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_bHWRSqt=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int NvjEGDJ=0; NvjEGDJ < VK_MAX_DRIVER_NAME_SIZE; NvjEGDJ++){
            [&]() {
result.driverName[NvjEGDJ]=deserialize_char(name["members"]["driverName"]["members"][NvjEGDJ]);}();;
        }
        }();
[&]() {

        for (int RWgaeMd=0; RWgaeMd < VK_MAX_DRIVER_INFO_SIZE; RWgaeMd++){
            [&]() {
result.driverInfo[RWgaeMd]=deserialize_char(name["members"]["driverInfo"]["members"][RWgaeMd]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["driverID"]=[&]() {
    json return_vMYhTHB=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_GBAoxaj=json({});
    
        return_GBAoxaj["members"]={};
        for(int GBAoxaj=0; GBAoxaj < VK_MAX_DRIVER_NAME_SIZE; GBAoxaj++){
            json temp;
            temp=[&]() {
    json return_aUytuVN=json({});
    return serialize_char(name.driverName[GBAoxaj]);}();
            return_GBAoxaj["members"].push_back(temp);
        }
        return return_GBAoxaj;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_MCMGtMS=json({});
    
        return_MCMGtMS["members"]={};
        for(int MCMGtMS=0; MCMGtMS < VK_MAX_DRIVER_INFO_SIZE; MCMGtMS++){
            json temp;
            temp=[&]() {
    json return_WdNCfot=json({});
    return serialize_char(name.driverInfo[MCMGtMS]);}();
            return_MCMGtMS["members"].push_back(temp);
        }
        return return_MCMGtMS;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_bHWRSqt=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int NvjEGDJ=0; NvjEGDJ < VK_MAX_DRIVER_NAME_SIZE; NvjEGDJ++){
            [&]() {
result.driverName[NvjEGDJ]=deserialize_char(name["members"]["driverName"]["members"][NvjEGDJ]);}();;
        }
        }();
[&]() {

        for (int RWgaeMd=0; RWgaeMd < VK_MAX_DRIVER_INFO_SIZE; RWgaeMd++){
            [&]() {
result.driverInfo[RWgaeMd]=deserialize_char(name["members"]["driverInfo"]["members"][RWgaeMd]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchainCount"]=[&]() {
    json return_priIDnT=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_AXkuGst=json({});
    
        if (name.pRegions==NULL){
            return_AXkuGst["null"]=true;
            return return_AXkuGst;
        }
        
        return_AXkuGst["members"]={};
        for(int AXkuGst=0; AXkuGst < name.swapchainCount; AXkuGst++){
            json temp;
            temp=[&]() {
    json return_dYlHxuB=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[AXkuGst]);}();
            return_AXkuGst["members"].push_back(temp);
        }
        return return_AXkuGst;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_xlGPAZU;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_xlGPAZU=NULL;
        return;
        }
    temp_xlGPAZU=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int fsWEzbb=0; fsWEzbb < result.swapchainCount; fsWEzbb++){
            [&]() {
temp_xlGPAZU[fsWEzbb]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][fsWEzbb]);}();;
        }
        }();result.pRegions=temp_xlGPAZU;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_gvaUWOe=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_MnoUbLy=json({});
    
        if (name.pRectangles==NULL){
            return_MnoUbLy["null"]=true;
            return return_MnoUbLy;
        }
        
        return_MnoUbLy["members"]={};
        for(int MnoUbLy=0; MnoUbLy < name.rectangleCount; MnoUbLy++){
            json temp;
            temp=[&]() {
    json return_kNqOKoo=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[MnoUbLy]);}();
            return_MnoUbLy["members"].push_back(temp);
        }
        return return_MnoUbLy;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_GqHrQSm;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_GqHrQSm=NULL;
        return;
        }
    temp_GqHrQSm=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int uGoPsVj=0; uGoPsVj < result.rectangleCount; uGoPsVj++){
            [&]() {
temp_GqHrQSm[uGoPsVj]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][uGoPsVj]);}();;
        }
        }();result.pRectangles=temp_GqHrQSm;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_FTJMbdH=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_mYPCope=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_PVhQDuX=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IfmGNvI=json({});
    return_IfmGNvI=[&]() {
    json return_jULyUJE=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IfmGNvI;}();
result["members"]["variablePointers"]=[&]() {
    json return_fUXpaDc=json({});
    return_fUXpaDc=[&]() {
    json return_nBPLMXj=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_fUXpaDc;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IfmGNvI=json({});
    return_IfmGNvI=[&]() {
    json return_jULyUJE=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IfmGNvI;}();
result["members"]["variablePointers"]=[&]() {
    json return_fUXpaDc=json({});
    return_fUXpaDc=[&]() {
    json return_nBPLMXj=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_fUXpaDc;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IfmGNvI=json({});
    return_IfmGNvI=[&]() {
    json return_jULyUJE=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IfmGNvI;}();
result["members"]["variablePointers"]=[&]() {
    json return_fUXpaDc=json({});
    return_fUXpaDc=[&]() {
    json return_nBPLMXj=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_fUXpaDc;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IfmGNvI=json({});
    return_IfmGNvI=[&]() {
    json return_jULyUJE=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IfmGNvI;}();
result["members"]["variablePointers"]=[&]() {
    json return_fUXpaDc=json({});
    return_fUXpaDc=[&]() {
    json return_nBPLMXj=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_fUXpaDc;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_IvjZANa=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_LuxQGkx=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_OXvetNL=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_IvjZANa=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_LuxQGkx=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_OXvetNL=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_kfGcDXK=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_kfGcDXK=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_YIlBopC=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_unlmxfO=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_YIlBopC=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_unlmxfO=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_popwIsh=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_popwIsh=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["deviceUUID"]=[&]() {
    json return_mQUlrST=json({});
    
        return_mQUlrST["members"]={};
        for(int mQUlrST=0; mQUlrST < VK_UUID_SIZE; mQUlrST++){
            json temp;
            temp=[&]() {
    json return_tJAcRWs=json({});
    return serialize_uint8_t(name.deviceUUID[mQUlrST]);}();
            return_mQUlrST["members"].push_back(temp);
        }
        return return_mQUlrST;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_kaPtqwF=json({});
    
        return_kaPtqwF["members"]={};
        for(int kaPtqwF=0; kaPtqwF < VK_UUID_SIZE; kaPtqwF++){
            json temp;
            temp=[&]() {
    json return_OxhcIrK=json({});
    return serialize_uint8_t(name.driverUUID[kaPtqwF]);}();
            return_kaPtqwF["members"].push_back(temp);
        }
        return return_kaPtqwF;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_hCPEaTs=json({});
    
        return_hCPEaTs["members"]={};
        for(int hCPEaTs=0; hCPEaTs < VK_LUID_SIZE; hCPEaTs++){
            json temp;
            temp=[&]() {
    json return_hrCWovl=json({});
    return serialize_uint8_t(name.deviceLUID[hCPEaTs]);}();
            return_hCPEaTs["members"].push_back(temp);
        }
        return return_hCPEaTs;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_aqMNSwP=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_BuVYMtG=json({});
    return_BuVYMtG=[&]() {
    json return_egUoZfR=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_BuVYMtG;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int YhvqcSj=0; YhvqcSj < VK_UUID_SIZE; YhvqcSj++){
            [&]() {
result.deviceUUID[YhvqcSj]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][YhvqcSj]);}();;
        }
        }();
[&]() {

        for (int otuIXSz=0; otuIXSz < VK_UUID_SIZE; otuIXSz++){
            [&]() {
result.driverUUID[otuIXSz]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][otuIXSz]);}();;
        }
        }();
[&]() {

        for (int UkcUggZ=0; UkcUggZ < VK_LUID_SIZE; UkcUggZ++){
            [&]() {
result.deviceLUID[UkcUggZ]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][UkcUggZ]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["deviceUUID"]=[&]() {
    json return_mQUlrST=json({});
    
        return_mQUlrST["members"]={};
        for(int mQUlrST=0; mQUlrST < VK_UUID_SIZE; mQUlrST++){
            json temp;
            temp=[&]() {
    json return_tJAcRWs=json({});
    return serialize_uint8_t(name.deviceUUID[mQUlrST]);}();
            return_mQUlrST["members"].push_back(temp);
        }
        return return_mQUlrST;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_kaPtqwF=json({});
    
        return_kaPtqwF["members"]={};
        for(int kaPtqwF=0; kaPtqwF < VK_UUID_SIZE; kaPtqwF++){
            json temp;
            temp=[&]() {
    json return_OxhcIrK=json({});
    return serialize_uint8_t(name.driverUUID[kaPtqwF]);}();
            return_kaPtqwF["members"].push_back(temp);
        }
        return return_kaPtqwF;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_hCPEaTs=json({});
    
        return_hCPEaTs["members"]={};
        for(int hCPEaTs=0; hCPEaTs < VK_LUID_SIZE; hCPEaTs++){
            json temp;
            temp=[&]() {
    json return_hrCWovl=json({});
    return serialize_uint8_t(name.deviceLUID[hCPEaTs]);}();
            return_hCPEaTs["members"].push_back(temp);
        }
        return return_hCPEaTs;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_aqMNSwP=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_BuVYMtG=json({});
    return_BuVYMtG=[&]() {
    json return_egUoZfR=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_BuVYMtG;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int YhvqcSj=0; YhvqcSj < VK_UUID_SIZE; YhvqcSj++){
            [&]() {
result.deviceUUID[YhvqcSj]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][YhvqcSj]);}();;
        }
        }();
[&]() {

        for (int otuIXSz=0; otuIXSz < VK_UUID_SIZE; otuIXSz++){
            [&]() {
result.driverUUID[otuIXSz]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][otuIXSz]);}();;
        }
        }();
[&]() {

        for (int UkcUggZ=0; UkcUggZ < VK_LUID_SIZE; UkcUggZ++){
            [&]() {
result.deviceLUID[UkcUggZ]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][UkcUggZ]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_UAKyscD=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_FNAqIxU=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_pXvueRe=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_IVRBjxl=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_eCQDzsQ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_eCQDzsQ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_fiXXXLZ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_YJwhZkR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_RZvsOuw=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_fiXXXLZ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_YJwhZkR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_RZvsOuw=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_SQQRUrx=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_SQQRUrx=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["semaphore"]=[&]() {
    json return_VlBoTYI=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_AlNdHVA=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_LklLMee=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_pXvueRe=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["semaphore"]=[&]() {
    json return_ZgyzjMv=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_eCQDzsQ=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_txbOuSz=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleType"]=[&]() {
    json return_txbOuSz=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_LDyLNmY=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_RUBIYwS=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_eHXvmYi=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_LDyLNmY=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_RUBIYwS=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_eHXvmYi=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_iVqOaPK=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["handleTypes"]=[&]() {
    json return_iVqOaPK=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["fence"]=[&]() {
    json return_PAlNkAR=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_fabRByM=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_ywOaklb=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_nWkiLPI=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["fence"]=[&]() {
    json return_zosGSVS=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_ZDvQlAt=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["multiview"]=[&]() {
    json return_cRfgoWH=json({});
    return_cRfgoWH=[&]() {
    json return_cvKKBkQ=json({});
    return serialize_uint32_t(name.multiview);}();return return_cRfgoWH;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_CLcFcZC=json({});
    return_CLcFcZC=[&]() {
    json return_nvVYfSK=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_CLcFcZC;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_FwmnzFo=json({});
    return_FwmnzFo=[&]() {
    json return_JOIzHco=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_FwmnzFo;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["multiview"]=[&]() {
    json return_cRfgoWH=json({});
    return_cRfgoWH=[&]() {
    json return_cvKKBkQ=json({});
    return serialize_uint32_t(name.multiview);}();return return_cRfgoWH;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_CLcFcZC=json({});
    return_CLcFcZC=[&]() {
    json return_nvVYfSK=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_CLcFcZC;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_FwmnzFo=json({});
    return_FwmnzFo=[&]() {
    json return_JOIzHco=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_FwmnzFo;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_lKQwhQM=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_cYnUfNb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_lKQwhQM=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_cYnUfNb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OyeAGVy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["subpassCount"]=[&]() {
    json return_OdATdjp=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_eacBgBH=json({});
    
        if (name.pViewMasks==NULL){
            return_eacBgBH["null"]=true;
            return return_eacBgBH;
        }
        
        return_eacBgBH["members"]={};
        for(int eacBgBH=0; eacBgBH < name.subpassCount; eacBgBH++){
            json temp;
            temp=[&]() {
    json return_UYNiRcf=json({});
    return serialize_uint32_t(name.pViewMasks[eacBgBH]);}();
            return_eacBgBH["members"].push_back(temp);
        }
        return return_eacBgBH;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_CmhzNNj=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_MnPfGpg=json({});
    
        if (name.pViewOffsets==NULL){
            return_MnPfGpg["null"]=true;
            return return_MnPfGpg;
        }
        
        return_MnPfGpg["members"]={};
        for(int MnPfGpg=0; MnPfGpg < name.dependencyCount; MnPfGpg++){
            json temp;
            temp=[&]() {
    json return_xrXiQSw=json({});
    return serialize_int32_t(name.pViewOffsets[MnPfGpg]);}();
            return_MnPfGpg["members"].push_back(temp);
        }
        return return_MnPfGpg;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_miGtAmR=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_pUiGmlF=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_pUiGmlF["null"]=true;
            return return_pUiGmlF;
        }
        
        return_pUiGmlF["members"]={};
        for(int pUiGmlF=0; pUiGmlF < name.correlationMaskCount; pUiGmlF++){
            json temp;
            temp=[&]() {
    json return_kJrFdAu=json({});
    return serialize_uint32_t(name.pCorrelationMasks[pUiGmlF]);}();
            return_pUiGmlF["members"].push_back(temp);
        }
        return return_pUiGmlF;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_cdXfBQU;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_cdXfBQU=NULL;
        return;
        }
    temp_cdXfBQU=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int MVzbpAS=0; MVzbpAS < result.subpassCount; MVzbpAS++){
            [&]() {
temp_cdXfBQU[MVzbpAS]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][MVzbpAS]);}();;
        }
        }();result.pViewMasks=temp_cdXfBQU;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_NvhiDNS;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_NvhiDNS=NULL;
        return;
        }
    temp_NvhiDNS=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int FgicGDb=0; FgicGDb < result.dependencyCount; FgicGDb++){
            [&]() {
temp_NvhiDNS[FgicGDb]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][FgicGDb]);}();;
        }
        }();result.pViewOffsets=temp_NvhiDNS;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_rRUTZWk;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_rRUTZWk=NULL;
        return;
        }
    temp_rRUTZWk=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int qVPxGZt=0; qVPxGZt < result.correlationMaskCount; qVPxGZt++){
            [&]() {
temp_rRUTZWk[qVPxGZt]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][qVPxGZt]);}();;
        }
        }();result.pCorrelationMasks=temp_rRUTZWk;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OyeAGVy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["subpassCount"]=[&]() {
    json return_OdATdjp=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_eacBgBH=json({});
    
        if (name.pViewMasks==NULL){
            return_eacBgBH["null"]=true;
            return return_eacBgBH;
        }
        
        return_eacBgBH["members"]={};
        for(int eacBgBH=0; eacBgBH < name.subpassCount; eacBgBH++){
            json temp;
            temp=[&]() {
    json return_UYNiRcf=json({});
    return serialize_uint32_t(name.pViewMasks[eacBgBH]);}();
            return_eacBgBH["members"].push_back(temp);
        }
        return return_eacBgBH;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_CmhzNNj=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_MnPfGpg=json({});
    
        if (name.pViewOffsets==NULL){
            return_MnPfGpg["null"]=true;
            return return_MnPfGpg;
        }
        
        return_MnPfGpg["members"]={};
        for(int MnPfGpg=0; MnPfGpg < name.dependencyCount; MnPfGpg++){
            json temp;
            temp=[&]() {
    json return_xrXiQSw=json({});
    return serialize_int32_t(name.pViewOffsets[MnPfGpg]);}();
            return_MnPfGpg["members"].push_back(temp);
        }
        return return_MnPfGpg;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_miGtAmR=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_pUiGmlF=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_pUiGmlF["null"]=true;
            return return_pUiGmlF;
        }
        
        return_pUiGmlF["members"]={};
        for(int pUiGmlF=0; pUiGmlF < name.correlationMaskCount; pUiGmlF++){
            json temp;
            temp=[&]() {
    json return_kJrFdAu=json({});
    return serialize_uint32_t(name.pCorrelationMasks[pUiGmlF]);}();
            return_pUiGmlF["members"].push_back(temp);
        }
        return return_pUiGmlF;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_cdXfBQU;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_cdXfBQU=NULL;
        return;
        }
    temp_cdXfBQU=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int MVzbpAS=0; MVzbpAS < result.subpassCount; MVzbpAS++){
            [&]() {
temp_cdXfBQU[MVzbpAS]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][MVzbpAS]);}();;
        }
        }();result.pViewMasks=temp_cdXfBQU;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_NvhiDNS;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_NvhiDNS=NULL;
        return;
        }
    temp_NvhiDNS=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int FgicGDb=0; FgicGDb < result.dependencyCount; FgicGDb++){
            [&]() {
temp_NvhiDNS[FgicGDb]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][FgicGDb]);}();;
        }
        }();result.pViewOffsets=temp_NvhiDNS;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_rRUTZWk;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_rRUTZWk=NULL;
        return;
        }
    temp_rRUTZWk=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int qVPxGZt=0; qVPxGZt < result.correlationMaskCount; qVPxGZt++){
            [&]() {
temp_rRUTZWk[qVPxGZt]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][qVPxGZt]);}();;
        }
        }();result.pCorrelationMasks=temp_rRUTZWk;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["minImageCount"]=[&]() {
    json return_cEoXozL=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_dyWKsoQ=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_LDOAxkZ=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_OEfUUVu=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_UjWPdgd=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_vIXyGMc=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_tLvjkHk=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_nMAHyhD=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_CNlURSQ=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_MwnMLPu=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_DjBcmnd=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["powerState"]=[&]() {
    json return_nniecAO=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceEvent"]=[&]() {
    json return_IrYETIo=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["displayEvent"]=[&]() {
    json return_GZHSIpO=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["surfaceCounters"]=[&]() {
    json return_ujgZZmC=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_MSZDiLy=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_XkszcER=json({});
    
        return_XkszcER["members"]={};
        for(int XkszcER=0; XkszcER < VK_MAX_DEVICE_GROUP_SIZE; XkszcER++){
            json temp;
            temp=[&]() {
    json return_TeVnAvb=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[XkszcER]);}();
            return_XkszcER["members"].push_back(temp);
        }
        return return_XkszcER;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_RgCYOFu=json({});
    return_RgCYOFu=[&]() {
    json return_TxORpIi=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_RgCYOFu;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int BCdKhBs=0; BCdKhBs < VK_MAX_DEVICE_GROUP_SIZE; BCdKhBs++){
            [&]() {
result.physicalDevices[BCdKhBs]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][BCdKhBs]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_MSZDiLy=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_XkszcER=json({});
    
        return_XkszcER["members"]={};
        for(int XkszcER=0; XkszcER < VK_MAX_DEVICE_GROUP_SIZE; XkszcER++){
            json temp;
            temp=[&]() {
    json return_TeVnAvb=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[XkszcER]);}();
            return_XkszcER["members"].push_back(temp);
        }
        return return_XkszcER;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_RgCYOFu=json({});
    return_RgCYOFu=[&]() {
    json return_TxORpIi=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_RgCYOFu;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int BCdKhBs=0; BCdKhBs < VK_MAX_DEVICE_GROUP_SIZE; BCdKhBs++){
            [&]() {
result.physicalDevices[BCdKhBs]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][BCdKhBs]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_UTCRDJL=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_GBVHtsx=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["flags"]=[&]() {
    json return_UTCRDJL=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_GBVHtsx=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["buffer"]=[&]() {
    json return_egjuVmd=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_ZUTVaLP=json({});
    return_ZUTVaLP=[&]() {
    json return_ImvzXHS=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_ZUTVaLP;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["buffer"]=[&]() {
    json return_egjuVmd=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_ZUTVaLP=json({});
    return_ZUTVaLP=[&]() {
    json return_ImvzXHS=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_ZUTVaLP;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_KClraJS=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_TCEYfPe=json({});
    
        if (name.pDeviceIndices==NULL){
            return_TCEYfPe["null"]=true;
            return return_TCEYfPe;
        }
        
        return_TCEYfPe["members"]={};
        for(int TCEYfPe=0; TCEYfPe < name.deviceIndexCount; TCEYfPe++){
            json temp;
            temp=[&]() {
    json return_cSNsecN=json({});
    return serialize_uint32_t(name.pDeviceIndices[TCEYfPe]);}();
            return_TCEYfPe["members"].push_back(temp);
        }
        return return_TCEYfPe;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_TwKwSob;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_TwKwSob=NULL;
        return;
        }
    temp_TwKwSob=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int HQDyaVw=0; HQDyaVw < result.deviceIndexCount; HQDyaVw++){
            [&]() {
temp_TwKwSob[HQDyaVw]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][HQDyaVw]);}();;
        }
        }();result.pDeviceIndices=temp_TwKwSob;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_KClraJS=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_TCEYfPe=json({});
    
        if (name.pDeviceIndices==NULL){
            return_TCEYfPe["null"]=true;
            return return_TCEYfPe;
        }
        
        return_TCEYfPe["members"]={};
        for(int TCEYfPe=0; TCEYfPe < name.deviceIndexCount; TCEYfPe++){
            json temp;
            temp=[&]() {
    json return_cSNsecN=json({});
    return serialize_uint32_t(name.pDeviceIndices[TCEYfPe]);}();
            return_TCEYfPe["members"].push_back(temp);
        }
        return return_TCEYfPe;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_TwKwSob;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_TwKwSob=NULL;
        return;
        }
    temp_TwKwSob=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int HQDyaVw=0; HQDyaVw < result.deviceIndexCount; HQDyaVw++){
            [&]() {
temp_TwKwSob[HQDyaVw]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][HQDyaVw]);}();;
        }
        }();result.pDeviceIndices=temp_TwKwSob;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["image"]=[&]() {
    json return_EwDXXHz=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_ZUTVaLP=json({});
    return_ZUTVaLP=[&]() {
    json return_ImvzXHS=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_ZUTVaLP;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["image"]=[&]() {
    json return_EwDXXHz=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_ZUTVaLP=json({});
    return_ZUTVaLP=[&]() {
    json return_ImvzXHS=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_ZUTVaLP;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_KClraJS=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_iksaAZa=json({});
    
        if (name.pDeviceIndices==NULL){
            return_iksaAZa["null"]=true;
            return return_iksaAZa;
        }
        
        return_iksaAZa["members"]={};
        for(int iksaAZa=0; iksaAZa < name.deviceIndexCount; iksaAZa++){
            json temp;
            temp=[&]() {
    json return_OQBqjpc=json({});
    return serialize_uint32_t(name.pDeviceIndices[iksaAZa]);}();
            return_iksaAZa["members"].push_back(temp);
        }
        return return_iksaAZa;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_lfJBkWQ=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_HBcxQeZ=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_HBcxQeZ["null"]=true;
            return return_HBcxQeZ;
        }
        
        return_HBcxQeZ["members"]={};
        for(int HBcxQeZ=0; HBcxQeZ < name.splitInstanceBindRegionCount; HBcxQeZ++){
            json temp;
            temp=[&]() {
    json return_hSniFXe=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[HBcxQeZ]);}();
            return_HBcxQeZ["members"].push_back(temp);
        }
        return return_HBcxQeZ;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_FdULpeD;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_FdULpeD=NULL;
        return;
        }
    temp_FdULpeD=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int SdIEtWf=0; SdIEtWf < result.deviceIndexCount; SdIEtWf++){
            [&]() {
temp_FdULpeD[SdIEtWf]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][SdIEtWf]);}();;
        }
        }();result.pDeviceIndices=temp_FdULpeD;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_KmWvYFZ;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_KmWvYFZ=NULL;
        return;
        }
    temp_KmWvYFZ=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int DyttvMs=0; DyttvMs < result.splitInstanceBindRegionCount; DyttvMs++){
            [&]() {
temp_KmWvYFZ[DyttvMs]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][DyttvMs]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_KmWvYFZ;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_KClraJS=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_iksaAZa=json({});
    
        if (name.pDeviceIndices==NULL){
            return_iksaAZa["null"]=true;
            return return_iksaAZa;
        }
        
        return_iksaAZa["members"]={};
        for(int iksaAZa=0; iksaAZa < name.deviceIndexCount; iksaAZa++){
            json temp;
            temp=[&]() {
    json return_OQBqjpc=json({});
    return serialize_uint32_t(name.pDeviceIndices[iksaAZa]);}();
            return_iksaAZa["members"].push_back(temp);
        }
        return return_iksaAZa;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_lfJBkWQ=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_HBcxQeZ=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_HBcxQeZ["null"]=true;
            return return_HBcxQeZ;
        }
        
        return_HBcxQeZ["members"]={};
        for(int HBcxQeZ=0; HBcxQeZ < name.splitInstanceBindRegionCount; HBcxQeZ++){
            json temp;
            temp=[&]() {
    json return_hSniFXe=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[HBcxQeZ]);}();
            return_HBcxQeZ["members"].push_back(temp);
        }
        return return_HBcxQeZ;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_FdULpeD;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_FdULpeD=NULL;
        return;
        }
    temp_FdULpeD=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int SdIEtWf=0; SdIEtWf < result.deviceIndexCount; SdIEtWf++){
            [&]() {
temp_FdULpeD[SdIEtWf]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][SdIEtWf]);}();;
        }
        }();result.pDeviceIndices=temp_FdULpeD;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_KmWvYFZ;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_KmWvYFZ=NULL;
        return;
        }
    temp_KmWvYFZ=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int DyttvMs=0; DyttvMs < result.splitInstanceBindRegionCount; DyttvMs++){
            [&]() {
temp_KmWvYFZ[DyttvMs]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][DyttvMs]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_KmWvYFZ;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceMask"]=[&]() {
    json return_dbcckQy=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_umiwdww=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_LKwTUVb=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_LKwTUVb["null"]=true;
            return return_LKwTUVb;
        }
        
        return_LKwTUVb["members"]={};
        for(int LKwTUVb=0; LKwTUVb < name.deviceRenderAreaCount; LKwTUVb++){
            json temp;
            temp=[&]() {
    json return_RIZazYl=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[LKwTUVb]);}();
            return_LKwTUVb["members"].push_back(temp);
        }
        return return_LKwTUVb;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_pYudhlh;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_pYudhlh=NULL;
        return;
        }
    temp_pYudhlh=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int RHPclhr=0; RHPclhr < result.deviceRenderAreaCount; RHPclhr++){
            [&]() {
temp_pYudhlh[RHPclhr]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][RHPclhr]);}();;
        }
        }();result.pDeviceRenderAreas=temp_pYudhlh;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceMask"]=[&]() {
    json return_dbcckQy=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_umiwdww=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_LKwTUVb=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_LKwTUVb["null"]=true;
            return return_LKwTUVb;
        }
        
        return_LKwTUVb["members"]={};
        for(int LKwTUVb=0; LKwTUVb < name.deviceRenderAreaCount; LKwTUVb++){
            json temp;
            temp=[&]() {
    json return_RIZazYl=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[LKwTUVb]);}();
            return_LKwTUVb["members"].push_back(temp);
        }
        return return_LKwTUVb;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_pYudhlh;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_pYudhlh=NULL;
        return;
        }
    temp_pYudhlh=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int RHPclhr=0; RHPclhr < result.deviceRenderAreaCount; RHPclhr++){
            [&]() {
temp_pYudhlh[RHPclhr]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][RHPclhr]);}();;
        }
        }();result.pDeviceRenderAreas=temp_pYudhlh;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceMask"]=[&]() {
    json return_GBVHtsx=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceMask"]=[&]() {
    json return_GBVHtsx=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_rRQyXiT=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_uTBArqZ=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_uTBArqZ["null"]=true;
            return return_uTBArqZ;
        }
        
        return_uTBArqZ["members"]={};
        for(int uTBArqZ=0; uTBArqZ < name.waitSemaphoreCount; uTBArqZ++){
            json temp;
            temp=[&]() {
    json return_PYPlfkj=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[uTBArqZ]);}();
            return_uTBArqZ["members"].push_back(temp);
        }
        return return_uTBArqZ;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_rQrqaAv=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_dtCtjmb=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_dtCtjmb["null"]=true;
            return return_dtCtjmb;
        }
        
        return_dtCtjmb["members"]={};
        for(int dtCtjmb=0; dtCtjmb < name.commandBufferCount; dtCtjmb++){
            json temp;
            temp=[&]() {
    json return_jfmfOnR=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[dtCtjmb]);}();
            return_dtCtjmb["members"].push_back(temp);
        }
        return return_dtCtjmb;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_HgkDkJC=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_KoJlvkQ=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_KoJlvkQ["null"]=true;
            return return_KoJlvkQ;
        }
        
        return_KoJlvkQ["members"]={};
        for(int KoJlvkQ=0; KoJlvkQ < name.signalSemaphoreCount; KoJlvkQ++){
            json temp;
            temp=[&]() {
    json return_BXmkIJi=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[KoJlvkQ]);}();
            return_KoJlvkQ["members"].push_back(temp);
        }
        return return_KoJlvkQ;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_kzRAHLR;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_kzRAHLR=NULL;
        return;
        }
    temp_kzRAHLR=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int aBvTdoE=0; aBvTdoE < result.waitSemaphoreCount; aBvTdoE++){
            [&]() {
temp_kzRAHLR[aBvTdoE]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][aBvTdoE]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_kzRAHLR;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_VLTEFzT;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_VLTEFzT=NULL;
        return;
        }
    temp_VLTEFzT=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int XVnPLRm=0; XVnPLRm < result.commandBufferCount; XVnPLRm++){
            [&]() {
temp_VLTEFzT[XVnPLRm]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][XVnPLRm]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_VLTEFzT;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_QglpXkl;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_QglpXkl=NULL;
        return;
        }
    temp_QglpXkl=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int ZsXCqHz=0; ZsXCqHz < result.signalSemaphoreCount; ZsXCqHz++){
            [&]() {
temp_QglpXkl[ZsXCqHz]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][ZsXCqHz]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_QglpXkl;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_rRQyXiT=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_uTBArqZ=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_uTBArqZ["null"]=true;
            return return_uTBArqZ;
        }
        
        return_uTBArqZ["members"]={};
        for(int uTBArqZ=0; uTBArqZ < name.waitSemaphoreCount; uTBArqZ++){
            json temp;
            temp=[&]() {
    json return_PYPlfkj=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[uTBArqZ]);}();
            return_uTBArqZ["members"].push_back(temp);
        }
        return return_uTBArqZ;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_rQrqaAv=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_dtCtjmb=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_dtCtjmb["null"]=true;
            return return_dtCtjmb;
        }
        
        return_dtCtjmb["members"]={};
        for(int dtCtjmb=0; dtCtjmb < name.commandBufferCount; dtCtjmb++){
            json temp;
            temp=[&]() {
    json return_jfmfOnR=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[dtCtjmb]);}();
            return_dtCtjmb["members"].push_back(temp);
        }
        return return_dtCtjmb;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_HgkDkJC=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_KoJlvkQ=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_KoJlvkQ["null"]=true;
            return return_KoJlvkQ;
        }
        
        return_KoJlvkQ["members"]={};
        for(int KoJlvkQ=0; KoJlvkQ < name.signalSemaphoreCount; KoJlvkQ++){
            json temp;
            temp=[&]() {
    json return_BXmkIJi=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[KoJlvkQ]);}();
            return_KoJlvkQ["members"].push_back(temp);
        }
        return return_KoJlvkQ;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_kzRAHLR;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_kzRAHLR=NULL;
        return;
        }
    temp_kzRAHLR=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int aBvTdoE=0; aBvTdoE < result.waitSemaphoreCount; aBvTdoE++){
            [&]() {
temp_kzRAHLR[aBvTdoE]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][aBvTdoE]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_kzRAHLR;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_VLTEFzT;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_VLTEFzT=NULL;
        return;
        }
    temp_VLTEFzT=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int XVnPLRm=0; XVnPLRm < result.commandBufferCount; XVnPLRm++){
            [&]() {
temp_VLTEFzT[XVnPLRm]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][XVnPLRm]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_VLTEFzT;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_QglpXkl;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_QglpXkl=NULL;
        return;
        }
    temp_QglpXkl=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int ZsXCqHz=0; ZsXCqHz < result.signalSemaphoreCount; ZsXCqHz++){
            [&]() {
temp_QglpXkl[ZsXCqHz]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][ZsXCqHz]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_QglpXkl;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_WRJIfAP=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_KapiZji=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_WRJIfAP=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_KapiZji=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["presentMask"]=[&]() {
    json return_KhnaLFw=json({});
    
        return_KhnaLFw["members"]={};
        for(int KhnaLFw=0; KhnaLFw < VK_MAX_DEVICE_GROUP_SIZE; KhnaLFw++){
            json temp;
            temp=[&]() {
    json return_SWmfKTf=json({});
    return serialize_uint32_t(name.presentMask[KhnaLFw]);}();
            return_KhnaLFw["members"].push_back(temp);
        }
        return return_KhnaLFw;
        }();
result["members"]["modes"]=[&]() {
    json return_UdiboTE=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int GioPnsq=0; GioPnsq < VK_MAX_DEVICE_GROUP_SIZE; GioPnsq++){
            [&]() {
result.presentMask[GioPnsq]=deserialize_uint32_t(name["members"]["presentMask"]["members"][GioPnsq]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchain"]=[&]() {
    json return_OkCRPrx=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchain"]=[&]() {
    json return_EKbWTEt=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_jCCOndO=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchain"]=[&]() {
    json return_EKbWTEt=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_AjrQaDB=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_KNuTZLt=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_pWYNdyF=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_GBVHtsx=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchainCount"]=[&]() {
    json return_exIqgEA=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_IVnvxqc=json({});
    
        if (name.pDeviceMasks==NULL){
            return_IVnvxqc["null"]=true;
            return return_IVnvxqc;
        }
        
        return_IVnvxqc["members"]={};
        for(int IVnvxqc=0; IVnvxqc < name.swapchainCount; IVnvxqc++){
            json temp;
            temp=[&]() {
    json return_OVUvxLh=json({});
    return serialize_uint32_t(name.pDeviceMasks[IVnvxqc]);}();
            return_IVnvxqc["members"].push_back(temp);
        }
        return return_IVnvxqc;
        }();
result["members"]["mode"]=[&]() {
    json return_ogQMpUR=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_mjASTFY;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_mjASTFY=NULL;
        return;
        }
    temp_mjASTFY=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int YpnMzAx=0; YpnMzAx < result.swapchainCount; YpnMzAx++){
            [&]() {
temp_mjASTFY[YpnMzAx]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][YpnMzAx]);}();;
        }
        }();result.pDeviceMasks=temp_mjASTFY;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_MSZDiLy=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_wPXJvzt=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_wPXJvzt["null"]=true;
            return return_wPXJvzt;
        }
        
        return_wPXJvzt["members"]={};
        for(int wPXJvzt=0; wPXJvzt < name.physicalDeviceCount; wPXJvzt++){
            json temp;
            temp=[&]() {
    json return_gMKGulx=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[wPXJvzt]);}();
            return_wPXJvzt["members"].push_back(temp);
        }
        return return_wPXJvzt;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_JBewIla;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_JBewIla=NULL;
        return;
        }
    temp_JBewIla=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int oMIrViy=0; oMIrViy < result.physicalDeviceCount; oMIrViy++){
            [&]() {
temp_JBewIla[oMIrViy]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][oMIrViy]);}();;
        }
        }();result.pPhysicalDevices=temp_JBewIla;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_MSZDiLy=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_wPXJvzt=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_wPXJvzt["null"]=true;
            return return_wPXJvzt;
        }
        
        return_wPXJvzt["members"]={};
        for(int wPXJvzt=0; wPXJvzt < name.physicalDeviceCount; wPXJvzt++){
            json temp;
            temp=[&]() {
    json return_gMKGulx=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[wPXJvzt]);}();
            return_wPXJvzt["members"].push_back(temp);
        }
        return return_wPXJvzt;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_JBewIla;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_JBewIla=NULL;
        return;
        }
    temp_JBewIla=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int oMIrViy=0; oMIrViy < result.physicalDeviceCount; oMIrViy++){
            [&]() {
temp_JBewIla[oMIrViy]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][oMIrViy]);}();;
        }
        }();result.pPhysicalDevices=temp_JBewIla;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["modes"]=[&]() {
    json return_tsVBZcF=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_UZYnsAM=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_kWajdZv=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_opvSGfN=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_FYOCnvN=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_dnfiDir=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_DemAWmA=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_UZYnsAM=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_kWajdZv=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_opvSGfN=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_FYOCnvN=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_dnfiDir=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_DemAWmA=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DJZRWji=json({});
    
        if (name.pNext==NULL){
            return_DJZRWji["null"]=true;
            return return_DJZRWji;
        }
        return_DJZRWji=[&]() {
    json return_pyqMmwX=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pyqMmwX["null"]=true;
            return return_pyqMmwX;
        }
        
        return_pyqMmwX["members"]={};
        for(int pyqMmwX=0; pyqMmwX < strlen(((char*)(name.pNext)))+1; pyqMmwX++){
            json temp;
            temp=[&]() {
    json return_ZTdMgxy=json({});
    return serialize_char(((char*)(name.pNext))[pyqMmwX]);}();
            return_pyqMmwX["members"].push_back(temp);
        }
        return return_pyqMmwX;
        }();return return_DJZRWji;}();
result["members"]["flags"]=[&]() {
    json return_vppJyMq=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_mtttQsA=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_yyoFFWW=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_yyoFFWW["null"]=true;
            return return_yyoFFWW;
        }
        
        return_yyoFFWW["members"]={};
        for(int yyoFFWW=0; yyoFFWW < name.descriptorUpdateEntryCount; yyoFFWW++){
            json temp;
            temp=[&]() {
    json return_TmVfYaS=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[yyoFFWW]);}();
            return_yyoFFWW["members"].push_back(temp);
        }
        return return_yyoFFWW;
        }();
result["members"]["templateType"]=[&]() {
    json return_bJsbBfB=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_KxaaHuc=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_RqUhdOV=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_QztnvsX=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_xdkGFWX=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HSNaCQD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HSNaCQD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DFFtUwc=0; DFFtUwc < name["members"]["pNext"]["members"].size(); DFFtUwc++){
            [&]() {
temp[DFFtUwc]=deserialize_char(name["members"]["pNext"]["members"][DFFtUwc]);}();;
        }
        }();temp_HSNaCQD=(void*)temp;
}();result.pNext=temp_HSNaCQD;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_VUHSqEX;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_VUHSqEX=NULL;
        return;
        }
    temp_VUHSqEX=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int MtywRPY=0; MtywRPY < result.descriptorUpdateEntryCount; MtywRPY++){
            [&]() {
temp_VUHSqEX[MtywRPY]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][MtywRPY]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_VUHSqEX;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DJZRWji=json({});
    
        if (name.pNext==NULL){
            return_DJZRWji["null"]=true;
            return return_DJZRWji;
        }
        return_DJZRWji=[&]() {
    json return_pyqMmwX=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pyqMmwX["null"]=true;
            return return_pyqMmwX;
        }
        
        return_pyqMmwX["members"]={};
        for(int pyqMmwX=0; pyqMmwX < strlen(((char*)(name.pNext)))+1; pyqMmwX++){
            json temp;
            temp=[&]() {
    json return_ZTdMgxy=json({});
    return serialize_char(((char*)(name.pNext))[pyqMmwX]);}();
            return_pyqMmwX["members"].push_back(temp);
        }
        return return_pyqMmwX;
        }();return return_DJZRWji;}();
result["members"]["flags"]=[&]() {
    json return_vppJyMq=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_mtttQsA=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_yyoFFWW=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_yyoFFWW["null"]=true;
            return return_yyoFFWW;
        }
        
        return_yyoFFWW["members"]={};
        for(int yyoFFWW=0; yyoFFWW < name.descriptorUpdateEntryCount; yyoFFWW++){
            json temp;
            temp=[&]() {
    json return_TmVfYaS=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[yyoFFWW]);}();
            return_yyoFFWW["members"].push_back(temp);
        }
        return return_yyoFFWW;
        }();
result["members"]["templateType"]=[&]() {
    json return_bJsbBfB=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_KxaaHuc=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_RqUhdOV=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_QztnvsX=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_xdkGFWX=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HSNaCQD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HSNaCQD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DFFtUwc=0; DFFtUwc < name["members"]["pNext"]["members"].size(); DFFtUwc++){
            [&]() {
temp[DFFtUwc]=deserialize_char(name["members"]["pNext"]["members"][DFFtUwc]);}();;
        }
        }();temp_HSNaCQD=(void*)temp;
}();result.pNext=temp_HSNaCQD;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_VUHSqEX;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_VUHSqEX=NULL;
        return;
        }
    temp_VUHSqEX=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int MtywRPY=0; MtywRPY < result.descriptorUpdateEntryCount; MtywRPY++){
            [&]() {
temp_VUHSqEX[MtywRPY]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][MtywRPY]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_VUHSqEX;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_RBqWZPy=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_wsAqrMr=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["presentId"]=[&]() {
    json return_XXOGDbT=json({});
    return_XXOGDbT=[&]() {
    json return_dcUeTHE=json({});
    return serialize_uint32_t(name.presentId);}();return return_XXOGDbT;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchainCount"]=[&]() {
    json return_priIDnT=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_xzpOZwt=json({});
    
        if (name.pPresentIds==NULL){
            return_xzpOZwt["null"]=true;
            return return_xzpOZwt;
        }
        
        return_xzpOZwt["members"]={};
        for(int xzpOZwt=0; xzpOZwt < name.swapchainCount; xzpOZwt++){
            json temp;
            temp=[&]() {
    json return_ELYeaMq=json({});
    return serialize_uint64_t(name.pPresentIds[xzpOZwt]);}();
            return_xzpOZwt["members"].push_back(temp);
        }
        return return_xzpOZwt;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_jcIeTuY;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_jcIeTuY=NULL;
        return;
        }
    temp_jcIeTuY=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int dCcjyeI=0; dCcjyeI < result.swapchainCount; dCcjyeI++){
            [&]() {
temp_jcIeTuY[dCcjyeI]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][dCcjyeI]);}();;
        }
        }();result.pPresentIds=temp_jcIeTuY;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["presentWait"]=[&]() {
    json return_JbPXnhy=json({});
    return_JbPXnhy=[&]() {
    json return_zzReAPD=json({});
    return serialize_uint32_t(name.presentWait);}();return return_JbPXnhy;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VbGEYaI=json({});
    
        if (name.pNext==NULL){
            return_VbGEYaI["null"]=true;
            return return_VbGEYaI;
        }
        return_VbGEYaI=[&]() {
    json return_GdGbgkP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_GdGbgkP["null"]=true;
            return return_GdGbgkP;
        }
        
        return_GdGbgkP["members"]={};
        for(int GdGbgkP=0; GdGbgkP < strlen(((char*)(name.pNext)))+1; GdGbgkP++){
            json temp;
            temp=[&]() {
    json return_ULTSnMU=json({});
    return serialize_char(((char*)(name.pNext))[GdGbgkP]);}();
            return_GdGbgkP["members"].push_back(temp);
        }
        return return_GdGbgkP;
        }();return return_VbGEYaI;}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_uEwalRS=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_sdmiAdz=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_eZdmQXN=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_LSUaPbI=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_KbDfhao=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_ukuKqdR=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_AtfabnG=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_xnAEmMR=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_elzpggu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_elzpggu=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int MSTGFxk=0; MSTGFxk < name["members"]["pNext"]["members"].size(); MSTGFxk++){
            [&]() {
temp[MSTGFxk]=deserialize_char(name["members"]["pNext"]["members"][MSTGFxk]);}();;
        }
        }();temp_elzpggu=(void*)temp;
}();result.pNext=temp_elzpggu;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UpYPPUm=json({});
    
        if (name.pNext==NULL){
            return_UpYPPUm["null"]=true;
            return return_UpYPPUm;
        }
        return_UpYPPUm=[&]() {
    json return_dnFegcI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dnFegcI["null"]=true;
            return return_dnFegcI;
        }
        
        return_dnFegcI["members"]={};
        for(int dnFegcI=0; dnFegcI < strlen(((char*)(name.pNext)))+1; dnFegcI++){
            json temp;
            temp=[&]() {
    json return_tJPAjpe=json({});
    return serialize_char(((char*)(name.pNext))[dnFegcI]);}();
            return_dnFegcI["members"].push_back(temp);
        }
        return return_dnFegcI;
        }();return return_UpYPPUm;}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_Bjkcftu=json({});
    return_Bjkcftu=[&]() {
    json return_wwQpMJB=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_Bjkcftu;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfHoroN=0; XfHoroN < name["members"]["pNext"]["members"].size(); XfHoroN++){
            [&]() {
temp[XfHoroN]=deserialize_char(name["members"]["pNext"]["members"][XfHoroN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJVuNCu=json({});
    
        if (name.pNext==NULL){
            return_bJVuNCu["null"]=true;
            return return_bJVuNCu;
        }
        return_bJVuNCu=[&]() {
    json return_gSvJhWw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gSvJhWw["null"]=true;
            return return_gSvJhWw;
        }
        
        return_gSvJhWw["members"]={};
        for(int gSvJhWw=0; gSvJhWw < strlen(((char*)(name.pNext)))+1; gSvJhWw++){
            json temp;
            temp=[&]() {
    json return_LmeHFYb=json({});
    return serialize_char(((char*)(name.pNext))[gSvJhWw]);}();
            return_gSvJhWw["members"].push_back(temp);
        }
        return return_gSvJhWw;
        }();return return_bJVuNCu;}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_uTrpNyX=json({});
    return_uTrpNyX=[&]() {
    json return_TBtcIBO=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_uTrpNyX;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lEvEGvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lEvEGvb=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int HrQiuVE=0; HrQiuVE < name["members"]["pNext"]["members"].size(); HrQiuVE++){
            [&]() {
temp[HrQiuVE]=deserialize_char(name["members"]["pNext"]["members"][HrQiuVE]);}();;
        }
        }();temp_lEvEGvb=(void*)temp;
}();result.pNext=temp_lEvEGvb;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_mwhYqpy=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_amHpdHL=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_qUfUFrg=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_FrXpQYG=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_YfjVKhR=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_rfTJufK=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["swapchainCount"]=[&]() {
    json return_priIDnT=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_kEgrWAa=json({});
    
        if (name.pTimes==NULL){
            return_kEgrWAa["null"]=true;
            return return_kEgrWAa;
        }
        
        return_kEgrWAa["members"]={};
        for(int kEgrWAa=0; kEgrWAa < name.swapchainCount; kEgrWAa++){
            json temp;
            temp=[&]() {
    json return_swfMsWg=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[kEgrWAa]);}();
            return_kEgrWAa["members"].push_back(temp);
        }
        return return_kEgrWAa;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_GmcSWxK;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_GmcSWxK=NULL;
        return;
        }
    temp_GmcSWxK=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int MnHoNbA=0; MnHoNbA < result.swapchainCount; MnHoNbA++){
            [&]() {
temp_GmcSWxK[MnHoNbA]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][MnHoNbA]);}();;
        }
        }();result.pTimes=temp_GmcSWxK;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_LZjcqcV=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_OIekQvD=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_XkkLkBf=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_XnyILEo=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_oGkvpDa=json({});
    return_oGkvpDa=[&]() {
    json return_FpLTgkJ=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_oGkvpDa;}();
result["members"]["viewportCount"]=[&]() {
    json return_nWHlswk=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_QNmRHsR=json({});
    
        if (name.pViewportWScalings==NULL){
            return_QNmRHsR["null"]=true;
            return return_QNmRHsR;
        }
        
        return_QNmRHsR["members"]={};
        for(int QNmRHsR=0; QNmRHsR < name.viewportCount; QNmRHsR++){
            json temp;
            temp=[&]() {
    json return_AhWzosz=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[QNmRHsR]);}();
            return_QNmRHsR["members"].push_back(temp);
        }
        return return_QNmRHsR;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_lPcQlyT;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_lPcQlyT=NULL;
        return;
        }
    temp_lPcQlyT=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int nHhudyi=0; nHhudyi < result.viewportCount; nHhudyi++){
            [&]() {
temp_lPcQlyT[nHhudyi]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][nHhudyi]);}();;
        }
        }();result.pViewportWScalings=temp_lPcQlyT;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_fDsdpca=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_JjhDjvB=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_ABlZHTP=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_HQEqzhd=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_RIVSluy=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_nWHlswk=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_ygqwDSQ=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_ygqwDSQ["null"]=true;
            return return_ygqwDSQ;
        }
        
        return_ygqwDSQ["members"]={};
        for(int ygqwDSQ=0; ygqwDSQ < name.viewportCount; ygqwDSQ++){
            json temp;
            temp=[&]() {
    json return_cfFXFUh=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[ygqwDSQ]);}();
            return_ygqwDSQ["members"].push_back(temp);
        }
        return return_ygqwDSQ;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_tkCMWra;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_tkCMWra=NULL;
        return;
        }
    temp_tkCMWra=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int SaukBvG=0; SaukBvG < result.viewportCount; SaukBvG++){
            [&]() {
temp_tkCMWra[SaukBvG]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][SaukBvG]);}();;
        }
        }();result.pViewportSwizzles=temp_tkCMWra;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_YXRYQBc=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fyiKgqT=json({});
    
        if (name.pNext==NULL){
            return_fyiKgqT["null"]=true;
            return return_fyiKgqT;
        }
        return_fyiKgqT=[&]() {
    json return_PVlVzUD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PVlVzUD["null"]=true;
            return return_PVlVzUD;
        }
        
        return_PVlVzUD["members"]={};
        for(int PVlVzUD=0; PVlVzUD < strlen(((char*)(name.pNext)))+1; PVlVzUD++){
            json temp;
            temp=[&]() {
    json return_iJMFbTE=json({});
    return serialize_char(((char*)(name.pNext))[PVlVzUD]);}();
            return_PVlVzUD["members"].push_back(temp);
        }
        return return_PVlVzUD;
        }();return return_fyiKgqT;}();
result["members"]["flags"]=[&]() {
    json return_TbONBUv=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_VQWjbFi=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_KETbLYV=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_VIoJCcE=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_VIoJCcE["null"]=true;
            return return_VIoJCcE;
        }
        
        return_VIoJCcE["members"]={};
        for(int VIoJCcE=0; VIoJCcE < name.discardRectangleCount; VIoJCcE++){
            json temp;
            temp=[&]() {
    json return_txHCYdr=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[VIoJCcE]);}();
            return_VIoJCcE["members"].push_back(temp);
        }
        return return_VIoJCcE;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kChWqaa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kChWqaa=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kavmYFv=0; kavmYFv < name["members"]["pNext"]["members"].size(); kavmYFv++){
            [&]() {
temp[kavmYFv]=deserialize_char(name["members"]["pNext"]["members"][kavmYFv]);}();;
        }
        }();temp_kChWqaa=(void*)temp;
}();result.pNext=temp_kChWqaa;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_NIwvtwf;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_NIwvtwf=NULL;
        return;
        }
    temp_NIwvtwf=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int yqLvNCv=0; yqLvNCv < result.discardRectangleCount; yqLvNCv++){
            [&]() {
temp_NIwvtwf[yqLvNCv]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][yqLvNCv]);}();;
        }
        }();result.pDiscardRectangles=temp_NIwvtwf;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_vQFYZSY=json({});
    return_vQFYZSY=[&]() {
    json return_Jtteeih=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_vQFYZSY;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_RjjKCIm=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_KrxunqP=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_SyYaoIO=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_RjjKCIm=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_KrxunqP=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_SyYaoIO=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iYJOFIR=json({});
    
        if (name.pNext==NULL){
            return_iYJOFIR["null"]=true;
            return return_iYJOFIR;
        }
        return_iYJOFIR=[&]() {
    json return_PIFIRAa=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PIFIRAa["null"]=true;
            return return_PIFIRAa;
        }
        
        return_PIFIRAa["members"]={};
        for(int PIFIRAa=0; PIFIRAa < strlen(((char*)(name.pNext)))+1; PIFIRAa++){
            json temp;
            temp=[&]() {
    json return_TKbZMtK=json({});
    return serialize_char(((char*)(name.pNext))[PIFIRAa]);}();
            return_PIFIRAa["members"].push_back(temp);
        }
        return return_PIFIRAa;
        }();return return_iYJOFIR;}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_wrlrgQy=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_phTXkTk=json({});
    
        if (name.pAspectReferences==NULL){
            return_phTXkTk["null"]=true;
            return return_phTXkTk;
        }
        
        return_phTXkTk["members"]={};
        for(int phTXkTk=0; phTXkTk < name.aspectReferenceCount; phTXkTk++){
            json temp;
            temp=[&]() {
    json return_ClIzoqe=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[phTXkTk]);}();
            return_phTXkTk["members"].push_back(temp);
        }
        return return_phTXkTk;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MNdfgEW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MNdfgEW=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int WUOhjCY=0; WUOhjCY < name["members"]["pNext"]["members"].size(); WUOhjCY++){
            [&]() {
temp[WUOhjCY]=deserialize_char(name["members"]["pNext"]["members"][WUOhjCY]);}();;
        }
        }();temp_MNdfgEW=(void*)temp;
}();result.pNext=temp_MNdfgEW;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_TSuLsig;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_TSuLsig=NULL;
        return;
        }
    temp_TSuLsig=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int kGKjYND=0; kGKjYND < result.aspectReferenceCount; kGKjYND++){
            [&]() {
temp_TSuLsig[kGKjYND]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][kGKjYND]);}();;
        }
        }();result.pAspectReferences=temp_TSuLsig;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iYJOFIR=json({});
    
        if (name.pNext==NULL){
            return_iYJOFIR["null"]=true;
            return return_iYJOFIR;
        }
        return_iYJOFIR=[&]() {
    json return_PIFIRAa=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PIFIRAa["null"]=true;
            return return_PIFIRAa;
        }
        
        return_PIFIRAa["members"]={};
        for(int PIFIRAa=0; PIFIRAa < strlen(((char*)(name.pNext)))+1; PIFIRAa++){
            json temp;
            temp=[&]() {
    json return_TKbZMtK=json({});
    return serialize_char(((char*)(name.pNext))[PIFIRAa]);}();
            return_PIFIRAa["members"].push_back(temp);
        }
        return return_PIFIRAa;
        }();return return_iYJOFIR;}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_wrlrgQy=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_phTXkTk=json({});
    
        if (name.pAspectReferences==NULL){
            return_phTXkTk["null"]=true;
            return return_phTXkTk;
        }
        
        return_phTXkTk["members"]={};
        for(int phTXkTk=0; phTXkTk < name.aspectReferenceCount; phTXkTk++){
            json temp;
            temp=[&]() {
    json return_ClIzoqe=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[phTXkTk]);}();
            return_phTXkTk["members"].push_back(temp);
        }
        return return_phTXkTk;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MNdfgEW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MNdfgEW=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int WUOhjCY=0; WUOhjCY < name["members"]["pNext"]["members"].size(); WUOhjCY++){
            [&]() {
temp[WUOhjCY]=deserialize_char(name["members"]["pNext"]["members"][WUOhjCY]);}();;
        }
        }();temp_MNdfgEW=(void*)temp;
}();result.pNext=temp_MNdfgEW;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_TSuLsig;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_TSuLsig=NULL;
        return;
        }
    temp_TSuLsig=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int kGKjYND=0; kGKjYND < result.aspectReferenceCount; kGKjYND++){
            [&]() {
temp_TSuLsig[kGKjYND]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][kGKjYND]);}();;
        }
        }();result.pAspectReferences=temp_TSuLsig;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["surface"]=[&]() {
    json return_OXIUnyh=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zyqIzWU=json({});
    
        if (name.pNext==NULL){
            return_zyqIzWU["null"]=true;
            return return_zyqIzWU;
        }
        return_zyqIzWU=[&]() {
    json return_tjJmLHi=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_tjJmLHi["null"]=true;
            return return_tjJmLHi;
        }
        
        return_tjJmLHi["members"]={};
        for(int tjJmLHi=0; tjJmLHi < strlen(((char*)(name.pNext)))+1; tjJmLHi++){
            json temp;
            temp=[&]() {
    json return_vzPYEMV=json({});
    return serialize_char(((char*)(name.pNext))[tjJmLHi]);}();
            return_tjJmLHi["members"].push_back(temp);
        }
        return return_tjJmLHi;
        }();return return_zyqIzWU;}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_trMGkKQ=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kMUZTCS=0; kMUZTCS < name["members"]["pNext"]["members"].size(); kMUZTCS++){
            [&]() {
temp[kMUZTCS]=deserialize_char(name["members"]["pNext"]["members"][kMUZTCS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["surfaceFormat"]=[&]() {
    json return_sczVuom=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["displayProperties"]=[&]() {
    json return_zpZTusS=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_HcxxXJr=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["displayModeProperties"]=[&]() {
    json return_CgwIzqx=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["mode"]=[&]() {
    json return_HSRZCwD=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_WuuMRNq=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["capabilities"]=[&]() {
    json return_pLNnkpD=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_PbUPJuD=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_AneDiOo=json({});
    return_AneDiOo=[&]() {
    json return_UDOqYrF=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_AneDiOo;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_xyNFISY=json({});
    return_xyNFISY=[&]() {
    json return_GrcXFLB=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_xyNFISY;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_HyJEfth=json({});
    return_HyJEfth=[&]() {
    json return_NFaodSD=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_HyJEfth;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_XWsnhTZ=json({});
    return_XWsnhTZ=[&]() {
    json return_aaEFhyl=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_XWsnhTZ;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_AneDiOo=json({});
    return_AneDiOo=[&]() {
    json return_UDOqYrF=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_AneDiOo;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_xyNFISY=json({});
    return_xyNFISY=[&]() {
    json return_GrcXFLB=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_xyNFISY;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_HyJEfth=json({});
    return_HyJEfth=[&]() {
    json return_NFaodSD=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_HyJEfth;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_XWsnhTZ=json({});
    return_XWsnhTZ=[&]() {
    json return_aaEFhyl=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_XWsnhTZ;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRarWjI=json({});
    
        if (name.pNext==NULL){
            return_VRarWjI["null"]=true;
            return return_VRarWjI;
        }
        return_VRarWjI=[&]() {
    json return_oMWOblP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oMWOblP["null"]=true;
            return return_oMWOblP;
        }
        
        return_oMWOblP["members"]={};
        for(int oMWOblP=0; oMWOblP < strlen(((char*)(name.pNext)))+1; oMWOblP++){
            json temp;
            temp=[&]() {
    json return_AAyNWAc=json({});
    return serialize_char(((char*)(name.pNext))[oMWOblP]);}();
            return_oMWOblP["members"].push_back(temp);
        }
        return return_oMWOblP;
        }();return return_VRarWjI;}();
result["members"]["subgroupSize"]=[&]() {
    json return_CflQWAd=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_EBJPdBQ=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_EtMZemS=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_onhsjpt=json({});
    return_onhsjpt=[&]() {
    json return_VGyTHAP=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_onhsjpt;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZIEPtjf=0; ZIEPtjf < name["members"]["pNext"]["members"].size(); ZIEPtjf++){
            [&]() {
temp[ZIEPtjf]=deserialize_char(name["members"]["pNext"]["members"][ZIEPtjf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_mIwgLWR=json({});
    return_mIwgLWR=[&]() {
    json return_yLHMgvx=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_mIwgLWR;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_mIwgLWR=json({});
    return_mIwgLWR=[&]() {
    json return_yLHMgvx=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_mIwgLWR;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["buffer"]=[&]() {
    json return_eAhSZPw=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["buffer"]=[&]() {
    json return_eAhSZPw=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OVlVfdv=json({});
    
        if (name.pNext==NULL){
            return_OVlVfdv["null"]=true;
            return return_OVlVfdv;
        }
        return_OVlVfdv=[&]() {
    json return_KeGTVqc=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_KeGTVqc["null"]=true;
            return return_KeGTVqc;
        }
        
        return_KeGTVqc["members"]={};
        for(int KeGTVqc=0; KeGTVqc < strlen(((char*)(name.pNext)))+1; KeGTVqc++){
            json temp;
            temp=[&]() {
    json return_iHYyTxs=json({});
    return serialize_char(((char*)(name.pNext))[KeGTVqc]);}();
            return_KeGTVqc["members"].push_back(temp);
        }
        return return_KeGTVqc;
        }();return return_OVlVfdv;}();
result["members"]["pCreateInfo"]=[&]() {
    json return_Atwehjn=json({});
    
        if (name.pCreateInfo==NULL){
            return_Atwehjn["null"]=true;
            return return_Atwehjn;
        }
        return_Atwehjn=[&]() {
    json return_aFxRehL=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_Atwehjn;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_parBwKB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_parBwKB=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UtWKUgz=0; UtWKUgz < name["members"]["pNext"]["members"].size(); UtWKUgz++){
            [&]() {
temp[UtWKUgz]=deserialize_char(name["members"]["pNext"]["members"][UtWKUgz]);}();;
        }
        }();temp_parBwKB=(void*)temp;
}();result.pNext=temp_parBwKB;}();
[&]() {
VkBufferCreateInfo* temp_xjbVLVb;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_xjbVLVb=NULL;
        return;
        }
    temp_xjbVLVb=(VkBufferCreateInfo*)malloc(sizeof(VkBufferCreateInfo));
[&]() {
*(temp_xjbVLVb)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_xjbVLVb;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OVlVfdv=json({});
    
        if (name.pNext==NULL){
            return_OVlVfdv["null"]=true;
            return return_OVlVfdv;
        }
        return_OVlVfdv=[&]() {
    json return_KeGTVqc=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_KeGTVqc["null"]=true;
            return return_KeGTVqc;
        }
        
        return_KeGTVqc["members"]={};
        for(int KeGTVqc=0; KeGTVqc < strlen(((char*)(name.pNext)))+1; KeGTVqc++){
            json temp;
            temp=[&]() {
    json return_iHYyTxs=json({});
    return serialize_char(((char*)(name.pNext))[KeGTVqc]);}();
            return_KeGTVqc["members"].push_back(temp);
        }
        return return_KeGTVqc;
        }();return return_OVlVfdv;}();
result["members"]["pCreateInfo"]=[&]() {
    json return_Atwehjn=json({});
    
        if (name.pCreateInfo==NULL){
            return_Atwehjn["null"]=true;
            return return_Atwehjn;
        }
        return_Atwehjn=[&]() {
    json return_aFxRehL=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_Atwehjn;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_parBwKB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_parBwKB=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UtWKUgz=0; UtWKUgz < name["members"]["pNext"]["members"].size(); UtWKUgz++){
            [&]() {
temp[UtWKUgz]=deserialize_char(name["members"]["pNext"]["members"][UtWKUgz]);}();;
        }
        }();temp_parBwKB=(void*)temp;
}();result.pNext=temp_parBwKB;}();
[&]() {
VkBufferCreateInfo* temp_xjbVLVb;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_xjbVLVb=NULL;
        return;
        }
    temp_xjbVLVb=(VkBufferCreateInfo*)malloc(sizeof(VkBufferCreateInfo));
[&]() {
*(temp_xjbVLVb)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_xjbVLVb;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["image"]=[&]() {
    json return_wcpGgHh=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["image"]=[&]() {
    json return_wcpGgHh=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["image"]=[&]() {
    json return_wcpGgHh=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["image"]=[&]() {
    json return_wcpGgHh=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["pCreateInfo"]=[&]() {
    json return_mLUvRTG=json({});
    
        if (name.pCreateInfo==NULL){
            return_mLUvRTG["null"]=true;
            return return_mLUvRTG;
        }
        return_mLUvRTG=[&]() {
    json return_PpsDUnW=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_mLUvRTG;}();
result["members"]["planeAspect"]=[&]() {
    json return_gmrfVVE=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
VkImageCreateInfo* temp_uFNXgYH;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_uFNXgYH=NULL;
        return;
        }
    temp_uFNXgYH=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_uFNXgYH)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_uFNXgYH;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["pCreateInfo"]=[&]() {
    json return_mLUvRTG=json({});
    
        if (name.pCreateInfo==NULL){
            return_mLUvRTG["null"]=true;
            return return_mLUvRTG;
        }
        return_mLUvRTG=[&]() {
    json return_PpsDUnW=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_mLUvRTG;}();
result["members"]["planeAspect"]=[&]() {
    json return_gmrfVVE=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
VkImageCreateInfo* temp_uFNXgYH;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_uFNXgYH=NULL;
        return;
        }
    temp_uFNXgYH=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_uFNXgYH)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_uFNXgYH;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["memoryRequirements"]=[&]() {
    json return_NnmzAtb=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["memoryRequirements"]=[&]() {
    json return_NnmzAtb=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cECANkZ=json({});
    
        if (name.pNext==NULL){
            return_cECANkZ["null"]=true;
            return return_cECANkZ;
        }
        return_cECANkZ=[&]() {
    json return_VqJMjTu=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_VqJMjTu["null"]=true;
            return return_VqJMjTu;
        }
        
        return_VqJMjTu["members"]={};
        for(int VqJMjTu=0; VqJMjTu < strlen(((char*)(name.pNext)))+1; VqJMjTu++){
            json temp;
            temp=[&]() {
    json return_jXBFzfw=json({});
    return serialize_char(((char*)(name.pNext))[VqJMjTu]);}();
            return_VqJMjTu["members"].push_back(temp);
        }
        return return_VqJMjTu;
        }();return return_cECANkZ;}();
result["members"]["memoryRequirements"]=[&]() {
    json return_FZIUVQX=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int scPCNqA=0; scPCNqA < name["members"]["pNext"]["members"].size(); scPCNqA++){
            [&]() {
temp[scPCNqA]=deserialize_char(name["members"]["pNext"]["members"][scPCNqA]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cECANkZ=json({});
    
        if (name.pNext==NULL){
            return_cECANkZ["null"]=true;
            return return_cECANkZ;
        }
        return_cECANkZ=[&]() {
    json return_VqJMjTu=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_VqJMjTu["null"]=true;
            return return_VqJMjTu;
        }
        
        return_VqJMjTu["members"]={};
        for(int VqJMjTu=0; VqJMjTu < strlen(((char*)(name.pNext)))+1; VqJMjTu++){
            json temp;
            temp=[&]() {
    json return_jXBFzfw=json({});
    return serialize_char(((char*)(name.pNext))[VqJMjTu]);}();
            return_VqJMjTu["members"].push_back(temp);
        }
        return return_VqJMjTu;
        }();return return_cECANkZ;}();
result["members"]["memoryRequirements"]=[&]() {
    json return_FZIUVQX=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int scPCNqA=0; scPCNqA < name["members"]["pNext"]["members"].size(); scPCNqA++){
            [&]() {
temp[scPCNqA]=deserialize_char(name["members"]["pNext"]["members"][scPCNqA]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_tgZOsTI=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_tgZOsTI=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_sikkHnX=json({});
    return_sikkHnX=[&]() {
    json return_NfOCyTh=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_sikkHnX;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_qSQpFiJ=json({});
    return_qSQpFiJ=[&]() {
    json return_TZNjnvt=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_qSQpFiJ;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_sikkHnX=json({});
    return_sikkHnX=[&]() {
    json return_NfOCyTh=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_sikkHnX;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_qSQpFiJ=json({});
    return_qSQpFiJ=[&]() {
    json return_TZNjnvt=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_qSQpFiJ;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["image"]=[&]() {
    json return_acKrzUP=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_AtHNHEm=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["image"]=[&]() {
    json return_acKrzUP=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_AtHNHEm=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["usage"]=[&]() {
    json return_FCdANos=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["sliceOffset"]=[&]() {
    json return_useKeBo=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_pNZiCjG=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["usage"]=[&]() {
    json return_FCdANos=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["domainOrigin"]=[&]() {
    json return_OUZzzZT=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["domainOrigin"]=[&]() {
    json return_OUZzzZT=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["conversion"]=[&]() {
    json return_bgIjWRb=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["conversion"]=[&]() {
    json return_bgIjWRb=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_NzlGvBt=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_SPnRCGe=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_IcGMnXC=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_bSPNjAB=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_jLFdCZP=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_BVuYNKe=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_oVIVmwm=json({});
    return_oVIVmwm=[&]() {
    json return_dnLNKwE=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_oVIVmwm;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["format"]=[&]() {
    json return_FhMsOQc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_NzlGvBt=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_SPnRCGe=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_IcGMnXC=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_bSPNjAB=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_jLFdCZP=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_BVuYNKe=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_oVIVmwm=json({});
    return_oVIVmwm=[&]() {
    json return_dnLNKwE=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_oVIVmwm;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["planeAspect"]=[&]() {
    json return_skTLles=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["planeAspect"]=[&]() {
    json return_skTLles=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["planeAspect"]=[&]() {
    json return_skTLles=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["planeAspect"]=[&]() {
    json return_skTLles=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_HlfjODJ=json({});
    return_HlfjODJ=[&]() {
    json return_HIPRjkS=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_HlfjODJ;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_HlfjODJ=json({});
    return_HlfjODJ=[&]() {
    json return_HIPRjkS=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_HlfjODJ;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_DZlDiYM=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_DZlDiYM=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_lKChHBK=json({});
    return_lKChHBK=[&]() {
    json return_uDdOQWk=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_lKChHBK;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["buffer"]=[&]() {
    json return_egjuVmd=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_WLrqbBF=json({});
    return_WLrqbBF=[&]() {
    json return_fVAHfne=json({});
    return serialize_uint64_t(name.offset);}();return return_WLrqbBF;}();
result["members"]["flags"]=[&]() {
    json return_mPRglvq=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iYJOFIR=json({});
    
        if (name.pNext==NULL){
            return_iYJOFIR["null"]=true;
            return return_iYJOFIR;
        }
        return_iYJOFIR=[&]() {
    json return_PIFIRAa=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PIFIRAa["null"]=true;
            return return_PIFIRAa;
        }
        
        return_PIFIRAa["members"]={};
        for(int PIFIRAa=0; PIFIRAa < strlen(((char*)(name.pNext)))+1; PIFIRAa++){
            json temp;
            temp=[&]() {
    json return_TKbZMtK=json({});
    return serialize_char(((char*)(name.pNext))[PIFIRAa]);}();
            return_PIFIRAa["members"].push_back(temp);
        }
        return return_PIFIRAa;
        }();return return_iYJOFIR;}();
result["members"]["protectedSubmit"]=[&]() {
    json return_mwoskWM=json({});
    return_mwoskWM=[&]() {
    json return_fxewdKU=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_mwoskWM;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MNdfgEW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MNdfgEW=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int WUOhjCY=0; WUOhjCY < name["members"]["pNext"]["members"].size(); WUOhjCY++){
            [&]() {
temp[WUOhjCY]=deserialize_char(name["members"]["pNext"]["members"][WUOhjCY]);}();;
        }
        }();temp_MNdfgEW=(void*)temp;
}();result.pNext=temp_MNdfgEW;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["protectedMemory"]=[&]() {
    json return_aNDBYkN=json({});
    return_aNDBYkN=[&]() {
    json return_desWiXx=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_aNDBYkN;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["protectedNoFault"]=[&]() {
    json return_bzBSoKc=json({});
    return_bzBSoKc=[&]() {
    json return_jUKFsHX=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_bzBSoKc;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["flags"]=[&]() {
    json return_QrQiFlO=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_RteliJa=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_lnljRWf=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mILwBrE=json({});
    
        if (name.pNext==NULL){
            return_mILwBrE["null"]=true;
            return return_mILwBrE;
        }
        return_mILwBrE=[&]() {
    json return_LStNoUH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LStNoUH["null"]=true;
            return return_LStNoUH;
        }
        
        return_LStNoUH["members"]={};
        for(int LStNoUH=0; LStNoUH < strlen(((char*)(name.pNext)))+1; LStNoUH++){
            json temp;
            temp=[&]() {
    json return_pXWymYt=json({});
    return serialize_char(((char*)(name.pNext))[LStNoUH]);}();
            return_LStNoUH["members"].push_back(temp);
        }
        return return_LStNoUH;
        }();return return_mILwBrE;}();
result["members"]["flags"]=[&]() {
    json return_hCyXzKu=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_WylvQyV=json({});
    return_WylvQyV=[&]() {
    json return_rliQgaX=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_WylvQyV;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_TCoxFcN=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtWPJhQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtWPJhQ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RPFsQsS=0; RPFsQsS < name["members"]["pNext"]["members"].size(); RPFsQsS++){
            [&]() {
temp[RPFsQsS]=deserialize_char(name["members"]["pNext"]["members"][RPFsQsS]);}();;
        }
        }();temp_BtWPJhQ=(void*)temp;
}();result.pNext=temp_BtWPJhQ;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_yEKOuAt=json({});
    return_yEKOuAt=[&]() {
    json return_cbYUTsq=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_yEKOuAt;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_rsWhZQH=json({});
    return_rsWhZQH=[&]() {
    json return_vGmKAYF=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_rsWhZQH;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_yEKOuAt=json({});
    return_yEKOuAt=[&]() {
    json return_cbYUTsq=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_yEKOuAt;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_rsWhZQH=json({});
    return_rsWhZQH=[&]() {
    json return_vGmKAYF=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_rsWhZQH;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ERpxUOL=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_TiBdldY=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_nROUuuL=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_LrHYQWx=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_kbQsqne=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_OKSSxIb=json({});
    
        if (name.pSampleLocations==NULL){
            return_OKSSxIb["null"]=true;
            return return_OKSSxIb;
        }
        
        return_OKSSxIb["members"]={};
        for(int OKSSxIb=0; OKSSxIb < name.sampleLocationsCount; OKSSxIb++){
            json temp;
            temp=[&]() {
    json return_ujnZhXy=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[OKSSxIb]);}();
            return_OKSSxIb["members"].push_back(temp);
        }
        return return_OKSSxIb;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_WQCkvqP;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_WQCkvqP=NULL;
        return;
        }
    temp_WQCkvqP=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int xpOEtct=0; xpOEtct < result.sampleLocationsCount; xpOEtct++){
            [&]() {
temp_WQCkvqP[xpOEtct]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][xpOEtct]);}();;
        }
        }();result.pSampleLocations=temp_WQCkvqP;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_uwgJIja=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_ybpIiCt=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_BvMYbKH=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_ybpIiCt=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_sScGOfr=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_NYNruOU=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_NYNruOU["null"]=true;
            return return_NYNruOU;
        }
        
        return_NYNruOU["members"]={};
        for(int NYNruOU=0; NYNruOU < name.attachmentInitialSampleLocationsCount; NYNruOU++){
            json temp;
            temp=[&]() {
    json return_mlUbUqc=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[NYNruOU]);}();
            return_NYNruOU["members"].push_back(temp);
        }
        return return_NYNruOU;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_dcHZjuA=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_ZFIBaAY=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_ZFIBaAY["null"]=true;
            return return_ZFIBaAY;
        }
        
        return_ZFIBaAY["members"]={};
        for(int ZFIBaAY=0; ZFIBaAY < name.postSubpassSampleLocationsCount; ZFIBaAY++){
            json temp;
            temp=[&]() {
    json return_UmEonaz=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[ZFIBaAY]);}();
            return_ZFIBaAY["members"].push_back(temp);
        }
        return return_ZFIBaAY;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_SOKQNud;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_SOKQNud=NULL;
        return;
        }
    temp_SOKQNud=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int XIvOxJh=0; XIvOxJh < result.attachmentInitialSampleLocationsCount; XIvOxJh++){
            [&]() {
temp_SOKQNud[XIvOxJh]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][XIvOxJh]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_SOKQNud;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_ksiHylF;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_ksiHylF=NULL;
        return;
        }
    temp_ksiHylF=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int aikvzHJ=0; aikvzHJ < result.postSubpassSampleLocationsCount; aikvzHJ++){
            [&]() {
temp_ksiHylF[aikvzHJ]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][aikvzHJ]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_ksiHylF;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_vxqzukx=json({});
    return_vxqzukx=[&]() {
    json return_WOnqwYw=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_vxqzukx;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_ybpIiCt=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_NKJedYW=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_BjscXrs=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_HMyJVDb=json({});
    
        return_HMyJVDb["members"]={};
        for(int HMyJVDb=0; HMyJVDb < 2; HMyJVDb++){
            json temp;
            temp=[&]() {
    json return_TJWsBAG=json({});
    return serialize_float(name.sampleLocationCoordinateRange[HMyJVDb]);}();
            return_HMyJVDb["members"].push_back(temp);
        }
        return return_HMyJVDb;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_vKFjocy=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_BhOVIxj=json({});
    return_BhOVIxj=[&]() {
    json return_UCpsMxh=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_BhOVIxj;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int slGXJIJ=0; slGXJIJ < 2; slGXJIJ++){
            [&]() {
result.sampleLocationCoordinateRange[slGXJIJ]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][slGXJIJ]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_hXGjOdo=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["reductionMode"]=[&]() {
    json return_GuFFvzx=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["reductionMode"]=[&]() {
    json return_GuFFvzx=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_JuBHKcI=json({});
    return_JuBHKcI=[&]() {
    json return_CNMenop=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_JuBHKcI;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ArKCqzl=json({});
    
        if (name.pNext==NULL){
            return_ArKCqzl["null"]=true;
            return return_ArKCqzl;
        }
        return_ArKCqzl=[&]() {
    json return_bwYhDhd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_bwYhDhd["null"]=true;
            return return_bwYhDhd;
        }
        
        return_bwYhDhd["members"]={};
        for(int bwYhDhd=0; bwYhDhd < strlen(((char*)(name.pNext)))+1; bwYhDhd++){
            json temp;
            temp=[&]() {
    json return_UywxEbK=json({});
    return serialize_char(((char*)(name.pNext))[bwYhDhd]);}();
            return_bwYhDhd["members"].push_back(temp);
        }
        return return_bwYhDhd;
        }();return return_ArKCqzl;}();
result["members"]["multiDraw"]=[&]() {
    json return_AnPvWyY=json({});
    return_AnPvWyY=[&]() {
    json return_tbsjSWd=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_AnPvWyY;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kPSctNU=0; kPSctNU < name["members"]["pNext"]["members"].size(); kPSctNU++){
            [&]() {
temp[kPSctNU]=deserialize_char(name["members"]["pNext"]["members"][kPSctNU]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_OcFPGYd=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_FSwLxgx=json({});
    return_FSwLxgx=[&]() {
    json return_DyFkeFG=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_FSwLxgx;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_COyLGUW=json({});
    return_COyLGUW=[&]() {
    json return_OZjVFmv=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_COyLGUW;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_FLgahpq=json({});
    return_FLgahpq=[&]() {
    json return_MRXgwGS=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_FLgahpq;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_RslpmKs=json({});
    return_RslpmKs=[&]() {
    json return_ApBuSxP=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_RslpmKs;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_ubAhjzs=json({});
    return_ubAhjzs=[&]() {
    json return_uoEonJT=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_ubAhjzs;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_pdIRaJK=json({});
    return_pdIRaJK=[&]() {
    json return_AvXbbje=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_pdIRaJK;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_FEWURaC=json({});
    return_FEWURaC=[&]() {
    json return_HszrTvG=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_FEWURaC;}();
result["members"]["blendOverlap"]=[&]() {
    json return_nboJHUx=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_BkNobcN=json({});
    return_BkNobcN=[&]() {
    json return_xatuySH=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_BkNobcN;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_KfbktTZ=json({});
    return_KfbktTZ=[&]() {
    json return_QOAYvvN=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_KfbktTZ;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_BkNobcN=json({});
    return_BkNobcN=[&]() {
    json return_xatuySH=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_BkNobcN;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_KfbktTZ=json({});
    return_KfbktTZ=[&]() {
    json return_QOAYvvN=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_KfbktTZ;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_UqWJYST=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_OFGHifF=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_fNirEzh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_MIlrfjb=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_WJnYUXC=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_UqWJYST=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_OFGHifF=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_fNirEzh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_MIlrfjb=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_WJnYUXC=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["dataSize"]=[&]() {
    json return_RkcARYw=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_OakwcHC=json({});
    
        if (name.pData==NULL){
            return_OakwcHC["null"]=true;
            return return_OakwcHC;
        }
        return_OakwcHC=[&]() {
    json return_BMQoUaL=json({});
    
        if (((char*)(name.pData))==NULL){
            return_BMQoUaL["null"]=true;
            return return_BMQoUaL;
        }
        
        return_BMQoUaL["members"]={};
        for(int BMQoUaL=0; BMQoUaL < name.dataSize; BMQoUaL++){
            json temp;
            temp=[&]() {
    json return_EzfYCtQ=json({});
    return serialize_char(((char*)(name.pData))[BMQoUaL]);}();
            return_BMQoUaL["members"].push_back(temp);
        }
        return return_BMQoUaL;
        }();return return_OakwcHC;}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_ECWqzVi;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_ECWqzVi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.dataSize*sizeof(char));
        for (int rplekvP=0; rplekvP < result.dataSize; rplekvP++){
            [&]() {
temp[rplekvP]=deserialize_char(name["members"]["pData"]["members"][rplekvP]);}();;
        }
        }();temp_ECWqzVi=(void*)temp;
}();result.pData=temp_ECWqzVi;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["dataSize"]=[&]() {
    json return_RkcARYw=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_OakwcHC=json({});
    
        if (name.pData==NULL){
            return_OakwcHC["null"]=true;
            return return_OakwcHC;
        }
        return_OakwcHC=[&]() {
    json return_BMQoUaL=json({});
    
        if (((char*)(name.pData))==NULL){
            return_BMQoUaL["null"]=true;
            return return_BMQoUaL;
        }
        
        return_BMQoUaL["members"]={};
        for(int BMQoUaL=0; BMQoUaL < name.dataSize; BMQoUaL++){
            json temp;
            temp=[&]() {
    json return_EzfYCtQ=json({});
    return serialize_char(((char*)(name.pData))[BMQoUaL]);}();
            return_BMQoUaL["members"].push_back(temp);
        }
        return return_BMQoUaL;
        }();return return_OakwcHC;}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_ECWqzVi;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_ECWqzVi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.dataSize*sizeof(char));
        for (int rplekvP=0; rplekvP < result.dataSize; rplekvP++){
            [&]() {
temp[rplekvP]=deserialize_char(name["members"]["pData"]["members"][rplekvP]);}();;
        }
        }();temp_ECWqzVi=(void*)temp;
}();result.pData=temp_ECWqzVi;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_kwognzG=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_kwognzG=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mILwBrE=json({});
    
        if (name.pNext==NULL){
            return_mILwBrE["null"]=true;
            return return_mILwBrE;
        }
        return_mILwBrE=[&]() {
    json return_LStNoUH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LStNoUH["null"]=true;
            return return_LStNoUH;
        }
        
        return_LStNoUH["members"]={};
        for(int LStNoUH=0; LStNoUH < strlen(((char*)(name.pNext)))+1; LStNoUH++){
            json temp;
            temp=[&]() {
    json return_pXWymYt=json({});
    return serialize_char(((char*)(name.pNext))[LStNoUH]);}();
            return_LStNoUH["members"].push_back(temp);
        }
        return return_LStNoUH;
        }();return return_mILwBrE;}();
result["members"]["flags"]=[&]() {
    json return_VjZXtcD=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_kBquGAI=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_vtjOwZn=json({});
    return_vtjOwZn=[&]() {
    json return_rQzTeGx=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_vtjOwZn;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_ejjhxOD=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_JYzweMF=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_JYzweMF["null"]=true;
            return return_JYzweMF;
        }
        
        return_JYzweMF["members"]={};
        for(int JYzweMF=0; JYzweMF < name.coverageModulationTableCount; JYzweMF++){
            json temp;
            temp=[&]() {
    json return_xVAVNIY=json({});
    return serialize_float(name.pCoverageModulationTable[JYzweMF]);}();
            return_JYzweMF["members"].push_back(temp);
        }
        return return_JYzweMF;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtWPJhQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtWPJhQ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RPFsQsS=0; RPFsQsS < name["members"]["pNext"]["members"].size(); RPFsQsS++){
            [&]() {
temp[RPFsQsS]=deserialize_char(name["members"]["pNext"]["members"][RPFsQsS]);}();;
        }
        }();temp_BtWPJhQ=(void*)temp;
}();result.pNext=temp_BtWPJhQ;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_cRNtRmK;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_cRNtRmK=NULL;
        return;
        }
    temp_cRNtRmK=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int JTjBUfn=0; JTjBUfn < result.coverageModulationTableCount; JTjBUfn++){
            [&]() {
temp_cRNtRmK[JTjBUfn]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][JTjBUfn]);}();;
        }
        }();result.pCoverageModulationTable=temp_cRNtRmK;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["viewFormatCount"]=[&]() {
    json return_FnXtJHc=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_CYNXjDu=json({});
    
        if (name.pViewFormats==NULL){
            return_CYNXjDu["null"]=true;
            return return_CYNXjDu;
        }
        
        return_CYNXjDu["members"]={};
        for(int CYNXjDu=0; CYNXjDu < name.viewFormatCount; CYNXjDu++){
            json temp;
            temp=[&]() {
    json return_PiLROIq=json({});
    return serialize_VkFormat(name.pViewFormats[CYNXjDu]);}();
            return_CYNXjDu["members"].push_back(temp);
        }
        return return_CYNXjDu;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_ldIbMqU;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_ldIbMqU=NULL;
        return;
        }
    temp_ldIbMqU=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int INfvRmg=0; INfvRmg < result.viewFormatCount; INfvRmg++){
            [&]() {
temp_ldIbMqU[INfvRmg]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][INfvRmg]);}();;
        }
        }();result.pViewFormats=temp_ldIbMqU;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["viewFormatCount"]=[&]() {
    json return_FnXtJHc=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_CYNXjDu=json({});
    
        if (name.pViewFormats==NULL){
            return_CYNXjDu["null"]=true;
            return return_CYNXjDu;
        }
        
        return_CYNXjDu["members"]={};
        for(int CYNXjDu=0; CYNXjDu < name.viewFormatCount; CYNXjDu++){
            json temp;
            temp=[&]() {
    json return_PiLROIq=json({});
    return serialize_VkFormat(name.pViewFormats[CYNXjDu]);}();
            return_CYNXjDu["members"].push_back(temp);
        }
        return return_CYNXjDu;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_ldIbMqU;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_ldIbMqU=NULL;
        return;
        }
    temp_ldIbMqU=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int INfvRmg=0; INfvRmg < result.viewFormatCount; INfvRmg++){
            [&]() {
temp_ldIbMqU[INfvRmg]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][INfvRmg]);}();;
        }
        }();result.pViewFormats=temp_ldIbMqU;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_rmfWcgm=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_ioTTiUp=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_XTGHOul=json({});
    
        if (name.pInitialData==NULL){
            return_XTGHOul["null"]=true;
            return return_XTGHOul;
        }
        return_XTGHOul=[&]() {
    json return_Nmnttaq=json({});
    
        if (((char*)(name.pInitialData))==NULL){
            return_Nmnttaq["null"]=true;
            return return_Nmnttaq;
        }
        
        return_Nmnttaq["members"]={};
        for(int Nmnttaq=0; Nmnttaq < name.initialDataSize; Nmnttaq++){
            json temp;
            temp=[&]() {
    json return_EbaiQaS=json({});
    return serialize_char(((char*)(name.pInitialData))[Nmnttaq]);}();
            return_Nmnttaq["members"].push_back(temp);
        }
        return return_Nmnttaq;
        }();return return_XTGHOul;}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_XGRrqQJ;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_XGRrqQJ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.initialDataSize*sizeof(char));
        for (int xzXbndC=0; xzXbndC < result.initialDataSize; xzXbndC++){
            [&]() {
temp[xzXbndC]=deserialize_char(name["members"]["pInitialData"]["members"][xzXbndC]);}();;
        }
        }();temp_XGRrqQJ=(void*)temp;
}();result.pInitialData=temp_XGRrqQJ;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["validationCache"]=[&]() {
    json return_LdckDOl=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_kQZloWO=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_aBsOBcp=json({});
    return_aBsOBcp=[&]() {
    json return_aUTdTlJ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_aBsOBcp;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_kQZloWO=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_aBsOBcp=json({});
    return_aBsOBcp=[&]() {
    json return_aUTdTlJ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_aBsOBcp;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maintenance4"]=[&]() {
    json return_vORmstP=json({});
    return_vORmstP=[&]() {
    json return_nJXBsfF=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_vORmstP;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maintenance4"]=[&]() {
    json return_vORmstP=json({});
    return_vORmstP=[&]() {
    json return_nJXBsfF=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_vORmstP;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_fmFPIfd=json({});
    return_fmFPIfd=[&]() {
    json return_MgBkzLd=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_fmFPIfd;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_fmFPIfd=json({});
    return_fmFPIfd=[&]() {
    json return_MgBkzLd=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_fmFPIfd;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maintenance5"]=[&]() {
    json return_QDGGZwP=json({});
    return_QDGGZwP=[&]() {
    json return_AGPvOJB=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_QDGGZwP;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_DUKpqof=json({});
    return_DUKpqof=[&]() {
    json return_ZkqjMQE=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_DUKpqof;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_AICfyZZ=json({});
    return_AICfyZZ=[&]() {
    json return_SANoPvI=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_AICfyZZ;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_fbIctOd=json({});
    return_fbIctOd=[&]() {
    json return_fMcaNDm=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_fbIctOd;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_zMfdXQL=json({});
    return_zMfdXQL=[&]() {
    json return_dCnXXkk=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_zMfdXQL;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_ZgtqtmS=json({});
    return_ZgtqtmS=[&]() {
    json return_HNxvbEZ=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_ZgtqtmS;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_vBDbdwF=json({});
    return_vBDbdwF=[&]() {
    json return_meILKqD=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_vBDbdwF;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_bLPODBy=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_bLPODBy["null"]=true;
            return return_bLPODBy;
        }
        
        return_bLPODBy["members"]={};
        for(int bLPODBy=0; bLPODBy < name.colorAttachmentCount; bLPODBy++){
            json temp;
            temp=[&]() {
    json return_yWFNaBd=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[bLPODBy]);}();
            return_bLPODBy["members"].push_back(temp);
        }
        return return_bLPODBy;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_lYThTPk=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_ADJfOOv=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_lSBieST;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_lSBieST=NULL;
        return;
        }
    temp_lSBieST=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int iZPvyUD=0; iZPvyUD < result.colorAttachmentCount; iZPvyUD++){
            [&]() {
temp_lSBieST[iZPvyUD]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][iZPvyUD]);}();;
        }
        }();result.pColorAttachmentFormats=temp_lSBieST;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["supported"]=[&]() {
    json return_MFEsSrb=json({});
    return_MFEsSrb=[&]() {
    json return_DmWBZtF=json({});
    return serialize_uint32_t(name.supported);}();return return_MFEsSrb;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["supported"]=[&]() {
    json return_MFEsSrb=json({});
    return_MFEsSrb=[&]() {
    json return_DmWBZtF=json({});
    return serialize_uint32_t(name.supported);}();return return_MFEsSrb;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_oOrpAxX=json({});
    return_oOrpAxX=[&]() {
    json return_WwxXppZ=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_oOrpAxX;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_oOrpAxX=json({});
    return_oOrpAxX=[&]() {
    json return_WwxXppZ=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_oOrpAxX;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_tkIWHmT=json({});
    return_tkIWHmT=[&]() {
    json return_QMhTNsl=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_tkIWHmT;}();
result["members"]["shaderInt8"]=[&]() {
    json return_gghtQyX=json({});
    return_gghtQyX=[&]() {
    json return_cmjkRZm=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_gghtQyX;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_tkIWHmT=json({});
    return_tkIWHmT=[&]() {
    json return_QMhTNsl=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_tkIWHmT;}();
result["members"]["shaderInt8"]=[&]() {
    json return_gghtQyX=json({});
    return_gghtQyX=[&]() {
    json return_cmjkRZm=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_gghtQyX;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_tkIWHmT=json({});
    return_tkIWHmT=[&]() {
    json return_QMhTNsl=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_tkIWHmT;}();
result["members"]["shaderInt8"]=[&]() {
    json return_gghtQyX=json({});
    return_gghtQyX=[&]() {
    json return_cmjkRZm=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_gghtQyX;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_wpOMUoc=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_PMXFDyL=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_PegpTGt=json({});
    return_PegpTGt=[&]() {
    json return_wusSurx=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_PegpTGt;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_yjkCUns=json({});
    return_yjkCUns=[&]() {
    json return_DUYRUiQ=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_yjkCUns;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_puqbknO=json({});
    return_puqbknO=[&]() {
    json return_fkeOGfS=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_puqbknO;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_HjJmQQE=json({});
    return_HjJmQQE=[&]() {
    json return_krbnOhl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_HjJmQQE;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_AaWuKSO=json({});
    return_AaWuKSO=[&]() {
    json return_WoXRkRK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_AaWuKSO;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gvMItYz=json({});
    return_gvMItYz=[&]() {
    json return_oXSOeKz=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gvMItYz;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_fbDcofc=json({});
    return_fbDcofc=[&]() {
    json return_GBfMdBz=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_fbDcofc;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_TJyNZuP=json({});
    return_TJyNZuP=[&]() {
    json return_RNRoNnX=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_TJyNZuP;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_lclYAfD=json({});
    return_lclYAfD=[&]() {
    json return_FwbBipV=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_lclYAfD;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_qBdZpBy=json({});
    return_qBdZpBy=[&]() {
    json return_lLhKTgJ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_qBdZpBy;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_jghFAke=json({});
    return_jghFAke=[&]() {
    json return_miIchzk=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_jghFAke;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_efsutQO=json({});
    return_efsutQO=[&]() {
    json return_breVarB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_efsutQO;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_uWAaEDm=json({});
    return_uWAaEDm=[&]() {
    json return_hzwUssO=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_uWAaEDm;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_IjNaHOg=json({});
    return_IjNaHOg=[&]() {
    json return_OWBHyrh=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_IjNaHOg;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_lLjFbfK=json({});
    return_lLjFbfK=[&]() {
    json return_ZZwlnop=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_lLjFbfK;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_wpOMUoc=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_PMXFDyL=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_PegpTGt=json({});
    return_PegpTGt=[&]() {
    json return_wusSurx=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_PegpTGt;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_yjkCUns=json({});
    return_yjkCUns=[&]() {
    json return_DUYRUiQ=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_yjkCUns;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_puqbknO=json({});
    return_puqbknO=[&]() {
    json return_fkeOGfS=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_puqbknO;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_HjJmQQE=json({});
    return_HjJmQQE=[&]() {
    json return_krbnOhl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_HjJmQQE;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_AaWuKSO=json({});
    return_AaWuKSO=[&]() {
    json return_WoXRkRK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_AaWuKSO;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gvMItYz=json({});
    return_gvMItYz=[&]() {
    json return_oXSOeKz=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gvMItYz;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_fbDcofc=json({});
    return_fbDcofc=[&]() {
    json return_GBfMdBz=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_fbDcofc;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_TJyNZuP=json({});
    return_TJyNZuP=[&]() {
    json return_RNRoNnX=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_TJyNZuP;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_lclYAfD=json({});
    return_lclYAfD=[&]() {
    json return_FwbBipV=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_lclYAfD;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_qBdZpBy=json({});
    return_qBdZpBy=[&]() {
    json return_lLhKTgJ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_qBdZpBy;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_jghFAke=json({});
    return_jghFAke=[&]() {
    json return_miIchzk=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_jghFAke;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_efsutQO=json({});
    return_efsutQO=[&]() {
    json return_breVarB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_efsutQO;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_uWAaEDm=json({});
    return_uWAaEDm=[&]() {
    json return_hzwUssO=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_uWAaEDm;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_IjNaHOg=json({});
    return_IjNaHOg=[&]() {
    json return_OWBHyrh=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_IjNaHOg;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_lLjFbfK=json({});
    return_lLjFbfK=[&]() {
    json return_ZZwlnop=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_lLjFbfK;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_JxUnnAY=json({});
    return_JxUnnAY=[&]() {
    json return_dBHncGU=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_JxUnnAY;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_JxUnnAY=json({});
    return_JxUnnAY=[&]() {
    json return_dBHncGU=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_JxUnnAY;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_QvXSnoq=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_SMgQjTk=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_PmHtPsb=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_MFxsrKn=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_WmOpagh=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_bfxhkqs=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_bfjPCfA=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_ztLUJAx=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_tJqJtrf=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_KSLexra=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_KIbfaEf=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_JnRMTnm=json({});
    
        return_JnRMTnm["members"]={};
        for(int JnRMTnm=0; JnRMTnm < 3; JnRMTnm++){
            json temp;
            temp=[&]() {
    json return_DqJBxVd=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[JnRMTnm]);}();
            return_JnRMTnm["members"].push_back(temp);
        }
        return return_JnRMTnm;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int SWpsdNS=0; SWpsdNS < 3; SWpsdNS++){
            [&]() {
result.computeWorkGroupSize[SWpsdNS]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][SWpsdNS]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["globalPriority"]=[&]() {
    json return_wlcYHwb=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["globalPriority"]=[&]() {
    json return_wlcYHwb=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_cHKAiZz=json({});
    return_cHKAiZz=[&]() {
    json return_sZoiKGc=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_cHKAiZz;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_cHKAiZz=json({});
    return_cHKAiZz=[&]() {
    json return_sZoiKGc=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_cHKAiZz;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["priorityCount"]=[&]() {
    json return_IFrQKar=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_XPoHDSy=json({});
    
        return_XPoHDSy["members"]={};
        for(int XPoHDSy=0; XPoHDSy < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; XPoHDSy++){
            json temp;
            temp=[&]() {
    json return_NknhKfJ=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[XPoHDSy]);}();
            return_XPoHDSy["members"].push_back(temp);
        }
        return return_XPoHDSy;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int KQdDRGb=0; KQdDRGb < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; KQdDRGb++){
            [&]() {
result.priorities[KQdDRGb]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][KQdDRGb]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["priorityCount"]=[&]() {
    json return_IFrQKar=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_XPoHDSy=json({});
    
        return_XPoHDSy["members"]={};
        for(int XPoHDSy=0; XPoHDSy < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; XPoHDSy++){
            json temp;
            temp=[&]() {
    json return_NknhKfJ=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[XPoHDSy]);}();
            return_XPoHDSy["members"].push_back(temp);
        }
        return return_XPoHDSy;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int KQdDRGb=0; KQdDRGb < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; KQdDRGb++){
            [&]() {
result.priorities[KQdDRGb]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][KQdDRGb]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["objectType"]=[&]() {
    json return_huBmtsJ=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_Scccrcq=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_zCtDSaW=json({});
    
        if (name.pObjectName==NULL){
            return_zCtDSaW["null"]=true;
            return return_zCtDSaW;
        }
        
        return_zCtDSaW["members"]={};
        for(int zCtDSaW=0; zCtDSaW < strlen(name.pObjectName)+1; zCtDSaW++){
            json temp;
            temp=[&]() {
    json return_AKoPMaJ=json({});
    return serialize_char(name.pObjectName[zCtDSaW]);}();
            return_zCtDSaW["members"].push_back(temp);
        }
        return return_zCtDSaW;
        }();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_rdFCMgM;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_rdFCMgM=NULL;
        return;
        }
    temp_rdFCMgM=(char*)malloc(name["members"]["pObjectName"]["members"].size()*sizeof(char));
        for (int IXnrNPz=0; IXnrNPz < name["members"]["pObjectName"]["members"].size(); IXnrNPz++){
            [&]() {
temp_rdFCMgM[IXnrNPz]=deserialize_char(name["members"]["pObjectName"]["members"][IXnrNPz]);}();;
        }
        }();result.pObjectName=temp_rdFCMgM;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["objectType"]=[&]() {
    json return_lIKOqIT=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_yScFyhC=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_QDPhpEM=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_qplBPQR=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_fFSCVxF=json({});
    
        if (name.pTag==NULL){
            return_fFSCVxF["null"]=true;
            return return_fFSCVxF;
        }
        return_fFSCVxF=[&]() {
    json return_RdGddEm=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_RdGddEm["null"]=true;
            return return_RdGddEm;
        }
        
        return_RdGddEm["members"]={};
        for(int RdGddEm=0; RdGddEm < name.tagSize; RdGddEm++){
            json temp;
            temp=[&]() {
    json return_PBygAWf=json({});
    return serialize_char(((char*)(name.pTag))[RdGddEm]);}();
            return_RdGddEm["members"].push_back(temp);
        }
        return return_RdGddEm;
        }();return return_fFSCVxF;}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_lDDQcgw;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_lDDQcgw=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.tagSize*sizeof(char));
        for (int DPADOJg=0; DPADOJg < result.tagSize; DPADOJg++){
            [&]() {
temp[DPADOJg]=deserialize_char(name["members"]["pTag"]["members"][DPADOJg]);}();;
        }
        }();temp_lDDQcgw=(void*)temp;
}();result.pTag=temp_lDDQcgw;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["pLabelName"]=[&]() {
    json return_rxORfMa=json({});
    
        if (name.pLabelName==NULL){
            return_rxORfMa["null"]=true;
            return return_rxORfMa;
        }
        
        return_rxORfMa["members"]={};
        for(int rxORfMa=0; rxORfMa < strlen(name.pLabelName)+1; rxORfMa++){
            json temp;
            temp=[&]() {
    json return_GrXlJcy=json({});
    return serialize_char(name.pLabelName[rxORfMa]);}();
            return_rxORfMa["members"].push_back(temp);
        }
        return return_rxORfMa;
        }();
result["members"]["color"]=[&]() {
    json return_lPOrHHS=json({});
    
        return_lPOrHHS["members"]={};
        for(int lPOrHHS=0; lPOrHHS < 4; lPOrHHS++){
            json temp;
            temp=[&]() {
    json return_jKyPguT=json({});
    return serialize_float(name.color[lPOrHHS]);}();
            return_lPOrHHS["members"].push_back(temp);
        }
        return return_lPOrHHS;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
char* temp_eQxbagU;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_eQxbagU=NULL;
        return;
        }
    temp_eQxbagU=(char*)malloc(name["members"]["pLabelName"]["members"].size()*sizeof(char));
        for (int cOjzgLL=0; cOjzgLL < name["members"]["pLabelName"]["members"].size(); cOjzgLL++){
            [&]() {
temp_eQxbagU[cOjzgLL]=deserialize_char(name["members"]["pLabelName"]["members"][cOjzgLL]);}();;
        }
        }();result.pLabelName=temp_eQxbagU;}();
[&]() {

        for (int PQSJITp=0; PQSJITp < 4; PQSJITp++){
            [&]() {
result.color[PQSJITp]=deserialize_float(name["members"]["color"]["members"][PQSJITp]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SpUtkCu=json({});
    
        if (name.pNext==NULL){
            return_SpUtkCu["null"]=true;
            return return_SpUtkCu;
        }
        return_SpUtkCu=[&]() {
    json return_JMCMPox=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JMCMPox["null"]=true;
            return return_JMCMPox;
        }
        
        return_JMCMPox["members"]={};
        for(int JMCMPox=0; JMCMPox < strlen(((char*)(name.pNext)))+1; JMCMPox++){
            json temp;
            temp=[&]() {
    json return_uPJwgjo=json({});
    return serialize_char(((char*)(name.pNext))[JMCMPox]);}();
            return_JMCMPox["members"].push_back(temp);
        }
        return return_JMCMPox;
        }();return return_SpUtkCu;}();
result["members"]["flags"]=[&]() {
    json return_SGNHStl=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_JrFbvAT=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_HMBwqqD=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_tLslBOo=json({});
    return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_znhnVos=json({});
    
        if (name.pUserData==NULL){
            return_znhnVos["null"]=true;
            return return_znhnVos;
        }
        return_znhnVos=[&]() {
    json return_RRmlUFw=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_RRmlUFw["null"]=true;
            return return_RRmlUFw;
        }
        
        return_RRmlUFw["members"]={};
        for(int RRmlUFw=0; RRmlUFw < strlen(((char*)(name.pUserData)))+1; RRmlUFw++){
            json temp;
            temp=[&]() {
    json return_MVaTtbI=json({});
    return serialize_char(((char*)(name.pUserData))[RRmlUFw]);}();
            return_RRmlUFw["members"].push_back(temp);
        }
        return return_RRmlUFw;
        }();return return_znhnVos;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uqxCRHj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uqxCRHj=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mcyEWeP=0; mcyEWeP < name["members"]["pNext"]["members"].size(); mcyEWeP++){
            [&]() {
temp[mcyEWeP]=deserialize_char(name["members"]["pNext"]["members"][mcyEWeP]);}();;
        }
        }();temp_uqxCRHj=(void*)temp;
}();result.pNext=temp_uqxCRHj;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int eepZzwm=0; eepZzwm < name["members"]["pUserData"]["members"].size(); eepZzwm++){
            [&]() {
temp[eepZzwm]=deserialize_char(name["members"]["pUserData"]["members"][eepZzwm]);}();;
        }
        }();result.pUserData=(void*)temp;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["flags"]=[&]() {
    json return_kHFRIQb=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_CWEwSNf=json({});
    
        if (name.pMessageIdName==NULL){
            return_CWEwSNf["null"]=true;
            return return_CWEwSNf;
        }
        
        return_CWEwSNf["members"]={};
        for(int CWEwSNf=0; CWEwSNf < strlen(name.pMessageIdName)+1; CWEwSNf++){
            json temp;
            temp=[&]() {
    json return_iCDIHHN=json({});
    return serialize_char(name.pMessageIdName[CWEwSNf]);}();
            return_CWEwSNf["members"].push_back(temp);
        }
        return return_CWEwSNf;
        }();
result["members"]["messageIdNumber"]=[&]() {
    json return_TKLFWWb=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_pskDqOd=json({});
    
        if (name.pMessage==NULL){
            return_pskDqOd["null"]=true;
            return return_pskDqOd;
        }
        
        return_pskDqOd["members"]={};
        for(int pskDqOd=0; pskDqOd < strlen(name.pMessage)+1; pskDqOd++){
            json temp;
            temp=[&]() {
    json return_dZSXRMD=json({});
    return serialize_char(name.pMessage[pskDqOd]);}();
            return_pskDqOd["members"].push_back(temp);
        }
        return return_pskDqOd;
        }();
result["members"]["queueLabelCount"]=[&]() {
    json return_xAbgOiK=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_UhPfgow=json({});
    
        if (name.pQueueLabels==NULL){
            return_UhPfgow["null"]=true;
            return return_UhPfgow;
        }
        
        return_UhPfgow["members"]={};
        for(int UhPfgow=0; UhPfgow < name.queueLabelCount; UhPfgow++){
            json temp;
            temp=[&]() {
    json return_pICtmSi=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[UhPfgow]);}();
            return_UhPfgow["members"].push_back(temp);
        }
        return return_UhPfgow;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_oMcNfsa=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_OXIKurA=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_OXIKurA["null"]=true;
            return return_OXIKurA;
        }
        
        return_OXIKurA["members"]={};
        for(int OXIKurA=0; OXIKurA < name.cmdBufLabelCount; OXIKurA++){
            json temp;
            temp=[&]() {
    json return_PagHeBG=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[OXIKurA]);}();
            return_OXIKurA["members"].push_back(temp);
        }
        return return_OXIKurA;
        }();
result["members"]["objectCount"]=[&]() {
    json return_gDgEXru=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_nIrzolX=json({});
    
        if (name.pObjects==NULL){
            return_nIrzolX["null"]=true;
            return return_nIrzolX;
        }
        
        return_nIrzolX["members"]={};
        for(int nIrzolX=0; nIrzolX < name.objectCount; nIrzolX++){
            json temp;
            temp=[&]() {
    json return_oLuglhj=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[nIrzolX]);}();
            return_nIrzolX["members"].push_back(temp);
        }
        return return_nIrzolX;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_fTNfYzK;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_fTNfYzK=NULL;
        return;
        }
    temp_fTNfYzK=(char*)malloc(name["members"]["pMessageIdName"]["members"].size()*sizeof(char));
        for (int tvISrMQ=0; tvISrMQ < name["members"]["pMessageIdName"]["members"].size(); tvISrMQ++){
            [&]() {
temp_fTNfYzK[tvISrMQ]=deserialize_char(name["members"]["pMessageIdName"]["members"][tvISrMQ]);}();;
        }
        }();result.pMessageIdName=temp_fTNfYzK;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_EwtEAwN;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_EwtEAwN=NULL;
        return;
        }
    temp_EwtEAwN=(char*)malloc(name["members"]["pMessage"]["members"].size()*sizeof(char));
        for (int gstOJxn=0; gstOJxn < name["members"]["pMessage"]["members"].size(); gstOJxn++){
            [&]() {
temp_EwtEAwN[gstOJxn]=deserialize_char(name["members"]["pMessage"]["members"][gstOJxn]);}();;
        }
        }();result.pMessage=temp_EwtEAwN;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_HGSqcXv;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_HGSqcXv=NULL;
        return;
        }
    temp_HGSqcXv=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int cgnJgjp=0; cgnJgjp < result.queueLabelCount; cgnJgjp++){
            [&]() {
temp_HGSqcXv[cgnJgjp]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][cgnJgjp]);}();;
        }
        }();result.pQueueLabels=temp_HGSqcXv;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_qjUNlhD;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_qjUNlhD=NULL;
        return;
        }
    temp_qjUNlhD=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int MZuhdqA=0; MZuhdqA < result.cmdBufLabelCount; MZuhdqA++){
            [&]() {
temp_qjUNlhD[MZuhdqA]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][MZuhdqA]);}();;
        }
        }();result.pCmdBufLabels=temp_qjUNlhD;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_jvKDaYI;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_jvKDaYI=NULL;
        return;
        }
    temp_jvKDaYI=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int FNXGWpe=0; FNXGWpe < result.objectCount; FNXGWpe++){
            [&]() {
temp_jvKDaYI[FNXGWpe]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][FNXGWpe]);}();;
        }
        }();result.pObjects=temp_jvKDaYI;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_MwbsZPD=json({});
    return_MwbsZPD=[&]() {
    json return_CuaZpKM=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_MwbsZPD;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["flags"]=[&]() {
    json return_wBVLupp=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_lfeBjqm=json({});
    return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);}();
result["members"]["pUserData"]=[&]() {
    json return_ttSYYMN=json({});
    
        if (name.pUserData==NULL){
            return_ttSYYMN["null"]=true;
            return return_ttSYYMN;
        }
        return_ttSYYMN=[&]() {
    json return_TVyjdsc=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_TVyjdsc["null"]=true;
            return return_TVyjdsc;
        }
        
        return_TVyjdsc["members"]={};
        for(int TVyjdsc=0; TVyjdsc < strlen(((char*)(name.pUserData)))+1; TVyjdsc++){
            json temp;
            temp=[&]() {
    json return_zukeyfa=json({});
    return serialize_char(((char*)(name.pUserData))[TVyjdsc]);}();
            return_TVyjdsc["members"].push_back(temp);
        }
        return return_TVyjdsc;
        }();return return_ttSYYMN;}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int iYWWPzC=0; iYWWPzC < name["members"]["pUserData"]["members"].size(); iYWWPzC++){
            [&]() {
temp[iYWWPzC]=deserialize_char(name["members"]["pUserData"]["members"][iYWWPzC]);}();;
        }
        }();result.pUserData=(void*)temp;
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["flags"]=[&]() {
    json return_oiuCFhv=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_lmBlfqO=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_epwDszt=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_NRDrhhK=json({});
    return_NRDrhhK=[&]() {
    json return_AmHQgGl=json({});
    return serialize_uint64_t(name.size);}();return return_NRDrhhK;}();
result["members"]["objectType"]=[&]() {
    json return_LVvlKVE=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_YMfNgZu=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_UufDTfO=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["handleType"]=[&]() {
    json return_FNAqIxU=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_PWPSjFt=json({});
    
        if (name.pHostPointer==NULL){
            return_PWPSjFt["null"]=true;
            return return_PWPSjFt;
        }
        return_PWPSjFt=[&]() {
    json return_TQCyxwa=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_TQCyxwa["null"]=true;
            return return_TQCyxwa;
        }
        
        return_TQCyxwa["members"]={};
        for(int TQCyxwa=0; TQCyxwa < strlen(((char*)(name.pHostPointer)))+1; TQCyxwa++){
            json temp;
            temp=[&]() {
    json return_LiAebEa=json({});
    return serialize_char(((char*)(name.pHostPointer))[TQCyxwa]);}();
            return_TQCyxwa["members"].push_back(temp);
        }
        return return_TQCyxwa;
        }();return return_PWPSjFt;}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int fCVTbAw=0; fCVTbAw < name["members"]["pHostPointer"]["members"].size(); fCVTbAw++){
            [&]() {
temp[fCVTbAw]=deserialize_char(name["members"]["pHostPointer"]["members"][fCVTbAw]);}();;
        }
        }();result.pHostPointer=(void*)temp;
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_NBdbWVC=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_RvupVcV=json({});
    return_RvupVcV=[&]() {
    json return_nLwwfJj=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_RvupVcV;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_yfYEEFI=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_BkJOWpT=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_BmZkAKd=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_WAcMqvG=json({});
    return_WAcMqvG=[&]() {
    json return_GYWSNlk=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_WAcMqvG;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_zyxAMsx=json({});
    return_zyxAMsx=[&]() {
    json return_IEaxFRG=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_zyxAMsx;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_CLPIJlG=json({});
    return_CLPIJlG=[&]() {
    json return_sDqkunS=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_CLPIJlG;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_QKWJLqD=json({});
    return_QKWJLqD=[&]() {
    json return_KkaMMfy=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_QKWJLqD;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_xWmICNa=json({});
    return_xWmICNa=[&]() {
    json return_RJAFAme=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_xWmICNa;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_KPcZDxZ=json({});
    return_KPcZDxZ=[&]() {
    json return_bWNaPYz=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_KPcZDxZ;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["timeDomain"]=[&]() {
    json return_ZRTDepj=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_mayLhzQ=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_AtysMix=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_sxcjMAI=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_AAwEpHK=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_vFGTWlO=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_pgEnBcz=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_UyxrMWT=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_gCXrOhi=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_LhyNMbr=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_cnHFHeH=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_ulLNgoA=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_fsAkNkm=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_LGrEbei=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_nMwpLTA=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_acatkJd=json({});
    
        if (name.pNext==NULL){
            return_acatkJd["null"]=true;
            return return_acatkJd;
        }
        return_acatkJd=[&]() {
    json return_RCEoUFS=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_RCEoUFS["null"]=true;
            return return_RCEoUFS;
        }
        
        return_RCEoUFS["members"]={};
        for(int RCEoUFS=0; RCEoUFS < strlen(((char*)(name.pNext)))+1; RCEoUFS++){
            json temp;
            temp=[&]() {
    json return_RUmJPan=json({});
    return serialize_char(((char*)(name.pNext))[RCEoUFS]);}();
            return_RCEoUFS["members"].push_back(temp);
        }
        return return_RCEoUFS;
        }();return return_acatkJd;}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_nRHxKwe=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_fvwqpIB=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FaVEdyO=0; FaVEdyO < name["members"]["pNext"]["members"].size(); FaVEdyO++){
            [&]() {
temp[FaVEdyO]=deserialize_char(name["members"]["pNext"]["members"][FaVEdyO]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mILwBrE=json({});
    
        if (name.pNext==NULL){
            return_mILwBrE["null"]=true;
            return return_mILwBrE;
        }
        return_mILwBrE=[&]() {
    json return_LStNoUH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LStNoUH["null"]=true;
            return return_LStNoUH;
        }
        
        return_LStNoUH["members"]={};
        for(int LStNoUH=0; LStNoUH < strlen(((char*)(name.pNext)))+1; LStNoUH++){
            json temp;
            temp=[&]() {
    json return_pXWymYt=json({});
    return serialize_char(((char*)(name.pNext))[LStNoUH]);}();
            return_LStNoUH["members"].push_back(temp);
        }
        return return_LStNoUH;
        }();return return_mILwBrE;}();
result["members"]["flags"]=[&]() {
    json return_jNBvIDf=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_YQzxzfw=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_HYlZoUx=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtWPJhQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtWPJhQ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RPFsQsS=0; RPFsQsS < name["members"]["pNext"]["members"].size(); RPFsQsS++){
            [&]() {
temp[RPFsQsS]=deserialize_char(name["members"]["pNext"]["members"][RPFsQsS]);}();;
        }
        }();temp_BtWPJhQ=(void*)temp;
}();result.pNext=temp_BtWPJhQ;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_fBdEXrj=json({});
    return_fBdEXrj=[&]() {
    json return_dUXUpLb=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_fBdEXrj;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PuOionc=json({});
    return_PuOionc=[&]() {
    json return_fYqzbwg=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_PuOionc;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_uPzkFXJ=json({});
    return_uPzkFXJ=[&]() {
    json return_wjkRVMd=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_uPzkFXJ;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_PRkfOyg=json({});
    return_PRkfOyg=[&]() {
    json return_ZMWOaCE=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_PRkfOyg;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_cdxgqfv=json({});
    return_cdxgqfv=[&]() {
    json return_merSrQW=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_cdxgqfv;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_mYAqGON=json({});
    return_mYAqGON=[&]() {
    json return_VfKUuyb=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_mYAqGON;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_PiaboYU=json({});
    return_PiaboYU=[&]() {
    json return_SRfnXUl=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_PiaboYU;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_rsKbshT=json({});
    return_rsKbshT=[&]() {
    json return_ddxgRoz=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_rsKbshT;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_wtWrxEg=json({});
    return_wtWrxEg=[&]() {
    json return_kjBznNa=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_wtWrxEg;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_oLqVkeQ=json({});
    return_oLqVkeQ=[&]() {
    json return_HdZvawo=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_oLqVkeQ;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_IbexaOm=json({});
    return_IbexaOm=[&]() {
    json return_IOkwacT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_IbexaOm;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_wGVdJuU=json({});
    return_wGVdJuU=[&]() {
    json return_AkigEdq=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_wGVdJuU;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_ciIaxXy=json({});
    return_ciIaxXy=[&]() {
    json return_KWAAihE=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_ciIaxXy;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_TciSbys=json({});
    return_TciSbys=[&]() {
    json return_MCRFKsP=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_TciSbys;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_DZxSfLQ=json({});
    return_DZxSfLQ=[&]() {
    json return_KsxNpEJ=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_DZxSfLQ;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_YrElRot=json({});
    return_YrElRot=[&]() {
    json return_rXQaOZo=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_YrElRot;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_QtacEAZ=json({});
    return_QtacEAZ=[&]() {
    json return_AmcyUhS=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_QtacEAZ;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_pIhtglC=json({});
    return_pIhtglC=[&]() {
    json return_ukzagKY=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_pIhtglC;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_VPryAek=json({});
    return_VPryAek=[&]() {
    json return_XmHWWse=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_VPryAek;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_OPwxRpo=json({});
    return_OPwxRpo=[&]() {
    json return_bLZjVUq=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_OPwxRpo;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_fBdEXrj=json({});
    return_fBdEXrj=[&]() {
    json return_dUXUpLb=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_fBdEXrj;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PuOionc=json({});
    return_PuOionc=[&]() {
    json return_fYqzbwg=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_PuOionc;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_uPzkFXJ=json({});
    return_uPzkFXJ=[&]() {
    json return_wjkRVMd=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_uPzkFXJ;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_PRkfOyg=json({});
    return_PRkfOyg=[&]() {
    json return_ZMWOaCE=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_PRkfOyg;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_cdxgqfv=json({});
    return_cdxgqfv=[&]() {
    json return_merSrQW=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_cdxgqfv;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_mYAqGON=json({});
    return_mYAqGON=[&]() {
    json return_VfKUuyb=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_mYAqGON;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_PiaboYU=json({});
    return_PiaboYU=[&]() {
    json return_SRfnXUl=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_PiaboYU;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_rsKbshT=json({});
    return_rsKbshT=[&]() {
    json return_ddxgRoz=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_rsKbshT;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_wtWrxEg=json({});
    return_wtWrxEg=[&]() {
    json return_kjBznNa=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_wtWrxEg;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_oLqVkeQ=json({});
    return_oLqVkeQ=[&]() {
    json return_HdZvawo=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_oLqVkeQ;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_IbexaOm=json({});
    return_IbexaOm=[&]() {
    json return_IOkwacT=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_IbexaOm;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_wGVdJuU=json({});
    return_wGVdJuU=[&]() {
    json return_AkigEdq=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_wGVdJuU;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_ciIaxXy=json({});
    return_ciIaxXy=[&]() {
    json return_KWAAihE=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_ciIaxXy;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_TciSbys=json({});
    return_TciSbys=[&]() {
    json return_MCRFKsP=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_TciSbys;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_DZxSfLQ=json({});
    return_DZxSfLQ=[&]() {
    json return_KsxNpEJ=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_DZxSfLQ;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_YrElRot=json({});
    return_YrElRot=[&]() {
    json return_rXQaOZo=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_YrElRot;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_QtacEAZ=json({});
    return_QtacEAZ=[&]() {
    json return_AmcyUhS=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_QtacEAZ;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_pIhtglC=json({});
    return_pIhtglC=[&]() {
    json return_ukzagKY=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_pIhtglC;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_VPryAek=json({});
    return_VPryAek=[&]() {
    json return_XmHWWse=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_VPryAek;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_OPwxRpo=json({});
    return_OPwxRpo=[&]() {
    json return_bLZjVUq=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_OPwxRpo;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_jvQtqEo=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_UTHTilc=json({});
    return_UTHTilc=[&]() {
    json return_vIhkKkT=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_UTHTilc;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_WPULujj=json({});
    return_WPULujj=[&]() {
    json return_GDrVKcq=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_WPULujj;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_zaVgDwU=json({});
    return_zaVgDwU=[&]() {
    json return_uRaQIDh=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_zaVgDwU;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_KLXQUcj=json({});
    return_KLXQUcj=[&]() {
    json return_OhzwhUJ=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_KLXQUcj;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_USIhGBJ=json({});
    return_USIhGBJ=[&]() {
    json return_SvsWAba=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_USIhGBJ;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_lwvHric=json({});
    return_lwvHric=[&]() {
    json return_omoEsNc=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_lwvHric;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_gyBVWwc=json({});
    return_gyBVWwc=[&]() {
    json return_sLJowoF=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_gyBVWwc;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_FXaaahr=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_DAqahpY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_dNGpvpy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_dXPeyQw=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_FygfKcD=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_EdKmZHG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_mIPqNfg=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_GEHuSbg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_poPgjOw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_zPDFjGZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_NzHJRYg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_NPEbNwB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_DVLcFYS=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_BJaqhlR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_NiMvtAD=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_jvQtqEo=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_UTHTilc=json({});
    return_UTHTilc=[&]() {
    json return_vIhkKkT=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_UTHTilc;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_WPULujj=json({});
    return_WPULujj=[&]() {
    json return_GDrVKcq=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_WPULujj;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_zaVgDwU=json({});
    return_zaVgDwU=[&]() {
    json return_uRaQIDh=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_zaVgDwU;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_KLXQUcj=json({});
    return_KLXQUcj=[&]() {
    json return_OhzwhUJ=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_KLXQUcj;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_USIhGBJ=json({});
    return_USIhGBJ=[&]() {
    json return_SvsWAba=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_USIhGBJ;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_lwvHric=json({});
    return_lwvHric=[&]() {
    json return_omoEsNc=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_lwvHric;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_gyBVWwc=json({});
    return_gyBVWwc=[&]() {
    json return_sLJowoF=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_gyBVWwc;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_FXaaahr=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_DAqahpY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_dNGpvpy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_dXPeyQw=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_FygfKcD=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_EdKmZHG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_mIPqNfg=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_GEHuSbg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_poPgjOw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_zPDFjGZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_NzHJRYg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_NPEbNwB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_DVLcFYS=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_BJaqhlR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_NiMvtAD=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["bindingCount"]=[&]() {
    json return_JUxFdRO=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_qRuylCu=json({});
    
        if (name.pBindingFlags==NULL){
            return_qRuylCu["null"]=true;
            return return_qRuylCu;
        }
        
        return_qRuylCu["members"]={};
        for(int qRuylCu=0; qRuylCu < name.bindingCount; qRuylCu++){
            json temp;
            temp=[&]() {
    json return_XJpJQXe=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[qRuylCu]);}();
            return_qRuylCu["members"].push_back(temp);
        }
        return return_qRuylCu;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_BKAkxfK;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_BKAkxfK=NULL;
        return;
        }
    temp_BKAkxfK=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int kZQTBMo=0; kZQTBMo < result.bindingCount; kZQTBMo++){
            [&]() {
temp_BKAkxfK[kZQTBMo]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][kZQTBMo]);}();;
        }
        }();result.pBindingFlags=temp_BKAkxfK;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["bindingCount"]=[&]() {
    json return_JUxFdRO=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_qRuylCu=json({});
    
        if (name.pBindingFlags==NULL){
            return_qRuylCu["null"]=true;
            return return_qRuylCu;
        }
        
        return_qRuylCu["members"]={};
        for(int qRuylCu=0; qRuylCu < name.bindingCount; qRuylCu++){
            json temp;
            temp=[&]() {
    json return_XJpJQXe=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[qRuylCu]);}();
            return_qRuylCu["members"].push_back(temp);
        }
        return return_qRuylCu;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_BKAkxfK;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_BKAkxfK=NULL;
        return;
        }
    temp_BKAkxfK=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int kZQTBMo=0; kZQTBMo < result.bindingCount; kZQTBMo++){
            [&]() {
temp_BKAkxfK[kZQTBMo]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][kZQTBMo]);}();;
        }
        }();result.pBindingFlags=temp_BKAkxfK;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jSRtnWo=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_eovMlWh=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_eovMlWh["null"]=true;
            return return_eovMlWh;
        }
        
        return_eovMlWh["members"]={};
        for(int eovMlWh=0; eovMlWh < name.descriptorSetCount; eovMlWh++){
            json temp;
            temp=[&]() {
    json return_MEHPphQ=json({});
    return serialize_uint32_t(name.pDescriptorCounts[eovMlWh]);}();
            return_eovMlWh["members"].push_back(temp);
        }
        return return_eovMlWh;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_IcgAZjX;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_IcgAZjX=NULL;
        return;
        }
    temp_IcgAZjX=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int lRspBZc=0; lRspBZc < result.descriptorSetCount; lRspBZc++){
            [&]() {
temp_IcgAZjX[lRspBZc]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][lRspBZc]);}();;
        }
        }();result.pDescriptorCounts=temp_IcgAZjX;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jSRtnWo=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_eovMlWh=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_eovMlWh["null"]=true;
            return return_eovMlWh;
        }
        
        return_eovMlWh["members"]={};
        for(int eovMlWh=0; eovMlWh < name.descriptorSetCount; eovMlWh++){
            json temp;
            temp=[&]() {
    json return_MEHPphQ=json({});
    return serialize_uint32_t(name.pDescriptorCounts[eovMlWh]);}();
            return_eovMlWh["members"].push_back(temp);
        }
        return return_eovMlWh;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_IcgAZjX;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_IcgAZjX=NULL;
        return;
        }
    temp_IcgAZjX=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int lRspBZc=0; lRspBZc < result.descriptorSetCount; lRspBZc++){
            [&]() {
temp_IcgAZjX[lRspBZc]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][lRspBZc]);}();;
        }
        }();result.pDescriptorCounts=temp_IcgAZjX;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_epYgkRm=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_epYgkRm=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_inDeKZj=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_qDEEOoV=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_BgONNvs=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_FWKoXpB=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_fYegvqV=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_FxSevos=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_WlKsXFK=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_NDXnJYU=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_BspfmcP=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_inDeKZj=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_qDEEOoV=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_BgONNvs=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_FWKoXpB=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_fYegvqV=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_FxSevos=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_WlKsXFK=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_NDXnJYU=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_BspfmcP=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["attachment"]=[&]() {
    json return_XSNFBko=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_doqlUBD=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_HxZVmnH=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["attachment"]=[&]() {
    json return_XSNFBko=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_doqlUBD=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_HxZVmnH=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ymqSteN=json({});
    
        if (name.pNext==NULL){
            return_ymqSteN["null"]=true;
            return return_ymqSteN;
        }
        return_ymqSteN=[&]() {
    json return_ZPeUPfV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZPeUPfV["null"]=true;
            return return_ZPeUPfV;
        }
        
        return_ZPeUPfV["members"]={};
        for(int ZPeUPfV=0; ZPeUPfV < strlen(((char*)(name.pNext)))+1; ZPeUPfV++){
            json temp;
            temp=[&]() {
    json return_pVmKIiP=json({});
    return serialize_char(((char*)(name.pNext))[ZPeUPfV]);}();
            return_ZPeUPfV["members"].push_back(temp);
        }
        return return_ZPeUPfV;
        }();return return_ymqSteN;}();
result["members"]["flags"]=[&]() {
    json return_yDZCiGl=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_vkyVDVP=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_GkbWDdE=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_lLvAmbi=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_zlKFeoD=json({});
    
        if (name.pInputAttachments==NULL){
            return_zlKFeoD["null"]=true;
            return return_zlKFeoD;
        }
        
        return_zlKFeoD["members"]={};
        for(int zlKFeoD=0; zlKFeoD < name.inputAttachmentCount; zlKFeoD++){
            json temp;
            temp=[&]() {
    json return_SNBiBUF=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[zlKFeoD]);}();
            return_zlKFeoD["members"].push_back(temp);
        }
        return return_zlKFeoD;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_MOqOmKS=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_zfZMUhm=json({});
    
        if (name.pColorAttachments==NULL){
            return_zfZMUhm["null"]=true;
            return return_zfZMUhm;
        }
        
        return_zfZMUhm["members"]={};
        for(int zfZMUhm=0; zfZMUhm < name.colorAttachmentCount; zfZMUhm++){
            json temp;
            temp=[&]() {
    json return_ujVGfZH=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[zfZMUhm]);}();
            return_zfZMUhm["members"].push_back(temp);
        }
        return return_zfZMUhm;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_CrXGEhb=json({});
    
        if (name.pResolveAttachments==NULL){
            return_CrXGEhb["null"]=true;
            return return_CrXGEhb;
        }
        
        return_CrXGEhb["members"]={};
        for(int CrXGEhb=0; CrXGEhb < name.colorAttachmentCount; CrXGEhb++){
            json temp;
            temp=[&]() {
    json return_tTAhkAw=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[CrXGEhb]);}();
            return_CrXGEhb["members"].push_back(temp);
        }
        return return_CrXGEhb;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_kEzBxGq=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_kEzBxGq["null"]=true;
            return return_kEzBxGq;
        }
        return_kEzBxGq=[&]() {
    json return_FpJrrct=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_kEzBxGq;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_zJqyXNT=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_ZdpuWfy=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_ZdpuWfy["null"]=true;
            return return_ZdpuWfy;
        }
        
        return_ZdpuWfy["members"]={};
        for(int ZdpuWfy=0; ZdpuWfy < name.preserveAttachmentCount; ZdpuWfy++){
            json temp;
            temp=[&]() {
    json return_UOMZEPB=json({});
    return serialize_uint32_t(name.pPreserveAttachments[ZdpuWfy]);}();
            return_ZdpuWfy["members"].push_back(temp);
        }
        return return_ZdpuWfy;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tuuajEc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tuuajEc=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int giUnoop=0; giUnoop < name["members"]["pNext"]["members"].size(); giUnoop++){
            [&]() {
temp[giUnoop]=deserialize_char(name["members"]["pNext"]["members"][giUnoop]);}();;
        }
        }();temp_tuuajEc=(void*)temp;
}();result.pNext=temp_tuuajEc;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_xwNysrk;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_xwNysrk=NULL;
        return;
        }
    temp_xwNysrk=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int aIorElN=0; aIorElN < result.inputAttachmentCount; aIorElN++){
            [&]() {
temp_xwNysrk[aIorElN]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][aIorElN]);}();;
        }
        }();result.pInputAttachments=temp_xwNysrk;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_DYFsPGr;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_DYFsPGr=NULL;
        return;
        }
    temp_DYFsPGr=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int yQQQfHt=0; yQQQfHt < result.colorAttachmentCount; yQQQfHt++){
            [&]() {
temp_DYFsPGr[yQQQfHt]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][yQQQfHt]);}();;
        }
        }();result.pColorAttachments=temp_DYFsPGr;}();
[&]() {
VkAttachmentReference2* temp_tFQlOqO;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_tFQlOqO=NULL;
        return;
        }
    temp_tFQlOqO=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int GkgkaaA=0; GkgkaaA < result.colorAttachmentCount; GkgkaaA++){
            [&]() {
temp_tFQlOqO[GkgkaaA]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][GkgkaaA]);}();;
        }
        }();result.pResolveAttachments=temp_tFQlOqO;}();
[&]() {
VkAttachmentReference2* temp_DTkANdT;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_DTkANdT=NULL;
        return;
        }
    temp_DTkANdT=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_DTkANdT)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_DTkANdT;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_dJFKLCe;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_dJFKLCe=NULL;
        return;
        }
    temp_dJFKLCe=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int CCotGCj=0; CCotGCj < result.preserveAttachmentCount; CCotGCj++){
            [&]() {
temp_dJFKLCe[CCotGCj]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][CCotGCj]);}();;
        }
        }();result.pPreserveAttachments=temp_dJFKLCe;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ymqSteN=json({});
    
        if (name.pNext==NULL){
            return_ymqSteN["null"]=true;
            return return_ymqSteN;
        }
        return_ymqSteN=[&]() {
    json return_ZPeUPfV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZPeUPfV["null"]=true;
            return return_ZPeUPfV;
        }
        
        return_ZPeUPfV["members"]={};
        for(int ZPeUPfV=0; ZPeUPfV < strlen(((char*)(name.pNext)))+1; ZPeUPfV++){
            json temp;
            temp=[&]() {
    json return_pVmKIiP=json({});
    return serialize_char(((char*)(name.pNext))[ZPeUPfV]);}();
            return_ZPeUPfV["members"].push_back(temp);
        }
        return return_ZPeUPfV;
        }();return return_ymqSteN;}();
result["members"]["flags"]=[&]() {
    json return_yDZCiGl=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_vkyVDVP=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_GkbWDdE=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_lLvAmbi=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_zlKFeoD=json({});
    
        if (name.pInputAttachments==NULL){
            return_zlKFeoD["null"]=true;
            return return_zlKFeoD;
        }
        
        return_zlKFeoD["members"]={};
        for(int zlKFeoD=0; zlKFeoD < name.inputAttachmentCount; zlKFeoD++){
            json temp;
            temp=[&]() {
    json return_SNBiBUF=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[zlKFeoD]);}();
            return_zlKFeoD["members"].push_back(temp);
        }
        return return_zlKFeoD;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_MOqOmKS=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_zfZMUhm=json({});
    
        if (name.pColorAttachments==NULL){
            return_zfZMUhm["null"]=true;
            return return_zfZMUhm;
        }
        
        return_zfZMUhm["members"]={};
        for(int zfZMUhm=0; zfZMUhm < name.colorAttachmentCount; zfZMUhm++){
            json temp;
            temp=[&]() {
    json return_ujVGfZH=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[zfZMUhm]);}();
            return_zfZMUhm["members"].push_back(temp);
        }
        return return_zfZMUhm;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_CrXGEhb=json({});
    
        if (name.pResolveAttachments==NULL){
            return_CrXGEhb["null"]=true;
            return return_CrXGEhb;
        }
        
        return_CrXGEhb["members"]={};
        for(int CrXGEhb=0; CrXGEhb < name.colorAttachmentCount; CrXGEhb++){
            json temp;
            temp=[&]() {
    json return_tTAhkAw=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[CrXGEhb]);}();
            return_CrXGEhb["members"].push_back(temp);
        }
        return return_CrXGEhb;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_kEzBxGq=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_kEzBxGq["null"]=true;
            return return_kEzBxGq;
        }
        return_kEzBxGq=[&]() {
    json return_FpJrrct=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_kEzBxGq;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_zJqyXNT=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_ZdpuWfy=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_ZdpuWfy["null"]=true;
            return return_ZdpuWfy;
        }
        
        return_ZdpuWfy["members"]={};
        for(int ZdpuWfy=0; ZdpuWfy < name.preserveAttachmentCount; ZdpuWfy++){
            json temp;
            temp=[&]() {
    json return_UOMZEPB=json({});
    return serialize_uint32_t(name.pPreserveAttachments[ZdpuWfy]);}();
            return_ZdpuWfy["members"].push_back(temp);
        }
        return return_ZdpuWfy;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tuuajEc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tuuajEc=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int giUnoop=0; giUnoop < name["members"]["pNext"]["members"].size(); giUnoop++){
            [&]() {
temp[giUnoop]=deserialize_char(name["members"]["pNext"]["members"][giUnoop]);}();;
        }
        }();temp_tuuajEc=(void*)temp;
}();result.pNext=temp_tuuajEc;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_xwNysrk;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_xwNysrk=NULL;
        return;
        }
    temp_xwNysrk=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int aIorElN=0; aIorElN < result.inputAttachmentCount; aIorElN++){
            [&]() {
temp_xwNysrk[aIorElN]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][aIorElN]);}();;
        }
        }();result.pInputAttachments=temp_xwNysrk;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_DYFsPGr;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_DYFsPGr=NULL;
        return;
        }
    temp_DYFsPGr=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int yQQQfHt=0; yQQQfHt < result.colorAttachmentCount; yQQQfHt++){
            [&]() {
temp_DYFsPGr[yQQQfHt]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][yQQQfHt]);}();;
        }
        }();result.pColorAttachments=temp_DYFsPGr;}();
[&]() {
VkAttachmentReference2* temp_tFQlOqO;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_tFQlOqO=NULL;
        return;
        }
    temp_tFQlOqO=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int GkgkaaA=0; GkgkaaA < result.colorAttachmentCount; GkgkaaA++){
            [&]() {
temp_tFQlOqO[GkgkaaA]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][GkgkaaA]);}();;
        }
        }();result.pResolveAttachments=temp_tFQlOqO;}();
[&]() {
VkAttachmentReference2* temp_DTkANdT;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_DTkANdT=NULL;
        return;
        }
    temp_DTkANdT=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_DTkANdT)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_DTkANdT;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_dJFKLCe;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_dJFKLCe=NULL;
        return;
        }
    temp_dJFKLCe=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int CCotGCj=0; CCotGCj < result.preserveAttachmentCount; CCotGCj++){
            [&]() {
temp_dJFKLCe[CCotGCj]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][CCotGCj]);}();;
        }
        }();result.pPreserveAttachments=temp_dJFKLCe;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["srcSubpass"]=[&]() {
    json return_skeYAHD=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_gRCXyyX=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_UHiCsmR=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_xnPRdKc=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_GPGeukG=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_bqIBjlF=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_JWRniEO=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_MiWwHvn=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["srcSubpass"]=[&]() {
    json return_skeYAHD=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_gRCXyyX=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_UHiCsmR=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_xnPRdKc=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_GPGeukG=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_bqIBjlF=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_JWRniEO=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_MiWwHvn=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmAFwZb=json({});
    
        if (name.pNext==NULL){
            return_vmAFwZb["null"]=true;
            return return_vmAFwZb;
        }
        return_vmAFwZb=[&]() {
    json return_SaCCuQS=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_SaCCuQS["null"]=true;
            return return_SaCCuQS;
        }
        
        return_SaCCuQS["members"]={};
        for(int SaCCuQS=0; SaCCuQS < strlen(((char*)(name.pNext)))+1; SaCCuQS++){
            json temp;
            temp=[&]() {
    json return_tKWDhbh=json({});
    return serialize_char(((char*)(name.pNext))[SaCCuQS]);}();
            return_SaCCuQS["members"].push_back(temp);
        }
        return return_SaCCuQS;
        }();return return_vmAFwZb;}();
result["members"]["flags"]=[&]() {
    json return_uHdCjjv=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_MTTkPTg=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_cdolUWY=json({});
    
        if (name.pAttachments==NULL){
            return_cdolUWY["null"]=true;
            return return_cdolUWY;
        }
        
        return_cdolUWY["members"]={};
        for(int cdolUWY=0; cdolUWY < name.attachmentCount; cdolUWY++){
            json temp;
            temp=[&]() {
    json return_OlRpFQQ=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[cdolUWY]);}();
            return_cdolUWY["members"].push_back(temp);
        }
        return return_cdolUWY;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_butNvVD=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_FIBklHF=json({});
    
        if (name.pSubpasses==NULL){
            return_FIBklHF["null"]=true;
            return return_FIBklHF;
        }
        
        return_FIBklHF["members"]={};
        for(int FIBklHF=0; FIBklHF < name.subpassCount; FIBklHF++){
            json temp;
            temp=[&]() {
    json return_BtgrMoQ=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[FIBklHF]);}();
            return_FIBklHF["members"].push_back(temp);
        }
        return return_FIBklHF;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_geDBuPA=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_jKioBwF=json({});
    
        if (name.pDependencies==NULL){
            return_jKioBwF["null"]=true;
            return return_jKioBwF;
        }
        
        return_jKioBwF["members"]={};
        for(int jKioBwF=0; jKioBwF < name.dependencyCount; jKioBwF++){
            json temp;
            temp=[&]() {
    json return_TvEqDfN=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[jKioBwF]);}();
            return_jKioBwF["members"].push_back(temp);
        }
        return return_jKioBwF;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_PAObjFG=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_MXzmcBG=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_MXzmcBG["null"]=true;
            return return_MXzmcBG;
        }
        
        return_MXzmcBG["members"]={};
        for(int MXzmcBG=0; MXzmcBG < name.correlatedViewMaskCount; MXzmcBG++){
            json temp;
            temp=[&]() {
    json return_jLmllBQ=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[MXzmcBG]);}();
            return_MXzmcBG["members"].push_back(temp);
        }
        return return_MXzmcBG;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WQLvfWf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WQLvfWf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iRVYrIE=0; iRVYrIE < name["members"]["pNext"]["members"].size(); iRVYrIE++){
            [&]() {
temp[iRVYrIE]=deserialize_char(name["members"]["pNext"]["members"][iRVYrIE]);}();;
        }
        }();temp_WQLvfWf=(void*)temp;
}();result.pNext=temp_WQLvfWf;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_bxUHpnh;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_bxUHpnh=NULL;
        return;
        }
    temp_bxUHpnh=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int zwrAUde=0; zwrAUde < result.attachmentCount; zwrAUde++){
            [&]() {
temp_bxUHpnh[zwrAUde]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][zwrAUde]);}();;
        }
        }();result.pAttachments=temp_bxUHpnh;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_RXwNguR;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_RXwNguR=NULL;
        return;
        }
    temp_RXwNguR=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int cnatVDh=0; cnatVDh < result.subpassCount; cnatVDh++){
            [&]() {
temp_RXwNguR[cnatVDh]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][cnatVDh]);}();;
        }
        }();result.pSubpasses=temp_RXwNguR;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_wEvccfh;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_wEvccfh=NULL;
        return;
        }
    temp_wEvccfh=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int crdsUhT=0; crdsUhT < result.dependencyCount; crdsUhT++){
            [&]() {
temp_wEvccfh[crdsUhT]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][crdsUhT]);}();;
        }
        }();result.pDependencies=temp_wEvccfh;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_WRCCaJi;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_WRCCaJi=NULL;
        return;
        }
    temp_WRCCaJi=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int KDBUOLV=0; KDBUOLV < result.correlatedViewMaskCount; KDBUOLV++){
            [&]() {
temp_WRCCaJi[KDBUOLV]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][KDBUOLV]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_WRCCaJi;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmAFwZb=json({});
    
        if (name.pNext==NULL){
            return_vmAFwZb["null"]=true;
            return return_vmAFwZb;
        }
        return_vmAFwZb=[&]() {
    json return_SaCCuQS=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_SaCCuQS["null"]=true;
            return return_SaCCuQS;
        }
        
        return_SaCCuQS["members"]={};
        for(int SaCCuQS=0; SaCCuQS < strlen(((char*)(name.pNext)))+1; SaCCuQS++){
            json temp;
            temp=[&]() {
    json return_tKWDhbh=json({});
    return serialize_char(((char*)(name.pNext))[SaCCuQS]);}();
            return_SaCCuQS["members"].push_back(temp);
        }
        return return_SaCCuQS;
        }();return return_vmAFwZb;}();
result["members"]["flags"]=[&]() {
    json return_uHdCjjv=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_MTTkPTg=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_cdolUWY=json({});
    
        if (name.pAttachments==NULL){
            return_cdolUWY["null"]=true;
            return return_cdolUWY;
        }
        
        return_cdolUWY["members"]={};
        for(int cdolUWY=0; cdolUWY < name.attachmentCount; cdolUWY++){
            json temp;
            temp=[&]() {
    json return_OlRpFQQ=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[cdolUWY]);}();
            return_cdolUWY["members"].push_back(temp);
        }
        return return_cdolUWY;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_butNvVD=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_FIBklHF=json({});
    
        if (name.pSubpasses==NULL){
            return_FIBklHF["null"]=true;
            return return_FIBklHF;
        }
        
        return_FIBklHF["members"]={};
        for(int FIBklHF=0; FIBklHF < name.subpassCount; FIBklHF++){
            json temp;
            temp=[&]() {
    json return_BtgrMoQ=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[FIBklHF]);}();
            return_FIBklHF["members"].push_back(temp);
        }
        return return_FIBklHF;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_geDBuPA=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_jKioBwF=json({});
    
        if (name.pDependencies==NULL){
            return_jKioBwF["null"]=true;
            return return_jKioBwF;
        }
        
        return_jKioBwF["members"]={};
        for(int jKioBwF=0; jKioBwF < name.dependencyCount; jKioBwF++){
            json temp;
            temp=[&]() {
    json return_TvEqDfN=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[jKioBwF]);}();
            return_jKioBwF["members"].push_back(temp);
        }
        return return_jKioBwF;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_PAObjFG=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_MXzmcBG=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_MXzmcBG["null"]=true;
            return return_MXzmcBG;
        }
        
        return_MXzmcBG["members"]={};
        for(int MXzmcBG=0; MXzmcBG < name.correlatedViewMaskCount; MXzmcBG++){
            json temp;
            temp=[&]() {
    json return_jLmllBQ=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[MXzmcBG]);}();
            return_MXzmcBG["members"].push_back(temp);
        }
        return return_MXzmcBG;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WQLvfWf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WQLvfWf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iRVYrIE=0; iRVYrIE < name["members"]["pNext"]["members"].size(); iRVYrIE++){
            [&]() {
temp[iRVYrIE]=deserialize_char(name["members"]["pNext"]["members"][iRVYrIE]);}();;
        }
        }();temp_WQLvfWf=(void*)temp;
}();result.pNext=temp_WQLvfWf;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_bxUHpnh;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_bxUHpnh=NULL;
        return;
        }
    temp_bxUHpnh=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int zwrAUde=0; zwrAUde < result.attachmentCount; zwrAUde++){
            [&]() {
temp_bxUHpnh[zwrAUde]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][zwrAUde]);}();;
        }
        }();result.pAttachments=temp_bxUHpnh;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_RXwNguR;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_RXwNguR=NULL;
        return;
        }
    temp_RXwNguR=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int cnatVDh=0; cnatVDh < result.subpassCount; cnatVDh++){
            [&]() {
temp_RXwNguR[cnatVDh]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][cnatVDh]);}();;
        }
        }();result.pSubpasses=temp_RXwNguR;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_wEvccfh;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_wEvccfh=NULL;
        return;
        }
    temp_wEvccfh=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int crdsUhT=0; crdsUhT < result.dependencyCount; crdsUhT++){
            [&]() {
temp_wEvccfh[crdsUhT]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][crdsUhT]);}();;
        }
        }();result.pDependencies=temp_wEvccfh;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_WRCCaJi;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_WRCCaJi=NULL;
        return;
        }
    temp_WRCCaJi=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int KDBUOLV=0; KDBUOLV < result.correlatedViewMaskCount; KDBUOLV++){
            [&]() {
temp_WRCCaJi[KDBUOLV]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][KDBUOLV]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_WRCCaJi;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["contents"]=[&]() {
    json return_JQoXkXU=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["contents"]=[&]() {
    json return_JQoXkXU=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dokopvm=json({});
    
        if (name.pNext==NULL){
            return_dokopvm["null"]=true;
            return return_dokopvm;
        }
        return_dokopvm=[&]() {
    json return_MSILGvQ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MSILGvQ["null"]=true;
            return return_MSILGvQ;
        }
        
        return_MSILGvQ["members"]={};
        for(int MSILGvQ=0; MSILGvQ < strlen(((char*)(name.pNext)))+1; MSILGvQ++){
            json temp;
            temp=[&]() {
    json return_WDwdqPx=json({});
    return serialize_char(((char*)(name.pNext))[MSILGvQ]);}();
            return_MSILGvQ["members"].push_back(temp);
        }
        return return_MSILGvQ;
        }();return return_dokopvm;}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CsJpJdp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CsJpJdp=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZiTOsrq=0; ZiTOsrq < name["members"]["pNext"]["members"].size(); ZiTOsrq++){
            [&]() {
temp[ZiTOsrq]=deserialize_char(name["members"]["pNext"]["members"][ZiTOsrq]);}();;
        }
        }();temp_CsJpJdp=(void*)temp;
}();result.pNext=temp_CsJpJdp;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dokopvm=json({});
    
        if (name.pNext==NULL){
            return_dokopvm["null"]=true;
            return return_dokopvm;
        }
        return_dokopvm=[&]() {
    json return_MSILGvQ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MSILGvQ["null"]=true;
            return return_MSILGvQ;
        }
        
        return_MSILGvQ["members"]={};
        for(int MSILGvQ=0; MSILGvQ < strlen(((char*)(name.pNext)))+1; MSILGvQ++){
            json temp;
            temp=[&]() {
    json return_WDwdqPx=json({});
    return serialize_char(((char*)(name.pNext))[MSILGvQ]);}();
            return_MSILGvQ["members"].push_back(temp);
        }
        return return_MSILGvQ;
        }();return return_dokopvm;}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CsJpJdp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CsJpJdp=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZiTOsrq=0; ZiTOsrq < name["members"]["pNext"]["members"].size(); ZiTOsrq++){
            [&]() {
temp[ZiTOsrq]=deserialize_char(name["members"]["pNext"]["members"][ZiTOsrq]);}();;
        }
        }();temp_CsJpJdp=(void*)temp;
}();result.pNext=temp_CsJpJdp;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_FcbjjDL=json({});
    return_FcbjjDL=[&]() {
    json return_QiwkOrg=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_FcbjjDL;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_FcbjjDL=json({});
    return_FcbjjDL=[&]() {
    json return_QiwkOrg=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_FcbjjDL;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_USfbrNZ=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_USfbrNZ=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["semaphoreType"]=[&]() {
    json return_nXJfqSl=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_UqcLlSp=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["semaphoreType"]=[&]() {
    json return_nXJfqSl=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_UqcLlSp=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_hdCqDxR=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_ZNMnXDY=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_ZNMnXDY["null"]=true;
            return return_ZNMnXDY;
        }
        
        return_ZNMnXDY["members"]={};
        for(int ZNMnXDY=0; ZNMnXDY < name.waitSemaphoreValueCount; ZNMnXDY++){
            json temp;
            temp=[&]() {
    json return_RpemAQT=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[ZNMnXDY]);}();
            return_ZNMnXDY["members"].push_back(temp);
        }
        return return_ZNMnXDY;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_BfSVFWm=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_wdZtSCc=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_wdZtSCc["null"]=true;
            return return_wdZtSCc;
        }
        
        return_wdZtSCc["members"]={};
        for(int wdZtSCc=0; wdZtSCc < name.signalSemaphoreValueCount; wdZtSCc++){
            json temp;
            temp=[&]() {
    json return_zFQBjPo=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[wdZtSCc]);}();
            return_wdZtSCc["members"].push_back(temp);
        }
        return return_wdZtSCc;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_UhIoyab;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_UhIoyab=NULL;
        return;
        }
    temp_UhIoyab=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int rzXjAtX=0; rzXjAtX < result.waitSemaphoreValueCount; rzXjAtX++){
            [&]() {
temp_UhIoyab[rzXjAtX]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][rzXjAtX]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_UhIoyab;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_AhSLqxF;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_AhSLqxF=NULL;
        return;
        }
    temp_AhSLqxF=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int MYbfALm=0; MYbfALm < result.signalSemaphoreValueCount; MYbfALm++){
            [&]() {
temp_AhSLqxF[MYbfALm]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][MYbfALm]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_AhSLqxF;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_hdCqDxR=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_ZNMnXDY=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_ZNMnXDY["null"]=true;
            return return_ZNMnXDY;
        }
        
        return_ZNMnXDY["members"]={};
        for(int ZNMnXDY=0; ZNMnXDY < name.waitSemaphoreValueCount; ZNMnXDY++){
            json temp;
            temp=[&]() {
    json return_RpemAQT=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[ZNMnXDY]);}();
            return_ZNMnXDY["members"].push_back(temp);
        }
        return return_ZNMnXDY;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_BfSVFWm=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_wdZtSCc=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_wdZtSCc["null"]=true;
            return return_wdZtSCc;
        }
        
        return_wdZtSCc["members"]={};
        for(int wdZtSCc=0; wdZtSCc < name.signalSemaphoreValueCount; wdZtSCc++){
            json temp;
            temp=[&]() {
    json return_zFQBjPo=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[wdZtSCc]);}();
            return_wdZtSCc["members"].push_back(temp);
        }
        return return_wdZtSCc;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_UhIoyab;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_UhIoyab=NULL;
        return;
        }
    temp_UhIoyab=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int rzXjAtX=0; rzXjAtX < result.waitSemaphoreValueCount; rzXjAtX++){
            [&]() {
temp_UhIoyab[rzXjAtX]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][rzXjAtX]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_UhIoyab;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_AhSLqxF;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_AhSLqxF=NULL;
        return;
        }
    temp_AhSLqxF=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int MYbfALm=0; MYbfALm < result.signalSemaphoreValueCount; MYbfALm++){
            [&]() {
temp_AhSLqxF[MYbfALm]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][MYbfALm]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_AhSLqxF;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_EMaNNWX=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_sGKLkzK=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_vGLByET=json({});
    
        if (name.pSemaphores==NULL){
            return_vGLByET["null"]=true;
            return return_vGLByET;
        }
        
        return_vGLByET["members"]={};
        for(int vGLByET=0; vGLByET < name.semaphoreCount; vGLByET++){
            json temp;
            temp=[&]() {
    json return_nxCEvrs=json({});
    return serialize_VkSemaphore(name.pSemaphores[vGLByET]);}();
            return_vGLByET["members"].push_back(temp);
        }
        return return_vGLByET;
        }();
result["members"]["pValues"]=[&]() {
    json return_gJaqVfc=json({});
    
        if (name.pValues==NULL){
            return_gJaqVfc["null"]=true;
            return return_gJaqVfc;
        }
        
        return_gJaqVfc["members"]={};
        for(int gJaqVfc=0; gJaqVfc < name.semaphoreCount; gJaqVfc++){
            json temp;
            temp=[&]() {
    json return_wCKzgdu=json({});
    return serialize_uint64_t(name.pValues[gJaqVfc]);}();
            return_gJaqVfc["members"].push_back(temp);
        }
        return return_gJaqVfc;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_YMfucuU;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_YMfucuU=NULL;
        return;
        }
    temp_YMfucuU=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int qqtfIkN=0; qqtfIkN < result.semaphoreCount; qqtfIkN++){
            [&]() {
temp_YMfucuU[qqtfIkN]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][qqtfIkN]);}();;
        }
        }();result.pSemaphores=temp_YMfucuU;}();
[&]() {
uint64_t* temp_DVGnkBh;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_DVGnkBh=NULL;
        return;
        }
    temp_DVGnkBh=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int ImuCdFE=0; ImuCdFE < result.semaphoreCount; ImuCdFE++){
            [&]() {
temp_DVGnkBh[ImuCdFE]=deserialize_uint64_t(name["members"]["pValues"]["members"][ImuCdFE]);}();;
        }
        }();result.pValues=temp_DVGnkBh;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_EMaNNWX=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_sGKLkzK=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_vGLByET=json({});
    
        if (name.pSemaphores==NULL){
            return_vGLByET["null"]=true;
            return return_vGLByET;
        }
        
        return_vGLByET["members"]={};
        for(int vGLByET=0; vGLByET < name.semaphoreCount; vGLByET++){
            json temp;
            temp=[&]() {
    json return_nxCEvrs=json({});
    return serialize_VkSemaphore(name.pSemaphores[vGLByET]);}();
            return_vGLByET["members"].push_back(temp);
        }
        return return_vGLByET;
        }();
result["members"]["pValues"]=[&]() {
    json return_gJaqVfc=json({});
    
        if (name.pValues==NULL){
            return_gJaqVfc["null"]=true;
            return return_gJaqVfc;
        }
        
        return_gJaqVfc["members"]={};
        for(int gJaqVfc=0; gJaqVfc < name.semaphoreCount; gJaqVfc++){
            json temp;
            temp=[&]() {
    json return_wCKzgdu=json({});
    return serialize_uint64_t(name.pValues[gJaqVfc]);}();
            return_gJaqVfc["members"].push_back(temp);
        }
        return return_gJaqVfc;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_YMfucuU;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_YMfucuU=NULL;
        return;
        }
    temp_YMfucuU=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int qqtfIkN=0; qqtfIkN < result.semaphoreCount; qqtfIkN++){
            [&]() {
temp_YMfucuU[qqtfIkN]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][qqtfIkN]);}();;
        }
        }();result.pSemaphores=temp_YMfucuU;}();
[&]() {
uint64_t* temp_DVGnkBh;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_DVGnkBh=NULL;
        return;
        }
    temp_DVGnkBh=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int ImuCdFE=0; ImuCdFE < result.semaphoreCount; ImuCdFE++){
            [&]() {
temp_DVGnkBh[ImuCdFE]=deserialize_uint64_t(name["members"]["pValues"]["members"][ImuCdFE]);}();;
        }
        }();result.pValues=temp_DVGnkBh;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["semaphore"]=[&]() {
    json return_WbtnbpP=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_slkepUv=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["semaphore"]=[&]() {
    json return_WbtnbpP=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_slkepUv=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_Fpahrqg=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_cfKpUKY=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_yQXpUHP=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_KSPhWrc=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_KSPhWrc["null"]=true;
            return return_KSPhWrc;
        }
        
        return_KSPhWrc["members"]={};
        for(int KSPhWrc=0; KSPhWrc < name.vertexBindingDivisorCount; KSPhWrc++){
            json temp;
            temp=[&]() {
    json return_dciHHbZ=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[KSPhWrc]);}();
            return_KSPhWrc["members"].push_back(temp);
        }
        return return_KSPhWrc;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_OosMiOT;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_OosMiOT=NULL;
        return;
        }
    temp_OosMiOT=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int moYeJsx=0; moYeJsx < result.vertexBindingDivisorCount; moYeJsx++){
            [&]() {
temp_OosMiOT[moYeJsx]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][moYeJsx]);}();;
        }
        }();result.pVertexBindingDivisors=temp_OosMiOT;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_IxrXyeA=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["pciDomain"]=[&]() {
    json return_uvysdgv=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_FZASRBW=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_afaHejk=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_sZGustQ=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_DkIrTar=json({});
    return_DkIrTar=[&]() {
    json return_mQsBDXc=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_DkIrTar;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_ClKPUAn=json({});
    return_ClKPUAn=[&]() {
    json return_PflkTfi=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_ClKPUAn;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_rzCDsts=json({});
    return_rzCDsts=[&]() {
    json return_BBsnHXw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_rzCDsts;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_WCGzmtd=json({});
    return_WCGzmtd=[&]() {
    json return_jzNtegf=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_WCGzmtd;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_ClKPUAn=json({});
    return_ClKPUAn=[&]() {
    json return_PflkTfi=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_ClKPUAn;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_rzCDsts=json({});
    return_rzCDsts=[&]() {
    json return_BBsnHXw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_rzCDsts;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_WCGzmtd=json({});
    return_WCGzmtd=[&]() {
    json return_jzNtegf=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_WCGzmtd;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["conditionalRendering"]=[&]() {
    json return_wJvAOeI=json({});
    return_wJvAOeI=[&]() {
    json return_FYTflUx=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_wJvAOeI;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_EWFAuvi=json({});
    return_EWFAuvi=[&]() {
    json return_dKWZAfq=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_EWFAuvi;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_bztnqan=json({});
    return_bztnqan=[&]() {
    json return_sEIyjHL=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_bztnqan;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_cZFCBul=json({});
    return_cZFCBul=[&]() {
    json return_lxQxFhD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_cZFCBul;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_KfOQUWM=json({});
    return_KfOQUWM=[&]() {
    json return_KJfunQD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_KfOQUWM;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_bztnqan=json({});
    return_bztnqan=[&]() {
    json return_sEIyjHL=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_bztnqan;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_cZFCBul=json({});
    return_cZFCBul=[&]() {
    json return_lxQxFhD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_cZFCBul;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_KfOQUWM=json({});
    return_KfOQUWM=[&]() {
    json return_KJfunQD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_KfOQUWM;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_zItkmAV=json({});
    return_zItkmAV=[&]() {
    json return_jjIuQMK=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_zItkmAV;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_kAAnwCQ=json({});
    return_kAAnwCQ=[&]() {
    json return_CVrIhFq=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_kAAnwCQ;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_zItkmAV=json({});
    return_zItkmAV=[&]() {
    json return_jjIuQMK=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_zItkmAV;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_kAAnwCQ=json({});
    return_kAAnwCQ=[&]() {
    json return_CVrIhFq=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_kAAnwCQ;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_KjxylvN=json({});
    return_KjxylvN=[&]() {
    json return_FFZxCpi=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_KjxylvN;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_fBQVejN=json({});
    return_fBQVejN=[&]() {
    json return_UciBSIg=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_fBQVejN;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_WYVCImj=json({});
    return_WYVCImj=[&]() {
    json return_UTUqvsP=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_WYVCImj;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_ADmaIPl=json({});
    return_ADmaIPl=[&]() {
    json return_KRTEPkV=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_ADmaIPl;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_chAXHdS=json({});
    return_chAXHdS=[&]() {
    json return_JFlahRp=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_chAXHdS;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_IKXnTCO=json({});
    return_IKXnTCO=[&]() {
    json return_vmbnBzX=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_IKXnTCO;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_SFHEWiy=json({});
    return_SFHEWiy=[&]() {
    json return_dtxxxLb=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_SFHEWiy;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_GIYvygo=json({});
    return_GIYvygo=[&]() {
    json return_VWXDTKH=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_GIYvygo;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_uDAlwLm=json({});
    return_uDAlwLm=[&]() {
    json return_YvkdeYx=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_uDAlwLm;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_VPaEmdn=json({});
    return_VPaEmdn=[&]() {
    json return_qYbpEFt=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_VPaEmdn;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_MSGasfM=json({});
    return_MSGasfM=[&]() {
    json return_qTWyWUT=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_MSGasfM;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_VaUcymP=json({});
    return_VaUcymP=[&]() {
    json return_wHefiuQ=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_VaUcymP;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_lTYTHMg=json({});
    return_lTYTHMg=[&]() {
    json return_aCjSrpm=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_lTYTHMg;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_YDdjFKC=json({});
    return_YDdjFKC=[&]() {
    json return_lZtHZhW=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_YDdjFKC;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_cUUAmWB=json({});
    return_cUUAmWB=[&]() {
    json return_RzAigUH=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_cUUAmWB;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_oMTqJOy=json({});
    return_oMTqJOy=[&]() {
    json return_gZtqKOm=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_oMTqJOy;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_FNEKThc=json({});
    return_FNEKThc=[&]() {
    json return_vpuLjht=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_FNEKThc;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_oHnzuSY=json({});
    return_oHnzuSY=[&]() {
    json return_fAUaZab=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_oHnzuSY;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_ttPXZQA=json({});
    return_ttPXZQA=[&]() {
    json return_YVyzSjC=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_ttPXZQA;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_EShXSTh=json({});
    return_EShXSTh=[&]() {
    json return_xasYUgZ=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_EShXSTh;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_ZaDenJw=json({});
    return_ZaDenJw=[&]() {
    json return_IkBbQkD=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_ZaDenJw;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_LDGsEdO=json({});
    return_LDGsEdO=[&]() {
    json return_zMmXPwH=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_LDGsEdO;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_LRBxnYC=json({});
    return_LRBxnYC=[&]() {
    json return_WJIIWse=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_LRBxnYC;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_GMoYgUs=json({});
    return_GMoYgUs=[&]() {
    json return_XfNjxwd=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_GMoYgUs;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_mWWrBBP=json({});
    return_mWWrBBP=[&]() {
    json return_JItKrlG=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_mWWrBBP;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_TyGnOKM=json({});
    return_TyGnOKM=[&]() {
    json return_tCiLJia=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_TyGnOKM;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sLmbdhq=json({});
    
        if (name.pNext==NULL){
            return_sLmbdhq["null"]=true;
            return return_sLmbdhq;
        }
        return_sLmbdhq=[&]() {
    json return_voZpfut=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_voZpfut["null"]=true;
            return return_voZpfut;
        }
        
        return_voZpfut["members"]={};
        for(int voZpfut=0; voZpfut < strlen(((char*)(name.pNext)))+1; voZpfut++){
            json temp;
            temp=[&]() {
    json return_PMYpLVC=json({});
    return serialize_char(((char*)(name.pNext))[voZpfut]);}();
            return_voZpfut["members"].push_back(temp);
        }
        return return_voZpfut;
        }();return return_sLmbdhq;}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_XqEQPUF=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int pAdqvtr=0; pAdqvtr < name["members"]["pNext"]["members"].size(); pAdqvtr++){
            [&]() {
temp[pAdqvtr]=deserialize_char(name["members"]["pNext"]["members"][pAdqvtr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["stage"]=[&]() {
    json return_HPuWeMZ=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_ASJDxzs=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_ASJDxzs["null"]=true;
            return return_ASJDxzs;
        }
        return_ASJDxzs=[&]() {
    json return_dlJcMCH=json({});
    
        if (((char*)(name.pCheckpointMarker))==NULL){
            return_dlJcMCH["null"]=true;
            return return_dlJcMCH;
        }
        
        return_dlJcMCH["members"]={};
        for(int dlJcMCH=0; dlJcMCH < strlen(((char*)(name.pCheckpointMarker)))+1; dlJcMCH++){
            json temp;
            temp=[&]() {
    json return_biTDqNR=json({});
    return serialize_char(((char*)(name.pCheckpointMarker))[dlJcMCH]);}();
            return_dlJcMCH["members"].push_back(temp);
        }
        return return_dlJcMCH;
        }();return return_ASJDxzs;}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pCheckpointMarker"]["members"].size()*sizeof(char));
        for (int RCegkhN=0; RCegkhN < name["members"]["pCheckpointMarker"]["members"].size(); RCegkhN++){
            [&]() {
temp[RCegkhN]=deserialize_char(name["members"]["pCheckpointMarker"]["members"][RCegkhN]);}();;
        }
        }();result.pCheckpointMarker=(void*)temp;
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryBCebt=json({});
    
        if (name.pNext==NULL){
            return_ryBCebt["null"]=true;
            return return_ryBCebt;
        }
        return_ryBCebt=[&]() {
    json return_ADnTxBV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADnTxBV["null"]=true;
            return return_ADnTxBV;
        }
        
        return_ADnTxBV["members"]={};
        for(int ADnTxBV=0; ADnTxBV < strlen(((char*)(name.pNext)))+1; ADnTxBV++){
            json temp;
            temp=[&]() {
    json return_TxgwNDk=json({});
    return serialize_char(((char*)(name.pNext))[ADnTxBV]);}();
            return_ADnTxBV["members"].push_back(temp);
        }
        return return_ADnTxBV;
        }();return return_ryBCebt;}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_XXGEJPK=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_nhBKwBf=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_xoPoeOZ=json({});
    return_xoPoeOZ=[&]() {
    json return_IykWeer=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_xoPoeOZ;}();
result["members"]["independentResolve"]=[&]() {
    json return_tlsimAf=json({});
    return_tlsimAf=[&]() {
    json return_PknzWRP=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_tlsimAf;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UmbMfJN=0; UmbMfJN < name["members"]["pNext"]["members"].size(); UmbMfJN++){
            [&]() {
temp[UmbMfJN]=deserialize_char(name["members"]["pNext"]["members"][UmbMfJN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryBCebt=json({});
    
        if (name.pNext==NULL){
            return_ryBCebt["null"]=true;
            return return_ryBCebt;
        }
        return_ryBCebt=[&]() {
    json return_ADnTxBV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADnTxBV["null"]=true;
            return return_ADnTxBV;
        }
        
        return_ADnTxBV["members"]={};
        for(int ADnTxBV=0; ADnTxBV < strlen(((char*)(name.pNext)))+1; ADnTxBV++){
            json temp;
            temp=[&]() {
    json return_TxgwNDk=json({});
    return serialize_char(((char*)(name.pNext))[ADnTxBV]);}();
            return_ADnTxBV["members"].push_back(temp);
        }
        return return_ADnTxBV;
        }();return return_ryBCebt;}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_XXGEJPK=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_nhBKwBf=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_xoPoeOZ=json({});
    return_xoPoeOZ=[&]() {
    json return_IykWeer=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_xoPoeOZ;}();
result["members"]["independentResolve"]=[&]() {
    json return_tlsimAf=json({});
    return_tlsimAf=[&]() {
    json return_PknzWRP=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_tlsimAf;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UmbMfJN=0; UmbMfJN < name["members"]["pNext"]["members"].size(); UmbMfJN++){
            [&]() {
temp[UmbMfJN]=deserialize_char(name["members"]["pNext"]["members"][UmbMfJN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["depthResolveMode"]=[&]() {
    json return_xFNUBcd=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_zfGIhFl=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_gzCgMNb=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_gzCgMNb["null"]=true;
            return return_gzCgMNb;
        }
        return_gzCgMNb=[&]() {
    json return_VvQSUCE=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_gzCgMNb;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_kGhFvsG;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_kGhFvsG=NULL;
        return;
        }
    temp_kGhFvsG=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_kGhFvsG)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_kGhFvsG;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["depthResolveMode"]=[&]() {
    json return_xFNUBcd=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_zfGIhFl=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_gzCgMNb=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_gzCgMNb["null"]=true;
            return return_gzCgMNb;
        }
        return_gzCgMNb=[&]() {
    json return_VvQSUCE=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_gzCgMNb;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_kGhFvsG;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_kGhFvsG=NULL;
        return;
        }
    temp_kGhFvsG=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_kGhFvsG)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_kGhFvsG;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["decodeMode"]=[&]() {
    json return_wjbPVdK=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_BCmoFcL=json({});
    return_BCmoFcL=[&]() {
    json return_pTBMcei=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_BCmoFcL;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["transformFeedback"]=[&]() {
    json return_UiFCgGQ=json({});
    return_UiFCgGQ=[&]() {
    json return_jIMYpFx=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_UiFCgGQ;}();
result["members"]["geometryStreams"]=[&]() {
    json return_tSoZUoc=json({});
    return_tSoZUoc=[&]() {
    json return_hxHpbLm=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_tSoZUoc;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_efzxGIN=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_yWNMUrW=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_RkfNYoq=json({});
    return_RkfNYoq=[&]() {
    json return_hWgUZiz=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_RkfNYoq;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_GSravff=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_CuNoBQO=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_GQzUqYw=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_KMvMyhw=json({});
    return_KMvMyhw=[&]() {
    json return_SsHroCd=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_KMvMyhw;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_jaqdQDh=json({});
    return_jaqdQDh=[&]() {
    json return_FyUvNDP=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_jaqdQDh;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_THhZJHp=json({});
    return_THhZJHp=[&]() {
    json return_vBMpBIY=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_THhZJHp;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_CPjsIJH=json({});
    return_CPjsIJH=[&]() {
    json return_TiENKVa=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_CPjsIJH;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mILwBrE=json({});
    
        if (name.pNext==NULL){
            return_mILwBrE["null"]=true;
            return return_mILwBrE;
        }
        return_mILwBrE=[&]() {
    json return_LStNoUH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LStNoUH["null"]=true;
            return return_LStNoUH;
        }
        
        return_LStNoUH["members"]={};
        for(int LStNoUH=0; LStNoUH < strlen(((char*)(name.pNext)))+1; LStNoUH++){
            json temp;
            temp=[&]() {
    json return_pXWymYt=json({});
    return serialize_char(((char*)(name.pNext))[LStNoUH]);}();
            return_LStNoUH["members"].push_back(temp);
        }
        return return_LStNoUH;
        }();return return_mILwBrE;}();
result["members"]["flags"]=[&]() {
    json return_NFoTCEt=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_KtBOXar=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtWPJhQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtWPJhQ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RPFsQsS=0; RPFsQsS < name["members"]["pNext"]["members"].size(); RPFsQsS++){
            [&]() {
temp[RPFsQsS]=deserialize_char(name["members"]["pNext"]["members"][RPFsQsS]);}();;
        }
        }();temp_BtWPJhQ=(void*)temp;
}();result.pNext=temp_BtWPJhQ;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_dCBVudC=json({});
    return_dCBVudC=[&]() {
    json return_ZkuTjND=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_dCBVudC;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJVuNCu=json({});
    
        if (name.pNext==NULL){
            return_bJVuNCu["null"]=true;
            return return_bJVuNCu;
        }
        return_bJVuNCu=[&]() {
    json return_gSvJhWw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gSvJhWw["null"]=true;
            return return_gSvJhWw;
        }
        
        return_gSvJhWw["members"]={};
        for(int gSvJhWw=0; gSvJhWw < strlen(((char*)(name.pNext)))+1; gSvJhWw++){
            json temp;
            temp=[&]() {
    json return_LmeHFYb=json({});
    return serialize_char(((char*)(name.pNext))[gSvJhWw]);}();
            return_gSvJhWw["members"].push_back(temp);
        }
        return return_gSvJhWw;
        }();return return_bJVuNCu;}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_VfLhFUe=json({});
    return_VfLhFUe=[&]() {
    json return_mmFOdSJ=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_VfLhFUe;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lEvEGvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lEvEGvb=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int HrQiuVE=0; HrQiuVE < name["members"]["pNext"]["members"].size(); HrQiuVE++){
            [&]() {
temp[HrQiuVE]=deserialize_char(name["members"]["pNext"]["members"][HrQiuVE]);}();;
        }
        }();temp_lEvEGvb=(void*)temp;
}();result.pNext=temp_lEvEGvb;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_fepghfI=json({});
    return_fepghfI=[&]() {
    json return_BoPKlRQ=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_fepghfI;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fyiKgqT=json({});
    
        if (name.pNext==NULL){
            return_fyiKgqT["null"]=true;
            return return_fyiKgqT;
        }
        return_fyiKgqT=[&]() {
    json return_PVlVzUD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PVlVzUD["null"]=true;
            return return_PVlVzUD;
        }
        
        return_PVlVzUD["members"]={};
        for(int PVlVzUD=0; PVlVzUD < strlen(((char*)(name.pNext)))+1; PVlVzUD++){
            json temp;
            temp=[&]() {
    json return_iJMFbTE=json({});
    return serialize_char(((char*)(name.pNext))[PVlVzUD]);}();
            return_PVlVzUD["members"].push_back(temp);
        }
        return return_PVlVzUD;
        }();return return_fyiKgqT;}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_vowKuIk=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_NYrizQf=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_NYrizQf["null"]=true;
            return return_NYrizQf;
        }
        
        return_NYrizQf["members"]={};
        for(int NYrizQf=0; NYrizQf < name.exclusiveScissorCount; NYrizQf++){
            json temp;
            temp=[&]() {
    json return_TmuWBrW=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[NYrizQf]);}();
            return_NYrizQf["members"].push_back(temp);
        }
        return return_NYrizQf;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kChWqaa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kChWqaa=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kavmYFv=0; kavmYFv < name["members"]["pNext"]["members"].size(); kavmYFv++){
            [&]() {
temp[kavmYFv]=deserialize_char(name["members"]["pNext"]["members"][kavmYFv]);}();;
        }
        }();temp_kChWqaa=(void*)temp;
}();result.pNext=temp_kChWqaa;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_DwShAhg;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_DwShAhg=NULL;
        return;
        }
    temp_DwShAhg=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int fgyOAtZ=0; fgyOAtZ < result.exclusiveScissorCount; fgyOAtZ++){
            [&]() {
temp_DwShAhg[fgyOAtZ]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][fgyOAtZ]);}();;
        }
        }();result.pExclusiveScissors=temp_DwShAhg;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AZIcpLy=json({});
    
        if (name.pNext==NULL){
            return_AZIcpLy["null"]=true;
            return return_AZIcpLy;
        }
        return_AZIcpLy=[&]() {
    json return_HJEzPTB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HJEzPTB["null"]=true;
            return return_HJEzPTB;
        }
        
        return_HJEzPTB["members"]={};
        for(int HJEzPTB=0; HJEzPTB < strlen(((char*)(name.pNext)))+1; HJEzPTB++){
            json temp;
            temp=[&]() {
    json return_AwGVpxY=json({});
    return serialize_char(((char*)(name.pNext))[HJEzPTB]);}();
            return_HJEzPTB["members"].push_back(temp);
        }
        return return_HJEzPTB;
        }();return return_AZIcpLy;}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_BiZdRaz=json({});
    return_BiZdRaz=[&]() {
    json return_dquCRWW=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_BiZdRaz;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int aMnQrlT=0; aMnQrlT < name["members"]["pNext"]["members"].size(); aMnQrlT++){
            [&]() {
temp[aMnQrlT]=deserialize_char(name["members"]["pNext"]["members"][aMnQrlT]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_ukrezFy=json({});
    return_ukrezFy=[&]() {
    json return_DcZJPUo=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_ukrezFy;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_SqiokLA=json({});
    return_SqiokLA=[&]() {
    json return_kVwmdEz=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_SqiokLA;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AZIcpLy=json({});
    
        if (name.pNext==NULL){
            return_AZIcpLy["null"]=true;
            return return_AZIcpLy;
        }
        return_AZIcpLy=[&]() {
    json return_HJEzPTB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HJEzPTB["null"]=true;
            return return_HJEzPTB;
        }
        
        return_HJEzPTB["members"]={};
        for(int HJEzPTB=0; HJEzPTB < strlen(((char*)(name.pNext)))+1; HJEzPTB++){
            json temp;
            temp=[&]() {
    json return_AwGVpxY=json({});
    return serialize_char(((char*)(name.pNext))[HJEzPTB]);}();
            return_HJEzPTB["members"].push_back(temp);
        }
        return return_HJEzPTB;
        }();return return_AZIcpLy;}();
result["members"]["imageFootprint"]=[&]() {
    json return_tywLNFK=json({});
    return_tywLNFK=[&]() {
    json return_nVzBuqh=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_tywLNFK;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int aMnQrlT=0; aMnQrlT < name["members"]["pNext"]["members"].size(); aMnQrlT++){
            [&]() {
temp[aMnQrlT]=deserialize_char(name["members"]["pNext"]["members"][aMnQrlT]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_qZskswg=json({});
    return_qZskswg=[&]() {
    json return_aqajPzS=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_qZskswg;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["indirectCopy"]=[&]() {
    json return_cXoWAFn=json({});
    return_cXoWAFn=[&]() {
    json return_breziYG=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_cXoWAFn;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["supportedQueues"]=[&]() {
    json return_QnVAear=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yZrTRbN=json({});
    
        if (name.pNext==NULL){
            return_yZrTRbN["null"]=true;
            return return_yZrTRbN;
        }
        return_yZrTRbN=[&]() {
    json return_UCTKCEs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_UCTKCEs["null"]=true;
            return return_UCTKCEs;
        }
        
        return_UCTKCEs["members"]={};
        for(int UCTKCEs=0; UCTKCEs < strlen(((char*)(name.pNext)))+1; UCTKCEs++){
            json temp;
            temp=[&]() {
    json return_UUIrMQL=json({});
    return serialize_char(((char*)(name.pNext))[UCTKCEs]);}();
            return_UCTKCEs["members"].push_back(temp);
        }
        return return_UCTKCEs;
        }();return return_yZrTRbN;}();
result["members"]["memoryDecompression"]=[&]() {
    json return_MNYsHzj=json({});
    return_MNYsHzj=[&]() {
    json return_HpgtpEc=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_MNYsHzj;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZaoERcz=0; ZaoERcz < name["members"]["pNext"]["members"].size(); ZaoERcz++){
            [&]() {
temp[ZaoERcz]=deserialize_char(name["members"]["pNext"]["members"][ZaoERcz]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["decompressionMethods"]=[&]() {
    json return_IjbsxNE=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_ERHfuVi=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_jmxbmFb=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_gVyuEuH=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_gVyuEuH["null"]=true;
            return return_gVyuEuH;
        }
        
        return_gVyuEuH["members"]={};
        for(int gVyuEuH=0; gVyuEuH < name.shadingRatePaletteEntryCount; gVyuEuH++){
            json temp;
            temp=[&]() {
    json return_JNAaFcy=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[gVyuEuH]);}();
            return_gVyuEuH["members"].push_back(temp);
        }
        return return_gVyuEuH;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_Kygwpve;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_Kygwpve=NULL;
        return;
        }
    temp_Kygwpve=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int UAyBAPH=0; UAyBAPH < result.shadingRatePaletteEntryCount; UAyBAPH++){
            [&]() {
temp_Kygwpve[UAyBAPH]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][UAyBAPH]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_Kygwpve;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XUcnLKb=json({});
    
        if (name.pNext==NULL){
            return_XUcnLKb["null"]=true;
            return return_XUcnLKb;
        }
        return_XUcnLKb=[&]() {
    json return_ufzkmFv=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ufzkmFv["null"]=true;
            return return_ufzkmFv;
        }
        
        return_ufzkmFv["members"]={};
        for(int ufzkmFv=0; ufzkmFv < strlen(((char*)(name.pNext)))+1; ufzkmFv++){
            json temp;
            temp=[&]() {
    json return_IenIgFW=json({});
    return serialize_char(((char*)(name.pNext))[ufzkmFv]);}();
            return_ufzkmFv["members"].push_back(temp);
        }
        return return_ufzkmFv;
        }();return return_XUcnLKb;}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_NuFCqvd=json({});
    return_NuFCqvd=[&]() {
    json return_EdbqXyN=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_NuFCqvd;}();
result["members"]["viewportCount"]=[&]() {
    json return_cMVmCLy=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_uDMTKDG=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_uDMTKDG["null"]=true;
            return return_uDMTKDG;
        }
        
        return_uDMTKDG["members"]={};
        for(int uDMTKDG=0; uDMTKDG < name.viewportCount; uDMTKDG++){
            json temp;
            temp=[&]() {
    json return_XiwZyKY=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[uDMTKDG]);}();
            return_uDMTKDG["members"].push_back(temp);
        }
        return return_uDMTKDG;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PNRKDrN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PNRKDrN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DlqllKf=0; DlqllKf < name["members"]["pNext"]["members"].size(); DlqllKf++){
            [&]() {
temp[DlqllKf]=deserialize_char(name["members"]["pNext"]["members"][DlqllKf]);}();;
        }
        }();temp_PNRKDrN=(void*)temp;
}();result.pNext=temp_PNRKDrN;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_NWgDyWJ;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_NWgDyWJ=NULL;
        return;
        }
    temp_NWgDyWJ=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int UDCggid=0; UDCggid < result.viewportCount; UDCggid++){
            [&]() {
temp_NWgDyWJ[UDCggid]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][UDCggid]);}();;
        }
        }();result.pShadingRatePalettes=temp_NWgDyWJ;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shadingRateImage"]=[&]() {
    json return_dPWWiqb=json({});
    return_dPWWiqb=[&]() {
    json return_QBjjsSI=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_dPWWiqb;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_ucTnwlL=json({});
    return_ucTnwlL=[&]() {
    json return_xzhYCwY=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_ucTnwlL;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_nAsQdNA=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_MsjEWZb=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_nhYTjdf=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["invocationMask"]=[&]() {
    json return_KOJnJxL=json({});
    return_KOJnJxL=[&]() {
    json return_GbxWWno=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_KOJnJxL;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_qVkpSGA=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_NnuHVqf=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_HwEqUiE=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_FbPmvKS=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_MINWEqB=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_olYAFZF=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_WqxbYZF=json({});
    
        if (name.pSampleLocations==NULL){
            return_WqxbYZF["null"]=true;
            return return_WqxbYZF;
        }
        
        return_WqxbYZF["members"]={};
        for(int WqxbYZF=0; WqxbYZF < name.sampleLocationCount; WqxbYZF++){
            json temp;
            temp=[&]() {
    json return_SyhILgG=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[WqxbYZF]);}();
            return_WqxbYZF["members"].push_back(temp);
        }
        return return_WqxbYZF;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_qQUMROG;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_qQUMROG=NULL;
        return;
        }
    temp_qQUMROG=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int RdieQdL=0; RdieQdL < result.sampleLocationCount; RdieQdL++){
            [&]() {
temp_qQUMROG[RdieQdL]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][RdieQdL]);}();;
        }
        }();result.pSampleLocations=temp_qQUMROG;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sCmsUBd=json({});
    
        if (name.pNext==NULL){
            return_sCmsUBd["null"]=true;
            return return_sCmsUBd;
        }
        return_sCmsUBd=[&]() {
    json return_OFqqiGx=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_OFqqiGx["null"]=true;
            return return_OFqqiGx;
        }
        
        return_OFqqiGx["members"]={};
        for(int OFqqiGx=0; OFqqiGx < strlen(((char*)(name.pNext)))+1; OFqqiGx++){
            json temp;
            temp=[&]() {
    json return_oBYzEbo=json({});
    return serialize_char(((char*)(name.pNext))[OFqqiGx]);}();
            return_OFqqiGx["members"].push_back(temp);
        }
        return return_OFqqiGx;
        }();return return_sCmsUBd;}();
result["members"]["sampleOrderType"]=[&]() {
    json return_ChsZDzD=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_EdLImoT=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_RsEPPXm=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_RsEPPXm["null"]=true;
            return return_RsEPPXm;
        }
        
        return_RsEPPXm["members"]={};
        for(int RsEPPXm=0; RsEPPXm < name.customSampleOrderCount; RsEPPXm++){
            json temp;
            temp=[&]() {
    json return_atEZURa=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[RsEPPXm]);}();
            return_RsEPPXm["members"].push_back(temp);
        }
        return return_RsEPPXm;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LYpRwAQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LYpRwAQ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int rFUzSEs=0; rFUzSEs < name["members"]["pNext"]["members"].size(); rFUzSEs++){
            [&]() {
temp[rFUzSEs]=deserialize_char(name["members"]["pNext"]["members"][rFUzSEs]);}();;
        }
        }();temp_LYpRwAQ=(void*)temp;
}();result.pNext=temp_LYpRwAQ;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_imiggIR;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_imiggIR=NULL;
        return;
        }
    temp_imiggIR=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int WcBmIvG=0; WcBmIvG < result.customSampleOrderCount; WcBmIvG++){
            [&]() {
temp_imiggIR[WcBmIvG]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][WcBmIvG]);}();;
        }
        }();result.pCustomSampleOrders=temp_imiggIR;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["taskShader"]=[&]() {
    json return_OHMrvQR=json({});
    return_OHMrvQR=[&]() {
    json return_tpjFxuH=json({});
    return serialize_uint32_t(name.taskShader);}();return return_OHMrvQR;}();
result["members"]["meshShader"]=[&]() {
    json return_aFnJEoB=json({});
    return_aFnJEoB=[&]() {
    json return_hAGZISm=json({});
    return serialize_uint32_t(name.meshShader);}();return return_aFnJEoB;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_xKvBNFO=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_VxCCfZT=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_mCfLOJJ=json({});
    
        return_mCfLOJJ["members"]={};
        for(int mCfLOJJ=0; mCfLOJJ < 3; mCfLOJJ++){
            json temp;
            temp=[&]() {
    json return_KAtZjcq=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[mCfLOJJ]);}();
            return_mCfLOJJ["members"].push_back(temp);
        }
        return return_mCfLOJJ;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_ijNvaLV=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_auIayrx=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_eFLSjBw=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_ovHNVXL=json({});
    
        return_ovHNVXL["members"]={};
        for(int ovHNVXL=0; ovHNVXL < 3; ovHNVXL++){
            json temp;
            temp=[&]() {
    json return_ifanUHk=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[ovHNVXL]);}();
            return_ovHNVXL["members"].push_back(temp);
        }
        return return_ovHNVXL;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_GcbQeTy=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_RwkTjbx=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_OFedzAG=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_pRrMzxM=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_JIFuJhk=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_RitMPoP=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int DDaUBcZ=0; DDaUBcZ < 3; DDaUBcZ++){
            [&]() {
result.maxTaskWorkGroupSize[DDaUBcZ]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][DDaUBcZ]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int rmdsWMj=0; rmdsWMj < 3; rmdsWMj++){
            [&]() {
result.maxMeshWorkGroupSize[rmdsWMj]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][rmdsWMj]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_JahtoTV=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_OkOChtJ=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["taskShader"]=[&]() {
    json return_OHMrvQR=json({});
    return_OHMrvQR=[&]() {
    json return_tpjFxuH=json({});
    return serialize_uint32_t(name.taskShader);}();return return_OHMrvQR;}();
result["members"]["meshShader"]=[&]() {
    json return_vTTUaFG=json({});
    return_vTTUaFG=[&]() {
    json return_otamVNu=json({});
    return serialize_uint32_t(name.meshShader);}();return return_vTTUaFG;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_TXQSIoI=json({});
    return_TXQSIoI=[&]() {
    json return_IJFGFeF=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_TXQSIoI;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_Pnqycds=json({});
    return_Pnqycds=[&]() {
    json return_WaZxMYY=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_Pnqycds;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_YVIEQoS=json({});
    return_YVIEQoS=[&]() {
    json return_nYpAxPh=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_YVIEQoS;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_ZnBQhuq=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_dJeUwHs=json({});
    
        return_dJeUwHs["members"]={};
        for(int dJeUwHs=0; dJeUwHs < 3; dJeUwHs++){
            json temp;
            temp=[&]() {
    json return_ZhJtKBS=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[dJeUwHs]);}();
            return_dJeUwHs["members"].push_back(temp);
        }
        return return_dJeUwHs;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_VxCCfZT=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_mCfLOJJ=json({});
    
        return_mCfLOJJ["members"]={};
        for(int mCfLOJJ=0; mCfLOJJ < 3; mCfLOJJ++){
            json temp;
            temp=[&]() {
    json return_KAtZjcq=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[mCfLOJJ]);}();
            return_mCfLOJJ["members"].push_back(temp);
        }
        return return_mCfLOJJ;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_GCmzIHw=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_QgwhJWu=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_fwaBbar=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_RwkszUT=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_lYJriiD=json({});
    
        return_lYJriiD["members"]={};
        for(int lYJriiD=0; lYJriiD < 3; lYJriiD++){
            json temp;
            temp=[&]() {
    json return_uZowcsM=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[lYJriiD]);}();
            return_lYJriiD["members"].push_back(temp);
        }
        return return_lYJriiD;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_eFLSjBw=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_ovHNVXL=json({});
    
        return_ovHNVXL["members"]={};
        for(int ovHNVXL=0; ovHNVXL < 3; ovHNVXL++){
            json temp;
            temp=[&]() {
    json return_ifanUHk=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[ovHNVXL]);}();
            return_ovHNVXL["members"].push_back(temp);
        }
        return return_ovHNVXL;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_MYnThDU=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_zQguoWF=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_EJVmbcc=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_bWnGiDK=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_vHSBBge=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_RwkTjbx=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_OFedzAG=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_pMzaikg=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_pRrMzxM=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_JIFuJhk=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_CglNsxT=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_dMPUIzM=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_mFiHCkb=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_DlQcYqf=json({});
    return_DlQcYqf=[&]() {
    json return_BuVkSzT=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_DlQcYqf;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_joPUOct=json({});
    return_joPUOct=[&]() {
    json return_OTvMRwj=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_joPUOct;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_Ouxdphp=json({});
    return_Ouxdphp=[&]() {
    json return_afUWqgG=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_Ouxdphp;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_ovzJtox=json({});
    return_ovzJtox=[&]() {
    json return_LNHZZsp=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_ovzJtox;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int mMRVahm=0; mMRVahm < 3; mMRVahm++){
            [&]() {
result.maxTaskWorkGroupCount[mMRVahm]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][mMRVahm]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int DDaUBcZ=0; DDaUBcZ < 3; DDaUBcZ++){
            [&]() {
result.maxTaskWorkGroupSize[DDaUBcZ]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][DDaUBcZ]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int KDIKbNC=0; KDIKbNC < 3; KDIKbNC++){
            [&]() {
result.maxMeshWorkGroupCount[KDIKbNC]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][KDIKbNC]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int rmdsWMj=0; rmdsWMj < 3; rmdsWMj++){
            [&]() {
result.maxMeshWorkGroupSize[rmdsWMj]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][rmdsWMj]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_iiGPIzI=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_oZTQYcY=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_COwlCIs=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["type"]=[&]() {
    json return_nyZlPWc=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_krwHtLC=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_ICCJkFG=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_PIAkdUk=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_mfWYrdV=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["type"]=[&]() {
    json return_nyZlPWc=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_krwHtLC=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_ICCJkFG=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_PIAkdUk=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_iquplNL=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_rgEfBEf=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_rgEfBEf["null"]=true;
            return return_rgEfBEf;
        }
        return_rgEfBEf=[&]() {
    json return_LUAjcBd=json({});
    
        if (((char*)(name.pShaderGroupCaptureReplayHandle))==NULL){
            return_LUAjcBd["null"]=true;
            return return_LUAjcBd;
        }
        
        return_LUAjcBd["members"]={};
        for(int LUAjcBd=0; LUAjcBd < strlen(((char*)(name.pShaderGroupCaptureReplayHandle)))+1; LUAjcBd++){
            json temp;
            temp=[&]() {
    json return_FIZZAIC=json({});
    return serialize_char(((char*)(name.pShaderGroupCaptureReplayHandle))[LUAjcBd]);}();
            return_LUAjcBd["members"].push_back(temp);
        }
        return return_LUAjcBd;
        }();return return_rgEfBEf;}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_cSHLvWy;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_cSHLvWy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pShaderGroupCaptureReplayHandle"]["members"].size()*sizeof(char));
        for (int ydTNxzy=0; ydTNxzy < name["members"]["pShaderGroupCaptureReplayHandle"]["members"].size(); ydTNxzy++){
            [&]() {
temp[ydTNxzy]=deserialize_char(name["members"]["pShaderGroupCaptureReplayHandle"]["members"][ydTNxzy]);}();;
        }
        }();temp_cSHLvWy=(void*)temp;
}();result.pShaderGroupCaptureReplayHandle=temp_cSHLvWy;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_QEAOBUa=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_JlyVjYr=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_GyMJLYM=json({});
    
        if (name.pStages==NULL){
            return_GyMJLYM["null"]=true;
            return return_GyMJLYM;
        }
        
        return_GyMJLYM["members"]={};
        for(int GyMJLYM=0; GyMJLYM < name.stageCount; GyMJLYM++){
            json temp;
            temp=[&]() {
    json return_xYJxTed=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[GyMJLYM]);}();
            return_GyMJLYM["members"].push_back(temp);
        }
        return return_GyMJLYM;
        }();
result["members"]["groupCount"]=[&]() {
    json return_ARrJCyA=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_ffHJMuS=json({});
    
        if (name.pGroups==NULL){
            return_ffHJMuS["null"]=true;
            return return_ffHJMuS;
        }
        
        return_ffHJMuS["members"]={};
        for(int ffHJMuS=0; ffHJMuS < name.groupCount; ffHJMuS++){
            json temp;
            temp=[&]() {
    json return_OYxsnFB=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[ffHJMuS]);}();
            return_ffHJMuS["members"].push_back(temp);
        }
        return return_ffHJMuS;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_AnTNRSr=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_tCCjdPK=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_vtphLvD=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_itbcbqX=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_CrfIfUl;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_CrfIfUl=NULL;
        return;
        }
    temp_CrfIfUl=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int lJMHSSw=0; lJMHSSw < result.stageCount; lJMHSSw++){
            [&]() {
temp_CrfIfUl[lJMHSSw]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][lJMHSSw]);}();;
        }
        }();result.pStages=temp_CrfIfUl;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_GbhWBom;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_GbhWBom=NULL;
        return;
        }
    temp_GbhWBom=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int oMUIpiS=0; oMUIpiS < result.groupCount; oMUIpiS++){
            [&]() {
temp_GbhWBom[oMUIpiS]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][oMUIpiS]);}();;
        }
        }();result.pGroups=temp_GbhWBom;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_QEAOBUa=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_nKnMIHH=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_GyMJLYM=json({});
    
        if (name.pStages==NULL){
            return_GyMJLYM["null"]=true;
            return return_GyMJLYM;
        }
        
        return_GyMJLYM["members"]={};
        for(int GyMJLYM=0; GyMJLYM < name.stageCount; GyMJLYM++){
            json temp;
            temp=[&]() {
    json return_xYJxTed=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[GyMJLYM]);}();
            return_GyMJLYM["members"].push_back(temp);
        }
        return return_GyMJLYM;
        }();
result["members"]["groupCount"]=[&]() {
    json return_VmPvCve=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_KjgWNeo=json({});
    
        if (name.pGroups==NULL){
            return_KjgWNeo["null"]=true;
            return return_KjgWNeo;
        }
        
        return_KjgWNeo["members"]={};
        for(int KjgWNeo=0; KjgWNeo < name.groupCount; KjgWNeo++){
            json temp;
            temp=[&]() {
    json return_NnInaCF=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[KjgWNeo]);}();
            return_KjgWNeo["members"].push_back(temp);
        }
        return return_KjgWNeo;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_UxGmDfw=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_OQbsmup=json({});
    
        if (name.pLibraryInfo==NULL){
            return_OQbsmup["null"]=true;
            return return_OQbsmup;
        }
        return_OQbsmup=[&]() {
    json return_RyFbsSq=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_OQbsmup;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_IZCoxcj=json({});
    
        if (name.pLibraryInterface==NULL){
            return_IZCoxcj["null"]=true;
            return return_IZCoxcj;
        }
        return_IZCoxcj=[&]() {
    json return_sALsYtj=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_IZCoxcj;}();
result["members"]["pDynamicState"]=[&]() {
    json return_QgFlZvL=json({});
    
        if (name.pDynamicState==NULL){
            return_QgFlZvL["null"]=true;
            return return_QgFlZvL;
        }
        return_QgFlZvL=[&]() {
    json return_qizoect=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_QgFlZvL;}();
result["members"]["layout"]=[&]() {
    json return_tCCjdPK=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_vtphLvD=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_itbcbqX=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_CrfIfUl;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_CrfIfUl=NULL;
        return;
        }
    temp_CrfIfUl=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int lJMHSSw=0; lJMHSSw < result.stageCount; lJMHSSw++){
            [&]() {
temp_CrfIfUl[lJMHSSw]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][lJMHSSw]);}();;
        }
        }();result.pStages=temp_CrfIfUl;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_csaiKaO;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_csaiKaO=NULL;
        return;
        }
    temp_csaiKaO=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int HpeYvQL=0; HpeYvQL < result.groupCount; HpeYvQL++){
            [&]() {
temp_csaiKaO[HpeYvQL]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][HpeYvQL]);}();;
        }
        }();result.pGroups=temp_csaiKaO;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_OavKQxh;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_OavKQxh=NULL;
        return;
        }
    temp_OavKQxh=(VkPipelineLibraryCreateInfoKHR*)malloc(sizeof(VkPipelineLibraryCreateInfoKHR));
[&]() {
*(temp_OavKQxh)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_OavKQxh;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_vMsPiVY;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_vMsPiVY=NULL;
        return;
        }
    temp_vMsPiVY=(VkRayTracingPipelineInterfaceCreateInfoKHR*)malloc(sizeof(VkRayTracingPipelineInterfaceCreateInfoKHR));
[&]() {
*(temp_vMsPiVY)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_vMsPiVY;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_ghNcoXU;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_ghNcoXU=NULL;
        return;
        }
    temp_ghNcoXU=(VkPipelineDynamicStateCreateInfo*)malloc(sizeof(VkPipelineDynamicStateCreateInfo));
[&]() {
*(temp_ghNcoXU)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_ghNcoXU;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["vertexData"]=[&]() {
    json return_KMdzfvC=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_GXywTCL=json({});
    return_GXywTCL=[&]() {
    json return_hiEABXi=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_GXywTCL;}();
result["members"]["vertexCount"]=[&]() {
    json return_tDAjVaN=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_XPQAstY=json({});
    return_XPQAstY=[&]() {
    json return_UxAcsCG=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_XPQAstY;}();
result["members"]["vertexFormat"]=[&]() {
    json return_eiQevuX=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_kOyGBvW=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_gbZlTWd=json({});
    return_gbZlTWd=[&]() {
    json return_IEOrmAw=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_gbZlTWd;}();
result["members"]["indexCount"]=[&]() {
    json return_yHEwuEf=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_MknUpqn=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_UUpQYCU=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_iMAOizF=json({});
    return_iMAOizF=[&]() {
    json return_DRszKSJ=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_iMAOizF;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["aabbData"]=[&]() {
    json return_UAfXUsm=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_oHzFwUy=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_XgdYDCF=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_bxbiyaa=json({});
    return_bxbiyaa=[&]() {
    json return_XLwaJjj=json({});
    return serialize_uint64_t(name.offset);}();return return_bxbiyaa;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_TBageVi=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_KmQfOrM=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UtNZfxu=json({});
    
        if (name.pNext==NULL){
            return_UtNZfxu["null"]=true;
            return return_UtNZfxu;
        }
        return_UtNZfxu=[&]() {
    json return_ZMMnKvU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZMMnKvU["null"]=true;
            return return_ZMMnKvU;
        }
        
        return_ZMMnKvU["members"]={};
        for(int ZMMnKvU=0; ZMMnKvU < strlen(((char*)(name.pNext)))+1; ZMMnKvU++){
            json temp;
            temp=[&]() {
    json return_glCdzrK=json({});
    return serialize_char(((char*)(name.pNext))[ZMMnKvU]);}();
            return_ZMMnKvU["members"].push_back(temp);
        }
        return return_ZMMnKvU;
        }();return return_UtNZfxu;}();
result["members"]["geometryType"]=[&]() {
    json return_MmsRczJ=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_wxFmPvu=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_EZrvpXr=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JJbddRC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JJbddRC=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ilKPuBl=0; ilKPuBl < name["members"]["pNext"]["members"].size(); ilKPuBl++){
            [&]() {
temp[ilKPuBl]=deserialize_char(name["members"]["pNext"]["members"][ilKPuBl]);}();;
        }
        }();temp_JJbddRC=(void*)temp;
}();result.pNext=temp_JJbddRC;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["type"]=[&]() {
    json return_dqBimvO=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_JUYdqPs=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_DOKJDfj=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_EbzklVk=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_DRUmTOX=json({});
    
        if (name.pGeometries==NULL){
            return_DRUmTOX["null"]=true;
            return return_DRUmTOX;
        }
        
        return_DRUmTOX["members"]={};
        for(int DRUmTOX=0; DRUmTOX < name.geometryCount; DRUmTOX++){
            json temp;
            temp=[&]() {
    json return_vbIRNZS=json({});
    return serialize_VkGeometryNV(name.pGeometries[DRUmTOX]);}();
            return_DRUmTOX["members"].push_back(temp);
        }
        return return_DRUmTOX;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_VOLXZGt;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_VOLXZGt=NULL;
        return;
        }
    temp_VOLXZGt=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int eiIaLJP=0; eiIaLJP < result.geometryCount; eiIaLJP++){
            [&]() {
temp_VOLXZGt[eiIaLJP]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][eiIaLJP]);}();;
        }
        }();result.pGeometries=temp_VOLXZGt;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["compactedSize"]=[&]() {
    json return_irzkMIN=json({});
    return_irzkMIN=[&]() {
    json return_dzIfSot=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_irzkMIN;}();
result["members"]["info"]=[&]() {
    json return_BUicanl=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_hnFhXTT=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_XDbqZhj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_PakUhAe=json({});
    return_PakUhAe=[&]() {
    json return_XRYUYHE=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_PakUhAe;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_KClraJS=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_TCEYfPe=json({});
    
        if (name.pDeviceIndices==NULL){
            return_TCEYfPe["null"]=true;
            return return_TCEYfPe;
        }
        
        return_TCEYfPe["members"]={};
        for(int TCEYfPe=0; TCEYfPe < name.deviceIndexCount; TCEYfPe++){
            json temp;
            temp=[&]() {
    json return_cSNsecN=json({});
    return serialize_uint32_t(name.pDeviceIndices[TCEYfPe]);}();
            return_TCEYfPe["members"].push_back(temp);
        }
        return return_TCEYfPe;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_TwKwSob;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_TwKwSob=NULL;
        return;
        }
    temp_TwKwSob=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int HQDyaVw=0; HQDyaVw < result.deviceIndexCount; HQDyaVw++){
            [&]() {
temp_TwKwSob[HQDyaVw]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][HQDyaVw]);}();;
        }
        }();result.pDeviceIndices=temp_TwKwSob;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_ErloWjf=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_DOhZTzQ=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_DOhZTzQ["null"]=true;
            return return_DOhZTzQ;
        }
        
        return_DOhZTzQ["members"]={};
        for(int DOhZTzQ=0; DOhZTzQ < name.accelerationStructureCount; DOhZTzQ++){
            json temp;
            temp=[&]() {
    json return_hkBirKA=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[DOhZTzQ]);}();
            return_DOhZTzQ["members"].push_back(temp);
        }
        return return_DOhZTzQ;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_aUQsOqk;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_aUQsOqk=NULL;
        return;
        }
    temp_aUQsOqk=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int CEFPbTh=0; CEFPbTh < result.accelerationStructureCount; CEFPbTh++){
            [&]() {
temp_aUQsOqk[CEFPbTh]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][CEFPbTh]);}();;
        }
        }();result.pAccelerationStructures=temp_aUQsOqk;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_ErloWjf=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_WWhrLtG=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_WWhrLtG["null"]=true;
            return return_WWhrLtG;
        }
        
        return_WWhrLtG["members"]={};
        for(int WWhrLtG=0; WWhrLtG < name.accelerationStructureCount; WWhrLtG++){
            json temp;
            temp=[&]() {
    json return_vURSOTe=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[WWhrLtG]);}();
            return_WWhrLtG["members"].push_back(temp);
        }
        return return_WWhrLtG;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_EVMdGeY;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_EVMdGeY=NULL;
        return;
        }
    temp_EVMdGeY=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int sUvdFMH=0; sUvdFMH < result.accelerationStructureCount; sUvdFMH++){
            [&]() {
temp_EVMdGeY[sUvdFMH]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][sUvdFMH]);}();;
        }
        }();result.pAccelerationStructures=temp_EVMdGeY;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ObdWqwy=json({});
    
        if (name.pNext==NULL){
            return_ObdWqwy["null"]=true;
            return return_ObdWqwy;
        }
        return_ObdWqwy=[&]() {
    json return_omdKpwK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_omdKpwK["null"]=true;
            return return_omdKpwK;
        }
        
        return_omdKpwK["members"]={};
        for(int omdKpwK=0; omdKpwK < strlen(((char*)(name.pNext)))+1; omdKpwK++){
            json temp;
            temp=[&]() {
    json return_qeQDPTn=json({});
    return serialize_char(((char*)(name.pNext))[omdKpwK]);}();
            return_omdKpwK["members"].push_back(temp);
        }
        return return_omdKpwK;
        }();return return_ObdWqwy;}();
result["members"]["type"]=[&]() {
    json return_ihszmhU=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_uteCUCr=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ETCebxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ETCebxi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DBXiMSF=0; DBXiMSF < name["members"]["pNext"]["members"].size(); DBXiMSF++){
            [&]() {
temp[DBXiMSF]=deserialize_char(name["members"]["pNext"]["members"][DBXiMSF]);}();;
        }
        }();temp_ETCebxi=(void*)temp;
}();result.pNext=temp_ETCebxi;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_dttVTjh=json({});
    return_dttVTjh=[&]() {
    json return_BXDusXU=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_dttVTjh;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_PgvlqlD=json({});
    return_PgvlqlD=[&]() {
    json return_kgYVopG=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_PgvlqlD;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_WePwbbx=json({});
    return_WePwbbx=[&]() {
    json return_UEqrjqd=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_WePwbbx;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_HyhSfaa=json({});
    return_HyhSfaa=[&]() {
    json return_KRWaIMJ=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_HyhSfaa;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_sThsiKA=json({});
    return_sThsiKA=[&]() {
    json return_cUGudZd=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_sThsiKA;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_uhjQJyY=json({});
    return_uhjQJyY=[&]() {
    json return_QgpKguC=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_uhjQJyY;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_CRkOeEP=json({});
    return_CRkOeEP=[&]() {
    json return_vSOhsYL=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_CRkOeEP;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_wClLKtx=json({});
    return_wClLKtx=[&]() {
    json return_NUmOkMd=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_wClLKtx;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_UjTQbKl=json({});
    return_UjTQbKl=[&]() {
    json return_XNjonvH=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_UjTQbKl;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_ACayJhd=json({});
    return_ACayJhd=[&]() {
    json return_hnsfjSF=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_ACayJhd;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["rayQuery"]=[&]() {
    json return_ZMYHNlY=json({});
    return_ZMYHNlY=[&]() {
    json return_wakbLpq=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_ZMYHNlY;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_LMmqBkX=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_TjQNuat=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_HrbSzNj=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_ZwfVmPG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_dZddVqd=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_evoSuIX=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_YIcYukc=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_HxWaola=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_wOfSvHb=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_nnCStHC=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_RJmmRMm=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_ROoZCxW=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_pdOvcSu=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_VTATrsu=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_ndvzDaF=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_FTdqxaz=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_wOfSvHb=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_FrJxhwX=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_RJmmRMm=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_ROoZCxW=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_LMmqBkX=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_TjQNuat=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_QmdjVFz=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_QeBbZwY=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_RReWCzl=json({});
    return_RReWCzl=[&]() {
    json return_ElFxSkz=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_RReWCzl;}();
result["members"]["stride"]=[&]() {
    json return_IOsfGsR=json({});
    return_IOsfGsR=[&]() {
    json return_ADUcEeS=json({});
    return serialize_uint64_t(name.stride);}();return return_IOsfGsR;}();
result["members"]["size"]=[&]() {
    json return_wPIIxYr=json({});
    return_wPIIxYr=[&]() {
    json return_MhTlZty=json({});
    return serialize_uint64_t(name.size);}();return return_wPIIxYr;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_yDcTdlz=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HyEBIoJ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_unDrqGm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_mvnYyIz=json({});
    return_mvnYyIz=[&]() {
    json return_WzICeUP=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_mvnYyIz;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_sZOgVMz=json({});
    return_sZOgVMz=[&]() {
    json return_XfFobWT=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_sZOgVMz;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_yfyQNnN=json({});
    return_yfyQNnN=[&]() {
    json return_SfovUlK=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_yfyQNnN;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_QEsYDMa=json({});
    return_QEsYDMa=[&]() {
    json return_qoCzIdR=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_QEsYDMa;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_qryvDfr=json({});
    return_qryvDfr=[&]() {
    json return_PzIwwJR=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_qryvDfr;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_rslAWai=json({});
    return_rslAWai=[&]() {
    json return_TUUStyl=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_rslAWai;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_cmKSlzA=json({});
    return_cmKSlzA=[&]() {
    json return_lxmBGtU=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_cmKSlzA;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_KNsXnvS=json({});
    return_KNsXnvS=[&]() {
    json return_XOXcOIc=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_KNsXnvS;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_cyEirSe=json({});
    return_cyEirSe=[&]() {
    json return_ktpxIGg=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_cyEirSe;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_QfJBFYv=json({});
    return_QfJBFYv=[&]() {
    json return_UjpViSd=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_QfJBFYv;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_odRtfDM=json({});
    return_odRtfDM=[&]() {
    json return_fiEefQR=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_odRtfDM;}();
result["members"]["width"]=[&]() {
    json return_yDcTdlz=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HyEBIoJ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_unDrqGm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_rKmmPfL=json({});
    return_rKmmPfL=[&]() {
    json return_raCPDZI=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_rKmmPfL;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_kfjAmVl=json({});
    return_kfjAmVl=[&]() {
    json return_YfidGsf=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_kfjAmVl;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_GynZHjI=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_ILykUKq=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_ILykUKq["null"]=true;
            return return_ILykUKq;
        }
        
        return_ILykUKq["members"]={};
        for(int ILykUKq=0; ILykUKq < name.drmFormatModifierCount; ILykUKq++){
            json temp;
            temp=[&]() {
    json return_qDPLegW=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[ILykUKq]);}();
            return_ILykUKq["members"].push_back(temp);
        }
        return return_ILykUKq;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        return;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int PADPfnf=0; PADPfnf < result.drmFormatModifierCount; PADPfnf++){
            [&]() {
result.pDrmFormatModifierProperties[PADPfnf]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][PADPfnf]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_dXPjFFZ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_TFWIzwE=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_JijxrlT=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_dXPjFFZ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_qAqWsEM=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_TQJSGbR=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_KjAaiDf=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_KjAaiDf["null"]=true;
            return return_KjAaiDf;
        }
        
        return_KjAaiDf["members"]={};
        for(int KjAaiDf=0; KjAaiDf < name.queueFamilyIndexCount; KjAaiDf++){
            json temp;
            temp=[&]() {
    json return_QwwhZqJ=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[KjAaiDf]);}();
            return_KjAaiDf["members"].push_back(temp);
        }
        return return_KjAaiDf;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_dFyxKlp;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_dFyxKlp=NULL;
        return;
        }
    temp_dFyxKlp=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int jXDplKe=0; jXDplKe < result.queueFamilyIndexCount; jXDplKe++){
            [&]() {
temp_dFyxKlp[jXDplKe]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][jXDplKe]);}();;
        }
        }();result.pQueueFamilyIndices=temp_dFyxKlp;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_GynZHjI=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_VqwGuqh=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_VqwGuqh["null"]=true;
            return return_VqwGuqh;
        }
        
        return_VqwGuqh["members"]={};
        for(int VqwGuqh=0; VqwGuqh < name.drmFormatModifierCount; VqwGuqh++){
            json temp;
            temp=[&]() {
    json return_yHAkdTX=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[VqwGuqh]);}();
            return_VqwGuqh["members"].push_back(temp);
        }
        return return_VqwGuqh;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_XRtcdkK;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_XRtcdkK=NULL;
        return;
        }
    temp_XRtcdkK=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int sMHhmsf=0; sMHhmsf < result.drmFormatModifierCount; sMHhmsf++){
            [&]() {
temp_XRtcdkK[sMHhmsf]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][sMHhmsf]);}();;
        }
        }();result.pDrmFormatModifiers=temp_XRtcdkK;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_dXPjFFZ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_TFWIzwE=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_nGwiZDs=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_nGwiZDs["null"]=true;
            return return_nGwiZDs;
        }
        
        return_nGwiZDs["members"]={};
        for(int nGwiZDs=0; nGwiZDs < name.drmFormatModifierPlaneCount; nGwiZDs++){
            json temp;
            temp=[&]() {
    json return_IANSsCC=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[nGwiZDs]);}();
            return_nGwiZDs["members"].push_back(temp);
        }
        return return_nGwiZDs;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_rdPjARD;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_rdPjARD=NULL;
        return;
        }
    temp_rdPjARD=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int ieJkEUv=0; ieJkEUv < result.drmFormatModifierPlaneCount; ieJkEUv++){
            [&]() {
temp_rdPjARD[ieJkEUv]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][ieJkEUv]);}();;
        }
        }();result.pPlaneLayouts=temp_rdPjARD;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_fUYRBgc=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["stencilUsage"]=[&]() {
    json return_sPLbHht=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["stencilUsage"]=[&]() {
    json return_sPLbHht=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_lLphwSo=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_ktBAtga=json({});
    return_ktBAtga=[&]() {
    json return_JbXUZds=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_ktBAtga;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_XqhvwlG=json({});
    return_XqhvwlG=[&]() {
    json return_UsNcmyf=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_XqhvwlG;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_FdmJrBB=json({});
    return_FdmJrBB=[&]() {
    json return_LMQnzxV=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_FdmJrBB;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_sPNawbu=json({});
    return_sPNawbu=[&]() {
    json return_BKZptBK=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_sPNawbu;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_ivytcJt=json({});
    return_ivytcJt=[&]() {
    json return_iZiJkSG=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_ivytcJt;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_WuJMvsm=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_GxbpMFX=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_ybvhooR=json({});
    return_ybvhooR=[&]() {
    json return_OoWvRGr=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_ybvhooR;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["subsampledLoads"]=[&]() {
    json return_pADgCRa=json({});
    return_pADgCRa=[&]() {
    json return_KgdIIMJ=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_pADgCRa;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_yDWnodD=json({});
    return_yDWnodD=[&]() {
    json return_OHZwDUo=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_yDWnodD;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_rJxCMGC=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_ybXgfdd=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_ArXTToD=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_hhWRljd=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_GdOWAyg=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_NNFTaEb=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_NNFTaEb["null"]=true;
            return return_NNFTaEb;
        }
        
        return_NNFTaEb["members"]={};
        for(int NNFTaEb=0; NNFTaEb < name.fragmentDensityOffsetCount; NNFTaEb++){
            json temp;
            temp=[&]() {
    json return_JiWzeXw=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[NNFTaEb]);}();
            return_NNFTaEb["members"].push_back(temp);
        }
        return return_NNFTaEb;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_ciqvFRy;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_ciqvFRy=NULL;
        return;
        }
    temp_ciqvFRy=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int PoXpIZi=0; PoXpIZi < result.fragmentDensityOffsetCount; PoXpIZi++){
            [&]() {
temp_ciqvFRy[PoXpIZi]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][PoXpIZi]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_ciqvFRy;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_HKYAwxT=json({});
    return_HKYAwxT=[&]() {
    json return_QDeyWPB=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_HKYAwxT;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_HKYAwxT=json({});
    return_HKYAwxT=[&]() {
    json return_QDeyWPB=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_HKYAwxT;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["supportsProtected"]=[&]() {
    json return_whGgpkc=json({});
    return_whGgpkc=[&]() {
    json return_rOkibEy=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_whGgpkc;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_QuYUniJ=json({});
    return_QuYUniJ=[&]() {
    json return_PkNVSPD=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_QuYUniJ;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_QuYUniJ=json({});
    return_QuYUniJ=[&]() {
    json return_PkNVSPD=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_QuYUniJ;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["depthClipEnable"]=[&]() {
    json return_GduuwuX=json({});
    return_GduuwuX=[&]() {
    json return_OUqKvOw=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_GduuwuX;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FeVFuAL=json({});
    
        if (name.pNext==NULL){
            return_FeVFuAL["null"]=true;
            return return_FeVFuAL;
        }
        return_FeVFuAL=[&]() {
    json return_gKtmbTH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gKtmbTH["null"]=true;
            return return_gKtmbTH;
        }
        
        return_gKtmbTH["members"]={};
        for(int gKtmbTH=0; gKtmbTH < strlen(((char*)(name.pNext)))+1; gKtmbTH++){
            json temp;
            temp=[&]() {
    json return_wLfAaPh=json({});
    return serialize_char(((char*)(name.pNext))[gKtmbTH]);}();
            return_gKtmbTH["members"].push_back(temp);
        }
        return return_gKtmbTH;
        }();return return_FeVFuAL;}();
result["members"]["flags"]=[&]() {
    json return_SRYZpWn=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_YyWTXgZ=json({});
    return_YyWTXgZ=[&]() {
    json return_LGIZmZc=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_YyWTXgZ;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_raXkrsj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_raXkrsj=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kAAyiND=0; kAAyiND < name["members"]["pNext"]["members"].size(); kAAyiND++){
            [&]() {
temp[kAAyiND]=deserialize_char(name["members"]["pNext"]["members"][kAAyiND]);}();;
        }
        }();temp_raXkrsj=(void*)temp;
}();result.pNext=temp_raXkrsj;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["heapBudget"]=[&]() {
    json return_ZWYEPiI=json({});
    
        return_ZWYEPiI["members"]={};
        for(int ZWYEPiI=0; ZWYEPiI < VK_MAX_MEMORY_HEAPS; ZWYEPiI++){
            json temp;
            temp=[&]() {
    json return_ssLTDjq=json({});
    return_ssLTDjq=[&]() {
    json return_tqQPPJG=json({});
    return serialize_uint64_t(name.heapBudget[ZWYEPiI]);}();return return_ssLTDjq;}();
            return_ZWYEPiI["members"].push_back(temp);
        }
        return return_ZWYEPiI;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_dHqIwbf=json({});
    
        return_dHqIwbf["members"]={};
        for(int dHqIwbf=0; dHqIwbf < VK_MAX_MEMORY_HEAPS; dHqIwbf++){
            json temp;
            temp=[&]() {
    json return_BdKcdsE=json({});
    return_BdKcdsE=[&]() {
    json return_cwNtVST=json({});
    return serialize_uint64_t(name.heapUsage[dHqIwbf]);}();return return_BdKcdsE;}();
            return_dHqIwbf["members"].push_back(temp);
        }
        return return_dHqIwbf;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {

        for (int CjvJdGi=0; CjvJdGi < VK_MAX_MEMORY_HEAPS; CjvJdGi++){
            [&]() {
result.heapBudget[CjvJdGi]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][CjvJdGi]);}();;
        }
        }();}();
[&]() {
[&]() {

        for (int fVXTwRu=0; fVXTwRu < VK_MAX_MEMORY_HEAPS; fVXTwRu++){
            [&]() {
result.heapUsage[fVXTwRu]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][fVXTwRu]);}();;
        }
        }();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["memoryPriority"]=[&]() {
    json return_vyjjMla=json({});
    return_vyjjMla=[&]() {
    json return_XDPXyEI=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_vyjjMla;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["priority"]=[&]() {
    json return_wvHQULq=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_cGoxCDh=json({});
    return_cGoxCDh=[&]() {
    json return_HANQUUl=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_cGoxCDh;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_WRkvgZW=json({});
    return_WRkvgZW=[&]() {
    json return_OoMlOnP=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_WRkvgZW;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_AbpVdne=json({});
    return_AbpVdne=[&]() {
    json return_SaMoWUE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_AbpVdne;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_gDYozud=json({});
    return_gDYozud=[&]() {
    json return_yCnlAxW=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_gDYozud;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_WRkvgZW=json({});
    return_WRkvgZW=[&]() {
    json return_OoMlOnP=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_WRkvgZW;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_AbpVdne=json({});
    return_AbpVdne=[&]() {
    json return_SaMoWUE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_AbpVdne;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_gDYozud=json({});
    return_gDYozud=[&]() {
    json return_yCnlAxW=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_gDYozud;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_WRkvgZW=json({});
    return_WRkvgZW=[&]() {
    json return_OoMlOnP=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_WRkvgZW;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_AbpVdne=json({});
    return_AbpVdne=[&]() {
    json return_SaMoWUE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_AbpVdne;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_gDYozud=json({});
    return_gDYozud=[&]() {
    json return_yCnlAxW=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_gDYozud;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_WRkvgZW=json({});
    return_WRkvgZW=[&]() {
    json return_OoMlOnP=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_WRkvgZW;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_AbpVdne=json({});
    return_AbpVdne=[&]() {
    json return_SaMoWUE=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_AbpVdne;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_gDYozud=json({});
    return_gDYozud=[&]() {
    json return_yCnlAxW=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_gDYozud;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["buffer"]=[&]() {
    json return_mKtOwWC=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["buffer"]=[&]() {
    json return_mKtOwWC=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["buffer"]=[&]() {
    json return_mKtOwWC=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pSjcntS=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pSjcntS=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["deviceAddress"]=[&]() {
    json return_LzHjiBV=json({});
    return_LzHjiBV=[&]() {
    json return_iYgmOgK=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_LzHjiBV;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["imageViewType"]=[&]() {
    json return_dRyAmDV=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["filterCubic"]=[&]() {
    json return_xIcFUdw=json({});
    return_xIcFUdw=[&]() {
    json return_CIqvBbm=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_xIcFUdw;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_PdrSNSG=json({});
    return_PdrSNSG=[&]() {
    json return_OwVeVWI=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_PdrSNSG;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYOWBxS=json({});
    
        if (name.pNext==NULL){
            return_RYOWBxS["null"]=true;
            return return_RYOWBxS;
        }
        return_RYOWBxS=[&]() {
    json return_hByJpGl=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hByJpGl["null"]=true;
            return return_hByJpGl;
        }
        
        return_hByJpGl["members"]={};
        for(int hByJpGl=0; hByJpGl < strlen(((char*)(name.pNext)))+1; hByJpGl++){
            json temp;
            temp=[&]() {
    json return_zOSmHzD=json({});
    return serialize_char(((char*)(name.pNext))[hByJpGl]);}();
            return_hByJpGl["members"].push_back(temp);
        }
        return return_hByJpGl;
        }();return return_RYOWBxS;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_CNivwvh=json({});
    return_CNivwvh=[&]() {
    json return_LiGJHgr=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_CNivwvh;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sKmKhOn=0; sKmKhOn < name["members"]["pNext"]["members"].size(); sKmKhOn++){
            [&]() {
temp[sKmKhOn]=deserialize_char(name["members"]["pNext"]["members"][sKmKhOn]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYOWBxS=json({});
    
        if (name.pNext==NULL){
            return_RYOWBxS["null"]=true;
            return return_RYOWBxS;
        }
        return_RYOWBxS=[&]() {
    json return_hByJpGl=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hByJpGl["null"]=true;
            return return_hByJpGl;
        }
        
        return_hByJpGl["members"]={};
        for(int hByJpGl=0; hByJpGl < strlen(((char*)(name.pNext)))+1; hByJpGl++){
            json temp;
            temp=[&]() {
    json return_zOSmHzD=json({});
    return serialize_char(((char*)(name.pNext))[hByJpGl]);}();
            return_hByJpGl["members"].push_back(temp);
        }
        return return_hByJpGl;
        }();return return_RYOWBxS;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_CNivwvh=json({});
    return_CNivwvh=[&]() {
    json return_LiGJHgr=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_CNivwvh;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sKmKhOn=0; sKmKhOn < name["members"]["pNext"]["members"].size(); sKmKhOn++){
            [&]() {
temp[sKmKhOn]=deserialize_char(name["members"]["pNext"]["members"][sKmKhOn]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_kNvWbiO=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_pLUtvkJ=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_pLUtvkJ["null"]=true;
            return return_pLUtvkJ;
        }
        
        return_pLUtvkJ["members"]={};
        for(int pLUtvkJ=0; pLUtvkJ < name.attachmentImageInfoCount; pLUtvkJ++){
            json temp;
            temp=[&]() {
    json return_ppzMTxP=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[pLUtvkJ]);}();
            return_pLUtvkJ["members"].push_back(temp);
        }
        return return_pLUtvkJ;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_VXkPcHT;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_VXkPcHT=NULL;
        return;
        }
    temp_VXkPcHT=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int DZRWXDX=0; DZRWXDX < result.attachmentImageInfoCount; DZRWXDX++){
            [&]() {
temp_VXkPcHT[DZRWXDX]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][DZRWXDX]);}();;
        }
        }();result.pAttachmentImageInfos=temp_VXkPcHT;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_kNvWbiO=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_pLUtvkJ=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_pLUtvkJ["null"]=true;
            return return_pLUtvkJ;
        }
        
        return_pLUtvkJ["members"]={};
        for(int pLUtvkJ=0; pLUtvkJ < name.attachmentImageInfoCount; pLUtvkJ++){
            json temp;
            temp=[&]() {
    json return_ppzMTxP=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[pLUtvkJ]);}();
            return_pLUtvkJ["members"].push_back(temp);
        }
        return return_pLUtvkJ;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_VXkPcHT;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_VXkPcHT=NULL;
        return;
        }
    temp_VXkPcHT=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int DZRWXDX=0; DZRWXDX < result.attachmentImageInfoCount; DZRWXDX++){
            [&]() {
temp_VXkPcHT[DZRWXDX]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][DZRWXDX]);}();;
        }
        }();result.pAttachmentImageInfos=temp_VXkPcHT;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["flags"]=[&]() {
    json return_akXERgJ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_LPSmZbR=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_sdIcEbX=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_gKgNksO=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_isnXRRc=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_KWEvZCf=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_YpmHarF=json({});
    
        if (name.pViewFormats==NULL){
            return_YpmHarF["null"]=true;
            return return_YpmHarF;
        }
        
        return_YpmHarF["members"]={};
        for(int YpmHarF=0; YpmHarF < name.viewFormatCount; YpmHarF++){
            json temp;
            temp=[&]() {
    json return_unudvLQ=json({});
    return serialize_VkFormat(name.pViewFormats[YpmHarF]);}();
            return_YpmHarF["members"].push_back(temp);
        }
        return return_YpmHarF;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_whHDMAr;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_whHDMAr=NULL;
        return;
        }
    temp_whHDMAr=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int BtmWzmO=0; BtmWzmO < result.viewFormatCount; BtmWzmO++){
            [&]() {
temp_whHDMAr[BtmWzmO]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][BtmWzmO]);}();;
        }
        }();result.pViewFormats=temp_whHDMAr;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["flags"]=[&]() {
    json return_akXERgJ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_LPSmZbR=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_sdIcEbX=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_gKgNksO=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_isnXRRc=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_KWEvZCf=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_YpmHarF=json({});
    
        if (name.pViewFormats==NULL){
            return_YpmHarF["null"]=true;
            return return_YpmHarF;
        }
        
        return_YpmHarF["members"]={};
        for(int YpmHarF=0; YpmHarF < name.viewFormatCount; YpmHarF++){
            json temp;
            temp=[&]() {
    json return_unudvLQ=json({});
    return serialize_VkFormat(name.pViewFormats[YpmHarF]);}();
            return_YpmHarF["members"].push_back(temp);
        }
        return return_YpmHarF;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_whHDMAr;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_whHDMAr=NULL;
        return;
        }
    temp_whHDMAr=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int BtmWzmO=0; BtmWzmO < result.viewFormatCount; BtmWzmO++){
            [&]() {
temp_whHDMAr[BtmWzmO]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][BtmWzmO]);}();;
        }
        }();result.pViewFormats=temp_whHDMAr;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["attachmentCount"]=[&]() {
    json return_WQhaCHS=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_CjRVPAb=json({});
    
        if (name.pAttachments==NULL){
            return_CjRVPAb["null"]=true;
            return return_CjRVPAb;
        }
        
        return_CjRVPAb["members"]={};
        for(int CjRVPAb=0; CjRVPAb < name.attachmentCount; CjRVPAb++){
            json temp;
            temp=[&]() {
    json return_pIpoGkp=json({});
    return serialize_VkImageView(name.pAttachments[CjRVPAb]);}();
            return_CjRVPAb["members"].push_back(temp);
        }
        return return_CjRVPAb;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_MsArVTb;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_MsArVTb=NULL;
        return;
        }
    temp_MsArVTb=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int xVJLLTt=0; xVJLLTt < result.attachmentCount; xVJLLTt++){
            [&]() {
temp_MsArVTb[xVJLLTt]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][xVJLLTt]);}();;
        }
        }();result.pAttachments=temp_MsArVTb;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["attachmentCount"]=[&]() {
    json return_WQhaCHS=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_CjRVPAb=json({});
    
        if (name.pAttachments==NULL){
            return_CjRVPAb["null"]=true;
            return return_CjRVPAb;
        }
        
        return_CjRVPAb["members"]={};
        for(int CjRVPAb=0; CjRVPAb < name.attachmentCount; CjRVPAb++){
            json temp;
            temp=[&]() {
    json return_pIpoGkp=json({});
    return serialize_VkImageView(name.pAttachments[CjRVPAb]);}();
            return_CjRVPAb["members"].push_back(temp);
        }
        return return_CjRVPAb;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_MsArVTb;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_MsArVTb=NULL;
        return;
        }
    temp_MsArVTb=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int xVJLLTt=0; xVJLLTt < result.attachmentCount; xVJLLTt++){
            [&]() {
temp_MsArVTb[xVJLLTt]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][xVJLLTt]);}();;
        }
        }();result.pAttachments=temp_MsArVTb;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_HPWQfmO=json({});
    return_HPWQfmO=[&]() {
    json return_kLDwezm=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_HPWQfmO;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_HPWQfmO=json({});
    return_HPWQfmO=[&]() {
    json return_kLDwezm=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_HPWQfmO;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_dSMDcNF=json({});
    return_dSMDcNF=[&]() {
    json return_IbgxVzj=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_dSMDcNF;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_dLOzjiL=json({});
    return_dLOzjiL=[&]() {
    json return_vvanVmQ=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_dLOzjiL;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_frqbIeL=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["MSize"]=[&]() {
    json return_lMoHGYH=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_COzCYfI=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_CUWCazn=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_GSDpVXX=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_gKgRkMP=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_ILqSCvc=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_eJPhcnB=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_HzEdsyE=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_rZuiMdE=json({});
    return_rZuiMdE=[&]() {
    json return_bqhYRPc=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_rZuiMdE;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["imageView"]=[&]() {
    json return_SXmbBIn=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_FKeZkNy=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_BlLgoKw=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["deviceAddress"]=[&]() {
    json return_fmUMfzt=json({});
    return_fmUMfzt=[&]() {
    json return_fjEANDh=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_fmUMfzt;}();
result["members"]["size"]=[&]() {
    json return_pnWkoZs=json({});
    return_pnWkoZs=[&]() {
    json return_ezLHpRy=json({});
    return serialize_uint64_t(name.size);}();return return_pnWkoZs;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_vHuztBq=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_hslnBTU=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_vHuztBq=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_hslnBTU=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_EVxfGFv=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_EVxfGFv["null"]=true;
            return return_EVxfGFv;
        }
        return_EVxfGFv=[&]() {
    json return_BAsuGuu=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_EVxfGFv;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_vpwTwAk=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_RfcuqHl=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_RfcuqHl["null"]=true;
            return return_RfcuqHl;
        }
        
        return_RfcuqHl["members"]={};
        for(int RfcuqHl=0; RfcuqHl < name.pipelineStageCreationFeedbackCount; RfcuqHl++){
            json temp;
            temp=[&]() {
    json return_eEdLGOx=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[RfcuqHl]);}();
            return_RfcuqHl["members"].push_back(temp);
        }
        return return_RfcuqHl;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        return;
        }
    result.pPipelineCreationFeedback=(VkPipelineCreationFeedback*)malloc(sizeof(VkPipelineCreationFeedback));
[&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        return;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int WDDweEE=0; WDDweEE < result.pipelineStageCreationFeedbackCount; WDDweEE++){
            [&]() {
result.pPipelineStageCreationFeedbacks[WDDweEE]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][WDDweEE]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_EVxfGFv=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_EVxfGFv["null"]=true;
            return return_EVxfGFv;
        }
        return_EVxfGFv=[&]() {
    json return_BAsuGuu=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_EVxfGFv;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_vpwTwAk=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_RfcuqHl=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_RfcuqHl["null"]=true;
            return return_RfcuqHl;
        }
        
        return_RfcuqHl["members"]={};
        for(int RfcuqHl=0; RfcuqHl < name.pipelineStageCreationFeedbackCount; RfcuqHl++){
            json temp;
            temp=[&]() {
    json return_eEdLGOx=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[RfcuqHl]);}();
            return_RfcuqHl["members"].push_back(temp);
        }
        return return_RfcuqHl;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        return;
        }
    result.pPipelineCreationFeedback=(VkPipelineCreationFeedback*)malloc(sizeof(VkPipelineCreationFeedback));
[&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        return;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int WDDweEE=0; WDDweEE < result.pipelineStageCreationFeedbackCount; WDDweEE++){
            [&]() {
result.pPipelineStageCreationFeedbacks[WDDweEE]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][WDDweEE]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["presentBarrier"]=[&]() {
    json return_qlVFBBH=json({});
    return_qlVFBBH=[&]() {
    json return_YfNYrHp=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_qlVFBBH;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_UkYWIyU=json({});
    return_UkYWIyU=[&]() {
    json return_bIovHbD=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_UkYWIyU;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_PgBfbNY=json({});
    return_PgBfbNY=[&]() {
    json return_ysMVMFZ=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_PgBfbNY;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_LLvNBes=json({});
    return_LLvNBes=[&]() {
    json return_iJLrTeR=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_LLvNBes;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_SGJxMkO=json({});
    return_SGJxMkO=[&]() {
    json return_KHeEKuT=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_SGJxMkO;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_JadEkpK=json({});
    return_JadEkpK=[&]() {
    json return_QJWrNdM=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_JadEkpK;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["unit"]=[&]() {
    json return_VdMrIDr=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_HEwgJZy=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_fPqaKLJ=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_hbdifhj=json({});
    
        return_hbdifhj["members"]={};
        for(int hbdifhj=0; hbdifhj < VK_UUID_SIZE; hbdifhj++){
            json temp;
            temp=[&]() {
    json return_SoCGxFj=json({});
    return serialize_uint8_t(name.uuid[hbdifhj]);}();
            return_hbdifhj["members"].push_back(temp);
        }
        return return_hbdifhj;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int UjrZJNa=0; UjrZJNa < VK_UUID_SIZE; UjrZJNa++){
            [&]() {
result.uuid[UjrZJNa]=deserialize_uint8_t(name["members"]["uuid"]["members"][UjrZJNa]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRarWjI=json({});
    
        if (name.pNext==NULL){
            return_VRarWjI["null"]=true;
            return return_VRarWjI;
        }
        return_VRarWjI=[&]() {
    json return_oMWOblP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oMWOblP["null"]=true;
            return return_oMWOblP;
        }
        
        return_oMWOblP["members"]={};
        for(int oMWOblP=0; oMWOblP < strlen(((char*)(name.pNext)))+1; oMWOblP++){
            json temp;
            temp=[&]() {
    json return_AAyNWAc=json({});
    return serialize_char(((char*)(name.pNext))[oMWOblP]);}();
            return_oMWOblP["members"].push_back(temp);
        }
        return return_oMWOblP;
        }();return return_VRarWjI;}();
result["members"]["flags"]=[&]() {
    json return_EaINxHc=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_ocrlgjj=json({});
    
        return_ocrlgjj["members"]={};
        for(int ocrlgjj=0; ocrlgjj < VK_MAX_DESCRIPTION_SIZE; ocrlgjj++){
            json temp;
            temp=[&]() {
    json return_bKPvsGR=json({});
    return serialize_char(name.name[ocrlgjj]);}();
            return_ocrlgjj["members"].push_back(temp);
        }
        return return_ocrlgjj;
        }();
result["members"]["category"]=[&]() {
    json return_OPTbtFF=json({});
    
        return_OPTbtFF["members"]={};
        for(int OPTbtFF=0; OPTbtFF < VK_MAX_DESCRIPTION_SIZE; OPTbtFF++){
            json temp;
            temp=[&]() {
    json return_ASkPlIg=json({});
    return serialize_char(name.category[OPTbtFF]);}();
            return_OPTbtFF["members"].push_back(temp);
        }
        return return_OPTbtFF;
        }();
result["members"]["description"]=[&]() {
    json return_PlkHdbx=json({});
    
        return_PlkHdbx["members"]={};
        for(int PlkHdbx=0; PlkHdbx < VK_MAX_DESCRIPTION_SIZE; PlkHdbx++){
            json temp;
            temp=[&]() {
    json return_DCuTtbV=json({});
    return serialize_char(name.description[PlkHdbx]);}();
            return_PlkHdbx["members"].push_back(temp);
        }
        return return_PlkHdbx;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZIEPtjf=0; ZIEPtjf < name["members"]["pNext"]["members"].size(); ZIEPtjf++){
            [&]() {
temp[ZIEPtjf]=deserialize_char(name["members"]["pNext"]["members"][ZIEPtjf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int qthnJKA=0; qthnJKA < VK_MAX_DESCRIPTION_SIZE; qthnJKA++){
            [&]() {
result.name[qthnJKA]=deserialize_char(name["members"]["name"]["members"][qthnJKA]);}();;
        }
        }();
[&]() {

        for (int MvZeeMN=0; MvZeeMN < VK_MAX_DESCRIPTION_SIZE; MvZeeMN++){
            [&]() {
result.category[MvZeeMN]=deserialize_char(name["members"]["category"]["members"][MvZeeMN]);}();;
        }
        }();
[&]() {

        for (int qWcCKka=0; qWcCKka < VK_MAX_DESCRIPTION_SIZE; qWcCKka++){
            [&]() {
result.description[qWcCKka]=deserialize_char(name["members"]["description"]["members"][qWcCKka]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJEaAjM=json({});
    
        if (name.pNext==NULL){
            return_sJEaAjM["null"]=true;
            return return_sJEaAjM;
        }
        return_sJEaAjM=[&]() {
    json return_rBgzMMw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_rBgzMMw["null"]=true;
            return return_rBgzMMw;
        }
        
        return_rBgzMMw["members"]={};
        for(int rBgzMMw=0; rBgzMMw < strlen(((char*)(name.pNext)))+1; rBgzMMw++){
            json temp;
            temp=[&]() {
    json return_ejnGIWb=json({});
    return serialize_char(((char*)(name.pNext))[rBgzMMw]);}();
            return_rBgzMMw["members"].push_back(temp);
        }
        return return_rBgzMMw;
        }();return return_sJEaAjM;}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_kikKTmX=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_oMQdhlB=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_XUsQdmA=json({});
    
        if (name.pCounterIndices==NULL){
            return_XUsQdmA["null"]=true;
            return return_XUsQdmA;
        }
        
        return_XUsQdmA["members"]={};
        for(int XUsQdmA=0; XUsQdmA < name.counterIndexCount; XUsQdmA++){
            json temp;
            temp=[&]() {
    json return_eMtFreN=json({});
    return serialize_uint32_t(name.pCounterIndices[XUsQdmA]);}();
            return_XUsQdmA["members"].push_back(temp);
        }
        return return_XUsQdmA;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YvSbgFq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YvSbgFq=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bfrvKlJ=0; bfrvKlJ < name["members"]["pNext"]["members"].size(); bfrvKlJ++){
            [&]() {
temp[bfrvKlJ]=deserialize_char(name["members"]["pNext"]["members"][bfrvKlJ]);}();;
        }
        }();temp_YvSbgFq=(void*)temp;
}();result.pNext=temp_YvSbgFq;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_GGBVGyp;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_GGBVGyp=NULL;
        return;
        }
    temp_GGBVGyp=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int WQXSBJX=0; WQXSBJX < result.counterIndexCount; WQXSBJX++){
            [&]() {
temp_GGBVGyp[WQXSBJX]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][WQXSBJX]);}();;
        }
        }();result.pCounterIndices=temp_GGBVGyp;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_PpMVNmH=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_JxQzuQM=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_XKSIndn=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_GhfnOVr=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_uvdgbVJ=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_FXeWRDQ=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_CkhUxCP=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_zyrEsnY=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["counterPassIndex"]=[&]() {
    json return_WHrMUTN=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_SEvKDbk=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_vgJHhGI=json({});
    return_vgJHhGI=[&]() {
    json return_lcxdlMI=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_vgJHhGI;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["flags"]=[&]() {
    json return_YjsBfSe=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_AtmwboK=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EPtCIle=json({});
    
        if (name.pNext==NULL){
            return_EPtCIle["null"]=true;
            return return_EPtCIle;
        }
        return_EPtCIle=[&]() {
    json return_WscTLgV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_WscTLgV["null"]=true;
            return return_WscTLgV;
        }
        
        return_WscTLgV["members"]={};
        for(int WscTLgV=0; WscTLgV < strlen(((char*)(name.pNext)))+1; WscTLgV++){
            json temp;
            temp=[&]() {
    json return_jZVDTHj=json({});
    return serialize_char(((char*)(name.pNext))[WscTLgV]);}();
            return_WscTLgV["members"].push_back(temp);
        }
        return return_WscTLgV;
        }();return return_EPtCIle;}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_ZHKReJb=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_IDScyHS=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_lTxFGJk=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_qYIhmzl=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int AOTTFXa=0; AOTTFXa < name["members"]["pNext"]["members"].size(); AOTTFXa++){
            [&]() {
temp[AOTTFXa]=deserialize_char(name["members"]["pNext"]["members"][AOTTFXa]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_kvwLiMd=json({});
    return_kvwLiMd=[&]() {
    json return_VLQuiRo=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_kvwLiMd;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_qKaOeMq=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_wASLZtx=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_OcrNBDV=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_LXhGmTL=json({});
    return_LXhGmTL=[&]() {
    json return_mgknPCk=json({});
    return serialize_uint32_t(name.valueBool);}();return return_LXhGmTL;}();
result["members"]["valueString"]=[&]() {
    json return_QjcaeRG=json({});
    
        if (name.valueString==NULL){
            return_QjcaeRG["null"]=true;
            return return_QjcaeRG;
        }
        
        return_QjcaeRG["members"]={};
        for(int QjcaeRG=0; QjcaeRG < strlen(name.valueString)+1; QjcaeRG++){
            json temp;
            temp=[&]() {
    json return_ggILkqs=json({});
    return serialize_char(name.valueString[QjcaeRG]);}();
            return_QjcaeRG["members"].push_back(temp);
        }
        return return_QjcaeRG;
        }();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_zSjHOfo;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_zSjHOfo=NULL;
        return;
        }
    temp_zSjHOfo=(char*)malloc(name["members"]["valueString"]["members"].size()*sizeof(char));
        for (int UMKlirx=0; UMKlirx < name["members"]["valueString"]["members"].size(); UMKlirx++){
            [&]() {
temp_zSjHOfo[UMKlirx]=deserialize_char(name["members"]["valueString"]["members"][UMKlirx]);}();;
        }
        }();result.valueString=temp_zSjHOfo;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_iGWOiNC=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_wgsAVfu=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["pUserData"]=[&]() {
    json return_syEeiqp=json({});
    
        if (name.pUserData==NULL){
            return_syEeiqp["null"]=true;
            return return_syEeiqp;
        }
        return_syEeiqp=[&]() {
    json return_tdTMUpb=json({});
    
        if (((char*)(name.pUserData))==NULL){
            return_tdTMUpb["null"]=true;
            return return_tdTMUpb;
        }
        
        return_tdTMUpb["members"]={};
        for(int tdTMUpb=0; tdTMUpb < strlen(((char*)(name.pUserData)))+1; tdTMUpb++){
            json temp;
            temp=[&]() {
    json return_RqwjBWY=json({});
    return serialize_char(((char*)(name.pUserData))[tdTMUpb]);}();
            return_tdTMUpb["members"].push_back(temp);
        }
        return return_tdTMUpb;
        }();return return_syEeiqp;}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int mhFqFWQ=0; mhFqFWQ < name["members"]["pUserData"]["members"].size(); mhFqFWQ++){
            [&]() {
temp[mhFqFWQ]=deserialize_char(name["members"]["pUserData"]["members"][mhFqFWQ]);}();;
        }
        }();result.pUserData=(void*)temp;
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_XwsVoLG=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_XwsVoLG=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["marker"]=[&]() {
    json return_TOwMaVd=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["marker"]=[&]() {
    json return_kTXIrPh=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["type"]=[&]() {
    json return_fwAdaVI=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_fkAjHWs=json({});
    return_fkAjHWs=[&]() {
    json return_dbCSsXp=json({});
    return serialize_uint32_t(name.enable);}();return return_fkAjHWs;}();
result["members"]["parameter"]=[&]() {
    json return_fqTfSQJ=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TNbICrf=json({});
    
        if (name.pNext==NULL){
            return_TNbICrf["null"]=true;
            return return_TNbICrf;
        }
        return_TNbICrf=[&]() {
    json return_qksLCsC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qksLCsC["null"]=true;
            return return_qksLCsC;
        }
        
        return_qksLCsC["members"]={};
        for(int qksLCsC=0; qksLCsC < strlen(((char*)(name.pNext)))+1; qksLCsC++){
            json temp;
            temp=[&]() {
    json return_qlTkbxn=json({});
    return serialize_char(((char*)(name.pNext))[qksLCsC]);}();
            return_qksLCsC["members"].push_back(temp);
        }
        return return_qksLCsC;
        }();return return_TNbICrf;}();
result["members"]["type"]=[&]() {
    json return_RLKJrGF=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIdsYkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIdsYkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xiAUTQz=0; xiAUTQz < name["members"]["pNext"]["members"].size(); xiAUTQz++){
            [&]() {
temp[xiAUTQz]=deserialize_char(name["members"]["pNext"]["members"][xiAUTQz]);}();;
        }
        }();temp_YIdsYkt=(void*)temp;
}();result.pNext=temp_YIdsYkt;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_RKMCFgX=json({});
    return_RKMCFgX=[&]() {
    json return_LzBDIlq=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_RKMCFgX;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_LptXFCp=json({});
    return_LptXFCp=[&]() {
    json return_GsQabPM=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_LptXFCp;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_yKgYIJx=json({});
    return_yKgYIJx=[&]() {
    json return_iDqISos=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_yKgYIJx;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["shaderSMCount"]=[&]() {
    json return_HyXppFq=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_FiZHoSg=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_FxTGQSG=json({});
    return_FxTGQSG=[&]() {
    json return_MmqkZtR=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_FxTGQSG;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SPubnSz=json({});
    
        if (name.pNext==NULL){
            return_SPubnSz["null"]=true;
            return return_SPubnSz;
        }
        return_SPubnSz=[&]() {
    json return_oJiIEwZ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oJiIEwZ["null"]=true;
            return return_oJiIEwZ;
        }
        
        return_oJiIEwZ["members"]={};
        for(int oJiIEwZ=0; oJiIEwZ < strlen(((char*)(name.pNext)))+1; oJiIEwZ++){
            json temp;
            temp=[&]() {
    json return_TJEIQOt=json({});
    return serialize_char(((char*)(name.pNext))[oJiIEwZ]);}();
            return_oJiIEwZ["members"].push_back(temp);
        }
        return return_oJiIEwZ;
        }();return return_SPubnSz;}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_ARGTaGU=json({});
    return_ARGTaGU=[&]() {
    json return_NuHhXeM=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_ARGTaGU;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_lhSUEfH=json({});
    return_lhSUEfH=[&]() {
    json return_ihAUPdY=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_lhSUEfH;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_iSmktlL=json({});
    return_iSmktlL=[&]() {
    json return_sgcuuzc=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_iSmktlL;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int SRljumV=0; SRljumV < name["members"]["pNext"]["members"].size(); SRljumV++){
            [&]() {
temp[SRljumV]=deserialize_char(name["members"]["pNext"]["members"][SRljumV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_OuSMQOp=json({});
    return_OuSMQOp=[&]() {
    json return_ZZrUTrH=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_OuSMQOp;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_OuSMQOp=json({});
    return_OuSMQOp=[&]() {
    json return_ZZrUTrH=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_OuSMQOp;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["stencilLayout"]=[&]() {
    json return_NVKdaRg=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_OpiVccu=json({});
    return_OpiVccu=[&]() {
    json return_UeXvPqs=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_OpiVccu;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_kxWGdds=json({});
    return_kxWGdds=[&]() {
    json return_AdfHLbV=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_kxWGdds;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["stencilLayout"]=[&]() {
    json return_NVKdaRg=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_lqhxBuT=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_XCKvBSW=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_lqhxBuT=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_XCKvBSW=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_JWbYezF=json({});
    return_JWbYezF=[&]() {
    json return_hKdqLmt=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_JWbYezF;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["pipeline"]=[&]() {
    json return_IyDuHkL=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["pipeline"]=[&]() {
    json return_IyDuHkL=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["stages"]=[&]() {
    json return_iQAgCQf=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_tmFucRh=json({});
    
        return_tmFucRh["members"]={};
        for(int tmFucRh=0; tmFucRh < VK_MAX_DESCRIPTION_SIZE; tmFucRh++){
            json temp;
            temp=[&]() {
    json return_iIzoJnf=json({});
    return serialize_char(name.name[tmFucRh]);}();
            return_tmFucRh["members"].push_back(temp);
        }
        return return_tmFucRh;
        }();
result["members"]["description"]=[&]() {
    json return_esyizKQ=json({});
    
        return_esyizKQ["members"]={};
        for(int esyizKQ=0; esyizKQ < VK_MAX_DESCRIPTION_SIZE; esyizKQ++){
            json temp;
            temp=[&]() {
    json return_zrcROSN=json({});
    return serialize_char(name.description[esyizKQ]);}();
            return_esyizKQ["members"].push_back(temp);
        }
        return return_esyizKQ;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_hhkpPQe=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int eFxKkjG=0; eFxKkjG < VK_MAX_DESCRIPTION_SIZE; eFxKkjG++){
            [&]() {
result.name[eFxKkjG]=deserialize_char(name["members"]["name"]["members"][eFxKkjG]);}();;
        }
        }();
[&]() {

        for (int OcnMSKC=0; OcnMSKC < VK_MAX_DESCRIPTION_SIZE; OcnMSKC++){
            [&]() {
result.description[OcnMSKC]=deserialize_char(name["members"]["description"]["members"][OcnMSKC]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["pipeline"]=[&]() {
    json return_NzxDGMj=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_DjYBzEE=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_oWtxuBM=json({});
    return_oWtxuBM=[&]() {
    json return_dNKPWRB=json({});
    return serialize_uint32_t(name.b32);}();return return_oWtxuBM;}();
result["members"]["i64"]=[&]() {
    json return_adpNleZ=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_LOXnLkg=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_VwMgzbj=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["name"]=[&]() {
    json return_tmFucRh=json({});
    
        return_tmFucRh["members"]={};
        for(int tmFucRh=0; tmFucRh < VK_MAX_DESCRIPTION_SIZE; tmFucRh++){
            json temp;
            temp=[&]() {
    json return_iIzoJnf=json({});
    return serialize_char(name.name[tmFucRh]);}();
            return_tmFucRh["members"].push_back(temp);
        }
        return return_tmFucRh;
        }();
result["members"]["description"]=[&]() {
    json return_esyizKQ=json({});
    
        return_esyizKQ["members"]={};
        for(int esyizKQ=0; esyizKQ < VK_MAX_DESCRIPTION_SIZE; esyizKQ++){
            json temp;
            temp=[&]() {
    json return_zrcROSN=json({});
    return serialize_char(name.description[esyizKQ]);}();
            return_esyizKQ["members"].push_back(temp);
        }
        return return_esyizKQ;
        }();
result["members"]["format"]=[&]() {
    json return_WkZIJUq=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_cUqGAZH=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int eFxKkjG=0; eFxKkjG < VK_MAX_DESCRIPTION_SIZE; eFxKkjG++){
            [&]() {
result.name[eFxKkjG]=deserialize_char(name["members"]["name"]["members"][eFxKkjG]);}();;
        }
        }();
[&]() {

        for (int OcnMSKC=0; OcnMSKC < VK_MAX_DESCRIPTION_SIZE; OcnMSKC++){
            [&]() {
result.description[OcnMSKC]=deserialize_char(name["members"]["description"]["members"][OcnMSKC]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["name"]=[&]() {
    json return_tmFucRh=json({});
    
        return_tmFucRh["members"]={};
        for(int tmFucRh=0; tmFucRh < VK_MAX_DESCRIPTION_SIZE; tmFucRh++){
            json temp;
            temp=[&]() {
    json return_iIzoJnf=json({});
    return serialize_char(name.name[tmFucRh]);}();
            return_tmFucRh["members"].push_back(temp);
        }
        return return_tmFucRh;
        }();
result["members"]["description"]=[&]() {
    json return_esyizKQ=json({});
    
        return_esyizKQ["members"]={};
        for(int esyizKQ=0; esyizKQ < VK_MAX_DESCRIPTION_SIZE; esyizKQ++){
            json temp;
            temp=[&]() {
    json return_zrcROSN=json({});
    return serialize_char(name.description[esyizKQ]);}();
            return_esyizKQ["members"].push_back(temp);
        }
        return return_esyizKQ;
        }();
result["members"]["isText"]=[&]() {
    json return_SLMpaai=json({});
    return_SLMpaai=[&]() {
    json return_fRUaYnO=json({});
    return serialize_uint32_t(name.isText);}();return return_SLMpaai;}();
result["members"]["dataSize"]=[&]() {
    json return_Zxpbouf=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_GJpAvjL=json({});
    
        if (name.pData==NULL){
            return_GJpAvjL["null"]=true;
            return return_GJpAvjL;
        }
        return_GJpAvjL=[&]() {
    json return_QNitpvx=json({});
    
        if (((char*)(name.pData))==NULL){
            return_QNitpvx["null"]=true;
            return return_QNitpvx;
        }
        
        return_QNitpvx["members"]={};
        for(int QNitpvx=0; QNitpvx < name.dataSize; QNitpvx++){
            json temp;
            temp=[&]() {
    json return_UqxjSQM=json({});
    return serialize_char(((char*)(name.pData))[QNitpvx]);}();
            return_QNitpvx["members"].push_back(temp);
        }
        return return_QNitpvx;
        }();return return_GJpAvjL;}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int eFxKkjG=0; eFxKkjG < VK_MAX_DESCRIPTION_SIZE; eFxKkjG++){
            [&]() {
result.name[eFxKkjG]=deserialize_char(name["members"]["name"]["members"][eFxKkjG]);}();;
        }
        }();
[&]() {

        for (int OcnMSKC=0; OcnMSKC < VK_MAX_DESCRIPTION_SIZE; OcnMSKC++){
            [&]() {
result.description[OcnMSKC]=deserialize_char(name["members"]["description"]["members"][OcnMSKC]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.dataSize*sizeof(char));
        for (int ORoosiI=0; ORoosiI < result.dataSize; ORoosiI++){
            [&]() {
temp[ORoosiI]=deserialize_char(name["members"]["pData"]["members"][ORoosiI]);}();;
        }
        }();result.pData=(void*)temp;
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_LPvPWHF=json({});
    return_LPvPWHF=[&]() {
    json return_AEzlpJU=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_LPvPWHF;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_LPvPWHF=json({});
    return_LPvPWHF=[&]() {
    json return_AEzlpJU=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_LPvPWHF;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_bqmBOJu=json({});
    return_bqmBOJu=[&]() {
    json return_wDKVyub=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_bqmBOJu;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_PSWuHZp=json({});
    return_PSWuHZp=[&]() {
    json return_JDVXoaz=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_PSWuHZp;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_ScrUOyx=json({});
    return_ScrUOyx=[&]() {
    json return_eEEJVdP=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_ScrUOyx;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_wBqjINM=json({});
    return_wBqjINM=[&]() {
    json return_YtWMyXz=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_wBqjINM;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_fcRNlkC=json({});
    return_fcRNlkC=[&]() {
    json return_RuWQomc=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_fcRNlkC;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_PSWuHZp=json({});
    return_PSWuHZp=[&]() {
    json return_JDVXoaz=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_PSWuHZp;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_ScrUOyx=json({});
    return_ScrUOyx=[&]() {
    json return_eEEJVdP=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_ScrUOyx;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_wBqjINM=json({});
    return_wBqjINM=[&]() {
    json return_YtWMyXz=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_wBqjINM;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_fcRNlkC=json({});
    return_fcRNlkC=[&]() {
    json return_RuWQomc=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_fcRNlkC;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_iDbwXtu=json({});
    return_iDbwXtu=[&]() {
    json return_aVGqvHN=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_iDbwXtu;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_SiwiziJ=json({});
    return_SiwiziJ=[&]() {
    json return_sjxaOZU=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_SiwiziJ;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_iDbwXtu=json({});
    return_iDbwXtu=[&]() {
    json return_aVGqvHN=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_iDbwXtu;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_SiwiziJ=json({});
    return_SiwiziJ=[&]() {
    json return_sjxaOZU=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_SiwiziJ;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_xCutQpb=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_FkWyOoL=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_vSNfxCH=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_OVItNuJ=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_xCutQpb=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_FkWyOoL=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_vSNfxCH=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_OVItNuJ=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_gkkfPsd=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_gkkfPsd=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_gkkfPsd=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["renderPass"]=[&]() {
    json return_vpeIUFX=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_dXMFDFg=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_CSGDcSk=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_aBamZEG=json({});
    
        return_aBamZEG["members"]={};
        for(int aBamZEG=0; aBamZEG < 3; aBamZEG++){
            json temp;
            temp=[&]() {
    json return_rJetcpB=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[aBamZEG]);}();
            return_aBamZEG["members"].push_back(temp);
        }
        return return_aBamZEG;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_yGlsbPm=json({});
    
        return_yGlsbPm["members"]={};
        for(int yGlsbPm=0; yGlsbPm < 3; yGlsbPm++){
            json temp;
            temp=[&]() {
    json return_iTefalM=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[yGlsbPm]);}();
            return_yGlsbPm["members"].push_back(temp);
        }
        return return_yGlsbPm;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_BJCgBBz=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_wdMGEqT=json({});
    return_wdMGEqT=[&]() {
    json return_HeEXtvk=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_wdMGEqT;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int fMnkogb=0; fMnkogb < 3; fMnkogb++){
            [&]() {
result.maxWorkGroupCount[fMnkogb]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][fMnkogb]);}();;
        }
        }();
[&]() {

        for (int CAUcImu=0; CAUcImu < 3; CAUcImu++){
            [&]() {
result.maxWorkGroupSize[CAUcImu]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][CAUcImu]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_PBcTiLs=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_PBcTiLs=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["memory"]=[&]() {
    json return_ZRckhrA=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["memory"]=[&]() {
    json return_ZRckhrA=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["rectangularLines"]=[&]() {
    json return_RBFcxZD=json({});
    return_RBFcxZD=[&]() {
    json return_ngyUGho=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_RBFcxZD;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_clqYkqB=json({});
    return_clqYkqB=[&]() {
    json return_QEdbtoc=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_clqYkqB;}();
result["members"]["smoothLines"]=[&]() {
    json return_dkBAlEQ=json({});
    return_dkBAlEQ=[&]() {
    json return_vjiBjhZ=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_dkBAlEQ;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_oUrfeuj=json({});
    return_oUrfeuj=[&]() {
    json return_habPRXV=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_oUrfeuj;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_odontgb=json({});
    return_odontgb=[&]() {
    json return_XDMoyaG=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_odontgb;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_lexMjCL=json({});
    return_lexMjCL=[&]() {
    json return_zZpUYfd=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_lexMjCL;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_NRVMZqP=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UGIjRCc=json({});
    
        if (name.pNext==NULL){
            return_UGIjRCc["null"]=true;
            return return_UGIjRCc;
        }
        return_UGIjRCc=[&]() {
    json return_TOslSgQ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TOslSgQ["null"]=true;
            return return_TOslSgQ;
        }
        
        return_TOslSgQ["members"]={};
        for(int TOslSgQ=0; TOslSgQ < strlen(((char*)(name.pNext)))+1; TOslSgQ++){
            json temp;
            temp=[&]() {
    json return_EIqwVJQ=json({});
    return serialize_char(((char*)(name.pNext))[TOslSgQ]);}();
            return_TOslSgQ["members"].push_back(temp);
        }
        return return_TOslSgQ;
        }();return return_UGIjRCc;}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_bOOjFhj=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_ryRwbMP=json({});
    return_ryRwbMP=[&]() {
    json return_zLGKAOv=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_ryRwbMP;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_aXsPqyc=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_ccQnWPF=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zZdIlQI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zZdIlQI=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mQAuqdn=0; mQAuqdn < name["members"]["pNext"]["members"].size(); mQAuqdn++){
            [&]() {
temp[mQAuqdn]=deserialize_char(name["members"]["pNext"]["members"][mQAuqdn]);}();;
        }
        }();temp_zZdIlQI=(void*)temp;
}();result.pNext=temp_zZdIlQI;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_CRVllND=json({});
    return_CRVllND=[&]() {
    json return_CuHoqOy=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_CRVllND;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_CRVllND=json({});
    return_CRVllND=[&]() {
    json return_CuHoqOy=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_CRVllND;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_AneDiOo=json({});
    return_AneDiOo=[&]() {
    json return_UDOqYrF=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_AneDiOo;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_xyNFISY=json({});
    return_xyNFISY=[&]() {
    json return_GrcXFLB=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_xyNFISY;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_HyJEfth=json({});
    return_HyJEfth=[&]() {
    json return_NFaodSD=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_HyJEfth;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_gcZhjYZ=json({});
    return_gcZhjYZ=[&]() {
    json return_rvbyrAQ=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_gcZhjYZ;}();
result["members"]["multiview"]=[&]() {
    json return_cRfgoWH=json({});
    return_cRfgoWH=[&]() {
    json return_cvKKBkQ=json({});
    return serialize_uint32_t(name.multiview);}();return return_cRfgoWH;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_CLcFcZC=json({});
    return_CLcFcZC=[&]() {
    json return_nvVYfSK=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_CLcFcZC;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_PtHMnia=json({});
    return_PtHMnia=[&]() {
    json return_FXccxmz=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_PtHMnia;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IfmGNvI=json({});
    return_IfmGNvI=[&]() {
    json return_jULyUJE=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IfmGNvI;}();
result["members"]["variablePointers"]=[&]() {
    json return_tQAcmRI=json({});
    return_tQAcmRI=[&]() {
    json return_ATFRnFQ=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_tQAcmRI;}();
result["members"]["protectedMemory"]=[&]() {
    json return_EVFMeHf=json({});
    return_EVFMeHf=[&]() {
    json return_QmnqSwT=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_EVFMeHf;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_dRychqz=json({});
    return_dRychqz=[&]() {
    json return_sXejKyr=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_dRychqz;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_oOrpAxX=json({});
    return_oOrpAxX=[&]() {
    json return_WwxXppZ=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_oOrpAxX;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVIUPiv=json({});
    
        if (name.pNext==NULL){
            return_gVIUPiv["null"]=true;
            return return_gVIUPiv;
        }
        return_gVIUPiv=[&]() {
    json return_egFsZYt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_egFsZYt["null"]=true;
            return return_egFsZYt;
        }
        
        return_egFsZYt["members"]={};
        for(int egFsZYt=0; egFsZYt < strlen(((char*)(name.pNext)))+1; egFsZYt++){
            json temp;
            temp=[&]() {
    json return_lfDpnwU=json({});
    return serialize_char(((char*)(name.pNext))[egFsZYt]);}();
            return_egFsZYt["members"].push_back(temp);
        }
        return return_egFsZYt;
        }();return return_gVIUPiv;}();
result["members"]["deviceUUID"]=[&]() {
    json return_igcTxab=json({});
    
        return_igcTxab["members"]={};
        for(int igcTxab=0; igcTxab < VK_UUID_SIZE; igcTxab++){
            json temp;
            temp=[&]() {
    json return_lHDabHs=json({});
    return serialize_uint8_t(name.deviceUUID[igcTxab]);}();
            return_igcTxab["members"].push_back(temp);
        }
        return return_igcTxab;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_GscAido=json({});
    
        return_GscAido["members"]={};
        for(int GscAido=0; GscAido < VK_UUID_SIZE; GscAido++){
            json temp;
            temp=[&]() {
    json return_maMMUWu=json({});
    return serialize_uint8_t(name.driverUUID[GscAido]);}();
            return_GscAido["members"].push_back(temp);
        }
        return return_GscAido;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_AWzuMUp=json({});
    
        return_AWzuMUp["members"]={};
        for(int AWzuMUp=0; AWzuMUp < VK_LUID_SIZE; AWzuMUp++){
            json temp;
            temp=[&]() {
    json return_FTdFCku=json({});
    return serialize_uint8_t(name.deviceLUID[AWzuMUp]);}();
            return_AWzuMUp["members"].push_back(temp);
        }
        return return_AWzuMUp;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_scKFFPW=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_mdrRWpw=json({});
    return_mdrRWpw=[&]() {
    json return_HjToQvj=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_mdrRWpw;}();
result["members"]["subgroupSize"]=[&]() {
    json return_TTBgjKT=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_NCUJjkN=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_cyHkaws=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_TGoQVYC=json({});
    return_TGoQVYC=[&]() {
    json return_VjUWUYS=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_TGoQVYC;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_fLZDOjm=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_lKQwhQM=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_doQalyJ=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_wDvCtUp=json({});
    return_wDvCtUp=[&]() {
    json return_RIDRAQP=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_wDvCtUp;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_kQZloWO=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_aBsOBcp=json({});
    return_aBsOBcp=[&]() {
    json return_aUTdTlJ=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_aBsOBcp;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int IJWeKYH=0; IJWeKYH < name["members"]["pNext"]["members"].size(); IJWeKYH++){
            [&]() {
temp[IJWeKYH]=deserialize_char(name["members"]["pNext"]["members"][IJWeKYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int GBswLqu=0; GBswLqu < VK_UUID_SIZE; GBswLqu++){
            [&]() {
result.deviceUUID[GBswLqu]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][GBswLqu]);}();;
        }
        }();
[&]() {

        for (int baJncHP=0; baJncHP < VK_UUID_SIZE; baJncHP++){
            [&]() {
result.driverUUID[baJncHP]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][baJncHP]);}();;
        }
        }();
[&]() {

        for (int njtCfgY=0; njtCfgY < VK_LUID_SIZE; njtCfgY++){
            [&]() {
result.deviceLUID[njtCfgY]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][njtCfgY]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_LeQZGgT=json({});
    return_LeQZGgT=[&]() {
    json return_GfyvoQc=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_LeQZGgT;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_lEFsXzc=json({});
    return_lEFsXzc=[&]() {
    json return_vmejRoY=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_lEFsXzc;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_ClKPUAn=json({});
    return_ClKPUAn=[&]() {
    json return_PflkTfi=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_ClKPUAn;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_rzCDsts=json({});
    return_rzCDsts=[&]() {
    json return_BBsnHXw=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_rzCDsts;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_HxHfMNL=json({});
    return_HxHfMNL=[&]() {
    json return_KJbcaPz=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_HxHfMNL;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_PeOuAJz=json({});
    return_PeOuAJz=[&]() {
    json return_blkhCDZ=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_PeOuAJz;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_TKWhyUp=json({});
    return_TKWhyUp=[&]() {
    json return_dPJkaNe=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_TKWhyUp;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_tkIWHmT=json({});
    return_tkIWHmT=[&]() {
    json return_QMhTNsl=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_tkIWHmT;}();
result["members"]["shaderInt8"]=[&]() {
    json return_OhzOVFp=json({});
    return_OhzOVFp=[&]() {
    json return_OiXrHkt=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_OhzOVFp;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_OOErfDC=json({});
    return_OOErfDC=[&]() {
    json return_KJZtHQJ=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_OOErfDC;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_SCgcJQe=json({});
    return_SCgcJQe=[&]() {
    json return_uqXbUlI=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_SCgcJQe;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_jdkmiRw=json({});
    return_jdkmiRw=[&]() {
    json return_gUKOdxf=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_jdkmiRw;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_sDNwcgl=json({});
    return_sDNwcgl=[&]() {
    json return_sgxskex=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_sDNwcgl;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_gurVidU=json({});
    return_gurVidU=[&]() {
    json return_LsHtomQ=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_gurVidU;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_zLUiCMh=json({});
    return_zLUiCMh=[&]() {
    json return_NNCCCkZ=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_zLUiCMh;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_klyYYPd=json({});
    return_klyYYPd=[&]() {
    json return_lCVtYlU=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_klyYYPd;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_ebUFOMY=json({});
    return_ebUFOMY=[&]() {
    json return_ePMLrXr=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_ebUFOMY;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_cAydDVM=json({});
    return_cAydDVM=[&]() {
    json return_KXfzztt=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_cAydDVM;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_BvjkkFJ=json({});
    return_BvjkkFJ=[&]() {
    json return_QEfLRvU=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_BvjkkFJ;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_rfgwTmt=json({});
    return_rfgwTmt=[&]() {
    json return_oUaOTlH=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_rfgwTmt;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_gIYOQsB=json({});
    return_gIYOQsB=[&]() {
    json return_AssPgEi=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_gIYOQsB;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_oRMZfMS=json({});
    return_oRMZfMS=[&]() {
    json return_yHTcMoi=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_oRMZfMS;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_SJqLaXw=json({});
    return_SJqLaXw=[&]() {
    json return_VolhddN=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_SJqLaXw;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_PmvZtga=json({});
    return_PmvZtga=[&]() {
    json return_WyVvdxF=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_PmvZtga;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_yqbYohS=json({});
    return_yqbYohS=[&]() {
    json return_PtdQliw=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_yqbYohS;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_DWSBnyi=json({});
    return_DWSBnyi=[&]() {
    json return_EYQTOhH=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_DWSBnyi;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_pqhYZPs=json({});
    return_pqhYZPs=[&]() {
    json return_ywXdWRr=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_pqhYZPs;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_uQMjhYV=json({});
    return_uQMjhYV=[&]() {
    json return_DZBHFcf=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_uQMjhYV;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_Urrpwyf=json({});
    return_Urrpwyf=[&]() {
    json return_fNXOKWi=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_Urrpwyf;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_lqqXTTy=json({});
    return_lqqXTTy=[&]() {
    json return_xmgryav=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_lqqXTTy;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_fTAflYd=json({});
    return_fTAflYd=[&]() {
    json return_EiYgIEz=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_fTAflYd;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_IyJjcjQ=json({});
    return_IyJjcjQ=[&]() {
    json return_MvIFebl=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_IyJjcjQ;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_rcCMbPQ=json({});
    return_rcCMbPQ=[&]() {
    json return_VXsokWy=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_rcCMbPQ;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_orTzZAL=json({});
    return_orTzZAL=[&]() {
    json return_oUpZGoi=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_orTzZAL;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_cVGCpJe=json({});
    return_cVGCpJe=[&]() {
    json return_OyWiSxi=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_cVGCpJe;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_UvZhKpR=json({});
    return_UvZhKpR=[&]() {
    json return_JdMeloX=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_UvZhKpR;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_XCObqNi=json({});
    return_XCObqNi=[&]() {
    json return_KUnCSRW=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_XCObqNi;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_sXvcqOl=json({});
    return_sXvcqOl=[&]() {
    json return_WFOEhHA=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_sXvcqOl;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_VXXhuGy=json({});
    return_VXXhuGy=[&]() {
    json return_ZnKOlSF=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_VXXhuGy;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_kqoeOLf=json({});
    return_kqoeOLf=[&]() {
    json return_RVuVJna=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_kqoeOLf;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_lOxpdzs=json({});
    return_lOxpdzs=[&]() {
    json return_XwSTekH=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_lOxpdzs;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_bztnqan=json({});
    return_bztnqan=[&]() {
    json return_sEIyjHL=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_bztnqan;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_cZFCBul=json({});
    return_cZFCBul=[&]() {
    json return_lxQxFhD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_cZFCBul;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_ChDgdby=json({});
    return_ChDgdby=[&]() {
    json return_wCDoeoW=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_ChDgdby;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_xAEuYNg=json({});
    return_xAEuYNg=[&]() {
    json return_sXOUkmq=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_xAEuYNg;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_abnLSwJ=json({});
    return_abnLSwJ=[&]() {
    json return_JxLUxlP=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_abnLSwJ;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_YmRFMpI=json({});
    return_YmRFMpI=[&]() {
    json return_XsVGAMV=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_YmRFMpI;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["driverID"]=[&]() {
    json return_OvIMHFN=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_HCoSsdd=json({});
    
        return_HCoSsdd["members"]={};
        for(int HCoSsdd=0; HCoSsdd < VK_MAX_DRIVER_NAME_SIZE; HCoSsdd++){
            json temp;
            temp=[&]() {
    json return_dRfzFdz=json({});
    return serialize_char(name.driverName[HCoSsdd]);}();
            return_HCoSsdd["members"].push_back(temp);
        }
        return return_HCoSsdd;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_Lngxfns=json({});
    
        return_Lngxfns["members"]={};
        for(int Lngxfns=0; Lngxfns < VK_MAX_DRIVER_INFO_SIZE; Lngxfns++){
            json temp;
            temp=[&]() {
    json return_bPeQBAv=json({});
    return serialize_char(name.driverInfo[Lngxfns]);}();
            return_Lngxfns["members"].push_back(temp);
        }
        return return_Lngxfns;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_cDRmDXY=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_wpOMUoc=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_PMXFDyL=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_PegpTGt=json({});
    return_PegpTGt=[&]() {
    json return_wusSurx=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_PegpTGt;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_yjkCUns=json({});
    return_yjkCUns=[&]() {
    json return_DUYRUiQ=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_yjkCUns;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_puqbknO=json({});
    return_puqbknO=[&]() {
    json return_fkeOGfS=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_puqbknO;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_HjJmQQE=json({});
    return_HjJmQQE=[&]() {
    json return_krbnOhl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_HjJmQQE;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_AaWuKSO=json({});
    return_AaWuKSO=[&]() {
    json return_WoXRkRK=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_AaWuKSO;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_gvMItYz=json({});
    return_gvMItYz=[&]() {
    json return_oXSOeKz=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_gvMItYz;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_fbDcofc=json({});
    return_fbDcofc=[&]() {
    json return_GBfMdBz=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_fbDcofc;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_TJyNZuP=json({});
    return_TJyNZuP=[&]() {
    json return_RNRoNnX=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_TJyNZuP;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_lclYAfD=json({});
    return_lclYAfD=[&]() {
    json return_FwbBipV=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_lclYAfD;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_qBdZpBy=json({});
    return_qBdZpBy=[&]() {
    json return_lLhKTgJ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_qBdZpBy;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_jghFAke=json({});
    return_jghFAke=[&]() {
    json return_miIchzk=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_jghFAke;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_efsutQO=json({});
    return_efsutQO=[&]() {
    json return_breVarB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_efsutQO;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_uWAaEDm=json({});
    return_uWAaEDm=[&]() {
    json return_hzwUssO=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_uWAaEDm;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_IjNaHOg=json({});
    return_IjNaHOg=[&]() {
    json return_OWBHyrh=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_IjNaHOg;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_oUnlIby=json({});
    return_oUnlIby=[&]() {
    json return_TJwlahM=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_oUnlIby;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_dusCGBe=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_bWuVCSh=json({});
    return_bWuVCSh=[&]() {
    json return_BjOjlPA=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_bWuVCSh;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_VkmMrvK=json({});
    return_VkmMrvK=[&]() {
    json return_kNkMXoG=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_VkmMrvK;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_BUQVNMj=json({});
    return_BUQVNMj=[&]() {
    json return_zalHRan=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_BUQVNMj;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_BIERZUk=json({});
    return_BIERZUk=[&]() {
    json return_wZQqNQk=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_BIERZUk;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_qassrvh=json({});
    return_qassrvh=[&]() {
    json return_ZfbPxyF=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_qassrvh;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_qgZMYzz=json({});
    return_qgZMYzz=[&]() {
    json return_LYffKAv=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_qgZMYzz;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_kAdCmwt=json({});
    return_kAdCmwt=[&]() {
    json return_eCCRUJH=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_kAdCmwt;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_PQNrqyA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_GkZSUTk=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_WCCBfoi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_xPDGyDS=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_bIUwcFt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_KQPAjJA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_OtGQxCa=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_PfOgWNh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_CQWmNGC=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_lXYADod=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_KKbRvvg=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_QbnzYEc=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_sEdzvVU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_eWkLgJJ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_MybnTqV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_yuwNlrd=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_RdvtYFi=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_KWDBNGf=json({});
    return_KWDBNGf=[&]() {
    json return_vNgqnnL=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_KWDBNGf;}();
result["members"]["independentResolve"]=[&]() {
    json return_UiGebwN=json({});
    return_UiGebwN=[&]() {
    json return_HtCFuSd=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_UiGebwN;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_BBOYHNv=json({});
    return_BBOYHNv=[&]() {
    json return_gSsPCaH=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_BBOYHNv;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_NTXabiR=json({});
    return_NTXabiR=[&]() {
    json return_sCaUZLp=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_NTXabiR;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_HoEOmIH=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_HsSbCBw=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int JPoRKMK=0; JPoRKMK < VK_MAX_DRIVER_NAME_SIZE; JPoRKMK++){
            [&]() {
result.driverName[JPoRKMK]=deserialize_char(name["members"]["driverName"]["members"][JPoRKMK]);}();;
        }
        }();
[&]() {

        for (int MPhsKyg=0; MPhsKyg < VK_MAX_DRIVER_INFO_SIZE; MPhsKyg++){
            [&]() {
result.driverInfo[MPhsKyg]=deserialize_char(name["members"]["driverInfo"]["members"][MPhsKyg]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["robustImageAccess"]=[&]() {
    json return_bTlhHtp=json({});
    return_bTlhHtp=[&]() {
    json return_nyqBvRp=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_bTlhHtp;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_cnOKxvd=json({});
    return_cnOKxvd=[&]() {
    json return_yNEzzty=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_cnOKxvd;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_eGmSzwQ=json({});
    return_eGmSzwQ=[&]() {
    json return_OfLOMcT=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_eGmSzwQ;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_uOiyfPY=json({});
    return_uOiyfPY=[&]() {
    json return_NLJRCCX=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_uOiyfPY;}();
result["members"]["privateData"]=[&]() {
    json return_cdrLSLs=json({});
    return_cdrLSLs=[&]() {
    json return_sePVSbs=json({});
    return serialize_uint32_t(name.privateData);}();return return_cdrLSLs;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_Omigtyy=json({});
    return_Omigtyy=[&]() {
    json return_ITjEUGI=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_Omigtyy;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_aFIQOfv=json({});
    return_aFIQOfv=[&]() {
    json return_oEkCnqG=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_aFIQOfv;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_QVtvcwA=json({});
    return_QVtvcwA=[&]() {
    json return_EBmrBgl=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_QVtvcwA;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_prfHQzr=json({});
    return_prfHQzr=[&]() {
    json return_GNulPTC=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_prfHQzr;}();
result["members"]["synchronization2"]=[&]() {
    json return_LeZEtaT=json({});
    return_LeZEtaT=[&]() {
    json return_jemrHpZ=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_LeZEtaT;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_ggXNXJA=json({});
    return_ggXNXJA=[&]() {
    json return_jRozOKf=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_ggXNXJA;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_qQVcAEa=json({});
    return_qQVcAEa=[&]() {
    json return_umaTRLT=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_qQVcAEa;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_VRNYqBQ=json({});
    return_VRNYqBQ=[&]() {
    json return_AXDRzZq=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_VRNYqBQ;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_aZhymVS=json({});
    return_aZhymVS=[&]() {
    json return_eSfFAGO=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_aZhymVS;}();
result["members"]["maintenance4"]=[&]() {
    json return_YOTAfew=json({});
    return_YOTAfew=[&]() {
    json return_QDlODyL=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_YOTAfew;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_xCutQpb=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_FkWyOoL=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_vSNfxCH=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_QlofkQz=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_RIBvXBk=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_fAmLyCc=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_WqgdOXA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_aRxWBbq=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_mNdIbTc=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_SjhXBXi=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_FxbtaEN=json({});
    return_FxbtaEN=[&]() {
    json return_CZrEEUf=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_FxbtaEN;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_CnDKsuK=json({});
    return_CnDKsuK=[&]() {
    json return_XsjKnOI=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_CnDKsuK;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_bsqDfLJ=json({});
    return_bsqDfLJ=[&]() {
    json return_ZYjFaUM=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_bsqDfLJ;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_dmSzxsx=json({});
    return_dmSzxsx=[&]() {
    json return_SGpckHJ=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_dmSzxsx;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_xONvcrQ=json({});
    return_xONvcrQ=[&]() {
    json return_LVrIsro=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_xONvcrQ;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_pJuPdhQ=json({});
    return_pJuPdhQ=[&]() {
    json return_JiPzDbH=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_pJuPdhQ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_gKFKsFE=json({});
    return_gKFKsFE=[&]() {
    json return_shxAbOx=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_gKFKsFE;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_eezFxCJ=json({});
    return_eezFxCJ=[&]() {
    json return_RenkRYa=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_eezFxCJ;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_rhaGuTK=json({});
    return_rhaGuTK=[&]() {
    json return_oJojHWf=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_rhaGuTK;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_dlnpGyE=json({});
    return_dlnpGyE=[&]() {
    json return_mpYlOAM=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_dlnpGyE;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_AfmjwuV=json({});
    return_AfmjwuV=[&]() {
    json return_QFdxLid=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_AfmjwuV;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_FUrqkyG=json({});
    return_FUrqkyG=[&]() {
    json return_qwSeHxE=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_FUrqkyG;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_xMXDNlr=json({});
    return_xMXDNlr=[&]() {
    json return_UmkJMYy=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_xMXDNlr;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_xTFTPHT=json({});
    return_xTFTPHT=[&]() {
    json return_sOzKtqS=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_xTFTPHT;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_XQsLXuY=json({});
    return_XQsLXuY=[&]() {
    json return_XQSRRmz=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_XQsLXuY;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_eHgXXuW=json({});
    return_eHgXXuW=[&]() {
    json return_iUBblem=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_eHgXXuW;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_TLVdTlE=json({});
    return_TLVdTlE=[&]() {
    json return_Uabaogc=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_TLVdTlE;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_vTBUNUh=json({});
    return_vTBUNUh=[&]() {
    json return_KqNIsvz=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_vTBUNUh;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_svbNzPU=json({});
    return_svbNzPU=[&]() {
    json return_bpnabfg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_svbNzPU;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_FFzriXP=json({});
    return_FFzriXP=[&]() {
    json return_LWLbKKY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_FFzriXP;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_caHcZMh=json({});
    return_caHcZMh=[&]() {
    json return_SUKbGzj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_caHcZMh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_ClJSbjE=json({});
    return_ClJSbjE=[&]() {
    json return_djgtLhg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_ClJSbjE;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_DpwDFDl=json({});
    return_DpwDFDl=[&]() {
    json return_fmOLuGZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_DpwDFDl;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_qaViyOG=json({});
    return_qaViyOG=[&]() {
    json return_SESIeFF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_qaViyOG;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_NHRAlsa=json({});
    return_NHRAlsa=[&]() {
    json return_ZzUyvKW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_NHRAlsa;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_mEcgDZJ=json({});
    return_mEcgDZJ=[&]() {
    json return_vmWZUXS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_mEcgDZJ;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_tgybNKk=json({});
    return_tgybNKk=[&]() {
    json return_DwznCkk=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_tgybNKk;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_MXTCIQW=json({});
    return_MXTCIQW=[&]() {
    json return_ikjirhd=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_MXTCIQW;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_rhWSkGz=json({});
    return_rhWSkGz=[&]() {
    json return_VmMIwuj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_rhWSkGz;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_aYdsCwm=json({});
    return_aYdsCwm=[&]() {
    json return_yuQdRTC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_aYdsCwm;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_jhbSYtb=json({});
    return_jhbSYtb=[&]() {
    json return_EIwrxGH=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_jhbSYtb;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_hOedaRQ=json({});
    return_hOedaRQ=[&]() {
    json return_LWRwjDC=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_hOedaRQ;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_nxGAQuw=json({});
    return_nxGAQuw=[&]() {
    json return_zpoePcQ=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_nxGAQuw;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_ioQPvHU=json({});
    return_ioQPvHU=[&]() {
    json return_SDsHBRD=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_ioQPvHU;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_EXKbMHn=json({});
    return_EXKbMHn=[&]() {
    json return_LSXgKkX=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_EXKbMHn;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pGoHfLw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qxRBNBS=json({});
    
        if (name.pNext==NULL){
            return_qxRBNBS["null"]=true;
            return return_qxRBNBS;
        }
        return_qxRBNBS=[&]() {
    json return_pAezFXm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pAezFXm["null"]=true;
            return return_pAezFXm;
        }
        
        return_pAezFXm["members"]={};
        for(int pAezFXm=0; pAezFXm < strlen(((char*)(name.pNext)))+1; pAezFXm++){
            json temp;
            temp=[&]() {
    json return_mGwIgNO=json({});
    return serialize_char(((char*)(name.pNext))[pAezFXm]);}();
            return_pAezFXm["members"].push_back(temp);
        }
        return return_pAezFXm;
        }();return return_qxRBNBS;}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_eTpmHTA=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JiHiPqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JiHiPqv=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int QJgRoeZ=0; QJgRoeZ < name["members"]["pNext"]["members"].size(); QJgRoeZ++){
            [&]() {
temp[QJgRoeZ]=deserialize_char(name["members"]["pNext"]["members"][QJgRoeZ]);}();;
        }
        }();temp_JiHiPqv=(void*)temp;
}();result.pNext=temp_JiHiPqv;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_OtMUVPC=json({});
    return_OtMUVPC=[&]() {
    json return_HgSqHet=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_OtMUVPC;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["name"]=[&]() {
    json return_ZFxUgrv=json({});
    
        return_ZFxUgrv["members"]={};
        for(int ZFxUgrv=0; ZFxUgrv < VK_MAX_EXTENSION_NAME_SIZE; ZFxUgrv++){
            json temp;
            temp=[&]() {
    json return_tcYDKXD=json({});
    return serialize_char(name.name[ZFxUgrv]);}();
            return_ZFxUgrv["members"].push_back(temp);
        }
        return return_ZFxUgrv;
        }();
result["members"]["version"]=[&]() {
    json return_GxqHIht=json({});
    
        return_GxqHIht["members"]={};
        for(int GxqHIht=0; GxqHIht < VK_MAX_EXTENSION_NAME_SIZE; GxqHIht++){
            json temp;
            temp=[&]() {
    json return_eJTFJAU=json({});
    return serialize_char(name.version[GxqHIht]);}();
            return_GxqHIht["members"].push_back(temp);
        }
        return return_GxqHIht;
        }();
result["members"]["purposes"]=[&]() {
    json return_FtqEbGX=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_NVAHRLy=json({});
    
        return_NVAHRLy["members"]={};
        for(int NVAHRLy=0; NVAHRLy < VK_MAX_DESCRIPTION_SIZE; NVAHRLy++){
            json temp;
            temp=[&]() {
    json return_iIcHguO=json({});
    return serialize_char(name.description[NVAHRLy]);}();
            return_NVAHRLy["members"].push_back(temp);
        }
        return return_NVAHRLy;
        }();
result["members"]["layer"]=[&]() {
    json return_CULdUSd=json({});
    
        return_CULdUSd["members"]={};
        for(int CULdUSd=0; CULdUSd < VK_MAX_EXTENSION_NAME_SIZE; CULdUSd++){
            json temp;
            temp=[&]() {
    json return_KesQnaC=json({});
    return serialize_char(name.layer[CULdUSd]);}();
            return_CULdUSd["members"].push_back(temp);
        }
        return return_CULdUSd;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int jTKdikJ=0; jTKdikJ < VK_MAX_EXTENSION_NAME_SIZE; jTKdikJ++){
            [&]() {
result.name[jTKdikJ]=deserialize_char(name["members"]["name"]["members"][jTKdikJ]);}();;
        }
        }();
[&]() {

        for (int vHGTAiK=0; vHGTAiK < VK_MAX_EXTENSION_NAME_SIZE; vHGTAiK++){
            [&]() {
result.version[vHGTAiK]=deserialize_char(name["members"]["version"]["members"][vHGTAiK]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int jCqrNHy=0; jCqrNHy < VK_MAX_DESCRIPTION_SIZE; jCqrNHy++){
            [&]() {
result.description[jCqrNHy]=deserialize_char(name["members"]["description"]["members"][jCqrNHy]);}();;
        }
        }();
[&]() {

        for (int GsRUjEy=0; GsRUjEy < VK_MAX_EXTENSION_NAME_SIZE; GsRUjEy++){
            [&]() {
result.layer[GsRUjEy]=deserialize_char(name["members"]["layer"]["members"][GsRUjEy]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["name"]=[&]() {
    json return_ZFxUgrv=json({});
    
        return_ZFxUgrv["members"]={};
        for(int ZFxUgrv=0; ZFxUgrv < VK_MAX_EXTENSION_NAME_SIZE; ZFxUgrv++){
            json temp;
            temp=[&]() {
    json return_tcYDKXD=json({});
    return serialize_char(name.name[ZFxUgrv]);}();
            return_ZFxUgrv["members"].push_back(temp);
        }
        return return_ZFxUgrv;
        }();
result["members"]["version"]=[&]() {
    json return_GxqHIht=json({});
    
        return_GxqHIht["members"]={};
        for(int GxqHIht=0; GxqHIht < VK_MAX_EXTENSION_NAME_SIZE; GxqHIht++){
            json temp;
            temp=[&]() {
    json return_eJTFJAU=json({});
    return serialize_char(name.version[GxqHIht]);}();
            return_GxqHIht["members"].push_back(temp);
        }
        return return_GxqHIht;
        }();
result["members"]["purposes"]=[&]() {
    json return_FtqEbGX=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_NVAHRLy=json({});
    
        return_NVAHRLy["members"]={};
        for(int NVAHRLy=0; NVAHRLy < VK_MAX_DESCRIPTION_SIZE; NVAHRLy++){
            json temp;
            temp=[&]() {
    json return_iIcHguO=json({});
    return serialize_char(name.description[NVAHRLy]);}();
            return_NVAHRLy["members"].push_back(temp);
        }
        return return_NVAHRLy;
        }();
result["members"]["layer"]=[&]() {
    json return_CULdUSd=json({});
    
        return_CULdUSd["members"]={};
        for(int CULdUSd=0; CULdUSd < VK_MAX_EXTENSION_NAME_SIZE; CULdUSd++){
            json temp;
            temp=[&]() {
    json return_KesQnaC=json({});
    return serialize_char(name.layer[CULdUSd]);}();
            return_CULdUSd["members"].push_back(temp);
        }
        return return_CULdUSd;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int jTKdikJ=0; jTKdikJ < VK_MAX_EXTENSION_NAME_SIZE; jTKdikJ++){
            [&]() {
result.name[jTKdikJ]=deserialize_char(name["members"]["name"]["members"][jTKdikJ]);}();;
        }
        }();
[&]() {

        for (int vHGTAiK=0; vHGTAiK < VK_MAX_EXTENSION_NAME_SIZE; vHGTAiK++){
            [&]() {
result.version[vHGTAiK]=deserialize_char(name["members"]["version"]["members"][vHGTAiK]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int jCqrNHy=0; jCqrNHy < VK_MAX_DESCRIPTION_SIZE; jCqrNHy++){
            [&]() {
result.description[jCqrNHy]=deserialize_char(name["members"]["description"]["members"][jCqrNHy]);}();;
        }
        }();
[&]() {

        for (int GsRUjEy=0; GsRUjEy < VK_MAX_EXTENSION_NAME_SIZE; GsRUjEy++){
            [&]() {
result.layer[GsRUjEy]=deserialize_char(name["members"]["layer"]["members"][GsRUjEy]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qxRBNBS=json({});
    
        if (name.pNext==NULL){
            return_qxRBNBS["null"]=true;
            return return_qxRBNBS;
        }
        return_qxRBNBS=[&]() {
    json return_pAezFXm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pAezFXm["null"]=true;
            return return_pAezFXm;
        }
        
        return_pAezFXm["members"]={};
        for(int pAezFXm=0; pAezFXm < strlen(((char*)(name.pNext)))+1; pAezFXm++){
            json temp;
            temp=[&]() {
    json return_mGwIgNO=json({});
    return serialize_char(((char*)(name.pNext))[pAezFXm]);}();
            return_pAezFXm["members"].push_back(temp);
        }
        return return_pAezFXm;
        }();return return_qxRBNBS;}();
result["members"]["customBorderColor"]=[&]() {
    json return_fQDUcvH=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_dfHEcJV=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JiHiPqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JiHiPqv=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int QJgRoeZ=0; QJgRoeZ < name["members"]["pNext"]["members"].size(); QJgRoeZ++){
            [&]() {
temp[QJgRoeZ]=deserialize_char(name["members"]["pNext"]["members"][QJgRoeZ]);}();;
        }
        }();temp_JiHiPqv=(void*)temp;
}();result.pNext=temp_JiHiPqv;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETeIayl=json({});
    
        if (name.pNext==NULL){
            return_ETeIayl["null"]=true;
            return return_ETeIayl;
        }
        return_ETeIayl=[&]() {
    json return_OOxpLZd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_OOxpLZd["null"]=true;
            return return_OOxpLZd;
        }
        
        return_OOxpLZd["members"]={};
        for(int OOxpLZd=0; OOxpLZd < strlen(((char*)(name.pNext)))+1; OOxpLZd++){
            json temp;
            temp=[&]() {
    json return_gBIEaON=json({});
    return serialize_char(((char*)(name.pNext))[OOxpLZd]);}();
            return_OOxpLZd["members"].push_back(temp);
        }
        return return_OOxpLZd;
        }();return return_ETeIayl;}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_hHcuRqZ=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TngeoyR=0; TngeoyR < name["members"]["pNext"]["members"].size(); TngeoyR++){
            [&]() {
temp[TngeoyR]=deserialize_char(name["members"]["pNext"]["members"][TngeoyR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["customBorderColors"]=[&]() {
    json return_jxgmuye=json({});
    return_jxgmuye=[&]() {
    json return_GtiAEUA=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_jxgmuye;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_mPxomfk=json({});
    return_mPxomfk=[&]() {
    json return_NLtvwFi=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_mPxomfk;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fNSQNcr=json({});
    
        if (name.pNext==NULL){
            return_fNSQNcr["null"]=true;
            return return_fNSQNcr;
        }
        return_fNSQNcr=[&]() {
    json return_ZKRXfdj=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZKRXfdj["null"]=true;
            return return_ZKRXfdj;
        }
        
        return_ZKRXfdj["members"]={};
        for(int ZKRXfdj=0; ZKRXfdj < strlen(((char*)(name.pNext)))+1; ZKRXfdj++){
            json temp;
            temp=[&]() {
    json return_AuPmNoD=json({});
    return serialize_char(((char*)(name.pNext))[ZKRXfdj]);}();
            return_ZKRXfdj["members"].push_back(temp);
        }
        return return_ZKRXfdj;
        }();return return_fNSQNcr;}();
result["members"]["components"]=[&]() {
    json return_udrXkOk=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_ZCGuKLw=json({});
    return_ZCGuKLw=[&]() {
    json return_cPKGHeW=json({});
    return serialize_uint32_t(name.srgb);}();return return_ZCGuKLw;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JlfUJFP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JlfUJFP=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jgNbhxI=0; jgNbhxI < name["members"]["pNext"]["members"].size(); jgNbhxI++){
            [&]() {
temp[jgNbhxI]=deserialize_char(name["members"]["pNext"]["members"][jgNbhxI]);}();;
        }
        }();temp_JlfUJFP=(void*)temp;
}();result.pNext=temp_JlfUJFP;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_RvoOYwW=json({});
    return_RvoOYwW=[&]() {
    json return_RyTZlZH=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_RvoOYwW;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_PKsvKKB=json({});
    return_PKsvKKB=[&]() {
    json return_YWWQvBc=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_PKsvKKB;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_fMSvxlo=json({});
    return_fMSvxlo=[&]() {
    json return_qKYXvvV=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_fMSvxlo;}();
result["members"]["hostAddress"]=[&]() {
    json return_abRHyuG=json({});
    
        if (name.hostAddress==NULL){
            return_abRHyuG["null"]=true;
            return return_abRHyuG;
        }
        return_abRHyuG=[&]() {
    json return_HblUWih=json({});
    
        if (((char*)(name.hostAddress))==NULL){
            return_HblUWih["null"]=true;
            return return_HblUWih;
        }
        
        return_HblUWih["members"]={};
        for(int HblUWih=0; HblUWih < strlen(((char*)(name.hostAddress)))+1; HblUWih++){
            json temp;
            temp=[&]() {
    json return_rJQBNmc=json({});
    return serialize_char(((char*)(name.hostAddress))[HblUWih]);}();
            return_HblUWih["members"].push_back(temp);
        }
        return return_HblUWih;
        }();return return_abRHyuG;}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["hostAddress"]["members"].size()*sizeof(char));
        for (int ndVXRxr=0; ndVXRxr < name["members"]["hostAddress"]["members"].size(); ndVXRxr++){
            [&]() {
temp[ndVXRxr]=deserialize_char(name["members"]["hostAddress"]["members"][ndVXRxr]);}();;
        }
        }();result.hostAddress=(void*)temp;
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_fMSvxlo=json({});
    return_fMSvxlo=[&]() {
    json return_qKYXvvV=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_fMSvxlo;}();
result["members"]["hostAddress"]=[&]() {
    json return_QYAOETb=json({});
    
        if (name.hostAddress==NULL){
            return_QYAOETb["null"]=true;
            return return_QYAOETb;
        }
        return_QYAOETb=[&]() {
    json return_McJIkdv=json({});
    
        if (((char*)(name.hostAddress))==NULL){
            return_McJIkdv["null"]=true;
            return return_McJIkdv;
        }
        
        return_McJIkdv["members"]={};
        for(int McJIkdv=0; McJIkdv < strlen(((char*)(name.hostAddress)))+1; McJIkdv++){
            json temp;
            temp=[&]() {
    json return_KKSNhhl=json({});
    return serialize_char(((char*)(name.hostAddress))[McJIkdv]);}();
            return_McJIkdv["members"].push_back(temp);
        }
        return return_McJIkdv;
        }();return return_QYAOETb;}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_ThycBZJ;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_ThycBZJ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["hostAddress"]["members"].size()*sizeof(char));
        for (int XcWcfMT=0; XcWcfMT < name["members"]["hostAddress"]["members"].size(); XcWcfMT++){
            [&]() {
temp[XcWcfMT]=deserialize_char(name["members"]["hostAddress"]["members"][XcWcfMT]);}();;
        }
        }();temp_ThycBZJ=(void*)temp;
}();result.hostAddress=temp_ThycBZJ;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["vertexFormat"]=[&]() {
    json return_sRBRlVT=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_vmhYutI=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_hERcRdT=json({});
    return_hERcRdT=[&]() {
    json return_UtQyRSC=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_hERcRdT;}();
result["members"]["maxVertex"]=[&]() {
    json return_oTBDZaD=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_VhmKEIK=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_PlNtqEH=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_LpUHaoR=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ymqSteN=json({});
    
        if (name.pNext==NULL){
            return_ymqSteN["null"]=true;
            return return_ymqSteN;
        }
        return_ymqSteN=[&]() {
    json return_ZPeUPfV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZPeUPfV["null"]=true;
            return return_ZPeUPfV;
        }
        
        return_ZPeUPfV["members"]={};
        for(int ZPeUPfV=0; ZPeUPfV < strlen(((char*)(name.pNext)))+1; ZPeUPfV++){
            json temp;
            temp=[&]() {
    json return_pVmKIiP=json({});
    return serialize_char(((char*)(name.pNext))[ZPeUPfV]);}();
            return_ZPeUPfV["members"].push_back(temp);
        }
        return return_ZPeUPfV;
        }();return return_ymqSteN;}();
result["members"]["data"]=[&]() {
    json return_UdJCelR=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_uetiWab=json({});
    return_uetiWab=[&]() {
    json return_rTcdGOw=json({});
    return serialize_uint64_t(name.stride);}();return return_uetiWab;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tuuajEc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tuuajEc=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int giUnoop=0; giUnoop < name["members"]["pNext"]["members"].size(); giUnoop++){
            [&]() {
temp[giUnoop]=deserialize_char(name["members"]["pNext"]["members"][giUnoop]);}();;
        }
        }();temp_tuuajEc=(void*)temp;
}();result.pNext=temp_tuuajEc;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ymqSteN=json({});
    
        if (name.pNext==NULL){
            return_ymqSteN["null"]=true;
            return return_ymqSteN;
        }
        return_ymqSteN=[&]() {
    json return_ZPeUPfV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZPeUPfV["null"]=true;
            return return_ZPeUPfV;
        }
        
        return_ZPeUPfV["members"]={};
        for(int ZPeUPfV=0; ZPeUPfV < strlen(((char*)(name.pNext)))+1; ZPeUPfV++){
            json temp;
            temp=[&]() {
    json return_pVmKIiP=json({});
    return serialize_char(((char*)(name.pNext))[ZPeUPfV]);}();
            return_ZPeUPfV["members"].push_back(temp);
        }
        return return_ZPeUPfV;
        }();return return_ymqSteN;}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_aKpYcNj=json({});
    return_aKpYcNj=[&]() {
    json return_oJBvrbP=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_aKpYcNj;}();
result["members"]["data"]=[&]() {
    json return_szwneww=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tuuajEc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tuuajEc=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int giUnoop=0; giUnoop < name["members"]["pNext"]["members"].size(); giUnoop++){
            [&]() {
temp[giUnoop]=deserialize_char(name["members"]["pNext"]["members"][giUnoop]);}();;
        }
        }();temp_tuuajEc=(void*)temp;
}();result.pNext=temp_tuuajEc;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_xRFPMnI=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_khSoAWJ=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_XQcTpVs=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["geometryType"]=[&]() {
    json return_XdJMBsk=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_hCObeHZ=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_JrfYwNR=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["type"]=[&]() {
    json return_AiAQhBv=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_VXfBXpg=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_sxHqCOD=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_ShBSqZe=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_pvKqKSk=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_ONsgrQF=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_vAeMmcQ=json({});
    
        if (name.pGeometries==NULL){
            return_vAeMmcQ["null"]=true;
            return return_vAeMmcQ;
        }
        
        return_vAeMmcQ["members"]={};
        for(int vAeMmcQ=0; vAeMmcQ < name.geometryCount; vAeMmcQ++){
            json temp;
            temp=[&]() {
    json return_NsOQKGc=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[vAeMmcQ]);}();
            return_vAeMmcQ["members"].push_back(temp);
        }
        return return_vAeMmcQ;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_uIhUDjS=json({});
    
        if (name.ppGeometries==NULL){
            return_uIhUDjS["null"]=true;
            return return_uIhUDjS;
        }
        
        return_uIhUDjS["members"]={};
        for(int uIhUDjS=0; uIhUDjS < name.geometryCount; uIhUDjS++){
            json temp;
            temp=[&]() {
    json return_tXRyfVA=json({});
    
        if (name.ppGeometries[uIhUDjS]==NULL){
            return_tXRyfVA["null"]=true;
            return return_tXRyfVA;
        }
        
        return_tXRyfVA["members"]={};
        for(int tXRyfVA=0; tXRyfVA < 1; tXRyfVA++){
            json temp;
            temp=[&]() {
    json return_UBsBCJN=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[uIhUDjS][tXRyfVA]);}();
            return_tXRyfVA["members"].push_back(temp);
        }
        return return_tXRyfVA;
        }();
            return_uIhUDjS["members"].push_back(temp);
        }
        return return_uIhUDjS;
        }();
result["members"]["scratchData"]=[&]() {
    json return_lSRzFaF=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_xLvTCYJ;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_xLvTCYJ=NULL;
        return;
        }
    temp_xLvTCYJ=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int GLWguAh=0; GLWguAh < result.geometryCount; GLWguAh++){
            [&]() {
temp_xLvTCYJ[GLWguAh]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][GLWguAh]);}();;
        }
        }();result.pGeometries=temp_xLvTCYJ;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_skSqJiD;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_skSqJiD=NULL;
        return;
        }
    temp_skSqJiD=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int yhEiQzP=0; yhEiQzP < result.geometryCount; yhEiQzP++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][yhEiQzP].contains("null")){
        temp_skSqJiD[yhEiQzP]=NULL;
        return;
        }
    temp_skSqJiD[yhEiQzP]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int NeUPfit=0; NeUPfit < 1; NeUPfit++){
            [&]() {
temp_skSqJiD[yhEiQzP][NeUPfit]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][yhEiQzP]["members"][NeUPfit]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_skSqJiD;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_lafBWUT=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_vhBvmcm=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_OPAxVSC=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_TemPqao=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJEaAjM=json({});
    
        if (name.pNext==NULL){
            return_sJEaAjM["null"]=true;
            return return_sJEaAjM;
        }
        return_sJEaAjM=[&]() {
    json return_rBgzMMw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_rBgzMMw["null"]=true;
            return return_rBgzMMw;
        }
        
        return_rBgzMMw["members"]={};
        for(int rBgzMMw=0; rBgzMMw < strlen(((char*)(name.pNext)))+1; rBgzMMw++){
            json temp;
            temp=[&]() {
    json return_ejnGIWb=json({});
    return serialize_char(((char*)(name.pNext))[rBgzMMw]);}();
            return_rBgzMMw["members"].push_back(temp);
        }
        return return_rBgzMMw;
        }();return return_sJEaAjM;}();
result["members"]["createFlags"]=[&]() {
    json return_rLZEAdU=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_iNMjrHv=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_NNKbgHC=json({});
    return_NNKbgHC=[&]() {
    json return_rjASgGU=json({});
    return serialize_uint64_t(name.offset);}();return return_NNKbgHC;}();
result["members"]["size"]=[&]() {
    json return_ySQALFE=json({});
    return_ySQALFE=[&]() {
    json return_IJHbppP=json({});
    return serialize_uint64_t(name.size);}();return return_ySQALFE;}();
result["members"]["type"]=[&]() {
    json return_cZOlRWh=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_vYlQBLH=json({});
    return_vYlQBLH=[&]() {
    json return_dzEVIsZ=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_vYlQBLH;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YvSbgFq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YvSbgFq=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bfrvKlJ=0; bfrvKlJ < name["members"]["pNext"]["members"].size(); bfrvKlJ++){
            [&]() {
temp[bfrvKlJ]=deserialize_char(name["members"]["pNext"]["members"][bfrvKlJ]);}();;
        }
        }();temp_YvSbgFq=(void*)temp;
}();result.pNext=temp_YvSbgFq;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_ZiXqAck=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_ZhQkDCf=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_xpQtPVO=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_fNjcEAF=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_yjYsApB=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_OrKvuMR=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_ZiXqAck=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_ZhQkDCf=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_xpQtPVO=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_fNjcEAF=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_yjYsApB=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_OrKvuMR=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_mqMPDMf=json({});
    
        return_mqMPDMf["members"]={};
        for(int mqMPDMf=0; mqMPDMf < 3; mqMPDMf++){
            json temp;
            temp=[&]() {
    json return_gGKWmyw=json({});
    
        return_gGKWmyw["members"]={};
        for(int gGKWmyw=0; gGKWmyw < 4; gGKWmyw++){
            json temp;
            temp=[&]() {
    json return_Fdqluro=json({});
    return serialize_float(name.matrix[mqMPDMf][gGKWmyw]);}();
            return_gGKWmyw["members"].push_back(temp);
        }
        return return_gGKWmyw;
        }();
            return_mqMPDMf["members"].push_back(temp);
        }
        return return_mqMPDMf;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int HnXgInF=0; HnXgInF < 3; HnXgInF++){
            [&]() {

        for (int ZIUvsVk=0; ZIUvsVk < 4; ZIUvsVk++){
            [&]() {
result.matrix[HnXgInF][ZIUvsVk]=deserialize_float(name["members"]["matrix"]["members"][HnXgInF]["members"][ZIUvsVk]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_mqMPDMf=json({});
    
        return_mqMPDMf["members"]={};
        for(int mqMPDMf=0; mqMPDMf < 3; mqMPDMf++){
            json temp;
            temp=[&]() {
    json return_gGKWmyw=json({});
    
        return_gGKWmyw["members"]={};
        for(int gGKWmyw=0; gGKWmyw < 4; gGKWmyw++){
            json temp;
            temp=[&]() {
    json return_Fdqluro=json({});
    return serialize_float(name.matrix[mqMPDMf][gGKWmyw]);}();
            return_gGKWmyw["members"].push_back(temp);
        }
        return return_gGKWmyw;
        }();
            return_mqMPDMf["members"].push_back(temp);
        }
        return return_mqMPDMf;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int HnXgInF=0; HnXgInF < 3; HnXgInF++){
            [&]() {

        for (int ZIUvsVk=0; ZIUvsVk < 4; ZIUvsVk++){
            [&]() {
result.matrix[HnXgInF][ZIUvsVk]=deserialize_float(name["members"]["matrix"]["members"][HnXgInF]["members"][ZIUvsVk]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_ExedDXC=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_GChPIeR=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_bNEeCKJ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_mHbaVjd=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_SzSMsQZ=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_rvlzKWz=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_ExedDXC=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_GChPIeR=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_bNEeCKJ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_mHbaVjd=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_SzSMsQZ=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_rvlzKWz=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_UqvCktF=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["pVersionData"]=[&]() {
    json return_ljCAUJd=json({});
    
        if (name.pVersionData==NULL){
            return_ljCAUJd["null"]=true;
            return return_ljCAUJd;
        }
        
        return_ljCAUJd["members"]={};
        for(int ljCAUJd=0; ljCAUJd < 2*VK_UUID_SIZE; ljCAUJd++){
            json temp;
            temp=[&]() {
    json return_tRaBNAz=json({});
    return serialize_uint8_t(name.pVersionData[ljCAUJd]);}();
            return_ljCAUJd["members"].push_back(temp);
        }
        return return_ljCAUJd;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
uint8_t* temp_JvazigJ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_JvazigJ=NULL;
        return;
        }
    temp_JvazigJ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int zgTJpWk=0; zgTJpWk < 2*VK_UUID_SIZE; zgTJpWk++){
            [&]() {
temp_JvazigJ[zgTJpWk]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][zgTJpWk]);}();;
        }
        }();result.pVersionData=temp_JvazigJ;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_BGcZRdG=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_CDqPlwx=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_npEFiFV=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_BGcZRdG=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_DTUZtri=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_npEFiFV=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_xTOMVEG=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_CDqPlwx=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_npEFiFV=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_VhmXrre=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_RegxQSY=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["libraryCount"]=[&]() {
    json return_yPCeGLw=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_ZyxnbiG=json({});
    
        if (name.pLibraries==NULL){
            return_ZyxnbiG["null"]=true;
            return return_ZyxnbiG;
        }
        
        return_ZyxnbiG["members"]={};
        for(int ZyxnbiG=0; ZyxnbiG < name.libraryCount; ZyxnbiG++){
            json temp;
            temp=[&]() {
    json return_CWEmupZ=json({});
    return serialize_VkPipeline(name.pLibraries[ZyxnbiG]);}();
            return_ZyxnbiG["members"].push_back(temp);
        }
        return return_ZyxnbiG;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_GXIjQxN;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_GXIjQxN=NULL;
        return;
        }
    temp_GXIjQxN=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int ILkPBmj=0; ILkPBmj < result.libraryCount; ILkPBmj++){
            [&]() {
temp_GXIjQxN[ILkPBmj]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][ILkPBmj]);}();;
        }
        }();result.pLibraries=temp_GXIjQxN;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_VjbwLwC=json({});
    return_VjbwLwC=[&]() {
    json return_bNkwbLO=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_VjbwLwC;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_APRLsuz=json({});
    return_APRLsuz=[&]() {
    json return_KlZjHWm=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_APRLsuz;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_cYnRpqq=json({});
    return_cYnRpqq=[&]() {
    json return_JEgiDbG=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_cYnRpqq;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_NPRvsbC=json({});
    return_NPRvsbC=[&]() {
    json return_QOQbyMO=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_NPRvsbC;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_YAsapae=json({});
    return_YAsapae=[&]() {
    json return_cpVLvgH=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_YAsapae;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_SkLGonP=json({});
    return_SkLGonP=[&]() {
    json return_FFvuNYA=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_SkLGonP;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_EKUGtiE=json({});
    return_EKUGtiE=[&]() {
    json return_OFgdWDI=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_EKUGtiE;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_ujdAVtK=json({});
    return_ujdAVtK=[&]() {
    json return_JHkiejn=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_ujdAVtK;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_rBiewKX=json({});
    return_rBiewKX=[&]() {
    json return_RLURumd=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_rBiewKX;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_UDUXNYD=json({});
    return_UDUXNYD=[&]() {
    json return_GzcfxJL=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_UDUXNYD;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_CSJUNew=json({});
    return_CSJUNew=[&]() {
    json return_tEupIrj=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_CSJUNew;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_HjksGSZ=json({});
    return_HjksGSZ=[&]() {
    json return_sjDitWR=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_HjksGSZ;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_UlLkBNN=json({});
    return_UlLkBNN=[&]() {
    json return_IYuzfGy=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_UlLkBNN;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_XycpXOa=json({});
    return_XycpXOa=[&]() {
    json return_azvfUNi=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_XycpXOa;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_QONYeeU=json({});
    return_QONYeeU=[&]() {
    json return_MlwUTPe=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_QONYeeU;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_fyNkGsO=json({});
    return_fyNkGsO=[&]() {
    json return_kVPmKlA=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_fyNkGsO;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_uxqPunB=json({});
    return_uxqPunB=[&]() {
    json return_xZEKcrp=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_uxqPunB;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_vnpclpG=json({});
    return_vnpclpG=[&]() {
    json return_SkxkwSq=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_vnpclpG;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_bNcVSYf=json({});
    return_bNcVSYf=[&]() {
    json return_bfpYzCm=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_bNcVSYf;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_qdTrHxW=json({});
    return_qdTrHxW=[&]() {
    json return_QTfldkz=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_qdTrHxW;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_roxOZEb=json({});
    return_roxOZEb=[&]() {
    json return_rHNhSBJ=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_roxOZEb;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_VrFaMfM=json({});
    return_VrFaMfM=[&]() {
    json return_jEhiDdo=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_VrFaMfM;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_EeOtfgG=json({});
    return_EeOtfgG=[&]() {
    json return_RvKhgKM=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_EeOtfgG;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_jOCSilP=json({});
    return_jOCSilP=[&]() {
    json return_RiLfKAk=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_jOCSilP;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_yOzBeMZ=json({});
    return_yOzBeMZ=[&]() {
    json return_yohtjcW=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_yOzBeMZ;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_AnlpiOi=json({});
    return_AnlpiOi=[&]() {
    json return_VaWeRkK=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_AnlpiOi;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_jaIKulQ=json({});
    return_jaIKulQ=[&]() {
    json return_eYxpeyH=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_jaIKulQ;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_mIpeMEk=json({});
    return_mIpeMEk=[&]() {
    json return_iDuOIbb=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_mIpeMEk;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_nflwgan=json({});
    return_nflwgan=[&]() {
    json return_QMJUXbx=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_nflwgan;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_snGEGYu=json({});
    return_snGEGYu=[&]() {
    json return_sORclMH=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_snGEGYu;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_tibXjgh=json({});
    return_tibXjgh=[&]() {
    json return_WHiFHFZ=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_tibXjgh;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_XTNNZHZ=json({});
    return_XTNNZHZ=[&]() {
    json return_HHlRQXe=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_XTNNZHZ;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_XJqiMsK=json({});
    return_XJqiMsK=[&]() {
    json return_fqdcBRi=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_XJqiMsK;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_ihYtpwr=json({});
    return_ihYtpwr=[&]() {
    json return_DVAMcsU=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_ihYtpwr;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_aJCyZkc=json({});
    return_aJCyZkc=[&]() {
    json return_WhMrBeM=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_aJCyZkc;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_DFeiHSK=json({});
    return_DFeiHSK=[&]() {
    json return_IWYEnXl=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_DFeiHSK;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_jNMGCbP=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_wCcSNEX=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_QMnvntw=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_sXsoqNP=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_rkdhSoq=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_IqlrJAx=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_ZQdRDvU=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_MxDMDWb=json({});
    return_MxDMDWb=[&]() {
    json return_CHvyFcl=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_MxDMDWb;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_fPFfMOR=json({});
    return_fPFfMOR=[&]() {
    json return_gAxTZeK=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_fPFfMOR;}();
result["members"]["blendOverlap"]=[&]() {
    json return_mEoJngJ=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_bTPeiJP=json({});
    return_bTPeiJP=[&]() {
    json return_jAfnMEj=json({});
    return serialize_uint32_t(name.clampResults);}();return return_bTPeiJP;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wlUDOFZ=json({});
    
        if (name.pNext==NULL){
            return_wlUDOFZ["null"]=true;
            return return_wlUDOFZ;
        }
        return_wlUDOFZ=[&]() {
    json return_hJedDSk=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hJedDSk["null"]=true;
            return return_hJedDSk;
        }
        
        return_hJedDSk["members"]={};
        for(int hJedDSk=0; hJedDSk < strlen(((char*)(name.pNext)))+1; hJedDSk++){
            json temp;
            temp=[&]() {
    json return_MsKedHb=json({});
    return serialize_char(((char*)(name.pNext))[hJedDSk]);}();
            return_hJedDSk["members"].push_back(temp);
        }
        return return_hJedDSk;
        }();return return_wlUDOFZ;}();
result["members"]["transform"]=[&]() {
    json return_KVFCdpi=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int KfoycTU=0; KfoycTU < name["members"]["pNext"]["members"].size(); KfoycTU++){
            [&]() {
temp[KfoycTU]=deserialize_char(name["members"]["pNext"]["members"][KfoycTU]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYnshZX=json({});
    
        if (name.pNext==NULL){
            return_jYnshZX["null"]=true;
            return return_jYnshZX;
        }
        return_jYnshZX=[&]() {
    json return_CKwDpuY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_CKwDpuY["null"]=true;
            return return_CKwDpuY;
        }
        
        return_CKwDpuY["members"]={};
        for(int CKwDpuY=0; CKwDpuY < strlen(((char*)(name.pNext)))+1; CKwDpuY++){
            json temp;
            temp=[&]() {
    json return_YWCBCkX=json({});
    return serialize_char(((char*)(name.pNext))[CKwDpuY]);}();
            return_CKwDpuY["members"].push_back(temp);
        }
        return return_CKwDpuY;
        }();return return_jYnshZX;}();
result["members"]["transform"]=[&]() {
    json return_KVFCdpi=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTXsqWM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTXsqWM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FqXNYHR=0; FqXNYHR < name["members"]["pNext"]["members"].size(); FqXNYHR++){
            [&]() {
temp[FqXNYHR]=deserialize_char(name["members"]["pNext"]["members"][FqXNYHR]);}();;
        }
        }();temp_tTXsqWM=(void*)temp;
}();result.pNext=temp_tTXsqWM;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wlUDOFZ=json({});
    
        if (name.pNext==NULL){
            return_wlUDOFZ["null"]=true;
            return return_wlUDOFZ;
        }
        return_wlUDOFZ=[&]() {
    json return_hJedDSk=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hJedDSk["null"]=true;
            return return_hJedDSk;
        }
        
        return_hJedDSk["members"]={};
        for(int hJedDSk=0; hJedDSk < strlen(((char*)(name.pNext)))+1; hJedDSk++){
            json temp;
            temp=[&]() {
    json return_MsKedHb=json({});
    return serialize_char(((char*)(name.pNext))[hJedDSk]);}();
            return_hJedDSk["members"].push_back(temp);
        }
        return return_hJedDSk;
        }();return return_wlUDOFZ;}();
result["members"]["transform"]=[&]() {
    json return_ACyRdJd=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_DXaDZXw=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int KfoycTU=0; KfoycTU < name["members"]["pNext"]["members"].size(); KfoycTU++){
            [&]() {
temp[KfoycTU]=deserialize_char(name["members"]["pNext"]["members"][KfoycTU]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_LuWTsir=json({});
    return_LuWTsir=[&]() {
    json return_MDEelyA=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_LuWTsir;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BjcxKLS=json({});
    
        if (name.pNext==NULL){
            return_BjcxKLS["null"]=true;
            return return_BjcxKLS;
        }
        return_BjcxKLS=[&]() {
    json return_FQqTgbw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FQqTgbw["null"]=true;
            return return_FQqTgbw;
        }
        
        return_FQqTgbw["members"]={};
        for(int FQqTgbw=0; FQqTgbw < strlen(((char*)(name.pNext)))+1; FQqTgbw++){
            json temp;
            temp=[&]() {
    json return_cOLxsJF=json({});
    return serialize_char(((char*)(name.pNext))[FQqTgbw]);}();
            return_FQqTgbw["members"].push_back(temp);
        }
        return return_FQqTgbw;
        }();return return_BjcxKLS;}();
result["members"]["flags"]=[&]() {
    json return_pKGGBtc=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pXLFMNj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pXLFMNj=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bzyYjVt=0; bzyYjVt < name["members"]["pNext"]["members"].size(); bzyYjVt++){
            [&]() {
temp[bzyYjVt]=deserialize_char(name["members"]["pNext"]["members"][bzyYjVt]);}();;
        }
        }();temp_pXLFMNj=(void*)temp;
}();result.pNext=temp_pXLFMNj;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UpYPPUm=json({});
    
        if (name.pNext==NULL){
            return_UpYPPUm["null"]=true;
            return return_UpYPPUm;
        }
        return_UpYPPUm=[&]() {
    json return_dnFegcI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dnFegcI["null"]=true;
            return return_dnFegcI;
        }
        
        return_dnFegcI["members"]={};
        for(int dnFegcI=0; dnFegcI < strlen(((char*)(name.pNext)))+1; dnFegcI++){
            json temp;
            temp=[&]() {
    json return_tJPAjpe=json({});
    return serialize_char(((char*)(name.pNext))[dnFegcI]);}();
            return_dnFegcI["members"].push_back(temp);
        }
        return return_dnFegcI;
        }();return return_UpYPPUm;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_yIiclgE=json({});
    return_yIiclgE=[&]() {
    json return_JAwwjgy=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_yIiclgE;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfHoroN=0; XfHoroN < name["members"]["pNext"]["members"].size(); XfHoroN++){
            [&]() {
temp[XfHoroN]=deserialize_char(name["members"]["pNext"]["members"][XfHoroN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UpYPPUm=json({});
    
        if (name.pNext==NULL){
            return_UpYPPUm["null"]=true;
            return return_UpYPPUm;
        }
        return_UpYPPUm=[&]() {
    json return_dnFegcI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dnFegcI["null"]=true;
            return return_dnFegcI;
        }
        
        return_dnFegcI["members"]={};
        for(int dnFegcI=0; dnFegcI < strlen(((char*)(name.pNext)))+1; dnFegcI++){
            json temp;
            temp=[&]() {
    json return_tJPAjpe=json({});
    return serialize_char(((char*)(name.pNext))[dnFegcI]);}();
            return_dnFegcI["members"].push_back(temp);
        }
        return return_dnFegcI;
        }();return return_UpYPPUm;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_yIiclgE=json({});
    return_yIiclgE=[&]() {
    json return_JAwwjgy=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_yIiclgE;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfHoroN=0; XfHoroN < name["members"]["pNext"]["members"].size(); XfHoroN++){
            [&]() {
temp[XfHoroN]=deserialize_char(name["members"]["pNext"]["members"][XfHoroN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_ptzmZkh=json({});
    return_ptzmZkh=[&]() {
    json return_bPfEHlS=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_ptzmZkh;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_uAwoEPO=json({});
    return_uAwoEPO=[&]() {
    json return_lScpyWl=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_uAwoEPO;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_vLlzsCx=json({});
    return_vLlzsCx=[&]() {
    json return_dorFiVs=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_vLlzsCx;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_HgBhHUb=json({});
    return_HgBhHUb=[&]() {
    json return_AFjVWIg=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_HgBhHUb;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_BONMysb=json({});
    return_BONMysb=[&]() {
    json return_bQnfMZr=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_BONMysb;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_KaWBHBK=json({});
    return_KaWBHBK=[&]() {
    json return_KEEZWVF=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_KaWBHBK;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["robustImageAccess"]=[&]() {
    json return_cgfbuLs=json({});
    return_cgfbuLs=[&]() {
    json return_lqKObkM=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_cgfbuLs;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["robustImageAccess"]=[&]() {
    json return_cgfbuLs=json({});
    return_cgfbuLs=[&]() {
    json return_lqKObkM=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_cgfbuLs;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_uBDEGaM=json({});
    return_uBDEGaM=[&]() {
    json return_uzlVLSM=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_uBDEGaM;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_cOKOyxM=json({});
    return_cOKOyxM=[&]() {
    json return_CxduukZ=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_cOKOyxM;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_nzcscqC=json({});
    return_nzcscqC=[&]() {
    json return_PgLVLoM=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_nzcscqC;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_DolJwjI=json({});
    return_DolJwjI=[&]() {
    json return_pJxZInf=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_DolJwjI;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_FbMmkdQ=json({});
    return_FbMmkdQ=[&]() {
    json return_ndYcrar=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_FbMmkdQ;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_uNhvqXZ=json({});
    return_uNhvqXZ=[&]() {
    json return_rzegGEs=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_uNhvqXZ;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["subpassShading"]=[&]() {
    json return_XAkWQhl=json({});
    return_XAkWQhl=[&]() {
    json return_fXbDSHY=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_XAkWQhl;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HgOESsy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TRpBfqB=json({});
    
        if (name.pNext==NULL){
            return_TRpBfqB["null"]=true;
            return return_TRpBfqB;
        }
        return_TRpBfqB=[&]() {
    json return_fQuAOcc=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_fQuAOcc["null"]=true;
            return return_fQuAOcc;
        }
        
        return_fQuAOcc["members"]={};
        for(int fQuAOcc=0; fQuAOcc < strlen(((char*)(name.pNext)))+1; fQuAOcc++){
            json temp;
            temp=[&]() {
    json return_RcEVOsI=json({});
    return serialize_char(((char*)(name.pNext))[fQuAOcc]);}();
            return_fQuAOcc["members"].push_back(temp);
        }
        return return_fQuAOcc;
        }();return return_TRpBfqB;}();
result["members"]["clustercullingShader"]=[&]() {
    json return_WDzCLjm=json({});
    return_WDzCLjm=[&]() {
    json return_vXIDYWh=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_WDzCLjm;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_zhcaKoM=json({});
    return_zhcaKoM=[&]() {
    json return_gajQTVd=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_zhcaKoM;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UjgudPg=0; UjgudPg < name["members"]["pNext"]["members"].size(); UjgudPg++){
            [&]() {
temp[UjgudPg]=deserialize_char(name["members"]["pNext"]["members"][UjgudPg]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcOffset"]=[&]() {
    json return_nlYyNvU=json({});
    return_nlYyNvU=[&]() {
    json return_MwWZgRs=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_nlYyNvU;}();
result["members"]["dstOffset"]=[&]() {
    json return_YYboWGr=json({});
    return_YYboWGr=[&]() {
    json return_OBBFEpH=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_YYboWGr;}();
result["members"]["size"]=[&]() {
    json return_HpJBrXt=json({});
    return_HpJBrXt=[&]() {
    json return_VsebUkC=json({});
    return serialize_uint64_t(name.size);}();return return_HpJBrXt;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcOffset"]=[&]() {
    json return_nlYyNvU=json({});
    return_nlYyNvU=[&]() {
    json return_MwWZgRs=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_nlYyNvU;}();
result["members"]["dstOffset"]=[&]() {
    json return_YYboWGr=json({});
    return_YYboWGr=[&]() {
    json return_OBBFEpH=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_YYboWGr;}();
result["members"]["size"]=[&]() {
    json return_HpJBrXt=json({});
    return_HpJBrXt=[&]() {
    json return_VsebUkC=json({});
    return serialize_uint64_t(name.size);}();return return_HpJBrXt;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_rROXYlL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_RqcToGc=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_iExvpzq=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_rROXYlL=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_RqcToGc=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_iExvpzq=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_BpOOuWm=json({});
    
        return_BpOOuWm["members"]={};
        for(int BpOOuWm=0; BpOOuWm < 2; BpOOuWm++){
            json temp;
            temp=[&]() {
    json return_qeWgVFZ=json({});
    return serialize_VkOffset3D(name.srcOffsets[BpOOuWm]);}();
            return_BpOOuWm["members"].push_back(temp);
        }
        return return_BpOOuWm;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_jqAPnQY=json({});
    
        return_jqAPnQY["members"]={};
        for(int jqAPnQY=0; jqAPnQY < 2; jqAPnQY++){
            json temp;
            temp=[&]() {
    json return_dWCXZlC=json({});
    return serialize_VkOffset3D(name.dstOffsets[jqAPnQY]);}();
            return_jqAPnQY["members"].push_back(temp);
        }
        return return_jqAPnQY;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int TtEUHWm=0; TtEUHWm < 2; TtEUHWm++){
            [&]() {
result.srcOffsets[TtEUHWm]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][TtEUHWm]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int SEjknbJ=0; SEjknbJ < 2; SEjknbJ++){
            [&]() {
result.dstOffsets[SEjknbJ]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][SEjknbJ]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_BpOOuWm=json({});
    
        return_BpOOuWm["members"]={};
        for(int BpOOuWm=0; BpOOuWm < 2; BpOOuWm++){
            json temp;
            temp=[&]() {
    json return_qeWgVFZ=json({});
    return serialize_VkOffset3D(name.srcOffsets[BpOOuWm]);}();
            return_BpOOuWm["members"].push_back(temp);
        }
        return return_BpOOuWm;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_jqAPnQY=json({});
    
        return_jqAPnQY["members"]={};
        for(int jqAPnQY=0; jqAPnQY < 2; jqAPnQY++){
            json temp;
            temp=[&]() {
    json return_dWCXZlC=json({});
    return serialize_VkOffset3D(name.dstOffsets[jqAPnQY]);}();
            return_jqAPnQY["members"].push_back(temp);
        }
        return return_jqAPnQY;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int TtEUHWm=0; TtEUHWm < 2; TtEUHWm++){
            [&]() {
result.srcOffsets[TtEUHWm]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][TtEUHWm]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int SEjknbJ=0; SEjknbJ < 2; SEjknbJ++){
            [&]() {
result.dstOffsets[SEjknbJ]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][SEjknbJ]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["bufferOffset"]=[&]() {
    json return_UCVOxsq=json({});
    return_UCVOxsq=[&]() {
    json return_uvUZLBL=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_UCVOxsq;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_wELEOSV=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_cmpoSZg=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_yXpDGBI=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_scYnFMk=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_kypKejV=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["bufferOffset"]=[&]() {
    json return_UCVOxsq=json({});
    return_UCVOxsq=[&]() {
    json return_uvUZLBL=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_UCVOxsq;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_wELEOSV=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_cmpoSZg=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_yXpDGBI=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_scYnFMk=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_kypKejV=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_Drjocnr=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_jRMlLSS=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_bxrXZhk=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcSubresource"]=[&]() {
    json return_ifpiaqM=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_Drjocnr=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_jzgYhSR=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_jRMlLSS=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_bxrXZhk=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcBuffer"]=[&]() {
    json return_CLjWvWQ=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_LZLMNar=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_ahDvgyI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BGEeDsj=json({});
    
        if (name.pRegions==NULL){
            return_BGEeDsj["null"]=true;
            return return_BGEeDsj;
        }
        
        return_BGEeDsj["members"]={};
        for(int BGEeDsj=0; BGEeDsj < name.regionCount; BGEeDsj++){
            json temp;
            temp=[&]() {
    json return_tAoGxFc=json({});
    return serialize_VkBufferCopy2(name.pRegions[BGEeDsj]);}();
            return_BGEeDsj["members"].push_back(temp);
        }
        return return_BGEeDsj;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_DhBRSJO;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_DhBRSJO=NULL;
        return;
        }
    temp_DhBRSJO=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int fBDfnTP=0; fBDfnTP < result.regionCount; fBDfnTP++){
            [&]() {
temp_DhBRSJO[fBDfnTP]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][fBDfnTP]);}();;
        }
        }();result.pRegions=temp_DhBRSJO;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcBuffer"]=[&]() {
    json return_CLjWvWQ=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_LZLMNar=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_ahDvgyI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BGEeDsj=json({});
    
        if (name.pRegions==NULL){
            return_BGEeDsj["null"]=true;
            return return_BGEeDsj;
        }
        
        return_BGEeDsj["members"]={};
        for(int BGEeDsj=0; BGEeDsj < name.regionCount; BGEeDsj++){
            json temp;
            temp=[&]() {
    json return_tAoGxFc=json({});
    return serialize_VkBufferCopy2(name.pRegions[BGEeDsj]);}();
            return_BGEeDsj["members"].push_back(temp);
        }
        return return_BGEeDsj;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_DhBRSJO;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_DhBRSJO=NULL;
        return;
        }
    temp_DhBRSJO=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int fBDfnTP=0; fBDfnTP < result.regionCount; fBDfnTP++){
            [&]() {
temp_DhBRSJO[fBDfnTP]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][fBDfnTP]);}();;
        }
        }();result.pRegions=temp_DhBRSJO;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcImage"]=[&]() {
    json return_DxMiwti=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_udtooJD=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_cOSMQoW=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_QLuVBwj=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ahDvgyI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_PDioiJZ=json({});
    
        if (name.pRegions==NULL){
            return_PDioiJZ["null"]=true;
            return return_PDioiJZ;
        }
        
        return_PDioiJZ["members"]={};
        for(int PDioiJZ=0; PDioiJZ < name.regionCount; PDioiJZ++){
            json temp;
            temp=[&]() {
    json return_DFpAWHE=json({});
    return serialize_VkImageCopy2(name.pRegions[PDioiJZ]);}();
            return_PDioiJZ["members"].push_back(temp);
        }
        return return_PDioiJZ;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_UkyxHWr;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UkyxHWr=NULL;
        return;
        }
    temp_UkyxHWr=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int UegyRev=0; UegyRev < result.regionCount; UegyRev++){
            [&]() {
temp_UkyxHWr[UegyRev]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][UegyRev]);}();;
        }
        }();result.pRegions=temp_UkyxHWr;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["srcImage"]=[&]() {
    json return_DxMiwti=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_udtooJD=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_cOSMQoW=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_QLuVBwj=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ahDvgyI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_PDioiJZ=json({});
    
        if (name.pRegions==NULL){
            return_PDioiJZ["null"]=true;
            return return_PDioiJZ;
        }
        
        return_PDioiJZ["members"]={};
        for(int PDioiJZ=0; PDioiJZ < name.regionCount; PDioiJZ++){
            json temp;
            temp=[&]() {
    json return_DFpAWHE=json({});
    return serialize_VkImageCopy2(name.pRegions[PDioiJZ]);}();
            return_PDioiJZ["members"].push_back(temp);
        }
        return return_PDioiJZ;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_UkyxHWr;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UkyxHWr=NULL;
        return;
        }
    temp_UkyxHWr=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int UegyRev=0; UegyRev < result.regionCount; UegyRev++){
            [&]() {
temp_UkyxHWr[UegyRev]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][UegyRev]);}();;
        }
        }();result.pRegions=temp_UkyxHWr;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcImage"]=[&]() {
    json return_TeNvUrU=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_OgQvWqv=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_stBVrSv=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_geJtCoF=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_maxTCZo=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_eFYqdWj=json({});
    
        if (name.pRegions==NULL){
            return_eFYqdWj["null"]=true;
            return return_eFYqdWj;
        }
        
        return_eFYqdWj["members"]={};
        for(int eFYqdWj=0; eFYqdWj < name.regionCount; eFYqdWj++){
            json temp;
            temp=[&]() {
    json return_HvlSMYZ=json({});
    return serialize_VkImageBlit2(name.pRegions[eFYqdWj]);}();
            return_eFYqdWj["members"].push_back(temp);
        }
        return return_eFYqdWj;
        }();
result["members"]["filter"]=[&]() {
    json return_xoXybZq=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_qEaFsxL;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_qEaFsxL=NULL;
        return;
        }
    temp_qEaFsxL=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int giMsUiO=0; giMsUiO < result.regionCount; giMsUiO++){
            [&]() {
temp_qEaFsxL[giMsUiO]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][giMsUiO]);}();;
        }
        }();result.pRegions=temp_qEaFsxL;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["srcImage"]=[&]() {
    json return_TeNvUrU=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_OgQvWqv=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_stBVrSv=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_geJtCoF=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_maxTCZo=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_eFYqdWj=json({});
    
        if (name.pRegions==NULL){
            return_eFYqdWj["null"]=true;
            return return_eFYqdWj;
        }
        
        return_eFYqdWj["members"]={};
        for(int eFYqdWj=0; eFYqdWj < name.regionCount; eFYqdWj++){
            json temp;
            temp=[&]() {
    json return_HvlSMYZ=json({});
    return serialize_VkImageBlit2(name.pRegions[eFYqdWj]);}();
            return_eFYqdWj["members"].push_back(temp);
        }
        return return_eFYqdWj;
        }();
result["members"]["filter"]=[&]() {
    json return_xoXybZq=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_qEaFsxL;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_qEaFsxL=NULL;
        return;
        }
    temp_qEaFsxL=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int giMsUiO=0; giMsUiO < result.regionCount; giMsUiO++){
            [&]() {
temp_qEaFsxL[giMsUiO]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][giMsUiO]);}();;
        }
        }();result.pRegions=temp_qEaFsxL;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkrTyoI=json({});
    
        if (name.pNext==NULL){
            return_dkrTyoI["null"]=true;
            return return_dkrTyoI;
        }
        return_dkrTyoI=[&]() {
    json return_HwomHKN=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HwomHKN["null"]=true;
            return return_HwomHKN;
        }
        
        return_HwomHKN["members"]={};
        for(int HwomHKN=0; HwomHKN < strlen(((char*)(name.pNext)))+1; HwomHKN++){
            json temp;
            temp=[&]() {
    json return_kNuhIKz=json({});
    return serialize_char(((char*)(name.pNext))[HwomHKN]);}();
            return_HwomHKN["members"].push_back(temp);
        }
        return return_HwomHKN;
        }();return return_dkrTyoI;}();
result["members"]["srcBuffer"]=[&]() {
    json return_agixgwi=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_VBYqzfs=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_tfNgHnW=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_fGQWVVI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_APnovTZ=json({});
    
        if (name.pRegions==NULL){
            return_APnovTZ["null"]=true;
            return return_APnovTZ;
        }
        
        return_APnovTZ["members"]={};
        for(int APnovTZ=0; APnovTZ < name.regionCount; APnovTZ++){
            json temp;
            temp=[&]() {
    json return_xHxGicf=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[APnovTZ]);}();
            return_APnovTZ["members"].push_back(temp);
        }
        return return_APnovTZ;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBAOmYt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBAOmYt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RRrHqsk=0; RRrHqsk < name["members"]["pNext"]["members"].size(); RRrHqsk++){
            [&]() {
temp[RRrHqsk]=deserialize_char(name["members"]["pNext"]["members"][RRrHqsk]);}();;
        }
        }();temp_VBAOmYt=(void*)temp;
}();result.pNext=temp_VBAOmYt;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_RhhAYGT;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_RhhAYGT=NULL;
        return;
        }
    temp_RhhAYGT=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int hvHunke=0; hvHunke < result.regionCount; hvHunke++){
            [&]() {
temp_RhhAYGT[hvHunke]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][hvHunke]);}();;
        }
        }();result.pRegions=temp_RhhAYGT;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkrTyoI=json({});
    
        if (name.pNext==NULL){
            return_dkrTyoI["null"]=true;
            return return_dkrTyoI;
        }
        return_dkrTyoI=[&]() {
    json return_HwomHKN=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HwomHKN["null"]=true;
            return return_HwomHKN;
        }
        
        return_HwomHKN["members"]={};
        for(int HwomHKN=0; HwomHKN < strlen(((char*)(name.pNext)))+1; HwomHKN++){
            json temp;
            temp=[&]() {
    json return_kNuhIKz=json({});
    return serialize_char(((char*)(name.pNext))[HwomHKN]);}();
            return_HwomHKN["members"].push_back(temp);
        }
        return return_HwomHKN;
        }();return return_dkrTyoI;}();
result["members"]["srcBuffer"]=[&]() {
    json return_agixgwi=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_VBYqzfs=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_tfNgHnW=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_fGQWVVI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_APnovTZ=json({});
    
        if (name.pRegions==NULL){
            return_APnovTZ["null"]=true;
            return return_APnovTZ;
        }
        
        return_APnovTZ["members"]={};
        for(int APnovTZ=0; APnovTZ < name.regionCount; APnovTZ++){
            json temp;
            temp=[&]() {
    json return_xHxGicf=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[APnovTZ]);}();
            return_APnovTZ["members"].push_back(temp);
        }
        return return_APnovTZ;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBAOmYt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBAOmYt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RRrHqsk=0; RRrHqsk < name["members"]["pNext"]["members"].size(); RRrHqsk++){
            [&]() {
temp[RRrHqsk]=deserialize_char(name["members"]["pNext"]["members"][RRrHqsk]);}();;
        }
        }();temp_VBAOmYt=(void*)temp;
}();result.pNext=temp_VBAOmYt;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_RhhAYGT;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_RhhAYGT=NULL;
        return;
        }
    temp_RhhAYGT=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int hvHunke=0; hvHunke < result.regionCount; hvHunke++){
            [&]() {
temp_RhhAYGT[hvHunke]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][hvHunke]);}();;
        }
        }();result.pRegions=temp_RhhAYGT;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["srcImage"]=[&]() {
    json return_usttuOx=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_alLIcrw=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_lqrnpek=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_ojoBnhI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_VZbwdGC=json({});
    
        if (name.pRegions==NULL){
            return_VZbwdGC["null"]=true;
            return return_VZbwdGC;
        }
        
        return_VZbwdGC["members"]={};
        for(int VZbwdGC=0; VZbwdGC < name.regionCount; VZbwdGC++){
            json temp;
            temp=[&]() {
    json return_PvjBZGv=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[VZbwdGC]);}();
            return_VZbwdGC["members"].push_back(temp);
        }
        return return_VZbwdGC;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_ZBABtae;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ZBABtae=NULL;
        return;
        }
    temp_ZBABtae=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int pEFZoUL=0; pEFZoUL < result.regionCount; pEFZoUL++){
            [&]() {
temp_ZBABtae[pEFZoUL]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][pEFZoUL]);}();;
        }
        }();result.pRegions=temp_ZBABtae;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["srcImage"]=[&]() {
    json return_usttuOx=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_alLIcrw=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_lqrnpek=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_ojoBnhI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_VZbwdGC=json({});
    
        if (name.pRegions==NULL){
            return_VZbwdGC["null"]=true;
            return return_VZbwdGC;
        }
        
        return_VZbwdGC["members"]={};
        for(int VZbwdGC=0; VZbwdGC < name.regionCount; VZbwdGC++){
            json temp;
            temp=[&]() {
    json return_PvjBZGv=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[VZbwdGC]);}();
            return_VZbwdGC["members"].push_back(temp);
        }
        return return_VZbwdGC;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_ZBABtae;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ZBABtae=NULL;
        return;
        }
    temp_ZBABtae=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int pEFZoUL=0; pEFZoUL < result.regionCount; pEFZoUL++){
            [&]() {
temp_ZBABtae[pEFZoUL]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][pEFZoUL]);}();;
        }
        }();result.pRegions=temp_ZBABtae;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["srcImage"]=[&]() {
    json return_QGqOsQn=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_arRblFW=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JxjXnTt=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_adSenpT=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ViEvVYK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_KTfrSqX=json({});
    
        if (name.pRegions==NULL){
            return_KTfrSqX["null"]=true;
            return return_KTfrSqX;
        }
        
        return_KTfrSqX["members"]={};
        for(int KTfrSqX=0; KTfrSqX < name.regionCount; KTfrSqX++){
            json temp;
            temp=[&]() {
    json return_JjatvqU=json({});
    return serialize_VkImageResolve2(name.pRegions[KTfrSqX]);}();
            return_KTfrSqX["members"].push_back(temp);
        }
        return return_KTfrSqX;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_njfsCkI;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_njfsCkI=NULL;
        return;
        }
    temp_njfsCkI=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int nYUaaPj=0; nYUaaPj < result.regionCount; nYUaaPj++){
            [&]() {
temp_njfsCkI[nYUaaPj]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][nYUaaPj]);}();;
        }
        }();result.pRegions=temp_njfsCkI;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["srcImage"]=[&]() {
    json return_QGqOsQn=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_arRblFW=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JxjXnTt=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_adSenpT=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ViEvVYK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_KTfrSqX=json({});
    
        if (name.pRegions==NULL){
            return_KTfrSqX["null"]=true;
            return return_KTfrSqX;
        }
        
        return_KTfrSqX["members"]={};
        for(int KTfrSqX=0; KTfrSqX < name.regionCount; KTfrSqX++){
            json temp;
            temp=[&]() {
    json return_JjatvqU=json({});
    return serialize_VkImageResolve2(name.pRegions[KTfrSqX]);}();
            return_KTfrSqX["members"].push_back(temp);
        }
        return return_KTfrSqX;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_njfsCkI;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_njfsCkI=NULL;
        return;
        }
    temp_njfsCkI=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int nYUaaPj=0; nYUaaPj < result.regionCount; nYUaaPj++){
            [&]() {
temp_njfsCkI[nYUaaPj]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][nYUaaPj]);}();;
        }
        }();result.pRegions=temp_njfsCkI;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_lbvjxJD=json({});
    return_lbvjxJD=[&]() {
    json return_XbdJjNb=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_lbvjxJD;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_zYeOcUK=json({});
    return_zYeOcUK=[&]() {
    json return_ipZdIJd=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_zYeOcUK;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_mqdCaaP=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_mqdCaaP["null"]=true;
            return return_mqdCaaP;
        }
        return_mqdCaaP=[&]() {
    json return_mOwiAGq=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_mqdCaaP;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_NoBHRUk=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
VkAttachmentReference2* temp_omtvRHJ;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_omtvRHJ=NULL;
        return;
        }
    temp_omtvRHJ=(VkAttachmentReference2*)malloc(sizeof(VkAttachmentReference2));
[&]() {
*(temp_omtvRHJ)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_omtvRHJ;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sKJJJro=json({});
    
        if (name.pNext==NULL){
            return_sKJJJro["null"]=true;
            return return_sKJJJro;
        }
        return_sKJJJro=[&]() {
    json return_yUuLRrM=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yUuLRrM["null"]=true;
            return return_yUuLRrM;
        }
        
        return_yUuLRrM["members"]={};
        for(int yUuLRrM=0; yUuLRrM < strlen(((char*)(name.pNext)))+1; yUuLRrM++){
            json temp;
            temp=[&]() {
    json return_mbuAVtw=json({});
    return serialize_char(((char*)(name.pNext))[yUuLRrM]);}();
            return_yUuLRrM["members"].push_back(temp);
        }
        return return_yUuLRrM;
        }();return return_sKJJJro;}();
result["members"]["fragmentSize"]=[&]() {
    json return_OcGjxDN=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_TkuzJoH=json({});
    
        return_TkuzJoH["members"]={};
        for(int TkuzJoH=0; TkuzJoH < 2; TkuzJoH++){
            json temp;
            temp=[&]() {
    json return_cRRxcpn=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[TkuzJoH]);}();
            return_TkuzJoH["members"].push_back(temp);
        }
        return return_TkuzJoH;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rbkRlJL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rbkRlJL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DxMkVGH=0; DxMkVGH < name["members"]["pNext"]["members"].size(); DxMkVGH++){
            [&]() {
temp[DxMkVGH]=deserialize_char(name["members"]["pNext"]["members"][DxMkVGH]);}();;
        }
        }();temp_rbkRlJL=(void*)temp;
}();result.pNext=temp_rbkRlJL;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int uEuLarT=0; uEuLarT < 2; uEuLarT++){
            [&]() {
result.combinerOps[uEuLarT]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][uEuLarT]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_bdlKYxG=json({});
    return_bdlKYxG=[&]() {
    json return_wZsoPKU=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_bdlKYxG;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_gcuNVkn=json({});
    return_gcuNVkn=[&]() {
    json return_PzHFwAv=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_gcuNVkn;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_bsyOgHE=json({});
    return_bsyOgHE=[&]() {
    json return_gjpEnsh=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_bsyOgHE;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_gSsvxYr=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_BYKtBse=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_jLlsOmQ=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_sHNhpnf=json({});
    return_sHNhpnf=[&]() {
    json return_ZaTcJQU=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_sHNhpnf;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_VFfNtaD=json({});
    return_VFfNtaD=[&]() {
    json return_HLIGagK=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_VFfNtaD;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_zqIuZep=json({});
    return_zqIuZep=[&]() {
    json return_QchWXhE=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_zqIuZep;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_dWJOEFM=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_FVgOrHp=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_MQGkFuB=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_vNevNSf=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_QeLQuJa=json({});
    return_QeLQuJa=[&]() {
    json return_YcMoSYS=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_QeLQuJa;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_ehYUyXS=json({});
    return_ehYUyXS=[&]() {
    json return_pTAjOQk=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_ehYUyXS;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_iYaMydZ=json({});
    return_iYaMydZ=[&]() {
    json return_gXwtlzJ=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_iYaMydZ;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_apoBERA=json({});
    return_apoBERA=[&]() {
    json return_etilhVZ=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_apoBERA;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_OyifliL=json({});
    return_OyifliL=[&]() {
    json return_yjvkBtW=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_OyifliL;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_mOJSknu=json({});
    return_mOJSknu=[&]() {
    json return_gxgzZRu=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_mOJSknu;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_JIzrMTV=json({});
    return_JIzrMTV=[&]() {
    json return_DVwavzS=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_JIzrMTV;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["sampleCounts"]=[&]() {
    json return_VsCBvLO=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_nItWqqh=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_OZFFaxR=json({});
    return_OZFFaxR=[&]() {
    json return_ItMTAcv=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_OZFFaxR;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_OZFFaxR=json({});
    return_OZFFaxR=[&]() {
    json return_ItMTAcv=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_OZFFaxR;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_NGcXivQ=json({});
    return_NGcXivQ=[&]() {
    json return_PwsIHZD=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_NGcXivQ;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_nwoYzLU=json({});
    return_nwoYzLU=[&]() {
    json return_bhDSqVm=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_nwoYzLU;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_juFYlAt=json({});
    return_juFYlAt=[&]() {
    json return_zBjwFUX=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_juFYlAt;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AZIcpLy=json({});
    
        if (name.pNext==NULL){
            return_AZIcpLy["null"]=true;
            return return_AZIcpLy;
        }
        return_AZIcpLy=[&]() {
    json return_HJEzPTB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HJEzPTB["null"]=true;
            return return_HJEzPTB;
        }
        
        return_HJEzPTB["members"]={};
        for(int HJEzPTB=0; HJEzPTB < strlen(((char*)(name.pNext)))+1; HJEzPTB++){
            json temp;
            temp=[&]() {
    json return_AwGVpxY=json({});
    return serialize_char(((char*)(name.pNext))[HJEzPTB]);}();
            return_HJEzPTB["members"].push_back(temp);
        }
        return return_HJEzPTB;
        }();return return_AZIcpLy;}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_dvcuJEP=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int aMnQrlT=0; aMnQrlT < name["members"]["pNext"]["members"].size(); aMnQrlT++){
            [&]() {
temp[aMnQrlT]=deserialize_char(name["members"]["pNext"]["members"][aMnQrlT]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["shadingRateType"]=[&]() {
    json return_bDJkFAB=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_dlCuCKW=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_WgyleSe=json({});
    
        return_WgyleSe["members"]={};
        for(int WgyleSe=0; WgyleSe < 2; WgyleSe++){
            json temp;
            temp=[&]() {
    json return_FOIDYWL=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[WgyleSe]);}();
            return_WgyleSe["members"].push_back(temp);
        }
        return return_WgyleSe;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int JhHDJzq=0; JhHDJzq < 2; JhHDJzq++){
            [&]() {
result.combinerOps[JhHDJzq]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][JhHDJzq]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_CTmiuaD=json({});
    return_CTmiuaD=[&]() {
    json return_bPjTUKB=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_CTmiuaD;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_xPdbbAE=json({});
    return_xPdbbAE=[&]() {
    json return_rSOZcGO=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_xPdbbAE;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_aiPehRf=json({});
    return_aiPehRf=[&]() {
    json return_CsHtEjl=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_aiPehRf;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ArKCqzl=json({});
    
        if (name.pNext==NULL){
            return_ArKCqzl["null"]=true;
            return return_ArKCqzl;
        }
        return_ArKCqzl=[&]() {
    json return_bwYhDhd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_bwYhDhd["null"]=true;
            return return_bwYhDhd;
        }
        
        return_bwYhDhd["members"]={};
        for(int bwYhDhd=0; bwYhDhd < strlen(((char*)(name.pNext)))+1; bwYhDhd++){
            json temp;
            temp=[&]() {
    json return_UywxEbK=json({});
    return serialize_char(((char*)(name.pNext))[bwYhDhd]);}();
            return_bwYhDhd["members"].push_back(temp);
        }
        return return_bwYhDhd;
        }();return return_ArKCqzl;}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_prlLomW=json({});
    return_prlLomW=[&]() {
    json return_zXwOtGP=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_prlLomW;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_GDxohle=json({});
    return_GDxohle=[&]() {
    json return_dcfDZuw=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_GDxohle;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kPSctNU=0; kPSctNU < name["members"]["pNext"]["members"].size(); kPSctNU++){
            [&]() {
temp[kPSctNU]=deserialize_char(name["members"]["pNext"]["members"][kPSctNU]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ArKCqzl=json({});
    
        if (name.pNext==NULL){
            return_ArKCqzl["null"]=true;
            return return_ArKCqzl;
        }
        return_ArKCqzl=[&]() {
    json return_bwYhDhd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_bwYhDhd["null"]=true;
            return return_bwYhDhd;
        }
        
        return_bwYhDhd["members"]={};
        for(int bwYhDhd=0; bwYhDhd < strlen(((char*)(name.pNext)))+1; bwYhDhd++){
            json temp;
            temp=[&]() {
    json return_UywxEbK=json({});
    return serialize_char(((char*)(name.pNext))[bwYhDhd]);}();
            return_bwYhDhd["members"].push_back(temp);
        }
        return return_bwYhDhd;
        }();return return_ArKCqzl;}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_eUjaSnO=json({});
    return_eUjaSnO=[&]() {
    json return_sezLwtb=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_eUjaSnO;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kPSctNU=0; kPSctNU < name["members"]["pNext"]["members"].size(); kPSctNU++){
            [&]() {
temp[kPSctNU]=deserialize_char(name["members"]["pNext"]["members"][kPSctNU]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_XvkDFXG=json({});
    return_XvkDFXG=[&]() {
    json return_pcJQjCL=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_XvkDFXG;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_QuwIjNp=json({});
    return_QuwIjNp=[&]() {
    json return_IuSBNcb=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_QuwIjNp;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_QuwIjNp=json({});
    return_QuwIjNp=[&]() {
    json return_IuSBNcb=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_QuwIjNp;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_vsIEFIB=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_zAmWHcP=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_zAmWHcP["null"]=true;
            return return_zAmWHcP;
        }
        
        return_zAmWHcP["members"]={};
        for(int zAmWHcP=0; zAmWHcP < name.descriptorTypeCount; zAmWHcP++){
            json temp;
            temp=[&]() {
    json return_hsvxnDr=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[zAmWHcP]);}();
            return_zAmWHcP["members"].push_back(temp);
        }
        return return_zAmWHcP;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_CXMgajp;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_CXMgajp=NULL;
        return;
        }
    temp_CXMgajp=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int PwPfees=0; PwPfees < result.descriptorTypeCount; PwPfees++){
            [&]() {
temp_CXMgajp[PwPfees]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][PwPfees]);}();;
        }
        }();result.pDescriptorTypes=temp_CXMgajp;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_vsIEFIB=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_zAmWHcP=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_zAmWHcP["null"]=true;
            return return_zAmWHcP;
        }
        
        return_zAmWHcP["members"]={};
        for(int zAmWHcP=0; zAmWHcP < name.descriptorTypeCount; zAmWHcP++){
            json temp;
            temp=[&]() {
    json return_hsvxnDr=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[zAmWHcP]);}();
            return_zAmWHcP["members"].push_back(temp);
        }
        return return_zAmWHcP;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_CXMgajp;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_CXMgajp=NULL;
        return;
        }
    temp_CXMgajp=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int PwPfees=0; PwPfees < result.descriptorTypeCount; PwPfees++){
            [&]() {
temp_CXMgajp[PwPfees]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][PwPfees]);}();;
        }
        }();result.pDescriptorTypes=temp_CXMgajp;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VwbCEte=json({});
    
        if (name.pNext==NULL){
            return_VwbCEte["null"]=true;
            return return_VwbCEte;
        }
        return_VwbCEte=[&]() {
    json return_cNmgvzB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cNmgvzB["null"]=true;
            return return_cNmgvzB;
        }
        
        return_cNmgvzB["members"]={};
        for(int cNmgvzB=0; cNmgvzB < strlen(((char*)(name.pNext)))+1; cNmgvzB++){
            json temp;
            temp=[&]() {
    json return_JcCwKxw=json({});
    return serialize_char(((char*)(name.pNext))[cNmgvzB]);}();
            return_cNmgvzB["members"].push_back(temp);
        }
        return return_cNmgvzB;
        }();return return_VwbCEte;}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_CWnlQOU=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_KhtMFpr=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_KhtMFpr["null"]=true;
            return return_KhtMFpr;
        }
        
        return_KhtMFpr["members"]={};
        for(int KhtMFpr=0; KhtMFpr < name.mutableDescriptorTypeListCount; KhtMFpr++){
            json temp;
            temp=[&]() {
    json return_OgCsvgg=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[KhtMFpr]);}();
            return_KhtMFpr["members"].push_back(temp);
        }
        return return_KhtMFpr;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JKBkNvS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JKBkNvS=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OcoWRjM=0; OcoWRjM < name["members"]["pNext"]["members"].size(); OcoWRjM++){
            [&]() {
temp[OcoWRjM]=deserialize_char(name["members"]["pNext"]["members"][OcoWRjM]);}();;
        }
        }();temp_JKBkNvS=(void*)temp;
}();result.pNext=temp_JKBkNvS;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_AoJEFwk;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_AoJEFwk=NULL;
        return;
        }
    temp_AoJEFwk=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int EwqexMK=0; EwqexMK < result.mutableDescriptorTypeListCount; EwqexMK++){
            [&]() {
temp_AoJEFwk[EwqexMK]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][EwqexMK]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_AoJEFwk;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VwbCEte=json({});
    
        if (name.pNext==NULL){
            return_VwbCEte["null"]=true;
            return return_VwbCEte;
        }
        return_VwbCEte=[&]() {
    json return_cNmgvzB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cNmgvzB["null"]=true;
            return return_cNmgvzB;
        }
        
        return_cNmgvzB["members"]={};
        for(int cNmgvzB=0; cNmgvzB < strlen(((char*)(name.pNext)))+1; cNmgvzB++){
            json temp;
            temp=[&]() {
    json return_JcCwKxw=json({});
    return serialize_char(((char*)(name.pNext))[cNmgvzB]);}();
            return_cNmgvzB["members"].push_back(temp);
        }
        return return_cNmgvzB;
        }();return return_VwbCEte;}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_CWnlQOU=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_KhtMFpr=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_KhtMFpr["null"]=true;
            return return_KhtMFpr;
        }
        
        return_KhtMFpr["members"]={};
        for(int KhtMFpr=0; KhtMFpr < name.mutableDescriptorTypeListCount; KhtMFpr++){
            json temp;
            temp=[&]() {
    json return_OgCsvgg=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[KhtMFpr]);}();
            return_KhtMFpr["members"].push_back(temp);
        }
        return return_KhtMFpr;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JKBkNvS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JKBkNvS=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OcoWRjM=0; OcoWRjM < name["members"]["pNext"]["members"].size(); OcoWRjM++){
            [&]() {
temp[OcoWRjM]=deserialize_char(name["members"]["pNext"]["members"][OcoWRjM]);}();;
        }
        }();temp_JKBkNvS=(void*)temp;
}();result.pNext=temp_JKBkNvS;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_AoJEFwk;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_AoJEFwk=NULL;
        return;
        }
    temp_AoJEFwk=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int EwqexMK=0; EwqexMK < result.mutableDescriptorTypeListCount; EwqexMK++){
            [&]() {
temp_AoJEFwk[EwqexMK]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][EwqexMK]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_AoJEFwk;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["depthClipControl"]=[&]() {
    json return_JJAdeTw=json({});
    return_JJAdeTw=[&]() {
    json return_OymYCAV=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_JJAdeTw;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_wyLaCpN=json({});
    return_wyLaCpN=[&]() {
    json return_YKYYWLm=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_wyLaCpN;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_jgMZTSA=json({});
    return_jgMZTSA=[&]() {
    json return_IhDKVpr=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_jgMZTSA;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_rdaVoFF=json({});
    return_rdaVoFF=[&]() {
    json return_Dllyijz=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_rdaVoFF;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["binding"]=[&]() {
    json return_VRbKXwW=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_OItooYE=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_DKYkXzH=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_zQjkovy=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["location"]=[&]() {
    json return_EWRwhHx=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_iRiTdIh=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_cCXVDqt=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_ExuqmUA=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_iuWJiwt=json({});
    return_iuWJiwt=[&]() {
    json return_XVrpzbt=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_iuWJiwt;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["attachmentCount"]=[&]() {
    json return_FQsBqkR=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_uPjlVJU=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_uPjlVJU["null"]=true;
            return return_uPjlVJU;
        }
        
        return_uPjlVJU["members"]={};
        for(int uPjlVJU=0; uPjlVJU < name.attachmentCount; uPjlVJU++){
            json temp;
            temp=[&]() {
    json return_bhzBBvv=json({});
    return_bhzBBvv=[&]() {
    json return_sdXcnph=json({});
    return serialize_uint32_t(name.pColorWriteEnables[uPjlVJU]);}();return return_bhzBBvv;}();
            return_uPjlVJU["members"].push_back(temp);
        }
        return return_uPjlVJU;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_NaJGNsU;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_NaJGNsU=NULL;
        return;
        }
    [&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_NaJGNsU=NULL;
        return;
        }
    temp_NaJGNsU=(uint32_t*)malloc(result.attachmentCount*sizeof(uint32_t));
        for (int vrlQRzT=0; vrlQRzT < result.attachmentCount; vrlQRzT++){
            [&]() {
temp_NaJGNsU[vrlQRzT]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][vrlQRzT]);}();;
        }
        }();}();result.pColorWriteEnables=temp_NaJGNsU;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zEDnqjx=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zEDnqjx=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_XugVrMo=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_laJvwBg=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_uBIclcX=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_TvUYtEu=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_vIDRNPL=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_OHgteWP=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_ArhwiJy=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_XugVrMo=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_laJvwBg=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_uBIclcX=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_TvUYtEu=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_vIDRNPL=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_OHgteWP=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_ArhwiJy=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_XugVrMo=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_TvUYtEu=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_vIDRNPL=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_qGcXoQM=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_yojcZkJ=json({});
    return_yojcZkJ=[&]() {
    json return_uCZQcGc=json({});
    return serialize_uint64_t(name.offset);}();return return_yojcZkJ;}();
result["members"]["size"]=[&]() {
    json return_rooZcUZ=json({});
    return_rooZcUZ=[&]() {
    json return_mnfBHRq=json({});
    return serialize_uint64_t(name.size);}();return return_rooZcUZ;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["srcStageMask"]=[&]() {
    json return_USIgzZT=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_kYOwsaO=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_tNmsUdK=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_XugVrMo=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_TvUYtEu=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_vIDRNPL=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_qGcXoQM=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_yojcZkJ=json({});
    return_yojcZkJ=[&]() {
    json return_uCZQcGc=json({});
    return serialize_uint64_t(name.offset);}();return return_yojcZkJ;}();
result["members"]["size"]=[&]() {
    json return_rooZcUZ=json({});
    return_rooZcUZ=[&]() {
    json return_mnfBHRq=json({});
    return serialize_uint64_t(name.size);}();return return_rooZcUZ;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GcHWRJV=json({});
    
        if (name.pNext==NULL){
            return_GcHWRJV["null"]=true;
            return return_GcHWRJV;
        }
        return_GcHWRJV=[&]() {
    json return_Wyngqjw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_Wyngqjw["null"]=true;
            return return_Wyngqjw;
        }
        
        return_Wyngqjw["members"]={};
        for(int Wyngqjw=0; Wyngqjw < strlen(((char*)(name.pNext)))+1; Wyngqjw++){
            json temp;
            temp=[&]() {
    json return_oLGgNZK=json({});
    return serialize_char(((char*)(name.pNext))[Wyngqjw]);}();
            return_Wyngqjw["members"].push_back(temp);
        }
        return return_Wyngqjw;
        }();return return_GcHWRJV;}();
result["members"]["dependencyFlags"]=[&]() {
    json return_AXvBqzE=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_OvrYFiv=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_zSuQsOE=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_zSuQsOE["null"]=true;
            return return_zSuQsOE;
        }
        
        return_zSuQsOE["members"]={};
        for(int zSuQsOE=0; zSuQsOE < name.memoryBarrierCount; zSuQsOE++){
            json temp;
            temp=[&]() {
    json return_qztelyx=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[zSuQsOE]);}();
            return_zSuQsOE["members"].push_back(temp);
        }
        return return_zSuQsOE;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_znNlPqF=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_ysfxqUP=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_ysfxqUP["null"]=true;
            return return_ysfxqUP;
        }
        
        return_ysfxqUP["members"]={};
        for(int ysfxqUP=0; ysfxqUP < name.bufferMemoryBarrierCount; ysfxqUP++){
            json temp;
            temp=[&]() {
    json return_HHjDfcR=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[ysfxqUP]);}();
            return_ysfxqUP["members"].push_back(temp);
        }
        return return_ysfxqUP;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_nmwNdvU=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_clwvBTO=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_clwvBTO["null"]=true;
            return return_clwvBTO;
        }
        
        return_clwvBTO["members"]={};
        for(int clwvBTO=0; clwvBTO < name.imageMemoryBarrierCount; clwvBTO++){
            json temp;
            temp=[&]() {
    json return_szUiNiP=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[clwvBTO]);}();
            return_clwvBTO["members"].push_back(temp);
        }
        return return_clwvBTO;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jCYwOxP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jCYwOxP=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int CDlbAui=0; CDlbAui < name["members"]["pNext"]["members"].size(); CDlbAui++){
            [&]() {
temp[CDlbAui]=deserialize_char(name["members"]["pNext"]["members"][CDlbAui]);}();;
        }
        }();temp_jCYwOxP=(void*)temp;
}();result.pNext=temp_jCYwOxP;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_RcaQHJc;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_RcaQHJc=NULL;
        return;
        }
    temp_RcaQHJc=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int PXbAQvv=0; PXbAQvv < result.memoryBarrierCount; PXbAQvv++){
            [&]() {
temp_RcaQHJc[PXbAQvv]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][PXbAQvv]);}();;
        }
        }();result.pMemoryBarriers=temp_RcaQHJc;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_ajzEgQP;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_ajzEgQP=NULL;
        return;
        }
    temp_ajzEgQP=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int mkaZhvx=0; mkaZhvx < result.bufferMemoryBarrierCount; mkaZhvx++){
            [&]() {
temp_ajzEgQP[mkaZhvx]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][mkaZhvx]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_ajzEgQP;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_SxkjWQE;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_SxkjWQE=NULL;
        return;
        }
    temp_SxkjWQE=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int sGPHQUv=0; sGPHQUv < result.imageMemoryBarrierCount; sGPHQUv++){
            [&]() {
temp_SxkjWQE[sGPHQUv]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][sGPHQUv]);}();;
        }
        }();result.pImageMemoryBarriers=temp_SxkjWQE;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GcHWRJV=json({});
    
        if (name.pNext==NULL){
            return_GcHWRJV["null"]=true;
            return return_GcHWRJV;
        }
        return_GcHWRJV=[&]() {
    json return_Wyngqjw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_Wyngqjw["null"]=true;
            return return_Wyngqjw;
        }
        
        return_Wyngqjw["members"]={};
        for(int Wyngqjw=0; Wyngqjw < strlen(((char*)(name.pNext)))+1; Wyngqjw++){
            json temp;
            temp=[&]() {
    json return_oLGgNZK=json({});
    return serialize_char(((char*)(name.pNext))[Wyngqjw]);}();
            return_Wyngqjw["members"].push_back(temp);
        }
        return return_Wyngqjw;
        }();return return_GcHWRJV;}();
result["members"]["dependencyFlags"]=[&]() {
    json return_AXvBqzE=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_OvrYFiv=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_zSuQsOE=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_zSuQsOE["null"]=true;
            return return_zSuQsOE;
        }
        
        return_zSuQsOE["members"]={};
        for(int zSuQsOE=0; zSuQsOE < name.memoryBarrierCount; zSuQsOE++){
            json temp;
            temp=[&]() {
    json return_qztelyx=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[zSuQsOE]);}();
            return_zSuQsOE["members"].push_back(temp);
        }
        return return_zSuQsOE;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_znNlPqF=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_ysfxqUP=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_ysfxqUP["null"]=true;
            return return_ysfxqUP;
        }
        
        return_ysfxqUP["members"]={};
        for(int ysfxqUP=0; ysfxqUP < name.bufferMemoryBarrierCount; ysfxqUP++){
            json temp;
            temp=[&]() {
    json return_HHjDfcR=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[ysfxqUP]);}();
            return_ysfxqUP["members"].push_back(temp);
        }
        return return_ysfxqUP;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_nmwNdvU=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_clwvBTO=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_clwvBTO["null"]=true;
            return return_clwvBTO;
        }
        
        return_clwvBTO["members"]={};
        for(int clwvBTO=0; clwvBTO < name.imageMemoryBarrierCount; clwvBTO++){
            json temp;
            temp=[&]() {
    json return_szUiNiP=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[clwvBTO]);}();
            return_clwvBTO["members"].push_back(temp);
        }
        return return_clwvBTO;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jCYwOxP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jCYwOxP=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int CDlbAui=0; CDlbAui < name["members"]["pNext"]["members"].size(); CDlbAui++){
            [&]() {
temp[CDlbAui]=deserialize_char(name["members"]["pNext"]["members"][CDlbAui]);}();;
        }
        }();temp_jCYwOxP=(void*)temp;
}();result.pNext=temp_jCYwOxP;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_RcaQHJc;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_RcaQHJc=NULL;
        return;
        }
    temp_RcaQHJc=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int PXbAQvv=0; PXbAQvv < result.memoryBarrierCount; PXbAQvv++){
            [&]() {
temp_RcaQHJc[PXbAQvv]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][PXbAQvv]);}();;
        }
        }();result.pMemoryBarriers=temp_RcaQHJc;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_ajzEgQP;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_ajzEgQP=NULL;
        return;
        }
    temp_ajzEgQP=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int mkaZhvx=0; mkaZhvx < result.bufferMemoryBarrierCount; mkaZhvx++){
            [&]() {
temp_ajzEgQP[mkaZhvx]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][mkaZhvx]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_ajzEgQP;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_SxkjWQE;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_SxkjWQE=NULL;
        return;
        }
    temp_SxkjWQE=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int sGPHQUv=0; sGPHQUv < result.imageMemoryBarrierCount; sGPHQUv++){
            [&]() {
temp_SxkjWQE[sGPHQUv]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][sGPHQUv]);}();;
        }
        }();result.pImageMemoryBarriers=temp_SxkjWQE;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kiGmUIS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["semaphore"]=[&]() {
    json return_cETJAUb=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_tnZwNlC=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_CluVrZf=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_PXShhNu=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kiGmUIS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["semaphore"]=[&]() {
    json return_cETJAUb=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_tnZwNlC=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_CluVrZf=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_PXShhNu=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QykxSjR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["commandBuffer"]=[&]() {
    json return_TPqrmyA=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_iGPSPIb=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QykxSjR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["commandBuffer"]=[&]() {
    json return_TPqrmyA=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_iGPSPIb=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRLKXZz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["flags"]=[&]() {
    json return_XbrVWIw=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_FYRMeYu=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_zAVGQxD=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_zAVGQxD["null"]=true;
            return return_zAVGQxD;
        }
        
        return_zAVGQxD["members"]={};
        for(int zAVGQxD=0; zAVGQxD < name.waitSemaphoreInfoCount; zAVGQxD++){
            json temp;
            temp=[&]() {
    json return_nqRMXNN=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[zAVGQxD]);}();
            return_zAVGQxD["members"].push_back(temp);
        }
        return return_zAVGQxD;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_qtaFTMl=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_nplTyWf=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_nplTyWf["null"]=true;
            return return_nplTyWf;
        }
        
        return_nplTyWf["members"]={};
        for(int nplTyWf=0; nplTyWf < name.commandBufferInfoCount; nplTyWf++){
            json temp;
            temp=[&]() {
    json return_iPDDaQq=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[nplTyWf]);}();
            return_nplTyWf["members"].push_back(temp);
        }
        return return_nplTyWf;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_mGhToYv=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_XnRMJvn=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_XnRMJvn["null"]=true;
            return return_XnRMJvn;
        }
        
        return_XnRMJvn["members"]={};
        for(int XnRMJvn=0; XnRMJvn < name.signalSemaphoreInfoCount; XnRMJvn++){
            json temp;
            temp=[&]() {
    json return_gdObGCH=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[XnRMJvn]);}();
            return_XnRMJvn["members"].push_back(temp);
        }
        return return_XnRMJvn;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_niZCFpB;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_niZCFpB=NULL;
        return;
        }
    temp_niZCFpB=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int eMCpMWO=0; eMCpMWO < result.waitSemaphoreInfoCount; eMCpMWO++){
            [&]() {
temp_niZCFpB[eMCpMWO]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][eMCpMWO]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_niZCFpB;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_lMkQDjQ;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_lMkQDjQ=NULL;
        return;
        }
    temp_lMkQDjQ=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int cZMvEgc=0; cZMvEgc < result.commandBufferInfoCount; cZMvEgc++){
            [&]() {
temp_lMkQDjQ[cZMvEgc]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][cZMvEgc]);}();;
        }
        }();result.pCommandBufferInfos=temp_lMkQDjQ;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_vijbEyZ;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_vijbEyZ=NULL;
        return;
        }
    temp_vijbEyZ=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int mMisrbn=0; mMisrbn < result.signalSemaphoreInfoCount; mMisrbn++){
            [&]() {
temp_vijbEyZ[mMisrbn]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][mMisrbn]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_vijbEyZ;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRLKXZz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MnZJGjF=json({});
    
        if (name.pNext==NULL){
            return_MnZJGjF["null"]=true;
            return return_MnZJGjF;
        }
        return_MnZJGjF=[&]() {
    json return_JlgBeBw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_JlgBeBw["null"]=true;
            return return_JlgBeBw;
        }
        
        return_JlgBeBw["members"]={};
        for(int JlgBeBw=0; JlgBeBw < strlen(((char*)(name.pNext)))+1; JlgBeBw++){
            json temp;
            temp=[&]() {
    json return_UJrVnwi=json({});
    return serialize_char(((char*)(name.pNext))[JlgBeBw]);}();
            return_JlgBeBw["members"].push_back(temp);
        }
        return return_JlgBeBw;
        }();return return_MnZJGjF;}();
result["members"]["flags"]=[&]() {
    json return_XbrVWIw=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_FYRMeYu=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_zAVGQxD=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_zAVGQxD["null"]=true;
            return return_zAVGQxD;
        }
        
        return_zAVGQxD["members"]={};
        for(int zAVGQxD=0; zAVGQxD < name.waitSemaphoreInfoCount; zAVGQxD++){
            json temp;
            temp=[&]() {
    json return_nqRMXNN=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[zAVGQxD]);}();
            return_zAVGQxD["members"].push_back(temp);
        }
        return return_zAVGQxD;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_qtaFTMl=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_nplTyWf=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_nplTyWf["null"]=true;
            return return_nplTyWf;
        }
        
        return_nplTyWf["members"]={};
        for(int nplTyWf=0; nplTyWf < name.commandBufferInfoCount; nplTyWf++){
            json temp;
            temp=[&]() {
    json return_iPDDaQq=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[nplTyWf]);}();
            return_nplTyWf["members"].push_back(temp);
        }
        return return_nplTyWf;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_mGhToYv=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_XnRMJvn=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_XnRMJvn["null"]=true;
            return return_XnRMJvn;
        }
        
        return_XnRMJvn["members"]={};
        for(int XnRMJvn=0; XnRMJvn < name.signalSemaphoreInfoCount; XnRMJvn++){
            json temp;
            temp=[&]() {
    json return_gdObGCH=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[XnRMJvn]);}();
            return_XnRMJvn["members"].push_back(temp);
        }
        return return_XnRMJvn;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hIwmzDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hIwmzDf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int hDSSPCY=0; hDSSPCY < name["members"]["pNext"]["members"].size(); hDSSPCY++){
            [&]() {
temp[hDSSPCY]=deserialize_char(name["members"]["pNext"]["members"][hDSSPCY]);}();;
        }
        }();temp_hIwmzDf=(void*)temp;
}();result.pNext=temp_hIwmzDf;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_niZCFpB;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_niZCFpB=NULL;
        return;
        }
    temp_niZCFpB=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int eMCpMWO=0; eMCpMWO < result.waitSemaphoreInfoCount; eMCpMWO++){
            [&]() {
temp_niZCFpB[eMCpMWO]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][eMCpMWO]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_niZCFpB;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_lMkQDjQ;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_lMkQDjQ=NULL;
        return;
        }
    temp_lMkQDjQ=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int cZMvEgc=0; cZMvEgc < result.commandBufferInfoCount; cZMvEgc++){
            [&]() {
temp_lMkQDjQ[cZMvEgc]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][cZMvEgc]);}();;
        }
        }();result.pCommandBufferInfos=temp_lMkQDjQ;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_vijbEyZ;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_vijbEyZ=NULL;
        return;
        }
    temp_vijbEyZ=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int mMisrbn=0; mMisrbn < result.signalSemaphoreInfoCount; mMisrbn++){
            [&]() {
temp_vijbEyZ[mMisrbn]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][mMisrbn]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_vijbEyZ;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sLmbdhq=json({});
    
        if (name.pNext==NULL){
            return_sLmbdhq["null"]=true;
            return return_sLmbdhq;
        }
        return_sLmbdhq=[&]() {
    json return_voZpfut=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_voZpfut["null"]=true;
            return return_voZpfut;
        }
        
        return_voZpfut["members"]={};
        for(int voZpfut=0; voZpfut < strlen(((char*)(name.pNext)))+1; voZpfut++){
            json temp;
            temp=[&]() {
    json return_PMYpLVC=json({});
    return serialize_char(((char*)(name.pNext))[voZpfut]);}();
            return_voZpfut["members"].push_back(temp);
        }
        return return_voZpfut;
        }();return return_sLmbdhq;}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_OPDlCsS=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int pAdqvtr=0; pAdqvtr < name["members"]["pNext"]["members"].size(); pAdqvtr++){
            [&]() {
temp[pAdqvtr]=deserialize_char(name["members"]["pNext"]["members"][pAdqvtr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["stage"]=[&]() {
    json return_LKczyYU=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_ASJDxzs=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_ASJDxzs["null"]=true;
            return return_ASJDxzs;
        }
        return_ASJDxzs=[&]() {
    json return_dlJcMCH=json({});
    
        if (((char*)(name.pCheckpointMarker))==NULL){
            return_dlJcMCH["null"]=true;
            return return_dlJcMCH;
        }
        
        return_dlJcMCH["members"]={};
        for(int dlJcMCH=0; dlJcMCH < strlen(((char*)(name.pCheckpointMarker)))+1; dlJcMCH++){
            json temp;
            temp=[&]() {
    json return_biTDqNR=json({});
    return serialize_char(((char*)(name.pCheckpointMarker))[dlJcMCH]);}();
            return_dlJcMCH["members"].push_back(temp);
        }
        return return_dlJcMCH;
        }();return return_ASJDxzs;}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pCheckpointMarker"]["members"].size()*sizeof(char));
        for (int RCegkhN=0; RCegkhN < name["members"]["pCheckpointMarker"]["members"].size(); RCegkhN++){
            [&]() {
temp[RCegkhN]=deserialize_char(name["members"]["pCheckpointMarker"]["members"][RCegkhN]);}();;
        }
        }();result.pCheckpointMarker=(void*)temp;
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["synchronization2"]=[&]() {
    json return_eXzAeKS=json({});
    return_eXzAeKS=[&]() {
    json return_ipnUaTK=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_eXzAeKS;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["synchronization2"]=[&]() {
    json return_eXzAeKS=json({});
    return_eXzAeKS=[&]() {
    json return_ipnUaTK=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_eXzAeKS;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["hostImageCopy"]=[&]() {
    json return_ZOdTMlD=json({});
    return_ZOdTMlD=[&]() {
    json return_aulkxYl=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_ZOdTMlD;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xQuLqES=json({});
    
        if (name.pNext==NULL){
            return_xQuLqES["null"]=true;
            return return_xQuLqES;
        }
        return_xQuLqES=[&]() {
    json return_oQSyspt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oQSyspt["null"]=true;
            return return_oQSyspt;
        }
        
        return_oQSyspt["members"]={};
        for(int oQSyspt=0; oQSyspt < strlen(((char*)(name.pNext)))+1; oQSyspt++){
            json temp;
            temp=[&]() {
    json return_lCgUumP=json({});
    return serialize_char(((char*)(name.pNext))[oQSyspt]);}();
            return_oQSyspt["members"].push_back(temp);
        }
        return return_oQSyspt;
        }();return return_xQuLqES;}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_pnsaaKy=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_fSKAUNx=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_fSKAUNx["null"]=true;
            return return_fSKAUNx;
        }
        
        return_fSKAUNx["members"]={};
        for(int fSKAUNx=0; fSKAUNx < name.copySrcLayoutCount; fSKAUNx++){
            json temp;
            temp=[&]() {
    json return_seToqjs=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[fSKAUNx]);}();
            return_fSKAUNx["members"].push_back(temp);
        }
        return return_fSKAUNx;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_MFxfIsY=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_vAwjKvs=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_vAwjKvs["null"]=true;
            return return_vAwjKvs;
        }
        
        return_vAwjKvs["members"]={};
        for(int vAwjKvs=0; vAwjKvs < name.copyDstLayoutCount; vAwjKvs++){
            json temp;
            temp=[&]() {
    json return_pxywSHb=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[vAwjKvs]);}();
            return_vAwjKvs["members"].push_back(temp);
        }
        return return_vAwjKvs;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_miypGau=json({});
    
        return_miypGau["members"]={};
        for(int miypGau=0; miypGau < VK_UUID_SIZE; miypGau++){
            json temp;
            temp=[&]() {
    json return_ZBrpOrS=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[miypGau]);}();
            return_miypGau["members"].push_back(temp);
        }
        return return_miypGau;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_LDVsKVn=json({});
    return_LDVsKVn=[&]() {
    json return_LepUWWp=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_LDVsKVn;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqHPVwL=0; mqHPVwL < name["members"]["pNext"]["members"].size(); mqHPVwL++){
            [&]() {
temp[mqHPVwL]=deserialize_char(name["members"]["pNext"]["members"][mqHPVwL]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        return;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int LstquBP=0; LstquBP < result.copySrcLayoutCount; LstquBP++){
            [&]() {
result.pCopySrcLayouts[LstquBP]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][LstquBP]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        return;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int XQtKZcm=0; XQtKZcm < result.copyDstLayoutCount; XQtKZcm++){
            [&]() {
result.pCopyDstLayouts[XQtKZcm]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][XQtKZcm]);}();;
        }
        }();
[&]() {

        for (int DSfyEqX=0; DSfyEqX < VK_UUID_SIZE; DSfyEqX++){
            [&]() {
result.optimalTilingLayoutUUID[DSfyEqX]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][DSfyEqX]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["pHostPointer"]=[&]() {
    json return_asymzdS=json({});
    
        if (name.pHostPointer==NULL){
            return_asymzdS["null"]=true;
            return return_asymzdS;
        }
        return_asymzdS=[&]() {
    json return_qWBknlp=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_qWBknlp["null"]=true;
            return return_qWBknlp;
        }
        
        return_qWBknlp["members"]={};
        for(int qWBknlp=0; qWBknlp < strlen(((char*)(name.pHostPointer)))+1; qWBknlp++){
            json temp;
            temp=[&]() {
    json return_yXcQUme=json({});
    return serialize_char(((char*)(name.pHostPointer))[qWBknlp]);}();
            return_qWBknlp["members"].push_back(temp);
        }
        return return_qWBknlp;
        }();return return_asymzdS;}();
result["members"]["memoryRowLength"]=[&]() {
    json return_OmmlGaM=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_cqtLzNS=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_CHeKKiP=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_WkWCkPn=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_pJOjWBe=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
void* temp_GIINBcP;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_GIINBcP=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int nHahYAM=0; nHahYAM < name["members"]["pHostPointer"]["members"].size(); nHahYAM++){
            [&]() {
temp[nHahYAM]=deserialize_char(name["members"]["pHostPointer"]["members"][nHahYAM]);}();;
        }
        }();temp_GIINBcP=(void*)temp;
}();result.pHostPointer=temp_GIINBcP;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["pHostPointer"]=[&]() {
    json return_zkGFGxW=json({});
    
        if (name.pHostPointer==NULL){
            return_zkGFGxW["null"]=true;
            return return_zkGFGxW;
        }
        return_zkGFGxW=[&]() {
    json return_xhVNpeb=json({});
    
        if (((char*)(name.pHostPointer))==NULL){
            return_xhVNpeb["null"]=true;
            return return_xhVNpeb;
        }
        
        return_xhVNpeb["members"]={};
        for(int xhVNpeb=0; xhVNpeb < strlen(((char*)(name.pHostPointer)))+1; xhVNpeb++){
            json temp;
            temp=[&]() {
    json return_kPkxkKM=json({});
    return serialize_char(((char*)(name.pHostPointer))[xhVNpeb]);}();
            return_xhVNpeb["members"].push_back(temp);
        }
        return return_xhVNpeb;
        }();return return_zkGFGxW;}();
result["members"]["memoryRowLength"]=[&]() {
    json return_OmmlGaM=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_cqtLzNS=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_CHeKKiP=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_WkWCkPn=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_pJOjWBe=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pHostPointer"]["members"].size()*sizeof(char));
        for (int SSrgkaT=0; SSrgkaT < name["members"]["pHostPointer"]["members"].size(); SSrgkaT++){
            [&]() {
temp[SSrgkaT]=deserialize_char(name["members"]["pHostPointer"]["members"][SSrgkaT]);}();;
        }
        }();result.pHostPointer=(void*)temp;
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["flags"]=[&]() {
    json return_wqyxnQL=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_JxjXnTt=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_adSenpT=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ViEvVYK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_dbFADek=json({});
    
        if (name.pRegions==NULL){
            return_dbFADek["null"]=true;
            return return_dbFADek;
        }
        
        return_dbFADek["members"]={};
        for(int dbFADek=0; dbFADek < name.regionCount; dbFADek++){
            json temp;
            temp=[&]() {
    json return_SEZerUi=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[dbFADek]);}();
            return_dbFADek["members"].push_back(temp);
        }
        return return_dbFADek;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_NAPOHXr;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_NAPOHXr=NULL;
        return;
        }
    temp_NAPOHXr=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int oOJfYWw=0; oOJfYWw < result.regionCount; oOJfYWw++){
            [&]() {
temp_NAPOHXr[oOJfYWw]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][oOJfYWw]);}();;
        }
        }();result.pRegions=temp_NAPOHXr;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["flags"]=[&]() {
    json return_wqyxnQL=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_QGqOsQn=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_arRblFW=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ViEvVYK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_YQweNaZ=json({});
    
        if (name.pRegions==NULL){
            return_YQweNaZ["null"]=true;
            return return_YQweNaZ;
        }
        
        return_YQweNaZ["members"]={};
        for(int YQweNaZ=0; YQweNaZ < name.regionCount; YQweNaZ++){
            json temp;
            temp=[&]() {
    json return_TBkXJRW=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[YQweNaZ]);}();
            return_YQweNaZ["members"].push_back(temp);
        }
        return return_YQweNaZ;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_vGszwfg;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_vGszwfg=NULL;
        return;
        }
    temp_vGszwfg=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int JFmjBhh=0; JFmjBhh < result.regionCount; JFmjBhh++){
            [&]() {
temp_vGszwfg[JFmjBhh]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][JFmjBhh]);}();;
        }
        }();result.pRegions=temp_vGszwfg;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["flags"]=[&]() {
    json return_wqyxnQL=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_QGqOsQn=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_arRblFW=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JxjXnTt=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_adSenpT=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ViEvVYK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_nMDShxE=json({});
    
        if (name.pRegions==NULL){
            return_nMDShxE["null"]=true;
            return return_nMDShxE;
        }
        
        return_nMDShxE["members"]={};
        for(int nMDShxE=0; nMDShxE < name.regionCount; nMDShxE++){
            json temp;
            temp=[&]() {
    json return_pZJUPdP=json({});
    return serialize_VkImageCopy2(name.pRegions[nMDShxE]);}();
            return_nMDShxE["members"].push_back(temp);
        }
        return return_nMDShxE;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_pHmqVyq;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_pHmqVyq=NULL;
        return;
        }
    temp_pHmqVyq=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int cOqtnap=0; cOqtnap < result.regionCount; cOqtnap++){
            [&]() {
temp_pHmqVyq[cOqtnap]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][cOqtnap]);}();;
        }
        }();result.pRegions=temp_pHmqVyq;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOZPppV=json({});
    
        if (name.pNext==NULL){
            return_uOZPppV["null"]=true;
            return return_uOZPppV;
        }
        return_uOZPppV=[&]() {
    json return_qrfWxRw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qrfWxRw["null"]=true;
            return return_qrfWxRw;
        }
        
        return_qrfWxRw["members"]={};
        for(int qrfWxRw=0; qrfWxRw < strlen(((char*)(name.pNext)))+1; qrfWxRw++){
            json temp;
            temp=[&]() {
    json return_GsYIOzC=json({});
    return serialize_char(((char*)(name.pNext))[qrfWxRw]);}();
            return_qrfWxRw["members"].push_back(temp);
        }
        return return_qrfWxRw;
        }();return return_uOZPppV;}();
result["members"]["image"]=[&]() {
    json return_wokGkKp=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_tUPDtIG=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_HMaGNSN=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_nabVtDa=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yMFsvBw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yMFsvBw=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BdMlzmT=0; BdMlzmT < name["members"]["pNext"]["members"].size(); BdMlzmT++){
            [&]() {
temp[BdMlzmT]=deserialize_char(name["members"]["pNext"]["members"][BdMlzmT]);}();;
        }
        }();temp_yMFsvBw=(void*)temp;
}();result.pNext=temp_yMFsvBw;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["size"]=[&]() {
    json return_Ndexpib=json({});
    return_Ndexpib=[&]() {
    json return_JmdknRf=json({});
    return serialize_uint64_t(name.size);}();return return_Ndexpib;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_ruxWYNP=json({});
    return_ruxWYNP=[&]() {
    json return_PUqxAEr=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_ruxWYNP;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_KGBdqKs=json({});
    return_KGBdqKs=[&]() {
    json return_CaRiXdH=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_KGBdqKs;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_mYulENm=json({});
    return_mYulENm=[&]() {
    json return_UqeBbPV=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_mYulENm;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_sZKQtvW=json({});
    return_sZKQtvW=[&]() {
    json return_CcKSfdU=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_sZKQtvW;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_BFFOEGX=json({});
    return_BFFOEGX=[&]() {
    json return_KZrvfsF=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_BFFOEGX;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mvShUHx=json({});
    
        if (name.pNext==NULL){
            return_mvShUHx["null"]=true;
            return return_mvShUHx;
        }
        return_mvShUHx=[&]() {
    json return_DbrgFUU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DbrgFUU["null"]=true;
            return return_DbrgFUU;
        }
        
        return_DbrgFUU["members"]={};
        for(int DbrgFUU=0; DbrgFUU < strlen(((char*)(name.pNext)))+1; DbrgFUU++){
            json temp;
            temp=[&]() {
    json return_tWKIlWe=json({});
    return serialize_char(((char*)(name.pNext))[DbrgFUU]);}();
            return_DbrgFUU["members"].push_back(temp);
        }
        return return_DbrgFUU;
        }();return return_mvShUHx;}();
result["members"]["legacyDithering"]=[&]() {
    json return_tilOMei=json({});
    return_tilOMei=[&]() {
    json return_pEANFao=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_tilOMei;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int vWKmgVN=0; vWKmgVN < name["members"]["pNext"]["members"].size(); vWKmgVN++){
            [&]() {
temp[vWKmgVN]=deserialize_char(name["members"]["pNext"]["members"][vWKmgVN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zyqIzWU=json({});
    
        if (name.pNext==NULL){
            return_zyqIzWU["null"]=true;
            return return_zyqIzWU;
        }
        return_zyqIzWU=[&]() {
    json return_tjJmLHi=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_tjJmLHi["null"]=true;
            return return_tjJmLHi;
        }
        
        return_tjJmLHi["members"]={};
        for(int tjJmLHi=0; tjJmLHi < strlen(((char*)(name.pNext)))+1; tjJmLHi++){
            json temp;
            temp=[&]() {
    json return_vzPYEMV=json({});
    return serialize_char(((char*)(name.pNext))[tjJmLHi]);}();
            return_tjJmLHi["members"].push_back(temp);
        }
        return return_tjJmLHi;
        }();return return_zyqIzWU;}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_XXTGMYU=json({});
    return_XXTGMYU=[&]() {
    json return_hJWDKfo=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_XXTGMYU;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kMUZTCS=0; kMUZTCS < name["members"]["pNext"]["members"].size(); kMUZTCS++){
            [&]() {
temp[kMUZTCS]=deserialize_char(name["members"]["pNext"]["members"][kMUZTCS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["optimal"]=[&]() {
    json return_yNNtftp=json({});
    return_yNNtftp=[&]() {
    json return_LpOVHhj=json({});
    return serialize_uint32_t(name.optimal);}();return return_yNNtftp;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EmyrjNu=json({});
    
        if (name.pNext==NULL){
            return_EmyrjNu["null"]=true;
            return return_EmyrjNu;
        }
        return_EmyrjNu=[&]() {
    json return_DzzZOZU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DzzZOZU["null"]=true;
            return return_DzzZOZU;
        }
        
        return_DzzZOZU["members"]={};
        for(int DzzZOZU=0; DzzZOZU < strlen(((char*)(name.pNext)))+1; DzzZOZU++){
            json temp;
            temp=[&]() {
    json return_KchNDnF=json({});
    return serialize_char(((char*)(name.pNext))[DzzZOZU]);}();
            return_DzzZOZU["members"].push_back(temp);
        }
        return return_DzzZOZU;
        }();return return_EmyrjNu;}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_vsbBJip=json({});
    return_vsbBJip=[&]() {
    json return_JtJmEFT=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_vsbBJip;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_XgsXYxT=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TczvWNh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TczvWNh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int czfkvZb=0; czfkvZb < name["members"]["pNext"]["members"].size(); czfkvZb++){
            [&]() {
temp[czfkvZb]=deserialize_char(name["members"]["pNext"]["members"][czfkvZb]);}();;
        }
        }();temp_TczvWNh=(void*)temp;
}();result.pNext=temp_TczvWNh;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_WjhNzsm=json({});
    return_WjhNzsm=[&]() {
    json return_mpVuHIF=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_WjhNzsm;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AZIcpLy=json({});
    
        if (name.pNext==NULL){
            return_AZIcpLy["null"]=true;
            return return_AZIcpLy;
        }
        return_AZIcpLy=[&]() {
    json return_HJEzPTB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HJEzPTB["null"]=true;
            return return_HJEzPTB;
        }
        
        return_HJEzPTB["members"]={};
        for(int HJEzPTB=0; HJEzPTB < strlen(((char*)(name.pNext)))+1; HJEzPTB++){
            json temp;
            temp=[&]() {
    json return_AwGVpxY=json({});
    return serialize_char(((char*)(name.pNext))[HJEzPTB]);}();
            return_HJEzPTB["members"].push_back(temp);
        }
        return return_HJEzPTB;
        }();return return_AZIcpLy;}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_ZHcACZL=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int aMnQrlT=0; aMnQrlT < name["members"]["pNext"]["members"].size(); aMnQrlT++){
            [&]() {
temp[aMnQrlT]=deserialize_char(name["members"]["pNext"]["members"][aMnQrlT]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AZIcpLy=json({});
    
        if (name.pNext==NULL){
            return_AZIcpLy["null"]=true;
            return return_AZIcpLy;
        }
        return_AZIcpLy=[&]() {
    json return_HJEzPTB=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HJEzPTB["null"]=true;
            return return_HJEzPTB;
        }
        
        return_HJEzPTB["members"]={};
        for(int HJEzPTB=0; HJEzPTB < strlen(((char*)(name.pNext)))+1; HJEzPTB++){
            json temp;
            temp=[&]() {
    json return_AwGVpxY=json({});
    return serialize_char(((char*)(name.pNext))[HJEzPTB]);}();
            return_HJEzPTB["members"].push_back(temp);
        }
        return return_HJEzPTB;
        }();return return_AZIcpLy;}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_NxLlXaC=json({});
    return_NxLlXaC=[&]() {
    json return_YTRqsIz=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_NxLlXaC;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int aMnQrlT=0; aMnQrlT < name["members"]["pNext"]["members"].size(); aMnQrlT++){
            [&]() {
temp[aMnQrlT]=deserialize_char(name["members"]["pNext"]["members"][aMnQrlT]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UtNZfxu=json({});
    
        if (name.pNext==NULL){
            return_UtNZfxu["null"]=true;
            return return_UtNZfxu;
        }
        return_UtNZfxu=[&]() {
    json return_ZMMnKvU=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ZMMnKvU["null"]=true;
            return return_ZMMnKvU;
        }
        
        return_ZMMnKvU["members"]={};
        for(int ZMMnKvU=0; ZMMnKvU < strlen(((char*)(name.pNext)))+1; ZMMnKvU++){
            json temp;
            temp=[&]() {
    json return_glCdzrK=json({});
    return serialize_char(((char*)(name.pNext))[ZMMnKvU]);}();
            return_ZMMnKvU["members"].push_back(temp);
        }
        return return_ZMMnKvU;
        }();return return_UtNZfxu;}();
result["members"]["profileCount"]=[&]() {
    json return_JYyXCNY=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_Rpkfiyv=json({});
    
        if (name.pProfiles==NULL){
            return_Rpkfiyv["null"]=true;
            return return_Rpkfiyv;
        }
        
        return_Rpkfiyv["members"]={};
        for(int Rpkfiyv=0; Rpkfiyv < name.profileCount; Rpkfiyv++){
            json temp;
            temp=[&]() {
    json return_DtvURQP=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[Rpkfiyv]);}();
            return_Rpkfiyv["members"].push_back(temp);
        }
        return return_Rpkfiyv;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JJbddRC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JJbddRC=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ilKPuBl=0; ilKPuBl < name["members"]["pNext"]["members"].size(); ilKPuBl++){
            [&]() {
temp[ilKPuBl]=deserialize_char(name["members"]["pNext"]["members"][ilKPuBl]);}();;
        }
        }();temp_JJbddRC=(void*)temp;
}();result.pNext=temp_JJbddRC;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_AWcEcAL;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_AWcEcAL=NULL;
        return;
        }
    temp_AWcEcAL=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int WjhxFyJ=0; WjhxFyJ < result.profileCount; WjhxFyJ++){
            [&]() {
temp_AWcEcAL[WjhxFyJ]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][WjhxFyJ]);}();;
        }
        }();result.pProfiles=temp_AWcEcAL;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XLTEAvU=json({});
    
        if (name.pNext==NULL){
            return_XLTEAvU["null"]=true;
            return return_XLTEAvU;
        }
        return_XLTEAvU=[&]() {
    json return_ompHUgo=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ompHUgo["null"]=true;
            return return_ompHUgo;
        }
        
        return_ompHUgo["members"]={};
        for(int ompHUgo=0; ompHUgo < strlen(((char*)(name.pNext)))+1; ompHUgo++){
            json temp;
            temp=[&]() {
    json return_BEtAstS=json({});
    return serialize_char(((char*)(name.pNext))[ompHUgo]);}();
            return_ompHUgo["members"].push_back(temp);
        }
        return return_ompHUgo;
        }();return return_XLTEAvU;}();
result["members"]["imageUsage"]=[&]() {
    json return_pBnUujg=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NnKFuco;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NnKFuco=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TIzZneH=0; TIzZneH < name["members"]["pNext"]["members"].size(); TIzZneH++){
            [&]() {
temp[TIzZneH]=deserialize_char(name["members"]["pNext"]["members"][TIzZneH]);}();;
        }
        }();temp_NnKFuco=(void*)temp;
}();result.pNext=temp_NnKFuco;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LcxSgqN=json({});
    
        if (name.pNext==NULL){
            return_LcxSgqN["null"]=true;
            return return_LcxSgqN;
        }
        return_LcxSgqN=[&]() {
    json return_vPcAYBO=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vPcAYBO["null"]=true;
            return return_vPcAYBO;
        }
        
        return_vPcAYBO["members"]={};
        for(int vPcAYBO=0; vPcAYBO < strlen(((char*)(name.pNext)))+1; vPcAYBO++){
            json temp;
            temp=[&]() {
    json return_IWfrHGg=json({});
    return serialize_char(((char*)(name.pNext))[vPcAYBO]);}();
            return_vPcAYBO["members"].push_back(temp);
        }
        return return_vPcAYBO;
        }();return return_LcxSgqN;}();
result["members"]["format"]=[&]() {
    json return_qmzfzfY=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_NaamgmJ=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_lBjfCGm=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_UawEBTX=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_dHTZjfF=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_bJtIvqq=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int WLsYajk=0; WLsYajk < name["members"]["pNext"]["members"].size(); WLsYajk++){
            [&]() {
temp[WLsYajk]=deserialize_char(name["members"]["pNext"]["members"][WLsYajk]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_HYCnwAg=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_LohWAtc=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_kmnVTUl=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_pDMQrfi=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["flags"]=[&]() {
    json return_ZIuUFiS=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_FwwUPhe=json({});
    return_FwwUPhe=[&]() {
    json return_HAYycju=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_FwwUPhe;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_AexvolE=json({});
    return_AexvolE=[&]() {
    json return_OkQBecI=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_AexvolE;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_iHCkPLB=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_PSrOYDL=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_MWeeBJo=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_ixketIy=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_uXknFrI=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_khCKFqt=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GISaFGA=json({});
    
        if (name.pNext==NULL){
            return_GISaFGA["null"]=true;
            return return_GISaFGA;
        }
        return_GISaFGA=[&]() {
    json return_pOqiWUD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pOqiWUD["null"]=true;
            return return_pOqiWUD;
        }
        
        return_pOqiWUD["members"]={};
        for(int pOqiWUD=0; pOqiWUD < strlen(((char*)(name.pNext)))+1; pOqiWUD++){
            json temp;
            temp=[&]() {
    json return_iwuxPkA=json({});
    return serialize_char(((char*)(name.pNext))[pOqiWUD]);}();
            return_pOqiWUD["members"].push_back(temp);
        }
        return return_pOqiWUD;
        }();return return_GISaFGA;}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_DjhbDBH=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_zBYsZyU=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int lmCyHNI=0; lmCyHNI < name["members"]["pNext"]["members"].size(); lmCyHNI++){
            [&]() {
temp[lmCyHNI]=deserialize_char(name["members"]["pNext"]["members"][lmCyHNI]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rqpxybO=json({});
    
        if (name.pNext==NULL){
            return_rqpxybO["null"]=true;
            return return_rqpxybO;
        }
        return_rqpxybO=[&]() {
    json return_yVVDren=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yVVDren["null"]=true;
            return return_yVVDren;
        }
        
        return_yVVDren["members"]={};
        for(int yVVDren=0; yVVDren < strlen(((char*)(name.pNext)))+1; yVVDren++){
            json temp;
            temp=[&]() {
    json return_NLpoiEa=json({});
    return serialize_char(((char*)(name.pNext))[yVVDren]);}();
            return_yVVDren["members"].push_back(temp);
        }
        return return_yVVDren;
        }();return return_rqpxybO;}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_DjhbDBH=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_YsDuEbo=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_pROsPuR=json({});
    return_pROsPuR=[&]() {
    json return_sekcnvY=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_pROsPuR;}();
result["members"]["memorySize"]=[&]() {
    json return_nAvCzbh=json({});
    return_nAvCzbh=[&]() {
    json return_Lkrtesi=json({});
    return serialize_uint64_t(name.memorySize);}();return return_nAvCzbh;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JNBnRPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JNBnRPo=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jEIuktB=0; jEIuktB < name["members"]["pNext"]["members"].size(); jEIuktB++){
            [&]() {
temp[jEIuktB]=deserialize_char(name["members"]["pNext"]["members"][jEIuktB]);}();;
        }
        }();temp_JNBnRPo=(void*)temp;
}();result.pNext=temp_JNBnRPo;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["codedOffset"]=[&]() {
    json return_pnJhRgi=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_YaRXzYL=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_QXuDmzt=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_fLsGmQe=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["slotIndex"]=[&]() {
    json return_fduBzWs=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_JADTYXV=json({});
    
        if (name.pPictureResource==NULL){
            return_JADTYXV["null"]=true;
            return return_JADTYXV;
        }
        return_JADTYXV=[&]() {
    json return_wbAmGMg=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_JADTYXV;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_JQqHzry;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_JQqHzry=NULL;
        return;
        }
    temp_JQqHzry=(VkVideoPictureResourceInfoKHR*)malloc(sizeof(VkVideoPictureResourceInfoKHR));
[&]() {
*(temp_JQqHzry)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_JQqHzry;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QywcJMb=json({});
    
        if (name.pNext==NULL){
            return_QywcJMb["null"]=true;
            return return_QywcJMb;
        }
        return_QywcJMb=[&]() {
    json return_FOZCSgm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FOZCSgm["null"]=true;
            return return_FOZCSgm;
        }
        
        return_FOZCSgm["members"]={};
        for(int FOZCSgm=0; FOZCSgm < strlen(((char*)(name.pNext)))+1; FOZCSgm++){
            json temp;
            temp=[&]() {
    json return_ucWQAlr=json({});
    return serialize_char(((char*)(name.pNext))[FOZCSgm]);}();
            return_FOZCSgm["members"].push_back(temp);
        }
        return return_FOZCSgm;
        }();return return_QywcJMb;}();
result["members"]["flags"]=[&]() {
    json return_MHAMfzK=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cMPjfDz=0; cMPjfDz < name["members"]["pNext"]["members"].size(); cMPjfDz++){
            [&]() {
temp[cMPjfDz]=deserialize_char(name["members"]["pNext"]["members"][cMPjfDz]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["videoUsageHints"]=[&]() {
    json return_wcVgfST=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["flags"]=[&]() {
    json return_cNsmZWR=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_VBHqyiC=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_OKJgckn=json({});
    return_OKJgckn=[&]() {
    json return_NnesDRk=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_OKJgckn;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_txVECEZ=json({});
    return_txVECEZ=[&]() {
    json return_HDHYUPG=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_txVECEZ;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_GfeZATn=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_iLUpcNJ=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_iLUpcNJ["null"]=true;
            return return_iLUpcNJ;
        }
        return_iLUpcNJ=[&]() {
    json return_SiMKCRv=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_iLUpcNJ;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_HwCZfEU=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_OPtMzuh=json({});
    
        if (name.pReferenceSlots==NULL){
            return_OPtMzuh["null"]=true;
            return return_OPtMzuh;
        }
        
        return_OPtMzuh["members"]={};
        for(int OPtMzuh=0; OPtMzuh < name.referenceSlotCount; OPtMzuh++){
            json temp;
            temp=[&]() {
    json return_odvvYKW=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[OPtMzuh]);}();
            return_OPtMzuh["members"].push_back(temp);
        }
        return return_OPtMzuh;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_UymGiBc;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_UymGiBc=NULL;
        return;
        }
    temp_UymGiBc=(VkVideoReferenceSlotInfoKHR*)malloc(sizeof(VkVideoReferenceSlotInfoKHR));
[&]() {
*(temp_UymGiBc)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_UymGiBc;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_bjeLtbc;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_bjeLtbc=NULL;
        return;
        }
    temp_bjeLtbc=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int VuIgfuD=0; VuIgfuD < result.referenceSlotCount; VuIgfuD++){
            [&]() {
temp_bjeLtbc[VuIgfuD]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][VuIgfuD]);}();;
        }
        }();result.pReferenceSlots=temp_bjeLtbc;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MYzxbdA=json({});
    
        if (name.pNext==NULL){
            return_MYzxbdA["null"]=true;
            return return_MYzxbdA;
        }
        return_MYzxbdA=[&]() {
    json return_HcuouLk=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HcuouLk["null"]=true;
            return return_HcuouLk;
        }
        
        return_HcuouLk["members"]={};
        for(int HcuouLk=0; HcuouLk < strlen(((char*)(name.pNext)))+1; HcuouLk++){
            json temp;
            temp=[&]() {
    json return_yJaGEzQ=json({});
    return serialize_char(((char*)(name.pNext))[HcuouLk]);}();
            return_HcuouLk["members"].push_back(temp);
        }
        return return_HcuouLk;
        }();return return_MYzxbdA;}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_SLIpOnb=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_ULGyalx=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lJhqsvl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lJhqsvl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bGbUeLO=0; bGbUeLO < name["members"]["pNext"]["members"].size(); bGbUeLO++){
            [&]() {
temp[bGbUeLO]=deserialize_char(name["members"]["pNext"]["members"][bGbUeLO]);}();;
        }
        }();temp_lJhqsvl=(void*)temp;
}();result.pNext=temp_lJhqsvl;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_JQvuKVX=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_BNdQZkl=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kDnuXSP=json({});
    
        if (name.pNext==NULL){
            return_kDnuXSP["null"]=true;
            return return_kDnuXSP;
        }
        return_kDnuXSP=[&]() {
    json return_faRCiUs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_faRCiUs["null"]=true;
            return return_faRCiUs;
        }
        
        return_faRCiUs["members"]={};
        for(int faRCiUs=0; faRCiUs < strlen(((char*)(name.pNext)))+1; faRCiUs++){
            json temp;
            temp=[&]() {
    json return_MLBoRYa=json({});
    return serialize_char(((char*)(name.pNext))[faRCiUs]);}();
            return_faRCiUs["members"].push_back(temp);
        }
        return return_faRCiUs;
        }();return return_kDnuXSP;}();
result["members"]["stdSPSCount"]=[&]() {
    json return_nbQljhq=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_jWXvbmK=json({});
    
        if (name.pStdSPSs==NULL){
            return_jWXvbmK["null"]=true;
            return return_jWXvbmK;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_ZSCskQo=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_PBhnoZH=json({});
    
        if (name.pStdPPSs==NULL){
            return_PBhnoZH["null"]=true;
            return return_PBhnoZH;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eLzIyci;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eLzIyci=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yuEpDwU=0; yuEpDwU < name["members"]["pNext"]["members"].size(); yuEpDwU++){
            [&]() {
temp[yuEpDwU]=deserialize_char(name["members"]["pNext"]["members"][yuEpDwU]);}();;
        }
        }();temp_eLzIyci=(void*)temp;
}();result.pNext=temp_eLzIyci;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_lBaUCDs;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_lBaUCDs=NULL;
        return;
        }
    temp_lBaUCDs=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_lBaUCDs;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_oNdLbsD;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_oNdLbsD=NULL;
        return;
        }
    temp_oNdLbsD=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_oNdLbsD;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fNKpYOR=json({});
    
        if (name.pNext==NULL){
            return_fNKpYOR["null"]=true;
            return return_fNKpYOR;
        }
        return_fNKpYOR=[&]() {
    json return_uaFkYyZ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_uaFkYyZ["null"]=true;
            return return_uaFkYyZ;
        }
        
        return_uaFkYyZ["members"]={};
        for(int uaFkYyZ=0; uaFkYyZ < strlen(((char*)(name.pNext)))+1; uaFkYyZ++){
            json temp;
            temp=[&]() {
    json return_DMMkCQm=json({});
    return serialize_char(((char*)(name.pNext))[uaFkYyZ]);}();
            return_uaFkYyZ["members"].push_back(temp);
        }
        return return_uaFkYyZ;
        }();return return_fNKpYOR;}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_RXHXbLS=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_VMheRBN=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_kQAmEcF=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_kQAmEcF["null"]=true;
            return return_kQAmEcF;
        }
        return_kQAmEcF=[&]() {
    json return_GzDJHLM=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_kQAmEcF;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uBPrQGe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uBPrQGe=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int NvDyuWk=0; NvDyuWk < name["members"]["pNext"]["members"].size(); NvDyuWk++){
            [&]() {
temp[NvDyuWk]=deserialize_char(name["members"]["pNext"]["members"][NvDyuWk]);}();;
        }
        }();temp_uBPrQGe=(void*)temp;
}();result.pNext=temp_uBPrQGe;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_AxEmNIW;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_AxEmNIW=NULL;
        return;
        }
    temp_AxEmNIW=(VkVideoDecodeH264SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH264SessionParametersAddInfoKHR));
[&]() {
*(temp_AxEmNIW)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_AxEmNIW;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HCKllbl=json({});
    
        if (name.pNext==NULL){
            return_HCKllbl["null"]=true;
            return return_HCKllbl;
        }
        return_HCKllbl=[&]() {
    json return_uRgCYfq=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_uRgCYfq["null"]=true;
            return return_uRgCYfq;
        }
        
        return_uRgCYfq["members"]={};
        for(int uRgCYfq=0; uRgCYfq < strlen(((char*)(name.pNext)))+1; uRgCYfq++){
            json temp;
            temp=[&]() {
    json return_xnNxbSB=json({});
    return serialize_char(((char*)(name.pNext))[uRgCYfq]);}();
            return_uRgCYfq["members"].push_back(temp);
        }
        return return_uRgCYfq;
        }();return return_HCKllbl;}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_zziVOxI=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_zziVOxI["null"]=true;
            return return_zziVOxI;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_HnUWsxv=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_iXdVPfp=json({});
    
        if (name.pSliceOffsets==NULL){
            return_iXdVPfp["null"]=true;
            return return_iXdVPfp;
        }
        
        return_iXdVPfp["members"]={};
        for(int iXdVPfp=0; iXdVPfp < name.sliceCount; iXdVPfp++){
            json temp;
            temp=[&]() {
    json return_yMOraDi=json({});
    return serialize_uint32_t(name.pSliceOffsets[iXdVPfp]);}();
            return_iXdVPfp["members"].push_back(temp);
        }
        return return_iXdVPfp;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cECUQNC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cECUQNC=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bIAUXaG=0; bIAUXaG < name["members"]["pNext"]["members"].size(); bIAUXaG++){
            [&]() {
temp[bIAUXaG]=deserialize_char(name["members"]["pNext"]["members"][bIAUXaG]);}();;
        }
        }();temp_cECUQNC=(void*)temp;
}();result.pNext=temp_cECUQNC;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_OukYlHO;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_OukYlHO=NULL;
        return;
        }
    temp_OukYlHO=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_OukYlHO;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_JkJJsvk;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_JkJJsvk=NULL;
        return;
        }
    temp_JkJJsvk=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int BlOxySG=0; BlOxySG < result.sliceCount; BlOxySG++){
            [&]() {
temp_JkJJsvk[BlOxySG]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][BlOxySG]);}();;
        }
        }();result.pSliceOffsets=temp_JkJJsvk;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_tJUeZNp=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_tJUeZNp["null"]=true;
            return return_tJUeZNp;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_YyEiLGq;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_YyEiLGq=NULL;
        return;
        }
    temp_YyEiLGq=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_YyEiLGq;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_RYHJYQs=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_SyPykrL=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sKJJJro=json({});
    
        if (name.pNext==NULL){
            return_sKJJJro["null"]=true;
            return return_sKJJJro;
        }
        return_sKJJJro=[&]() {
    json return_yUuLRrM=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yUuLRrM["null"]=true;
            return return_yUuLRrM;
        }
        
        return_yUuLRrM["members"]={};
        for(int yUuLRrM=0; yUuLRrM < strlen(((char*)(name.pNext)))+1; yUuLRrM++){
            json temp;
            temp=[&]() {
    json return_mbuAVtw=json({});
    return serialize_char(((char*)(name.pNext))[yUuLRrM]);}();
            return_yUuLRrM["members"].push_back(temp);
        }
        return return_yUuLRrM;
        }();return return_sKJJJro;}();
result["members"]["stdVPSCount"]=[&]() {
    json return_lTUDAWb=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_WowLyiN=json({});
    
        if (name.pStdVPSs==NULL){
            return_WowLyiN["null"]=true;
            return return_WowLyiN;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_NghsYWT=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_kByFcen=json({});
    
        if (name.pStdSPSs==NULL){
            return_kByFcen["null"]=true;
            return return_kByFcen;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_BGOtLXq=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_onecgUe=json({});
    
        if (name.pStdPPSs==NULL){
            return_onecgUe["null"]=true;
            return return_onecgUe;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rbkRlJL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rbkRlJL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int DxMkVGH=0; DxMkVGH < name["members"]["pNext"]["members"].size(); DxMkVGH++){
            [&]() {
temp[DxMkVGH]=deserialize_char(name["members"]["pNext"]["members"][DxMkVGH]);}();;
        }
        }();temp_rbkRlJL=(void*)temp;
}();result.pNext=temp_rbkRlJL;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_uRigypc;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_uRigypc=NULL;
        return;
        }
    temp_uRigypc=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_uRigypc;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_EjcJuHV;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_EjcJuHV=NULL;
        return;
        }
    temp_EjcJuHV=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_EjcJuHV;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_ihbuEpN;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_ihbuEpN=NULL;
        return;
        }
    temp_ihbuEpN=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_ihbuEpN;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BjcxKLS=json({});
    
        if (name.pNext==NULL){
            return_BjcxKLS["null"]=true;
            return return_BjcxKLS;
        }
        return_BjcxKLS=[&]() {
    json return_FQqTgbw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FQqTgbw["null"]=true;
            return return_FQqTgbw;
        }
        
        return_FQqTgbw["members"]={};
        for(int FQqTgbw=0; FQqTgbw < strlen(((char*)(name.pNext)))+1; FQqTgbw++){
            json temp;
            temp=[&]() {
    json return_cOLxsJF=json({});
    return serialize_char(((char*)(name.pNext))[FQqTgbw]);}();
            return_FQqTgbw["members"].push_back(temp);
        }
        return return_FQqTgbw;
        }();return return_BjcxKLS;}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_PXYuyXc=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_luWLLhC=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_PKZCQyU=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_muCqWGp=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_muCqWGp["null"]=true;
            return return_muCqWGp;
        }
        return_muCqWGp=[&]() {
    json return_DNGdXgk=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_muCqWGp;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pXLFMNj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pXLFMNj=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bzyYjVt=0; bzyYjVt < name["members"]["pNext"]["members"].size(); bzyYjVt++){
            [&]() {
temp[bzyYjVt]=deserialize_char(name["members"]["pNext"]["members"][bzyYjVt]);}();;
        }
        }();temp_pXLFMNj=(void*)temp;
}();result.pNext=temp_pXLFMNj;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_MjiSUAk;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_MjiSUAk=NULL;
        return;
        }
    temp_MjiSUAk=(VkVideoDecodeH265SessionParametersAddInfoKHR*)malloc(sizeof(VkVideoDecodeH265SessionParametersAddInfoKHR));
[&]() {
*(temp_MjiSUAk)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_MjiSUAk;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMQmCjc=json({});
    
        if (name.pNext==NULL){
            return_BMQmCjc["null"]=true;
            return return_BMQmCjc;
        }
        return_BMQmCjc=[&]() {
    json return_FmPJZys=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FmPJZys["null"]=true;
            return return_FmPJZys;
        }
        
        return_FmPJZys["members"]={};
        for(int FmPJZys=0; FmPJZys < strlen(((char*)(name.pNext)))+1; FmPJZys++){
            json temp;
            temp=[&]() {
    json return_oKTqgAS=json({});
    return serialize_char(((char*)(name.pNext))[FmPJZys]);}();
            return_FmPJZys["members"].push_back(temp);
        }
        return return_FmPJZys;
        }();return return_BMQmCjc;}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_OiWOHnp=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_OiWOHnp["null"]=true;
            return return_OiWOHnp;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_vlcPPkJ=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_EePrtYz=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_EePrtYz["null"]=true;
            return return_EePrtYz;
        }
        
        return_EePrtYz["members"]={};
        for(int EePrtYz=0; EePrtYz < name.sliceSegmentCount; EePrtYz++){
            json temp;
            temp=[&]() {
    json return_tDyxFrS=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[EePrtYz]);}();
            return_EePrtYz["members"].push_back(temp);
        }
        return return_EePrtYz;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nOXYBOh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nOXYBOh=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int cZMRgjQ=0; cZMRgjQ < name["members"]["pNext"]["members"].size(); cZMRgjQ++){
            [&]() {
temp[cZMRgjQ]=deserialize_char(name["members"]["pNext"]["members"][cZMRgjQ]);}();;
        }
        }();temp_nOXYBOh=(void*)temp;
}();result.pNext=temp_nOXYBOh;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_KwSftXf;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_KwSftXf=NULL;
        return;
        }
    temp_KwSftXf=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_KwSftXf;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_imnoaUb;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_imnoaUb=NULL;
        return;
        }
    temp_imnoaUb=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int jGIPUxf=0; jGIPUxf < result.sliceSegmentCount; jGIPUxf++){
            [&]() {
temp_imnoaUb[jGIPUxf]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][jGIPUxf]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_imnoaUb;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JbwzOmL=json({});
    
        if (name.pNext==NULL){
            return_JbwzOmL["null"]=true;
            return return_JbwzOmL;
        }
        return_JbwzOmL=[&]() {
    json return_ircznoJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ircznoJ["null"]=true;
            return return_ircznoJ;
        }
        
        return_ircznoJ["members"]={};
        for(int ircznoJ=0; ircznoJ < strlen(((char*)(name.pNext)))+1; ircznoJ++){
            json temp;
            temp=[&]() {
    json return_zBiLZCF=json({});
    return serialize_char(((char*)(name.pNext))[ircznoJ]);}();
            return_ircznoJ["members"].push_back(temp);
        }
        return return_ircznoJ;
        }();return return_JbwzOmL;}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_zbOeEeG=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_zbOeEeG["null"]=true;
            return return_zbOeEeG;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UCWRHpe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UCWRHpe=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int AlAyQVK=0; AlAyQVK < name["members"]["pNext"]["members"].size(); AlAyQVK++){
            [&]() {
temp[AlAyQVK]=deserialize_char(name["members"]["pNext"]["members"][AlAyQVK]);}();;
        }
        }();temp_UCWRHpe=(void*)temp;
}();result.pNext=temp_UCWRHpe;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_mxZXUGK;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_mxZXUGK=NULL;
        return;
        }
    temp_mxZXUGK=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_mxZXUGK;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_ufebBuS=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_ZRLNwhh=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_CTKHfAr=json({});
    
        if (name.pVideoProfile==NULL){
            return_CTKHfAr["null"]=true;
            return return_CTKHfAr;
        }
        return_CTKHfAr=[&]() {
    json return_SsNFEDt=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_CTKHfAr;}();
result["members"]["pictureFormat"]=[&]() {
    json return_IkpTYse=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_RPxucla=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_kYraDWr=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_zGswsZQ=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_xxsRqLq=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_KywVLkj=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_KywVLkj["null"]=true;
            return return_KywVLkj;
        }
        return_KywVLkj=[&]() {
    json return_HCJxtMy=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_KywVLkj;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_FCXWosy;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_FCXWosy=NULL;
        return;
        }
    temp_FCXWosy=(VkVideoProfileInfoKHR*)malloc(sizeof(VkVideoProfileInfoKHR));
[&]() {
*(temp_FCXWosy)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_FCXWosy;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_htOkOLz;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_htOkOLz=NULL;
        return;
        }
    temp_htOkOLz=(VkExtensionProperties*)malloc(sizeof(VkExtensionProperties));
[&]() {
*(temp_htOkOLz)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_htOkOLz;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dHLcaKY=json({});
    
        if (name.pNext==NULL){
            return_dHLcaKY["null"]=true;
            return return_dHLcaKY;
        }
        return_dHLcaKY=[&]() {
    json return_HuFGcJY=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HuFGcJY["null"]=true;
            return return_HuFGcJY;
        }
        
        return_HuFGcJY["members"]={};
        for(int HuFGcJY=0; HuFGcJY < strlen(((char*)(name.pNext)))+1; HuFGcJY++){
            json temp;
            temp=[&]() {
    json return_aiyVqsO=json({});
    return serialize_char(((char*)(name.pNext))[HuFGcJY]);}();
            return_HuFGcJY["members"].push_back(temp);
        }
        return return_HuFGcJY;
        }();return return_dHLcaKY;}();
result["members"]["flags"]=[&]() {
    json return_zdBSTEs=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_lthJajL=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_wQvxNWZ=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcezPAl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcezPAl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fDLdTgP=0; fDLdTgP < name["members"]["pNext"]["members"].size(); fDLdTgP++){
            [&]() {
temp[fDLdTgP]=deserialize_char(name["members"]["pNext"]["members"][fDLdTgP]);}();;
        }
        }();temp_AcezPAl=(void*)temp;
}();result.pNext=temp_AcezPAl;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_dnbhZoc=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EJodExn=json({});
    
        if (name.pNext==NULL){
            return_EJodExn["null"]=true;
            return return_EJodExn;
        }
        return_EJodExn=[&]() {
    json return_DuYkTid=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DuYkTid["null"]=true;
            return return_DuYkTid;
        }
        
        return_DuYkTid["members"]={};
        for(int DuYkTid=0; DuYkTid < strlen(((char*)(name.pNext)))+1; DuYkTid++){
            json temp;
            temp=[&]() {
    json return_lzqnZOX=json({});
    return serialize_char(((char*)(name.pNext))[DuYkTid]);}();
            return_DuYkTid["members"].push_back(temp);
        }
        return return_DuYkTid;
        }();return return_EJodExn;}();
result["members"]["flags"]=[&]() {
    json return_pwPnHAb=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_fCvjfzS=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_NUvlQan=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_SIPjCUU=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_OPtMzuh=json({});
    
        if (name.pReferenceSlots==NULL){
            return_OPtMzuh["null"]=true;
            return return_OPtMzuh;
        }
        
        return_OPtMzuh["members"]={};
        for(int OPtMzuh=0; OPtMzuh < name.referenceSlotCount; OPtMzuh++){
            json temp;
            temp=[&]() {
    json return_odvvYKW=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[OPtMzuh]);}();
            return_OPtMzuh["members"].push_back(temp);
        }
        return return_OPtMzuh;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ORQkGkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ORQkGkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int wtSINMt=0; wtSINMt < name["members"]["pNext"]["members"].size(); wtSINMt++){
            [&]() {
temp[wtSINMt]=deserialize_char(name["members"]["pNext"]["members"][wtSINMt]);}();;
        }
        }();temp_ORQkGkt=(void*)temp;
}();result.pNext=temp_ORQkGkt;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_bjeLtbc;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_bjeLtbc=NULL;
        return;
        }
    temp_bjeLtbc=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int VuIgfuD=0; VuIgfuD < result.referenceSlotCount; VuIgfuD++){
            [&]() {
temp_bjeLtbc[VuIgfuD]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][VuIgfuD]);}();;
        }
        }();result.pReferenceSlots=temp_bjeLtbc;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUIqgST=json({});
    
        if (name.pNext==NULL){
            return_UUIqgST["null"]=true;
            return return_UUIqgST;
        }
        return_UUIqgST=[&]() {
    json return_AAhxnfd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_AAhxnfd["null"]=true;
            return return_AAhxnfd;
        }
        
        return_AAhxnfd["members"]={};
        for(int AAhxnfd=0; AAhxnfd < strlen(((char*)(name.pNext)))+1; AAhxnfd++){
            json temp;
            temp=[&]() {
    json return_YSMKesD=json({});
    return serialize_char(((char*)(name.pNext))[AAhxnfd]);}();
            return_AAhxnfd["members"].push_back(temp);
        }
        return return_AAhxnfd;
        }();return return_UUIqgST;}();
result["members"]["flags"]=[&]() {
    json return_myOdWul=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqlSjfi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqlSjfi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XDrkVsx=0; XDrkVsx < name["members"]["pNext"]["members"].size(); XDrkVsx++){
            [&]() {
temp[XDrkVsx]=deserialize_char(name["members"]["pNext"]["members"][XDrkVsx]);}();;
        }
        }();temp_UqlSjfi=(void*)temp;
}();result.pNext=temp_UqlSjfi;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["flags"]=[&]() {
    json return_dJBVhOh=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_RjOewKS=json({});
    return_RjOewKS=[&]() {
    json return_XIWMnWm=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_RjOewKS;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kDnuXSP=json({});
    
        if (name.pNext==NULL){
            return_kDnuXSP["null"]=true;
            return return_kDnuXSP;
        }
        return_kDnuXSP=[&]() {
    json return_faRCiUs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_faRCiUs["null"]=true;
            return return_faRCiUs;
        }
        
        return_faRCiUs["members"]={};
        for(int faRCiUs=0; faRCiUs < strlen(((char*)(name.pNext)))+1; faRCiUs++){
            json temp;
            temp=[&]() {
    json return_MLBoRYa=json({});
    return serialize_char(((char*)(name.pNext))[faRCiUs]);}();
            return_faRCiUs["members"].push_back(temp);
        }
        return return_faRCiUs;
        }();return return_kDnuXSP;}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_MWXHbnA=json({});
    return_MWXHbnA=[&]() {
    json return_rgsYpaA=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_MWXHbnA;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_udxmMDn=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_YqHusbq=json({});
    
        if (name.pViewportDepths==NULL){
            return_YqHusbq["null"]=true;
            return return_YqHusbq;
        }
        return_YqHusbq=[&]() {
    json return_bPBzgmF=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_YqHusbq;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eLzIyci;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eLzIyci=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yuEpDwU=0; yuEpDwU < name["members"]["pNext"]["members"].size(); yuEpDwU++){
            [&]() {
temp[yuEpDwU]=deserialize_char(name["members"]["pNext"]["members"][yuEpDwU]);}();;
        }
        }();temp_eLzIyci=(void*)temp;
}();result.pNext=temp_eLzIyci;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_GWapGtX;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_GWapGtX=NULL;
        return;
        }
    temp_GWapGtX=(VkViewport*)malloc(sizeof(VkViewport));
[&]() {
*(temp_GWapGtX)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_GWapGtX;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_SyUFIJT=json({});
    return_SyUFIJT=[&]() {
    json return_TNqvBsn=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_SyUFIJT;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_RpZmnJO=json({});
    return_RpZmnJO=[&]() {
    json return_mIpYKrb=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_RpZmnJO;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_yTLgcnB=json({});
    return_yTLgcnB=[&]() {
    json return_vJVwiPD=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_yTLgcnB;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_cSAfjGu=json({});
    return_cSAfjGu=[&]() {
    json return_bSZzXOB=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_cSAfjGu;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_tiAGIyE=json({});
    return_tiAGIyE=[&]() {
    json return_ORFBBTj=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_tiAGIyE;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_SREImed=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["dataSize"]=[&]() {
    json return_rJkWxuZ=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_EBEPzZA=json({});
    
        if (name.pData==NULL){
            return_EBEPzZA["null"]=true;
            return return_EBEPzZA;
        }
        return_EBEPzZA=[&]() {
    json return_yfQTQtb=json({});
    
        if (((char*)(name.pData))==NULL){
            return_yfQTQtb["null"]=true;
            return return_yfQTQtb;
        }
        
        return_yfQTQtb["members"]={};
        for(int yfQTQtb=0; yfQTQtb < name.dataSize; yfQTQtb++){
            json temp;
            temp=[&]() {
    json return_FmotaOZ=json({});
    return serialize_char(((char*)(name.pData))[yfQTQtb]);}();
            return_yfQTQtb["members"].push_back(temp);
        }
        return return_yfQTQtb;
        }();return return_EBEPzZA;}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_VNUTHAU;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_VNUTHAU=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.dataSize*sizeof(char));
        for (int AmzWhLu=0; AmzWhLu < result.dataSize; AmzWhLu++){
            [&]() {
temp[AmzWhLu]=deserialize_char(name["members"]["pData"]["members"][AmzWhLu]);}();;
        }
        }();temp_VNUTHAU=(void*)temp;
}();result.pData=temp_VNUTHAU;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["module"]=[&]() {
    json return_IBTycRH=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_uJAzPZs=json({});
    
        if (name.pName==NULL){
            return_uJAzPZs["null"]=true;
            return return_uJAzPZs;
        }
        
        return_uJAzPZs["members"]={};
        for(int uJAzPZs=0; uJAzPZs < strlen(name.pName)+1; uJAzPZs++){
            json temp;
            temp=[&]() {
    json return_bKaanHX=json({});
    return serialize_char(name.pName[uJAzPZs]);}();
            return_uJAzPZs["members"].push_back(temp);
        }
        return return_uJAzPZs;
        }();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_zOZVJXK;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_zOZVJXK=NULL;
        return;
        }
    temp_zOZVJXK=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int xXEADVU=0; xXEADVU < name["members"]["pName"]["members"].size(); xXEADVU++){
            [&]() {
temp_zOZVJXK[xXEADVU]=deserialize_char(name["members"]["pName"]["members"][xXEADVU]);}();;
        }
        }();result.pName=temp_zOZVJXK;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["function"]=[&]() {
    json return_CpfOhTi=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_KtHtaQB=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_SXGgUSy=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_lfjAbSG=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_WHlNmLu=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_BUnCAfW=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_bamBnvw=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_YdkbkxU=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_VBuSOlb=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_niNzIgH=json({});
    
        if (name.pParams==NULL){
            return_niNzIgH["null"]=true;
            return return_niNzIgH;
        }
        
        return_niNzIgH["members"]={};
        for(int niNzIgH=0; niNzIgH < name.paramCount; niNzIgH++){
            json temp;
            temp=[&]() {
    json return_lROFBGY=json({});
    
        if (name.pParams[niNzIgH]==NULL){
            return_lROFBGY["null"]=true;
            return return_lROFBGY;
        }
        return_lROFBGY=[&]() {
    json return_dNkvNoM=json({});
    
        if (((char*)(name.pParams[niNzIgH]))==NULL){
            return_dNkvNoM["null"]=true;
            return return_dNkvNoM;
        }
        
        return_dNkvNoM["members"]={};
        for(int dNkvNoM=0; dNkvNoM < strlen(((char*)(name.pParams[niNzIgH])))+1; dNkvNoM++){
            json temp;
            temp=[&]() {
    json return_DOquaHh=json({});
    return serialize_char(((char*)(name.pParams[niNzIgH]))[dNkvNoM]);}();
            return_dNkvNoM["members"].push_back(temp);
        }
        return return_dNkvNoM;
        }();return return_lROFBGY;}();
            return_niNzIgH["members"].push_back(temp);
        }
        return return_niNzIgH;
        }();
result["members"]["extraCount"]=[&]() {
    json return_nBtLmDR=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_YTrEFMA=json({});
    
        if (name.pExtras==NULL){
            return_YTrEFMA["null"]=true;
            return return_YTrEFMA;
        }
        
        return_YTrEFMA["members"]={};
        for(int YTrEFMA=0; YTrEFMA < name.extraCount; YTrEFMA++){
            json temp;
            temp=[&]() {
    json return_NBALxBe=json({});
    
        if (name.pExtras[YTrEFMA]==NULL){
            return_NBALxBe["null"]=true;
            return return_NBALxBe;
        }
        return_NBALxBe=[&]() {
    json return_THXVmIh=json({});
    
        if (((char*)(name.pExtras[YTrEFMA]))==NULL){
            return_THXVmIh["null"]=true;
            return return_THXVmIh;
        }
        
        return_THXVmIh["members"]={};
        for(int THXVmIh=0; THXVmIh < strlen(((char*)(name.pExtras[YTrEFMA])))+1; THXVmIh++){
            json temp;
            temp=[&]() {
    json return_hEsijQw=json({});
    return serialize_char(((char*)(name.pExtras[YTrEFMA]))[THXVmIh]);}();
            return_THXVmIh["members"].push_back(temp);
        }
        return return_THXVmIh;
        }();return return_NBALxBe;}();
            return_YTrEFMA["members"].push_back(temp);
        }
        return return_YTrEFMA;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_SbXRnSQ;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_SbXRnSQ=NULL;
        return;
        }
    temp_SbXRnSQ=(void**)malloc(result.paramCount*sizeof(void*));
        for (int lOtylDw=0; lOtylDw < result.paramCount; lOtylDw++){
            [&]() {

        if (name["members"]["pParams"]["members"][lOtylDw].contains("null")){
        temp_SbXRnSQ[lOtylDw]=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pParams"]["members"][lOtylDw].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pParams"]["members"][lOtylDw]["members"].size()*sizeof(char));
        for (int jhnrPEb=0; jhnrPEb < name["members"]["pParams"]["members"][lOtylDw]["members"].size(); jhnrPEb++){
            [&]() {
temp[jhnrPEb]=deserialize_char(name["members"]["pParams"]["members"][lOtylDw]["members"][jhnrPEb]);}();;
        }
        }();temp_SbXRnSQ[lOtylDw]=(void*)temp;
}();;
        }
        }();result.pParams=temp_SbXRnSQ;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_QagTvgn;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_QagTvgn=NULL;
        return;
        }
    temp_QagTvgn=(void**)malloc(result.extraCount*sizeof(void*));
        for (int HebGJSQ=0; HebGJSQ < result.extraCount; HebGJSQ++){
            [&]() {

        if (name["members"]["pExtras"]["members"][HebGJSQ].contains("null")){
        temp_QagTvgn[HebGJSQ]=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pExtras"]["members"][HebGJSQ].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pExtras"]["members"][HebGJSQ]["members"].size()*sizeof(char));
        for (int kyMNsPo=0; kyMNsPo < name["members"]["pExtras"]["members"][HebGJSQ]["members"].size(); kyMNsPo++){
            [&]() {
temp[kyMNsPo]=deserialize_char(name["members"]["pExtras"]["members"][HebGJSQ]["members"][kyMNsPo]);}();;
        }
        }();temp_QagTvgn[HebGJSQ]=(void*)temp;
}();;
        }
        }();result.pExtras=temp_QagTvgn;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_bVZwLsB=json({});
    return_bVZwLsB=[&]() {
    json return_ZatfkGM=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_bVZwLsB;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_PCSkAXl=json({});
    return_PCSkAXl=[&]() {
    json return_UDAJjlV=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_PCSkAXl;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_xrOPNZc=json({});
    return_xrOPNZc=[&]() {
    json return_WXQujrQ=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_xrOPNZc;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_YXSBysu=json({});
    return_YXSBysu=[&]() {
    json return_PfKiAPH=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_YXSBysu;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_JbvEToZ=json({});
    return_JbvEToZ=[&]() {
    json return_zRGUoks=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_JbvEToZ;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_qNpcqya=json({});
    return_qNpcqya=[&]() {
    json return_hdbfSne=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_qNpcqya;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_MpgWzXl=json({});
    return_MpgWzXl=[&]() {
    json return_DOubUix=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_MpgWzXl;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_nHsPhOb=json({});
    return_nHsPhOb=[&]() {
    json return_nzolxrp=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_nHsPhOb;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_FkhcAVm=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_zAlpmoe=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_syaCkjW=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_foICCjJ=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_ILxDFKl=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_hNenmzA=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_BmvPLUr=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_PcmQgnL=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_GYLtaBQ=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_JAEvjCE=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_pZucmpt=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_Hnwglov=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_JOzTtet=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_QMkhcPQ=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_GsCCRXc=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_hhJiCzQ=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_cpaxbFS=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_KoNsgPn=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_GPFDoxc=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_QPBsFcS=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_nKrRrvZ=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_XoGOQyD=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_zQggrBp=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_OgTsVyO=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_ZADHuOH=json({});
    return_ZADHuOH=[&]() {
    json return_YwiJZYH=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_ZADHuOH;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_aKOtNUy=json({});
    return_aKOtNUy=[&]() {
    json return_IqbWGeF=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_aKOtNUy;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_TWDeKKA=json({});
    return_TWDeKKA=[&]() {
    json return_ZSCTgHm=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_TWDeKKA;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_rJFphac=json({});
    return_rJFphac=[&]() {
    json return_jhSIgbq=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_rJFphac;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_MrPwJAQ=json({});
    return_MrPwJAQ=[&]() {
    json return_YrLQEBN=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_MrPwJAQ;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_YLPmAgo=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRarWjI=json({});
    
        if (name.pNext==NULL){
            return_VRarWjI["null"]=true;
            return return_VRarWjI;
        }
        return_VRarWjI=[&]() {
    json return_oMWOblP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oMWOblP["null"]=true;
            return return_oMWOblP;
        }
        
        return_oMWOblP["members"]={};
        for(int oMWOblP=0; oMWOblP < strlen(((char*)(name.pNext)))+1; oMWOblP++){
            json temp;
            temp=[&]() {
    json return_AAyNWAc=json({});
    return serialize_char(((char*)(name.pNext))[oMWOblP]);}();
            return_oMWOblP["members"].push_back(temp);
        }
        return return_oMWOblP;
        }();return return_VRarWjI;}();
result["members"]["address"]=[&]() {
    json return_yoKsiaA=json({});
    return_yoKsiaA=[&]() {
    json return_bcjVsOh=json({});
    return serialize_uint64_t(name.address);}();return return_yoKsiaA;}();
result["members"]["range"]=[&]() {
    json return_EzCJQrF=json({});
    return_EzCJQrF=[&]() {
    json return_gleDoLp=json({});
    return serialize_uint64_t(name.range);}();return return_EzCJQrF;}();
result["members"]["format"]=[&]() {
    json return_gzsAsXH=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZIEPtjf=0; ZIEPtjf < name["members"]["pNext"]["members"].size(); ZIEPtjf++){
            [&]() {
temp[ZIEPtjf]=deserialize_char(name["members"]["pNext"]["members"][ZIEPtjf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRarWjI=json({});
    
        if (name.pNext==NULL){
            return_VRarWjI["null"]=true;
            return return_VRarWjI;
        }
        return_VRarWjI=[&]() {
    json return_oMWOblP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oMWOblP["null"]=true;
            return return_oMWOblP;
        }
        
        return_oMWOblP["members"]={};
        for(int oMWOblP=0; oMWOblP < strlen(((char*)(name.pNext)))+1; oMWOblP++){
            json temp;
            temp=[&]() {
    json return_AAyNWAc=json({});
    return serialize_char(((char*)(name.pNext))[oMWOblP]);}();
            return_oMWOblP["members"].push_back(temp);
        }
        return return_oMWOblP;
        }();return return_VRarWjI;}();
result["members"]["address"]=[&]() {
    json return_yoKsiaA=json({});
    return_yoKsiaA=[&]() {
    json return_bcjVsOh=json({});
    return serialize_uint64_t(name.address);}();return return_yoKsiaA;}();
result["members"]["usage"]=[&]() {
    json return_GUWjDEg=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZIEPtjf=0; ZIEPtjf < name["members"]["pNext"]["members"].size(); ZIEPtjf++){
            [&]() {
temp[ZIEPtjf]=deserialize_char(name["members"]["pNext"]["members"][ZIEPtjf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VRarWjI=json({});
    
        if (name.pNext==NULL){
            return_VRarWjI["null"]=true;
            return return_VRarWjI;
        }
        return_VRarWjI=[&]() {
    json return_oMWOblP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_oMWOblP["null"]=true;
            return return_oMWOblP;
        }
        
        return_oMWOblP["members"]={};
        for(int oMWOblP=0; oMWOblP < strlen(((char*)(name.pNext)))+1; oMWOblP++){
            json temp;
            temp=[&]() {
    json return_AAyNWAc=json({});
    return serialize_char(((char*)(name.pNext))[oMWOblP]);}();
            return_oMWOblP["members"].push_back(temp);
        }
        return return_oMWOblP;
        }();return return_VRarWjI;}();
result["members"]["buffer"]=[&]() {
    json return_VOjyYhL=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZIEPtjf=0; ZIEPtjf < name["members"]["pNext"]["members"].size(); ZIEPtjf++){
            [&]() {
temp[ZIEPtjf]=deserialize_char(name["members"]["pNext"]["members"][ZIEPtjf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_DwvOGct=json({});
    
        if (name.pSampler==NULL){
            return_DwvOGct["null"]=true;
            return return_DwvOGct;
        }
        return_DwvOGct=[&]() {
    json return_xcWIxnB=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_DwvOGct;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_GAHUBCX=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_GAHUBCX["null"]=true;
            return return_GAHUBCX;
        }
        return_GAHUBCX=[&]() {
    json return_YAjstVK=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_GAHUBCX;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_BkhqkYg=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_BkhqkYg["null"]=true;
            return return_BkhqkYg;
        }
        return_BkhqkYg=[&]() {
    json return_qQigxIz=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_BkhqkYg;}();
result["members"]["pSampledImage"]=[&]() {
    json return_tGoxRPC=json({});
    
        if (name.pSampledImage==NULL){
            return_tGoxRPC["null"]=true;
            return return_tGoxRPC;
        }
        return_tGoxRPC=[&]() {
    json return_uPrFLqn=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_tGoxRPC;}();
result["members"]["pStorageImage"]=[&]() {
    json return_EZWQpgI=json({});
    
        if (name.pStorageImage==NULL){
            return_EZWQpgI["null"]=true;
            return return_EZWQpgI;
        }
        return_EZWQpgI=[&]() {
    json return_XFtzJAN=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_EZWQpgI;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_AJJzAsA=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_AJJzAsA["null"]=true;
            return return_AJJzAsA;
        }
        return_AJJzAsA=[&]() {
    json return_XqSTpUo=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_AJJzAsA;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_UaArnyg=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_UaArnyg["null"]=true;
            return return_UaArnyg;
        }
        return_UaArnyg=[&]() {
    json return_JmKWRVB=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_UaArnyg;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_jZAAoUB=json({});
    
        if (name.pUniformBuffer==NULL){
            return_jZAAoUB["null"]=true;
            return return_jZAAoUB;
        }
        return_jZAAoUB=[&]() {
    json return_OCbSNXg=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_jZAAoUB;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_AEXZtKO=json({});
    
        if (name.pStorageBuffer==NULL){
            return_AEXZtKO["null"]=true;
            return return_AEXZtKO;
        }
        return_AEXZtKO=[&]() {
    json return_htZBLen=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_AEXZtKO;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_fMcrFFf=json({});
    return_fMcrFFf=[&]() {
    json return_xdiopax=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_fMcrFFf;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_EEChgrx;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_EEChgrx=NULL;
        return;
        }
    temp_EEChgrx=(VkSampler*)malloc(sizeof(VkSampler));
[&]() {
*(temp_EEChgrx)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_EEChgrx;}();
[&]() {
VkDescriptorImageInfo* temp_szNBPVC;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_szNBPVC=NULL;
        return;
        }
    temp_szNBPVC=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_szNBPVC)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_szNBPVC;}();
[&]() {
VkDescriptorImageInfo* temp_sxFrNzP;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_sxFrNzP=NULL;
        return;
        }
    temp_sxFrNzP=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_sxFrNzP)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_sxFrNzP;}();
[&]() {
VkDescriptorImageInfo* temp_MFTflaL;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_MFTflaL=NULL;
        return;
        }
    temp_MFTflaL=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_MFTflaL)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_MFTflaL;}();
[&]() {
VkDescriptorImageInfo* temp_DTUhyEV;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_DTUhyEV=NULL;
        return;
        }
    temp_DTUhyEV=(VkDescriptorImageInfo*)malloc(sizeof(VkDescriptorImageInfo));
[&]() {
*(temp_DTUhyEV)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_DTUhyEV;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_LGllQpe;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_LGllQpe=NULL;
        return;
        }
    temp_LGllQpe=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_LGllQpe)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_LGllQpe;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_rnsvWcm;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_rnsvWcm=NULL;
        return;
        }
    temp_rnsvWcm=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_rnsvWcm)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_rnsvWcm;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_nvGEExe;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_nvGEExe=NULL;
        return;
        }
    temp_nvGEExe=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_nvGEExe)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_nvGEExe;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_uSZdCQU;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_uSZdCQU=NULL;
        return;
        }
    temp_uSZdCQU=(VkDescriptorAddressInfoEXT*)malloc(sizeof(VkDescriptorAddressInfoEXT));
[&]() {
*(temp_uSZdCQU)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_uSZdCQU;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["type"]=[&]() {
    json return_eEJaDAy=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_rTfPtkT=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["buffer"]=[&]() {
    json return_TXgKKDZ=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["image"]=[&]() {
    json return_UNrLJwv=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["imageView"]=[&]() {
    json return_dooOypf=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["sampler"]=[&]() {
    json return_EVrJQFa=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_CThpwEG=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_BFcTItK=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_EFylYQt=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_EFylYQt["null"]=true;
            return return_EFylYQt;
        }
        return_EFylYQt=[&]() {
    json return_VPHYiHk=json({});
    
        if (((char*)(name.opaqueCaptureDescriptorData))==NULL){
            return_VPHYiHk["null"]=true;
            return return_VPHYiHk;
        }
        
        return_VPHYiHk["members"]={};
        for(int VPHYiHk=0; VPHYiHk < strlen(((char*)(name.opaqueCaptureDescriptorData)))+1; VPHYiHk++){
            json temp;
            temp=[&]() {
    json return_wWAtjri=json({});
    return serialize_char(((char*)(name.opaqueCaptureDescriptorData))[VPHYiHk]);}();
            return_VPHYiHk["members"].push_back(temp);
        }
        return return_VPHYiHk;
        }();return return_EFylYQt;}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
void* temp_NAuAibT;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_NAuAibT=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["opaqueCaptureDescriptorData"]["members"].size()*sizeof(char));
        for (int NnbSZHK=0; NnbSZHK < name["members"]["opaqueCaptureDescriptorData"]["members"].size(); NnbSZHK++){
            [&]() {
temp[NnbSZHK]=deserialize_char(name["members"]["opaqueCaptureDescriptorData"]["members"][NnbSZHK]);}();;
        }
        }();temp_NAuAibT=(void*)temp;
}();result.opaqueCaptureDescriptorData=temp_NAuAibT;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_sxTGwNE=json({});
    return_sxTGwNE=[&]() {
    json return_vWvbxoh=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_sxTGwNE;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_sxTGwNE=json({});
    return_sxTGwNE=[&]() {
    json return_vWvbxoh=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_sxTGwNE;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_STeZiUF=json({});
    return_STeZiUF=[&]() {
    json return_VuyNNtI=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_STeZiUF;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_nEvMRqj=json({});
    return_nEvMRqj=[&]() {
    json return_BEMJCRH=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_nEvMRqj;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_SrvKNcH=json({});
    return_SrvKNcH=[&]() {
    json return_fhznFFQ=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_SrvKNcH;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_MeeGlNi=json({});
    return_MeeGlNi=[&]() {
    json return_fUOVGgb=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_MeeGlNi;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_CVLKsFm=json({});
    return_CVLKsFm=[&]() {
    json return_EVxqRqF=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_CVLKsFm;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_pfWGabQ=json({});
    return_pfWGabQ=[&]() {
    json return_vHsGbBk=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_pfWGabQ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_dImLvSJ=json({});
    return_dImLvSJ=[&]() {
    json return_tZbiCHD=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_dImLvSJ;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_uoDDWKb=json({});
    return_uoDDWKb=[&]() {
    json return_CHcfzsZ=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_uoDDWKb;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_lAJDEdU=json({});
    return_lAJDEdU=[&]() {
    json return_povsnGr=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_lAJDEdU;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_PkrOBYU=json({});
    return_PkrOBYU=[&]() {
    json return_xTvGhQf=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_PkrOBYU;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_ULgeXIg=json({});
    return_ULgeXIg=[&]() {
    json return_prZDWlr=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_ULgeXIg;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_WCocdlA=json({});
    return_WCocdlA=[&]() {
    json return_nqZeMkp=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_WCocdlA;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_tkQnKUG=json({});
    return_tkQnKUG=[&]() {
    json return_nnIODWD=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_tkQnKUG;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_PIIBaRc=json({});
    return_PIIBaRc=[&]() {
    json return_CXWVDls=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_PIIBaRc;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_FxgQXzX=json({});
    return_FxgQXzX=[&]() {
    json return_GJiWUsu=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_FxgQXzX;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_nUzEkOG=json({});
    return_nUzEkOG=[&]() {
    json return_rosRYnr=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_nUzEkOG;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_FoFkxKX=json({});
    return_FoFkxKX=[&]() {
    json return_RfnCFwP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_FoFkxKX;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_qwhquqp=json({});
    return_qwhquqp=[&]() {
    json return_HHnqfwN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_qwhquqp;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_QyRkGiN=json({});
    return_QyRkGiN=[&]() {
    json return_zopufQl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_QyRkGiN;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_QgJsVBM=json({});
    return_QgJsVBM=[&]() {
    json return_HxnRHRS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_QgJsVBM;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_VGydfxU=json({});
    return_VGydfxU=[&]() {
    json return_wuDpXgg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_VGydfxU;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_NVjNHhq=json({});
    return_NVjNHhq=[&]() {
    json return_PwQVclT=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_NVjNHhq;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_NAgmQza=json({});
    return_NAgmQza=[&]() {
    json return_wepXsWQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_NAgmQza;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_NTglmrk=json({});
    return_NTglmrk=[&]() {
    json return_wewKxtO=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_NTglmrk;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_mvvoqTh=json({});
    return_mvvoqTh=[&]() {
    json return_NmMLAVX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_mvvoqTh;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_icNNMvh=json({});
    return_icNNMvh=[&]() {
    json return_kvCpghj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_icNNMvh;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_CYVFuJP=json({});
    return_CYVFuJP=[&]() {
    json return_JOpKsMP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_CYVFuJP;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_DTfEqkC=json({});
    return_DTfEqkC=[&]() {
    json return_OzeOquu=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_DTfEqkC;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_fjGUhet=json({});
    return_fjGUhet=[&]() {
    json return_gSsbuGn=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_fjGUhet;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_mdRNiRK=json({});
    return_mdRNiRK=[&]() {
    json return_BtIOxJR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_mdRNiRK;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_STeZiUF=json({});
    return_STeZiUF=[&]() {
    json return_VuyNNtI=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_STeZiUF;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_nEvMRqj=json({});
    return_nEvMRqj=[&]() {
    json return_BEMJCRH=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_nEvMRqj;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_SrvKNcH=json({});
    return_SrvKNcH=[&]() {
    json return_fhznFFQ=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_SrvKNcH;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_MeeGlNi=json({});
    return_MeeGlNi=[&]() {
    json return_fUOVGgb=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_MeeGlNi;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_CVLKsFm=json({});
    return_CVLKsFm=[&]() {
    json return_EVxqRqF=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_CVLKsFm;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_pfWGabQ=json({});
    return_pfWGabQ=[&]() {
    json return_vHsGbBk=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_pfWGabQ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_dImLvSJ=json({});
    return_dImLvSJ=[&]() {
    json return_tZbiCHD=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_dImLvSJ;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_uoDDWKb=json({});
    return_uoDDWKb=[&]() {
    json return_CHcfzsZ=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_uoDDWKb;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_lAJDEdU=json({});
    return_lAJDEdU=[&]() {
    json return_povsnGr=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_lAJDEdU;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_PkrOBYU=json({});
    return_PkrOBYU=[&]() {
    json return_xTvGhQf=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_PkrOBYU;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_ULgeXIg=json({});
    return_ULgeXIg=[&]() {
    json return_prZDWlr=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_ULgeXIg;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_WCocdlA=json({});
    return_WCocdlA=[&]() {
    json return_nqZeMkp=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_WCocdlA;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_tkQnKUG=json({});
    return_tkQnKUG=[&]() {
    json return_nnIODWD=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_tkQnKUG;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_PIIBaRc=json({});
    return_PIIBaRc=[&]() {
    json return_CXWVDls=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_PIIBaRc;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_FxgQXzX=json({});
    return_FxgQXzX=[&]() {
    json return_GJiWUsu=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_FxgQXzX;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_nUzEkOG=json({});
    return_nUzEkOG=[&]() {
    json return_rosRYnr=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_nUzEkOG;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_FoFkxKX=json({});
    return_FoFkxKX=[&]() {
    json return_RfnCFwP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_FoFkxKX;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_qwhquqp=json({});
    return_qwhquqp=[&]() {
    json return_HHnqfwN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_qwhquqp;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_QyRkGiN=json({});
    return_QyRkGiN=[&]() {
    json return_zopufQl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_QyRkGiN;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_QgJsVBM=json({});
    return_QgJsVBM=[&]() {
    json return_HxnRHRS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_QgJsVBM;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_VGydfxU=json({});
    return_VGydfxU=[&]() {
    json return_wuDpXgg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_VGydfxU;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_NVjNHhq=json({});
    return_NVjNHhq=[&]() {
    json return_PwQVclT=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_NVjNHhq;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_NAgmQza=json({});
    return_NAgmQza=[&]() {
    json return_wepXsWQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_NAgmQza;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_NTglmrk=json({});
    return_NTglmrk=[&]() {
    json return_wewKxtO=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_NTglmrk;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_mvvoqTh=json({});
    return_mvvoqTh=[&]() {
    json return_NmMLAVX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_mvvoqTh;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_icNNMvh=json({});
    return_icNNMvh=[&]() {
    json return_kvCpghj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_icNNMvh;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_CYVFuJP=json({});
    return_CYVFuJP=[&]() {
    json return_JOpKsMP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_CYVFuJP;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_DTfEqkC=json({});
    return_DTfEqkC=[&]() {
    json return_OzeOquu=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_DTfEqkC;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_fjGUhet=json({});
    return_fjGUhet=[&]() {
    json return_gSsbuGn=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_fjGUhet;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_mdRNiRK=json({});
    return_mdRNiRK=[&]() {
    json return_BtIOxJR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_mdRNiRK;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["hasPrimary"]=[&]() {
    json return_ABCRDOT=json({});
    return_ABCRDOT=[&]() {
    json return_IFdAKCE=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_ABCRDOT;}();
result["members"]["hasRender"]=[&]() {
    json return_FNZAoMb=json({});
    return_FNZAoMb=[&]() {
    json return_ddIPTfW=json({});
    return serialize_uint32_t(name.hasRender);}();return return_FNZAoMb;}();
result["members"]["primaryMajor"]=[&]() {
    json return_pthZVzr=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_USjEfRr=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_ftKOXWP=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_IRjUPOO=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_xGdPzqe=json({});
    return_xGdPzqe=[&]() {
    json return_USEzqPm=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_xGdPzqe;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_xGdPzqe=json({});
    return_xGdPzqe=[&]() {
    json return_USEzqPm=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_xGdPzqe;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_aJncvqL=json({});
    return_aJncvqL=[&]() {
    json return_LMgTZza=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_aJncvqL;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_uGczSdB=json({});
    return_uGczSdB=[&]() {
    json return_FIRlnSZ=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_uGczSdB;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_OsniEbF=json({});
    return_OsniEbF=[&]() {
    json return_NvTpVXt=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_OsniEbF;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dKmDjaD=json({});
    
        if (name.pNext==NULL){
            return_dKmDjaD["null"]=true;
            return return_dKmDjaD;
        }
        return_dKmDjaD=[&]() {
    json return_BpUJFWd=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BpUJFWd["null"]=true;
            return return_BpUJFWd;
        }
        
        return_BpUJFWd["members"]={};
        for(int BpUJFWd=0; BpUJFWd < strlen(((char*)(name.pNext)))+1; BpUJFWd++){
            json temp;
            temp=[&]() {
    json return_aRkrQsy=json({});
    return serialize_char(((char*)(name.pNext))[BpUJFWd]);}();
            return_BpUJFWd["members"].push_back(temp);
        }
        return return_BpUJFWd;
        }();return return_dKmDjaD;}();
result["members"]["vertexData"]=[&]() {
    json return_kKFAQaj=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CdQyhvD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CdQyhvD=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int TOpJmDf=0; TOpJmDf < name["members"]["pNext"]["members"].size(); TOpJmDf++){
            [&]() {
temp[TOpJmDf]=deserialize_char(name["members"]["pNext"]["members"][TOpJmDf]);}();;
        }
        }();temp_CdQyhvD=(void*)temp;
}();result.pNext=temp_CdQyhvD;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ETYOJdm=json({});
    
        if (name.pNext==NULL){
            return_ETYOJdm["null"]=true;
            return return_ETYOJdm;
        }
        return_ETYOJdm=[&]() {
    json return_vUXOXkz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vUXOXkz["null"]=true;
            return return_vUXOXkz;
        }
        
        return_vUXOXkz["members"]={};
        for(int vUXOXkz=0; vUXOXkz < strlen(((char*)(name.pNext)))+1; vUXOXkz++){
            json temp;
            temp=[&]() {
    json return_DGyChlW=json({});
    return serialize_char(((char*)(name.pNext))[vUXOXkz]);}();
            return_vUXOXkz["members"].push_back(temp);
        }
        return return_vUXOXkz;
        }();return return_ETYOJdm;}();
result["members"]["maxInstances"]=[&]() {
    json return_fOABETQ=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_deDQzWx=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeWdYOg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeWdYOg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xZdSNCp=0; xZdSNCp < name["members"]["pNext"]["members"].size(); xZdSNCp++){
            [&]() {
temp[xZdSNCp]=deserialize_char(name["members"]["pNext"]["members"][xZdSNCp]);}();;
        }
        }();temp_jeWdYOg=(void*)temp;
}();result.pNext=temp_jeWdYOg;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_yvtdLiJ=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_AvcRWbC=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_cxqReBl=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_TdattnO=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_gHIzlUL=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_CcvUggx=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_YuqoKdB=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_UoNzzol=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_OtNfwni=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_tqqFrqF=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_VzVKmAD=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_LAmyWAp=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_POPTOvp=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_ItCQVRP=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_VRMNrqJ=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_soKPgRn=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_lUVWoAB=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_tKewieK=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_GChPIeR=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_bNEeCKJ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_mHbaVjd=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_SzSMsQZ=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_rvlzKWz=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_zGuZRVu=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_plHPdRC=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_GChPIeR=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_bNEeCKJ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_mHbaVjd=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_SzSMsQZ=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_rvlzKWz=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_UMrEoiD=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_rZATNHI=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_dcASDNF=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_DHsGido=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_alyBqNL=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_lKZSEzr=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["memory"]=[&]() {
    json return_tQWoxWt=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_qacCHzZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_ICTPcKa=json({});
    return_ICTPcKa=[&]() {
    json return_ukcUoSl=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_ICTPcKa;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_rWTNNAG=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_RrytURc=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_EUihYPg=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_rWTNNAG=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_RrytURc=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_EUihYPg=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_GynZHjI=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_FhaHAPD=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_FhaHAPD["null"]=true;
            return return_FhaHAPD;
        }
        
        return_FhaHAPD["members"]={};
        for(int FhaHAPD=0; FhaHAPD < name.drmFormatModifierCount; FhaHAPD++){
            json temp;
            temp=[&]() {
    json return_lqBaaCJ=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[FhaHAPD]);}();
            return_FhaHAPD["members"].push_back(temp);
        }
        return return_FhaHAPD;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        return;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int bzIYAWf=0; bzIYAWf < result.drmFormatModifierCount; bzIYAWf++){
            [&]() {
result.pDrmFormatModifierProperties[bzIYAWf]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][bzIYAWf]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_dXPjFFZ=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_TFWIzwE=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_zopCfEw=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_bLPODBy=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_bLPODBy["null"]=true;
            return return_bLPODBy;
        }
        
        return_bLPODBy["members"]={};
        for(int bLPODBy=0; bLPODBy < name.colorAttachmentCount; bLPODBy++){
            json temp;
            temp=[&]() {
    json return_yWFNaBd=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[bLPODBy]);}();
            return_bLPODBy["members"].push_back(temp);
        }
        return return_bLPODBy;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_lYThTPk=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_ADJfOOv=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_lSBieST;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_lSBieST=NULL;
        return;
        }
    temp_lSBieST=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int iZPvyUD=0; iZPvyUD < result.colorAttachmentCount; iZPvyUD++){
            [&]() {
temp_lSBieST[iZPvyUD]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][iZPvyUD]);}();;
        }
        }();result.pColorAttachmentFormats=temp_lSBieST;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_bLPODBy=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_bLPODBy["null"]=true;
            return return_bLPODBy;
        }
        
        return_bLPODBy["members"]={};
        for(int bLPODBy=0; bLPODBy < name.colorAttachmentCount; bLPODBy++){
            json temp;
            temp=[&]() {
    json return_yWFNaBd=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[bLPODBy]);}();
            return_bLPODBy["members"].push_back(temp);
        }
        return return_bLPODBy;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_lYThTPk=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_ADJfOOv=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_lSBieST;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_lSBieST=NULL;
        return;
        }
    temp_lSBieST=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int iZPvyUD=0; iZPvyUD < result.colorAttachmentCount; iZPvyUD++){
            [&]() {
temp_lSBieST[iZPvyUD]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][iZPvyUD]);}();;
        }
        }();result.pColorAttachmentFormats=temp_lSBieST;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SMTtSRP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["flags"]=[&]() {
    json return_uiEcjol=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_ULpPMAm=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_uQrRfJG=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_KyYRZGZ=json({});
    
        if (name.pColorAttachments==NULL){
            return_KyYRZGZ["null"]=true;
            return return_KyYRZGZ;
        }
        
        return_KyYRZGZ["members"]={};
        for(int KyYRZGZ=0; KyYRZGZ < name.colorAttachmentCount; KyYRZGZ++){
            json temp;
            temp=[&]() {
    json return_UPUEMrR=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[KyYRZGZ]);}();
            return_KyYRZGZ["members"].push_back(temp);
        }
        return return_KyYRZGZ;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_ytySuMU=json({});
    
        if (name.pDepthAttachment==NULL){
            return_ytySuMU["null"]=true;
            return return_ytySuMU;
        }
        return_ytySuMU=[&]() {
    json return_IrtgEOF=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_ytySuMU;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_qoXBZdH=json({});
    
        if (name.pStencilAttachment==NULL){
            return_qoXBZdH["null"]=true;
            return return_qoXBZdH;
        }
        return_qoXBZdH=[&]() {
    json return_pCQeKdp=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_qoXBZdH;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_NWzvJmB;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_NWzvJmB=NULL;
        return;
        }
    temp_NWzvJmB=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int mNOBoru=0; mNOBoru < result.colorAttachmentCount; mNOBoru++){
            [&]() {
temp_NWzvJmB[mNOBoru]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][mNOBoru]);}();;
        }
        }();result.pColorAttachments=temp_NWzvJmB;}();
[&]() {
VkRenderingAttachmentInfo* temp_TECpMmp;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_TECpMmp=NULL;
        return;
        }
    temp_TECpMmp=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_TECpMmp)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_TECpMmp;}();
[&]() {
VkRenderingAttachmentInfo* temp_ugeCwbm;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_ugeCwbm=NULL;
        return;
        }
    temp_ugeCwbm=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_ugeCwbm)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_ugeCwbm;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SMTtSRP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["flags"]=[&]() {
    json return_uiEcjol=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_ULpPMAm=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_uQrRfJG=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_KyYRZGZ=json({});
    
        if (name.pColorAttachments==NULL){
            return_KyYRZGZ["null"]=true;
            return return_KyYRZGZ;
        }
        
        return_KyYRZGZ["members"]={};
        for(int KyYRZGZ=0; KyYRZGZ < name.colorAttachmentCount; KyYRZGZ++){
            json temp;
            temp=[&]() {
    json return_UPUEMrR=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[KyYRZGZ]);}();
            return_KyYRZGZ["members"].push_back(temp);
        }
        return return_KyYRZGZ;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_ytySuMU=json({});
    
        if (name.pDepthAttachment==NULL){
            return_ytySuMU["null"]=true;
            return return_ytySuMU;
        }
        return_ytySuMU=[&]() {
    json return_IrtgEOF=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_ytySuMU;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_qoXBZdH=json({});
    
        if (name.pStencilAttachment==NULL){
            return_qoXBZdH["null"]=true;
            return return_qoXBZdH;
        }
        return_qoXBZdH=[&]() {
    json return_pCQeKdp=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_qoXBZdH;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_NWzvJmB;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_NWzvJmB=NULL;
        return;
        }
    temp_NWzvJmB=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int mNOBoru=0; mNOBoru < result.colorAttachmentCount; mNOBoru++){
            [&]() {
temp_NWzvJmB[mNOBoru]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][mNOBoru]);}();;
        }
        }();result.pColorAttachments=temp_NWzvJmB;}();
[&]() {
VkRenderingAttachmentInfo* temp_TECpMmp;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_TECpMmp=NULL;
        return;
        }
    temp_TECpMmp=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_TECpMmp)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_TECpMmp;}();
[&]() {
VkRenderingAttachmentInfo* temp_ugeCwbm;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_ugeCwbm=NULL;
        return;
        }
    temp_ugeCwbm=(VkRenderingAttachmentInfo*)malloc(sizeof(VkRenderingAttachmentInfo));
[&]() {
*(temp_ugeCwbm)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_ugeCwbm;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRIcJpU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["imageView"]=[&]() {
    json return_NdcrMpa=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_TipPymI=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_GcOZLDU=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_qBexVvg=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_ElnOAlw=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_OtiDWSr=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_hPWRogK=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_iwUpfzx=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRIcJpU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["imageView"]=[&]() {
    json return_NdcrMpa=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_TipPymI=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_GcOZLDU=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_qBexVvg=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_ElnOAlw=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_OtiDWSr=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_hPWRogK=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_iwUpfzx=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fNKpYOR=json({});
    
        if (name.pNext==NULL){
            return_fNKpYOR["null"]=true;
            return return_fNKpYOR;
        }
        return_fNKpYOR=[&]() {
    json return_uaFkYyZ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_uaFkYyZ["null"]=true;
            return return_uaFkYyZ;
        }
        
        return_uaFkYyZ["members"]={};
        for(int uaFkYyZ=0; uaFkYyZ < strlen(((char*)(name.pNext)))+1; uaFkYyZ++){
            json temp;
            temp=[&]() {
    json return_DMMkCQm=json({});
    return serialize_char(((char*)(name.pNext))[uaFkYyZ]);}();
            return_uaFkYyZ["members"].push_back(temp);
        }
        return return_uaFkYyZ;
        }();return return_fNKpYOR;}();
result["members"]["imageView"]=[&]() {
    json return_NdcrMpa=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_TipPymI=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_aTWZjtF=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uBPrQGe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uBPrQGe=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int NvDyuWk=0; NvDyuWk < name["members"]["pNext"]["members"].size(); NvDyuWk++){
            [&]() {
temp[NvDyuWk]=deserialize_char(name["members"]["pNext"]["members"][NvDyuWk]);}();;
        }
        }();temp_uBPrQGe=(void*)temp;
}();result.pNext=temp_uBPrQGe;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["imageView"]=[&]() {
    json return_zhKKJBj=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_GhRVccY=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryBCebt=json({});
    
        if (name.pNext==NULL){
            return_ryBCebt["null"]=true;
            return return_ryBCebt;
        }
        return_ryBCebt=[&]() {
    json return_ADnTxBV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADnTxBV["null"]=true;
            return return_ADnTxBV;
        }
        
        return_ADnTxBV["members"]={};
        for(int ADnTxBV=0; ADnTxBV < strlen(((char*)(name.pNext)))+1; ADnTxBV++){
            json temp;
            temp=[&]() {
    json return_TxgwNDk=json({});
    return serialize_char(((char*)(name.pNext))[ADnTxBV]);}();
            return_ADnTxBV["members"].push_back(temp);
        }
        return return_ADnTxBV;
        }();return return_ryBCebt;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_NZhaqef=json({});
    return_NZhaqef=[&]() {
    json return_brcXdEI=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_NZhaqef;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UmbMfJN=0; UmbMfJN < name["members"]["pNext"]["members"].size(); UmbMfJN++){
            [&]() {
temp[UmbMfJN]=deserialize_char(name["members"]["pNext"]["members"][UmbMfJN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryBCebt=json({});
    
        if (name.pNext==NULL){
            return_ryBCebt["null"]=true;
            return return_ryBCebt;
        }
        return_ryBCebt=[&]() {
    json return_ADnTxBV=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADnTxBV["null"]=true;
            return return_ADnTxBV;
        }
        
        return_ADnTxBV["members"]={};
        for(int ADnTxBV=0; ADnTxBV < strlen(((char*)(name.pNext)))+1; ADnTxBV++){
            json temp;
            temp=[&]() {
    json return_TxgwNDk=json({});
    return serialize_char(((char*)(name.pNext))[ADnTxBV]);}();
            return_ADnTxBV["members"].push_back(temp);
        }
        return return_ADnTxBV;
        }();return return_ryBCebt;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_NZhaqef=json({});
    return_NZhaqef=[&]() {
    json return_brcXdEI=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_NZhaqef;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UmbMfJN=0; UmbMfJN < name["members"]["pNext"]["members"].size(); UmbMfJN++){
            [&]() {
temp[UmbMfJN]=deserialize_char(name["members"]["pNext"]["members"][UmbMfJN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["flags"]=[&]() {
    json return_uiEcjol=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_qxNWHgn=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_XHHIQcA=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_rnjqnhZ=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_rnjqnhZ["null"]=true;
            return return_rnjqnhZ;
        }
        
        return_rnjqnhZ["members"]={};
        for(int rnjqnhZ=0; rnjqnhZ < name.colorAttachmentCount; rnjqnhZ++){
            json temp;
            temp=[&]() {
    json return_MZpsLlx=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[rnjqnhZ]);}();
            return_rnjqnhZ["members"].push_back(temp);
        }
        return return_rnjqnhZ;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_zUKWhaI=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_AwegqvF=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_vqdhyXl=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_DwXcOnI;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_DwXcOnI=NULL;
        return;
        }
    temp_DwXcOnI=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int yyqCYXE=0; yyqCYXE < result.colorAttachmentCount; yyqCYXE++){
            [&]() {
temp_DwXcOnI[yyqCYXE]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][yyqCYXE]);}();;
        }
        }();result.pColorAttachmentFormats=temp_DwXcOnI;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["flags"]=[&]() {
    json return_uiEcjol=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_mUcBxtw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_qxNWHgn=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_XHHIQcA=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_rnjqnhZ=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_rnjqnhZ["null"]=true;
            return return_rnjqnhZ;
        }
        
        return_rnjqnhZ["members"]={};
        for(int rnjqnhZ=0; rnjqnhZ < name.colorAttachmentCount; rnjqnhZ++){
            json temp;
            temp=[&]() {
    json return_MZpsLlx=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[rnjqnhZ]);}();
            return_rnjqnhZ["members"].push_back(temp);
        }
        return return_rnjqnhZ;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_zUKWhaI=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_AwegqvF=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_vqdhyXl=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_DwXcOnI;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_DwXcOnI=NULL;
        return;
        }
    temp_DwXcOnI=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int yyqCYXE=0; yyqCYXE < result.colorAttachmentCount; yyqCYXE++){
            [&]() {
temp_DwXcOnI[yyqCYXE]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][yyqCYXE]);}();;
        }
        }();result.pColorAttachmentFormats=temp_DwXcOnI;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_ZiGqqsq=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_ZiGqqsq["null"]=true;
            return return_ZiGqqsq;
        }
        
        return_ZiGqqsq["members"]={};
        for(int ZiGqqsq=0; ZiGqqsq < name.colorAttachmentCount; ZiGqqsq++){
            json temp;
            temp=[&]() {
    json return_EuCutNR=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[ZiGqqsq]);}();
            return_ZiGqqsq["members"].push_back(temp);
        }
        return return_ZiGqqsq;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_KVETkNX=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_TzcxbyQ;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_TzcxbyQ=NULL;
        return;
        }
    temp_TzcxbyQ=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int LhLKRNp=0; LhLKRNp < result.colorAttachmentCount; LhLKRNp++){
            [&]() {
temp_TzcxbyQ[LhLKRNp]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][LhLKRNp]);}();;
        }
        }();result.pColorAttachmentSamples=temp_TzcxbyQ;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuVbgWl=json({});
    
        if (name.pNext==NULL){
            return_nuVbgWl["null"]=true;
            return return_nuVbgWl;
        }
        return_nuVbgWl=[&]() {
    json return_QrhDlGJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_QrhDlGJ["null"]=true;
            return return_QrhDlGJ;
        }
        
        return_QrhDlGJ["members"]={};
        for(int QrhDlGJ=0; QrhDlGJ < strlen(((char*)(name.pNext)))+1; QrhDlGJ++){
            json temp;
            temp=[&]() {
    json return_iwabBQa=json({});
    return serialize_char(((char*)(name.pNext))[QrhDlGJ]);}();
            return_QrhDlGJ["members"].push_back(temp);
        }
        return return_QrhDlGJ;
        }();return return_nuVbgWl;}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hLlMEGi=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_ZiGqqsq=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_ZiGqqsq["null"]=true;
            return return_ZiGqqsq;
        }
        
        return_ZiGqqsq["members"]={};
        for(int ZiGqqsq=0; ZiGqqsq < name.colorAttachmentCount; ZiGqqsq++){
            json temp;
            temp=[&]() {
    json return_EuCutNR=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[ZiGqqsq]);}();
            return_ZiGqqsq["members"].push_back(temp);
        }
        return return_ZiGqqsq;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_KVETkNX=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKirhFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKirhFM=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int orSBOiu=0; orSBOiu < name["members"]["pNext"]["members"].size(); orSBOiu++){
            [&]() {
temp[orSBOiu]=deserialize_char(name["members"]["pNext"]["members"][orSBOiu]);}();;
        }
        }();temp_rKirhFM=(void*)temp;
}();result.pNext=temp_rKirhFM;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_TzcxbyQ;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_TzcxbyQ=NULL;
        return;
        }
    temp_TzcxbyQ=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int LhLKRNp=0; LhLKRNp < result.colorAttachmentCount; LhLKRNp++){
            [&]() {
temp_TzcxbyQ[LhLKRNp]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][LhLKRNp]);}();;
        }
        }();result.pColorAttachmentSamples=temp_TzcxbyQ;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["perViewAttributes"]=[&]() {
    json return_JVMKlNQ=json({});
    return_JVMKlNQ=[&]() {
    json return_pSAkrZw=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_JVMKlNQ;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_YzaoaAg=json({});
    return_YzaoaAg=[&]() {
    json return_JwzuTZg=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_YzaoaAg;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["minLod"]=[&]() {
    json return_wfpnPte=json({});
    return_wfpnPte=[&]() {
    json return_aXvGKCE=json({});
    return serialize_uint32_t(name.minLod);}();return return_wfpnPte;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["minLod"]=[&]() {
    json return_RkxjNjl=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_uVSmEoE=json({});
    return_uVSmEoE=[&]() {
    json return_xYfDAZK=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_uVSmEoE;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_IUrFctQ=json({});
    return_IUrFctQ=[&]() {
    json return_iMjXbXQ=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_IUrFctQ;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_NVEvcHJ=json({});
    return_NVEvcHJ=[&]() {
    json return_OdpaKVY=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_NVEvcHJ;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_uVSmEoE=json({});
    return_uVSmEoE=[&]() {
    json return_xYfDAZK=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_uVSmEoE;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_IUrFctQ=json({});
    return_IUrFctQ=[&]() {
    json return_iMjXbXQ=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_IUrFctQ;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_NVEvcHJ=json({});
    return_NVEvcHJ=[&]() {
    json return_OdpaKVY=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_NVEvcHJ;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_TwjcNsD=json({});
    return_TwjcNsD=[&]() {
    json return_ebJaxHe=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_TwjcNsD;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_sFxKicK=json({});
    return_sFxKicK=[&]() {
    json return_xMGnpdD=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_sFxKicK;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_RzJIVAT=json({});
    return_RzJIVAT=[&]() {
    json return_MNiwOls=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_RzJIVAT;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_EoXejeQ=json({});
    return_EoXejeQ=[&]() {
    json return_QNLzUHc=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_EoXejeQ;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rqpxybO=json({});
    
        if (name.pNext==NULL){
            return_rqpxybO["null"]=true;
            return return_rqpxybO;
        }
        return_rqpxybO=[&]() {
    json return_yVVDren=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yVVDren["null"]=true;
            return return_yVVDren;
        }
        
        return_yVVDren["members"]={};
        for(int yVVDren=0; yVVDren < strlen(((char*)(name.pNext)))+1; yVVDren++){
            json temp;
            temp=[&]() {
    json return_NLpoiEa=json({});
    return serialize_char(((char*)(name.pNext))[yVVDren]);}();
            return_yVVDren["members"].push_back(temp);
        }
        return return_yVVDren;
        }();return return_rqpxybO;}();
result["members"]["flags"]=[&]() {
    json return_vdrtyxX=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JNBnRPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JNBnRPo=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jEIuktB=0; jEIuktB < name["members"]["pNext"]["members"].size(); jEIuktB++){
            [&]() {
temp[jEIuktB]=deserialize_char(name["members"]["pNext"]["members"][jEIuktB]);}();;
        }
        }();temp_JNBnRPo=(void*)temp;
}();result.pNext=temp_JNBnRPo;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IQBknPX=json({});
    
        if (name.pNext==NULL){
            return_IQBknPX["null"]=true;
            return return_IQBknPX;
        }
        return_IQBknPX=[&]() {
    json return_qtMEAfr=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qtMEAfr["null"]=true;
            return return_qtMEAfr;
        }
        
        return_qtMEAfr["members"]={};
        for(int qtMEAfr=0; qtMEAfr < strlen(((char*)(name.pNext)))+1; qtMEAfr++){
            json temp;
            temp=[&]() {
    json return_cntHQDE=json({});
    return serialize_char(((char*)(name.pNext))[qtMEAfr]);}();
            return_qtMEAfr["members"].push_back(temp);
        }
        return return_qtMEAfr;
        }();return return_IQBknPX;}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_jVunKyt=json({});
    return_jVunKyt=[&]() {
    json return_SXQkifb=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_jVunKyt;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ZUSeyKJ=0; ZUSeyKJ < name["members"]["pNext"]["members"].size(); ZUSeyKJ++){
            [&]() {
temp[ZUSeyKJ]=deserialize_char(name["members"]["pNext"]["members"][ZUSeyKJ]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fyiKgqT=json({});
    
        if (name.pNext==NULL){
            return_fyiKgqT["null"]=true;
            return return_fyiKgqT;
        }
        return_fyiKgqT=[&]() {
    json return_PVlVzUD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_PVlVzUD["null"]=true;
            return return_PVlVzUD;
        }
        
        return_PVlVzUD["members"]={};
        for(int PVlVzUD=0; PVlVzUD < strlen(((char*)(name.pNext)))+1; PVlVzUD++){
            json temp;
            temp=[&]() {
    json return_iJMFbTE=json({});
    return serialize_char(((char*)(name.pNext))[PVlVzUD]);}();
            return_PVlVzUD["members"].push_back(temp);
        }
        return return_PVlVzUD;
        }();return return_fyiKgqT;}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_CuUlltH=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_AFmrZrh=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kChWqaa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kChWqaa=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kavmYFv=0; kavmYFv < name["members"]["pNext"]["members"].size(); kavmYFv++){
            [&]() {
temp[kavmYFv]=deserialize_char(name["members"]["pNext"]["members"][kavmYFv]);}();;
        }
        }();temp_kChWqaa=(void*)temp;
}();result.pNext=temp_kChWqaa;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KYjVItg=json({});
    
        if (name.pNext==NULL){
            return_KYjVItg["null"]=true;
            return return_KYjVItg;
        }
        return_KYjVItg=[&]() {
    json return_GLECXcT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_GLECXcT["null"]=true;
            return return_GLECXcT;
        }
        
        return_GLECXcT["members"]={};
        for(int GLECXcT=0; GLECXcT < strlen(((char*)(name.pNext)))+1; GLECXcT++){
            json temp;
            temp=[&]() {
    json return_YCncZxw=json({});
    return serialize_char(((char*)(name.pNext))[GLECXcT]);}();
            return_GLECXcT["members"].push_back(temp);
        }
        return return_GLECXcT;
        }();return return_KYjVItg;}();
result["members"]["descriptorOffset"]=[&]() {
    json return_EmezYDT=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_QZkCACS=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mzSqMoD=0; mzSqMoD < name["members"]["pNext"]["members"].size(); mzSqMoD++){
            [&]() {
temp[mzSqMoD]=deserialize_char(name["members"]["pNext"]["members"][mzSqMoD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IWbgTku=json({});
    
        if (name.pNext==NULL){
            return_IWbgTku["null"]=true;
            return return_IWbgTku;
        }
        return_IWbgTku=[&]() {
    json return_VVzrTxc=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_VVzrTxc["null"]=true;
            return return_VVzrTxc;
        }
        
        return_VVzrTxc["members"]={};
        for(int VVzrTxc=0; VVzrTxc < strlen(((char*)(name.pNext)))+1; VVzrTxc++){
            json temp;
            temp=[&]() {
    json return_nTiUyji=json({});
    return serialize_char(((char*)(name.pNext))[VVzrTxc]);}();
            return_VVzrTxc["members"].push_back(temp);
        }
        return return_VVzrTxc;
        }();return return_IWbgTku;}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_iZJHdwj=json({});
    return_iZJHdwj=[&]() {
    json return_lsCShib=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_iZJHdwj;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OKkmuQS=0; OKkmuQS < name["members"]["pNext"]["members"].size(); OKkmuQS++){
            [&]() {
temp[OKkmuQS]=deserialize_char(name["members"]["pNext"]["members"][OKkmuQS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_yXCbftv=json({});
    
        return_yXCbftv["members"]={};
        for(int yXCbftv=0; yXCbftv < VK_UUID_SIZE; yXCbftv++){
            json temp;
            temp=[&]() {
    json return_SjaEqqs=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[yXCbftv]);}();
            return_yXCbftv["members"].push_back(temp);
        }
        return return_yXCbftv;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int lNsMlSC=0; lNsMlSC < VK_UUID_SIZE; lNsMlSC++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[lNsMlSC]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][lNsMlSC]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["identifierSize"]=[&]() {
    json return_LQogbvw=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_gqvxrdW=json({});
    
        if (name.pIdentifier==NULL){
            return_gqvxrdW["null"]=true;
            return return_gqvxrdW;
        }
        
        return_gqvxrdW["members"]={};
        for(int gqvxrdW=0; gqvxrdW < name.identifierSize; gqvxrdW++){
            json temp;
            temp=[&]() {
    json return_zAWaUIb=json({});
    return serialize_uint8_t(name.pIdentifier[gqvxrdW]);}();
            return_gqvxrdW["members"].push_back(temp);
        }
        return return_gqvxrdW;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_sebhhTX;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_sebhhTX=NULL;
        return;
        }
    temp_sebhhTX=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int iCISgxl=0; iCISgxl < result.identifierSize; iCISgxl++){
            [&]() {
temp_sebhhTX[iCISgxl]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][iCISgxl]);}();;
        }
        }();result.pIdentifier=temp_sebhhTX;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UpYPPUm=json({});
    
        if (name.pNext==NULL){
            return_UpYPPUm["null"]=true;
            return return_UpYPPUm;
        }
        return_UpYPPUm=[&]() {
    json return_dnFegcI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dnFegcI["null"]=true;
            return return_dnFegcI;
        }
        
        return_dnFegcI["members"]={};
        for(int dnFegcI=0; dnFegcI < strlen(((char*)(name.pNext)))+1; dnFegcI++){
            json temp;
            temp=[&]() {
    json return_tJPAjpe=json({});
    return serialize_char(((char*)(name.pNext))[dnFegcI]);}();
            return_dnFegcI["members"].push_back(temp);
        }
        return return_dnFegcI;
        }();return return_UpYPPUm;}();
result["members"]["identifierSize"]=[&]() {
    json return_QtWRssr=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_KGNsBfd=json({});
    
        return_KGNsBfd["members"]={};
        for(int KGNsBfd=0; KGNsBfd < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; KGNsBfd++){
            json temp;
            temp=[&]() {
    json return_qOKlxzt=json({});
    return serialize_uint8_t(name.identifier[KGNsBfd]);}();
            return_KGNsBfd["members"].push_back(temp);
        }
        return return_KGNsBfd;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfHoroN=0; XfHoroN < name["members"]["pNext"]["members"].size(); XfHoroN++){
            [&]() {
temp[XfHoroN]=deserialize_char(name["members"]["pNext"]["members"][XfHoroN]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int WrIzqPj=0; WrIzqPj < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; WrIzqPj++){
            [&]() {
result.identifier[WrIzqPj]=deserialize_uint8_t(name["members"]["identifier"]["members"][WrIzqPj]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["flags"]=[&]() {
    json return_jVIAxBZ=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_mWOlklC=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_uMsCIkK=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_uMsCIkK["null"]=true;
            return return_uMsCIkK;
        }
        
        return_uMsCIkK["members"]={};
        for(int uMsCIkK=0; uMsCIkK < name.compressionControlPlaneCount; uMsCIkK++){
            json temp;
            temp=[&]() {
    json return_zXJGeUw=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[uMsCIkK]);}();
            return_uMsCIkK["members"].push_back(temp);
        }
        return return_uMsCIkK;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        return;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int zrtXpWA=0; zrtXpWA < result.compressionControlPlaneCount; zrtXpWA++){
            [&]() {
result.pFixedRateFlags[zrtXpWA]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][zrtXpWA]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_FxltxBy=json({});
    return_FxltxBy=[&]() {
    json return_IAvEbaP=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_FxltxBy;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvGZmAX=json({});
    
        if (name.pNext==NULL){
            return_vvGZmAX["null"]=true;
            return return_vvGZmAX;
        }
        return_vvGZmAX=[&]() {
    json return_KGHQsym=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_KGHQsym["null"]=true;
            return return_KGHQsym;
        }
        
        return_KGHQsym["members"]={};
        for(int KGHQsym=0; KGHQsym < strlen(((char*)(name.pNext)))+1; KGHQsym++){
            json temp;
            temp=[&]() {
    json return_FoCKdfa=json({});
    return serialize_char(((char*)(name.pNext))[KGHQsym]);}();
            return_KGHQsym["members"].push_back(temp);
        }
        return return_KGHQsym;
        }();return return_vvGZmAX;}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_IQkTdRf=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_DcGCwgo=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int fprIxcs=0; fprIxcs < name["members"]["pNext"]["members"].size(); fprIxcs++){
            [&]() {
temp[fprIxcs]=deserialize_char(name["members"]["pNext"]["members"][fprIxcs]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_QCFCJII=json({});
    return_QCFCJII=[&]() {
    json return_WmXnFIR=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_QCFCJII;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["imageSubresource"]=[&]() {
    json return_noOoYkX=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["imageSubresource"]=[&]() {
    json return_noOoYkX=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["subresourceLayout"]=[&]() {
    json return_hmhbukI=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tscKVZU=json({});
    
        if (name.pNext==NULL){
            return_tscKVZU["null"]=true;
            return return_tscKVZU;
        }
        return_tscKVZU=[&]() {
    json return_ePDHwWm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ePDHwWm["null"]=true;
            return return_ePDHwWm;
        }
        
        return_ePDHwWm["members"]={};
        for(int ePDHwWm=0; ePDHwWm < strlen(((char*)(name.pNext)))+1; ePDHwWm++){
            json temp;
            temp=[&]() {
    json return_vqZuHkL=json({});
    return serialize_char(((char*)(name.pNext))[ePDHwWm]);}();
            return_ePDHwWm["members"].push_back(temp);
        }
        return return_ePDHwWm;
        }();return return_tscKVZU;}();
result["members"]["subresourceLayout"]=[&]() {
    json return_hmhbukI=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ghdHOrj=0; ghdHOrj < name["members"]["pNext"]["members"].size(); ghdHOrj++){
            [&]() {
temp[ghdHOrj]=deserialize_char(name["members"]["pNext"]["members"][ghdHOrj]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tEQoOGk=json({});
    
        if (name.pNext==NULL){
            return_tEQoOGk["null"]=true;
            return return_tEQoOGk;
        }
        return_tEQoOGk=[&]() {
    json return_vZuCwBb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vZuCwBb["null"]=true;
            return return_vZuCwBb;
        }
        
        return_vZuCwBb["members"]={};
        for(int vZuCwBb=0; vZuCwBb < strlen(((char*)(name.pNext)))+1; vZuCwBb++){
            json temp;
            temp=[&]() {
    json return_ELqzooH=json({});
    return serialize_char(((char*)(name.pNext))[vZuCwBb]);}();
            return_vZuCwBb["members"].push_back(temp);
        }
        return return_vZuCwBb;
        }();return return_tEQoOGk;}();
result["members"]["disallowMerging"]=[&]() {
    json return_ADVvMNt=json({});
    return_ADVvMNt=[&]() {
    json return_luvlRCP=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_ADVvMNt;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zDIBRgk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zDIBRgk=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int gFvgSGg=0; gFvgSGg < name["members"]["pNext"]["members"].size(); gFvgSGg++){
            [&]() {
temp[gFvgSGg]=deserialize_char(name["members"]["pNext"]["members"][gFvgSGg]);}();;
        }
        }();temp_zDIBRgk=(void*)temp;
}();result.pNext=temp_zDIBRgk;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_sPXbYii=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pXqerly=json({});
    
        if (name.pNext==NULL){
            return_pXqerly["null"]=true;
            return return_pXqerly;
        }
        return_pXqerly=[&]() {
    json return_idJGveA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_idJGveA["null"]=true;
            return return_idJGveA;
        }
        
        return_idJGveA["members"]={};
        for(int idJGveA=0; idJGveA < strlen(((char*)(name.pNext)))+1; idJGveA++){
            json temp;
            temp=[&]() {
    json return_ubyXGMh=json({});
    return serialize_char(((char*)(name.pNext))[idJGveA]);}();
            return_idJGveA["members"].push_back(temp);
        }
        return return_idJGveA;
        }();return return_pXqerly;}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_eJkQZew=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_eJkQZew["null"]=true;
            return return_eJkQZew;
        }
        return_eJkQZew=[&]() {
    json return_LmwiWNd=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_eJkQZew;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CCduxaA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CCduxaA=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BpVuFXr=0; BpVuFXr < name["members"]["pNext"]["members"].size(); BpVuFXr++){
            [&]() {
temp[BpVuFXr]=deserialize_char(name["members"]["pNext"]["members"][BpVuFXr]);}();;
        }
        }();temp_CCduxaA=(void*)temp;
}();result.pNext=temp_CCduxaA;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        return;
        }
    result.pRenderPassFeedback=(VkRenderPassCreationFeedbackInfoEXT*)malloc(sizeof(VkRenderPassCreationFeedbackInfoEXT));
[&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_cZTjWGH=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_xvqRVGC=json({});
    
        return_xvqRVGC["members"]={};
        for(int xvqRVGC=0; xvqRVGC < VK_MAX_DESCRIPTION_SIZE; xvqRVGC++){
            json temp;
            temp=[&]() {
    json return_KQnnFxa=json({});
    return serialize_char(name.description[xvqRVGC]);}();
            return_xvqRVGC["members"].push_back(temp);
        }
        return return_xvqRVGC;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_shauXES=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int GasRBho=0; GasRBho < VK_MAX_DESCRIPTION_SIZE; GasRBho++){
            [&]() {
result.description[GasRBho]=deserialize_char(name["members"]["description"]["members"][GasRBho]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CgLxFNC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FeVFuAL=json({});
    
        if (name.pNext==NULL){
            return_FeVFuAL["null"]=true;
            return return_FeVFuAL;
        }
        return_FeVFuAL=[&]() {
    json return_gKtmbTH=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gKtmbTH["null"]=true;
            return return_gKtmbTH;
        }
        
        return_gKtmbTH["members"]={};
        for(int gKtmbTH=0; gKtmbTH < strlen(((char*)(name.pNext)))+1; gKtmbTH++){
            json temp;
            temp=[&]() {
    json return_wLfAaPh=json({});
    return serialize_char(((char*)(name.pNext))[gKtmbTH]);}();
            return_gKtmbTH["members"].push_back(temp);
        }
        return return_gKtmbTH;
        }();return return_FeVFuAL;}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_HpNIgsp=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_HpNIgsp["null"]=true;
            return return_HpNIgsp;
        }
        return_HpNIgsp=[&]() {
    json return_yJTCDNm=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_HpNIgsp;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_raXkrsj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_raXkrsj=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kAAyiND=0; kAAyiND < name["members"]["pNext"]["members"].size(); kAAyiND++){
            [&]() {
temp[kAAyiND]=deserialize_char(name["members"]["pNext"]["members"][kAAyiND]);}();;
        }
        }();temp_raXkrsj=(void*)temp;
}();result.pNext=temp_raXkrsj;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        return;
        }
    result.pSubpassFeedback=(VkRenderPassSubpassFeedbackInfoEXT*)malloc(sizeof(VkRenderPassSubpassFeedbackInfoEXT));
[&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Wlcjool=json({});
    
        if (name.pNext==NULL){
            return_Wlcjool["null"]=true;
            return return_Wlcjool;
        }
        return_Wlcjool=[&]() {
    json return_BmXWqAm=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BmXWqAm["null"]=true;
            return return_BmXWqAm;
        }
        
        return_BmXWqAm["members"]={};
        for(int BmXWqAm=0; BmXWqAm < strlen(((char*)(name.pNext)))+1; BmXWqAm++){
            json temp;
            temp=[&]() {
    json return_GTuBLcK=json({});
    return serialize_char(((char*)(name.pNext))[BmXWqAm]);}();
            return_BmXWqAm["members"].push_back(temp);
        }
        return return_BmXWqAm;
        }();return return_Wlcjool;}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_FpypWPr=json({});
    return_FpypWPr=[&]() {
    json return_eFQJhya=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_FpypWPr;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int GtqneLy=0; GtqneLy < name["members"]["pNext"]["members"].size(); GtqneLy++){
            [&]() {
temp[GtqneLy]=deserialize_char(name["members"]["pNext"]["members"][GtqneLy]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fFqrjly=json({});
    
        if (name.pNext==NULL){
            return_fFqrjly["null"]=true;
            return return_fFqrjly;
        }
        return_fFqrjly=[&]() {
    json return_dINOMtL=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dINOMtL["null"]=true;
            return return_dINOMtL;
        }
        
        return_dINOMtL["members"]={};
        for(int dINOMtL=0; dINOMtL < strlen(((char*)(name.pNext)))+1; dINOMtL++){
            json temp;
            temp=[&]() {
    json return_UUWDFFc=json({});
    return serialize_char(((char*)(name.pNext))[dINOMtL]);}();
            return_dINOMtL["members"].push_back(temp);
        }
        return return_dINOMtL;
        }();return return_fFqrjly;}();
result["members"]["type"]=[&]() {
    json return_MwtEJsv=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_osjpbky=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_Dehefvh=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_gTmKjLr=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_HtbOVOk=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_XAxIRYU=json({});
    
        if (name.pUsageCounts==NULL){
            return_XAxIRYU["null"]=true;
            return return_XAxIRYU;
        }
        
        return_XAxIRYU["members"]={};
        for(int XAxIRYU=0; XAxIRYU < name.usageCountsCount; XAxIRYU++){
            json temp;
            temp=[&]() {
    json return_KzNwqYK=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[XAxIRYU]);}();
            return_XAxIRYU["members"].push_back(temp);
        }
        return return_XAxIRYU;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_bTwQGzC=json({});
    
        if (name.ppUsageCounts==NULL){
            return_bTwQGzC["null"]=true;
            return return_bTwQGzC;
        }
        
        return_bTwQGzC["members"]={};
        for(int bTwQGzC=0; bTwQGzC < name.usageCountsCount; bTwQGzC++){
            json temp;
            temp=[&]() {
    json return_mUfwakj=json({});
    
        if (name.ppUsageCounts[bTwQGzC]==NULL){
            return_mUfwakj["null"]=true;
            return return_mUfwakj;
        }
        
        return_mUfwakj["members"]={};
        for(int mUfwakj=0; mUfwakj < 1; mUfwakj++){
            json temp;
            temp=[&]() {
    json return_nSfmuKx=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[bTwQGzC][mUfwakj]);}();
            return_mUfwakj["members"].push_back(temp);
        }
        return return_mUfwakj;
        }();
            return_bTwQGzC["members"].push_back(temp);
        }
        return return_bTwQGzC;
        }();
result["members"]["data"]=[&]() {
    json return_HlRgNTk=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_zUydXfY=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_YhNDogs=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_IKUuMQE=json({});
    return_IKUuMQE=[&]() {
    json return_dgTnNbb=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_IKUuMQE;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYyfkNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYyfkNN=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ceyRXsX=0; ceyRXsX < name["members"]["pNext"]["members"].size(); ceyRXsX++){
            [&]() {
temp[ceyRXsX]=deserialize_char(name["members"]["pNext"]["members"][ceyRXsX]);}();;
        }
        }();temp_YYyfkNN=(void*)temp;
}();result.pNext=temp_YYyfkNN;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_JgGWOCl;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_JgGWOCl=NULL;
        return;
        }
    temp_JgGWOCl=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int RyMoooQ=0; RyMoooQ < result.usageCountsCount; RyMoooQ++){
            [&]() {
temp_JgGWOCl[RyMoooQ]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][RyMoooQ]);}();;
        }
        }();result.pUsageCounts=temp_JgGWOCl;}();
[&]() {
VkMicromapUsageEXT** temp_MHXpgpI;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_MHXpgpI=NULL;
        return;
        }
    temp_MHXpgpI=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int kUVlPwt=0; kUVlPwt < result.usageCountsCount; kUVlPwt++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][kUVlPwt].contains("null")){
        temp_MHXpgpI[kUVlPwt]=NULL;
        return;
        }
    temp_MHXpgpI[kUVlPwt]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int tMdqIWz=0; tMdqIWz < 1; tMdqIWz++){
            [&]() {
temp_MHXpgpI[kUVlPwt][tMdqIWz]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][kUVlPwt]["members"][tMdqIWz]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_MHXpgpI;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJEaAjM=json({});
    
        if (name.pNext==NULL){
            return_sJEaAjM["null"]=true;
            return return_sJEaAjM;
        }
        return_sJEaAjM=[&]() {
    json return_rBgzMMw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_rBgzMMw["null"]=true;
            return return_rBgzMMw;
        }
        
        return_rBgzMMw["members"]={};
        for(int rBgzMMw=0; rBgzMMw < strlen(((char*)(name.pNext)))+1; rBgzMMw++){
            json temp;
            temp=[&]() {
    json return_ejnGIWb=json({});
    return serialize_char(((char*)(name.pNext))[rBgzMMw]);}();
            return_rBgzMMw["members"].push_back(temp);
        }
        return return_rBgzMMw;
        }();return return_sJEaAjM;}();
result["members"]["createFlags"]=[&]() {
    json return_DlIOryi=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_iNMjrHv=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_NNKbgHC=json({});
    return_NNKbgHC=[&]() {
    json return_rjASgGU=json({});
    return serialize_uint64_t(name.offset);}();return return_NNKbgHC;}();
result["members"]["size"]=[&]() {
    json return_ySQALFE=json({});
    return_ySQALFE=[&]() {
    json return_IJHbppP=json({});
    return serialize_uint64_t(name.size);}();return return_ySQALFE;}();
result["members"]["type"]=[&]() {
    json return_TBrtWKI=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_vYlQBLH=json({});
    return_vYlQBLH=[&]() {
    json return_dzEVIsZ=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_vYlQBLH;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YvSbgFq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YvSbgFq=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int bfrvKlJ=0; bfrvKlJ < name["members"]["pNext"]["members"].size(); bfrvKlJ++){
            [&]() {
temp[bfrvKlJ]=deserialize_char(name["members"]["pNext"]["members"][bfrvKlJ]);}();;
        }
        }();temp_YvSbgFq=(void*)temp;
}();result.pNext=temp_YvSbgFq;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["pVersionData"]=[&]() {
    json return_ljCAUJd=json({});
    
        if (name.pVersionData==NULL){
            return_ljCAUJd["null"]=true;
            return return_ljCAUJd;
        }
        
        return_ljCAUJd["members"]={};
        for(int ljCAUJd=0; ljCAUJd < 2*VK_UUID_SIZE; ljCAUJd++){
            json temp;
            temp=[&]() {
    json return_tRaBNAz=json({});
    return serialize_uint8_t(name.pVersionData[ljCAUJd]);}();
            return_ljCAUJd["members"].push_back(temp);
        }
        return return_ljCAUJd;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
uint8_t* temp_JvazigJ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_JvazigJ=NULL;
        return;
        }
    temp_JvazigJ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int zgTJpWk=0; zgTJpWk < 2*VK_UUID_SIZE; zgTJpWk++){
            [&]() {
temp_JvazigJ[zgTJpWk]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][zgTJpWk]);}();;
        }
        }();result.pVersionData=temp_JvazigJ;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_vWXpGgq=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ZzojiHI=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_GTNsanB=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_vWXpGgq=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_DTUZtri=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_GTNsanB=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MDZqTiQ=json({});
    
        if (name.pNext==NULL){
            return_MDZqTiQ["null"]=true;
            return return_MDZqTiQ;
        }
        return_MDZqTiQ=[&]() {
    json return_gwOIPFK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gwOIPFK["null"]=true;
            return return_gwOIPFK;
        }
        
        return_gwOIPFK["members"]={};
        for(int gwOIPFK=0; gwOIPFK < strlen(((char*)(name.pNext)))+1; gwOIPFK++){
            json temp;
            temp=[&]() {
    json return_XRJxgUx=json({});
    return serialize_char(((char*)(name.pNext))[gwOIPFK]);}();
            return_gwOIPFK["members"].push_back(temp);
        }
        return return_gwOIPFK;
        }();return return_MDZqTiQ;}();
result["members"]["src"]=[&]() {
    json return_xTOMVEG=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_ZzojiHI=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_GTNsanB=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQLyWGy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQLyWGy=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iVScxqU=0; iVScxqU < name["members"]["pNext"]["members"].size(); iVScxqU++){
            [&]() {
temp[iVScxqU]=deserialize_char(name["members"]["pNext"]["members"][iVScxqU]);}();;
        }
        }();temp_vQLyWGy=(void*)temp;
}();result.pNext=temp_vQLyWGy;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["micromapSize"]=[&]() {
    json return_tVlROrY=json({});
    return_tVlROrY=[&]() {
    json return_kiewRzQ=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_tVlROrY;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_zPHZRGL=json({});
    return_zPHZRGL=[&]() {
    json return_bsSPOjW=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_zPHZRGL;}();
result["members"]["discardable"]=[&]() {
    json return_dAfsTHu=json({});
    return_dAfsTHu=[&]() {
    json return_gFgTShE=json({});
    return serialize_uint32_t(name.discardable);}();return return_dAfsTHu;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_lMTolfF=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_NyreXsF=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_KDoHxiH=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_GpkieOn=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_ZXXDdYX=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_ZgBvmFp=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["micromap"]=[&]() {
    json return_lgitvpZ=json({});
    return_lgitvpZ=[&]() {
    json return_XnHyYWS=json({});
    return serialize_uint32_t(name.micromap);}();return return_lgitvpZ;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_djxINgI=json({});
    return_djxINgI=[&]() {
    json return_opjNgDb=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_djxINgI;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_hlaqftt=json({});
    return_hlaqftt=[&]() {
    json return_HkKUdlH=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_hlaqftt;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_hXujQYV=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_gNXnqPU=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUmGQDi=json({});
    
        if (name.pNext==NULL){
            return_RUmGQDi["null"]=true;
            return return_RUmGQDi;
        }
        return_RUmGQDi=[&]() {
    json return_iUMONij=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_iUMONij["null"]=true;
            return return_iUMONij;
        }
        
        return_iUMONij["members"]={};
        for(int iUMONij=0; iUMONij < strlen(((char*)(name.pNext)))+1; iUMONij++){
            json temp;
            temp=[&]() {
    json return_jKBjTOw=json({});
    return serialize_char(((char*)(name.pNext))[iUMONij]);}();
            return_iUMONij["members"].push_back(temp);
        }
        return return_iUMONij;
        }();return return_RUmGQDi;}();
result["members"]["indexType"]=[&]() {
    json return_dVZOtbk=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_aADcQcy=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_loYqEOZ=json({});
    return_loYqEOZ=[&]() {
    json return_iyygrxT=json({});
    return serialize_uint64_t(name.indexStride);}();return return_loYqEOZ;}();
result["members"]["baseTriangle"]=[&]() {
    json return_yenVyqY=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_cZrzvUG=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_mIKqaKj=json({});
    
        if (name.pUsageCounts==NULL){
            return_mIKqaKj["null"]=true;
            return return_mIKqaKj;
        }
        
        return_mIKqaKj["members"]={};
        for(int mIKqaKj=0; mIKqaKj < name.usageCountsCount; mIKqaKj++){
            json temp;
            temp=[&]() {
    json return_QMJKyBD=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[mIKqaKj]);}();
            return_mIKqaKj["members"].push_back(temp);
        }
        return return_mIKqaKj;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_bNaMuya=json({});
    
        if (name.ppUsageCounts==NULL){
            return_bNaMuya["null"]=true;
            return return_bNaMuya;
        }
        
        return_bNaMuya["members"]={};
        for(int bNaMuya=0; bNaMuya < name.usageCountsCount; bNaMuya++){
            json temp;
            temp=[&]() {
    json return_ryZfGmb=json({});
    
        if (name.ppUsageCounts[bNaMuya]==NULL){
            return_ryZfGmb["null"]=true;
            return return_ryZfGmb;
        }
        
        return_ryZfGmb["members"]={};
        for(int ryZfGmb=0; ryZfGmb < 1; ryZfGmb++){
            json temp;
            temp=[&]() {
    json return_NDqobgh=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[bNaMuya][ryZfGmb]);}();
            return_ryZfGmb["members"].push_back(temp);
        }
        return return_ryZfGmb;
        }();
            return_bNaMuya["members"].push_back(temp);
        }
        return return_bNaMuya;
        }();
result["members"]["micromap"]=[&]() {
    json return_XzFcHHw=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iDKuMMl=0; iDKuMMl < name["members"]["pNext"]["members"].size(); iDKuMMl++){
            [&]() {
temp[iDKuMMl]=deserialize_char(name["members"]["pNext"]["members"][iDKuMMl]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_plmoSpC;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_plmoSpC=NULL;
        return;
        }
    temp_plmoSpC=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int gDPWFoH=0; gDPWFoH < result.usageCountsCount; gDPWFoH++){
            [&]() {
temp_plmoSpC[gDPWFoH]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][gDPWFoH]);}();;
        }
        }();result.pUsageCounts=temp_plmoSpC;}();
[&]() {
VkMicromapUsageEXT** temp_AGlUqtB;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_AGlUqtB=NULL;
        return;
        }
    temp_AGlUqtB=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int GKHNaDD=0; GKHNaDD < result.usageCountsCount; GKHNaDD++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][GKHNaDD].contains("null")){
        temp_AGlUqtB[GKHNaDD]=NULL;
        return;
        }
    temp_AGlUqtB[GKHNaDD]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int ZprIjGn=0; ZprIjGn < 1; ZprIjGn++){
            [&]() {
temp_AGlUqtB[GKHNaDD][ZprIjGn]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][GKHNaDD]["members"][ZprIjGn]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_AGlUqtB;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_CPVquEm=json({});
    
        return_CPVquEm["members"]={};
        for(int CPVquEm=0; CPVquEm < VK_UUID_SIZE; CPVquEm++){
            json temp;
            temp=[&]() {
    json return_tIFJODZ=json({});
    return serialize_uint8_t(name.pipelineIdentifier[CPVquEm]);}();
            return_CPVquEm["members"].push_back(temp);
        }
        return return_CPVquEm;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int HKodBFK=0; HKodBFK < VK_UUID_SIZE; HKodBFK++){
            [&]() {
result.pipelineIdentifier[HKodBFK]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][HKodBFK]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_hUedqpP=json({});
    return_hUedqpP=[&]() {
    json return_gZEdAOU=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_hUedqpP;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_oyDEgzU=json({});
    return_oyDEgzU=[&]() {
    json return_nGNhtof=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_oyDEgzU;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJVuNCu=json({});
    
        if (name.pNext==NULL){
            return_bJVuNCu["null"]=true;
            return return_bJVuNCu;
        }
        return_bJVuNCu=[&]() {
    json return_gSvJhWw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_gSvJhWw["null"]=true;
            return return_gSvJhWw;
        }
        
        return_gSvJhWw["members"]={};
        for(int gSvJhWw=0; gSvJhWw < strlen(((char*)(name.pNext)))+1; gSvJhWw++){
            json temp;
            temp=[&]() {
    json return_LmeHFYb=json({});
    return serialize_char(((char*)(name.pNext))[gSvJhWw]);}();
            return_gSvJhWw["members"].push_back(temp);
        }
        return return_gSvJhWw;
        }();return return_bJVuNCu;}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_DVxnIfb=json({});
    return_DVxnIfb=[&]() {
    json return_VLILaGQ=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_DVxnIfb;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lEvEGvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lEvEGvb=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int HrQiuVE=0; HrQiuVE < name["members"]["pNext"]["members"].size(); HrQiuVE++){
            [&]() {
temp[HrQiuVE]=deserialize_char(name["members"]["pNext"]["members"][HrQiuVE]);}();;
        }
        }();temp_lEvEGvb=(void*)temp;
}();result.pNext=temp_lEvEGvb;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ddOAScp=json({});
    
        if (name.pNext==NULL){
            return_ddOAScp["null"]=true;
            return return_ddOAScp;
        }
        return_ddOAScp=[&]() {
    json return_zerrGcJ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zerrGcJ["null"]=true;
            return return_zerrGcJ;
        }
        
        return_zerrGcJ["members"]={};
        for(int zerrGcJ=0; zerrGcJ < strlen(((char*)(name.pNext)))+1; zerrGcJ++){
            json temp;
            temp=[&]() {
    json return_MmtHEaL=json({});
    return serialize_char(((char*)(name.pNext))[zerrGcJ]);}();
            return_zerrGcJ["members"].push_back(temp);
        }
        return return_zerrGcJ;
        }();return return_ddOAScp;}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_meOrmfv=json({});
    return_meOrmfv=[&]() {
    json return_nbusbIp=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_meOrmfv;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tKLhAeg=0; tKLhAeg < name["members"]["pNext"]["members"].size(); tKLhAeg++){
            [&]() {
temp[tKLhAeg]=deserialize_char(name["members"]["pNext"]["members"][tKLhAeg]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_KzDdQwU=json({});
    return_KzDdQwU=[&]() {
    json return_mFHNIWP=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_KzDdQwU;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["storageBuffers"]=[&]() {
    json return_CiYhTfH=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_zDbxMHl=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_qQRVTjm=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_xRwmGnn=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_TBrFODd=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_yqAluWB=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_TKGOaMr=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_kGoOjLp=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rqpxybO=json({});
    
        if (name.pNext==NULL){
            return_rqpxybO["null"]=true;
            return return_rqpxybO;
        }
        return_rqpxybO=[&]() {
    json return_yVVDren=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_yVVDren["null"]=true;
            return return_yVVDren;
        }
        
        return_yVVDren["members"]={};
        for(int yVVDren=0; yVVDren < strlen(((char*)(name.pNext)))+1; yVVDren++){
            json temp;
            temp=[&]() {
    json return_NLpoiEa=json({});
    return serialize_char(((char*)(name.pNext))[yVVDren]);}();
            return_yVVDren["members"].push_back(temp);
        }
        return return_yVVDren;
        }();return return_rqpxybO;}();
result["members"]["filterCenter"]=[&]() {
    json return_fWVgPRQ=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_epPAVXB=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_sSpnEkf=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JNBnRPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JNBnRPo=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jEIuktB=0; jEIuktB < name["members"]["pNext"]["members"].size(); jEIuktB++){
            [&]() {
temp[jEIuktB]=deserialize_char(name["members"]["pNext"]["members"][jEIuktB]);}();;
        }
        }();temp_JNBnRPo=(void*)temp;
}();result.pNext=temp_JNBnRPo;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_gvdiUME=json({});
    return_gvdiUME=[&]() {
    json return_ZkJkUvV=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_gvdiUME;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_tXBnGlw=json({});
    return_tXBnGlw=[&]() {
    json return_xhwDTdf=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_tXBnGlw;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_zGUfbjG=json({});
    return_zGUfbjG=[&]() {
    json return_UCfUcGZ=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_zGUfbjG;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIWMqlr=json({});
    
        if (name.pNext==NULL){
            return_gIWMqlr["null"]=true;
            return return_gIWMqlr;
        }
        return_gIWMqlr=[&]() {
    json return_dApomuT=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_dApomuT["null"]=true;
            return return_dApomuT;
        }
        
        return_dApomuT["members"]={};
        for(int dApomuT=0; dApomuT < strlen(((char*)(name.pNext)))+1; dApomuT++){
            json temp;
            temp=[&]() {
    json return_SasiYrZ=json({});
    return serialize_char(((char*)(name.pNext))[dApomuT]);}();
            return_dApomuT["members"].push_back(temp);
        }
        return return_dApomuT;
        }();return return_gIWMqlr;}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_DxkJNRP=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_aotXRzG=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_RQnXtsl=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_PoPHGlS=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OAWUfSf=0; OAWUfSf < name["members"]["pNext"]["members"].size(); OAWUfSf++){
            [&]() {
temp[OAWUfSf]=deserialize_char(name["members"]["pNext"]["members"][OAWUfSf]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["tileProperties"]=[&]() {
    json return_vfucUSq=json({});
    return_vfucUSq=[&]() {
    json return_xumHiSW=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_vfucUSq;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["tileSize"]=[&]() {
    json return_CaKGXZi=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_AjEbiXn=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_AvHHWZA=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["amigoProfiling"]=[&]() {
    json return_LVnFSvN=json({});
    return_LVnFSvN=[&]() {
    json return_nHmTVfP=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_LVnFSvN;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_HoFYpog=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_mCLDyoW=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_uDHdXxr=json({});
    return_uDHdXxr=[&]() {
    json return_NrIofUC=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_uDHdXxr;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_SjPnZeR=json({});
    return_SjPnZeR=[&]() {
    json return_KMOcTcH=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_SjPnZeR;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_hwaEyiu=json({});
    return_hwaEyiu=[&]() {
    json return_LFwVnOh=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_hwaEyiu;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["flags"]=[&]() {
    json return_WAtnugD=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_RaqiJZC=json({});
    return_RaqiJZC=[&]() {
    json return_YQwSUug=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_RaqiJZC;}();
result["members"]["size"]=[&]() {
    json return_rXiyHEE=json({});
    return_rXiyHEE=[&]() {
    json return_OGWmKEP=json({});
    return serialize_uint64_t(name.size);}();return return_rXiyHEE;}();
result["members"]["bindingType"]=[&]() {
    json return_UDHvCNq=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["opticalFlow"]=[&]() {
    json return_TqfCOnJ=json({});
    return_TqfCOnJ=[&]() {
    json return_zkHDPvs=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_TqfCOnJ;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_oFZkaJV=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_EsrZFkq=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_nEZqFnJ=json({});
    return_nEZqFnJ=[&]() {
    json return_BWyduEt=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_nEZqFnJ;}();
result["members"]["costSupported"]=[&]() {
    json return_NzKCJAe=json({});
    return_NzKCJAe=[&]() {
    json return_wCgrcFk=json({});
    return serialize_uint32_t(name.costSupported);}();return return_NzKCJAe;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_dkSHywb=json({});
    return_dkSHywb=[&]() {
    json return_DagcgSl=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_dkSHywb;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_nKeqsBg=json({});
    return_nKeqsBg=[&]() {
    json return_RLuScWe=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_nKeqsBg;}();
result["members"]["minWidth"]=[&]() {
    json return_sjAwSWj=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_QiNozsO=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_pxAHCld=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_cYorARw=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_mJeevyo=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOZPppV=json({});
    
        if (name.pNext==NULL){
            return_uOZPppV["null"]=true;
            return return_uOZPppV;
        }
        return_uOZPppV=[&]() {
    json return_qrfWxRw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qrfWxRw["null"]=true;
            return return_qrfWxRw;
        }
        
        return_qrfWxRw["members"]={};
        for(int qrfWxRw=0; qrfWxRw < strlen(((char*)(name.pNext)))+1; qrfWxRw++){
            json temp;
            temp=[&]() {
    json return_GsYIOzC=json({});
    return serialize_char(((char*)(name.pNext))[qrfWxRw]);}();
            return_qrfWxRw["members"].push_back(temp);
        }
        return return_qrfWxRw;
        }();return return_uOZPppV;}();
result["members"]["usage"]=[&]() {
    json return_FPTPRJj=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yMFsvBw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yMFsvBw=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BdMlzmT=0; BdMlzmT < name["members"]["pNext"]["members"].size(); BdMlzmT++){
            [&]() {
temp[BdMlzmT]=deserialize_char(name["members"]["pNext"]["members"][BdMlzmT]);}();;
        }
        }();temp_yMFsvBw=(void*)temp;
}();result.pNext=temp_yMFsvBw;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOZPppV=json({});
    
        if (name.pNext==NULL){
            return_uOZPppV["null"]=true;
            return return_uOZPppV;
        }
        return_uOZPppV=[&]() {
    json return_qrfWxRw=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qrfWxRw["null"]=true;
            return return_qrfWxRw;
        }
        
        return_qrfWxRw["members"]={};
        for(int qrfWxRw=0; qrfWxRw < strlen(((char*)(name.pNext)))+1; qrfWxRw++){
            json temp;
            temp=[&]() {
    json return_GsYIOzC=json({});
    return serialize_char(((char*)(name.pNext))[qrfWxRw]);}();
            return_qrfWxRw["members"].push_back(temp);
        }
        return return_qrfWxRw;
        }();return return_uOZPppV;}();
result["members"]["format"]=[&]() {
    json return_kQWAbDm=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yMFsvBw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yMFsvBw=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BdMlzmT=0; BdMlzmT < name["members"]["pNext"]["members"].size(); BdMlzmT++){
            [&]() {
temp[BdMlzmT]=deserialize_char(name["members"]["pNext"]["members"][BdMlzmT]);}();;
        }
        }();temp_yMFsvBw=(void*)temp;
}();result.pNext=temp_yMFsvBw;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qPOmBMk=json({});
    
        if (name.pNext==NULL){
            return_qPOmBMk["null"]=true;
            return return_qPOmBMk;
        }
        return_qPOmBMk=[&]() {
    json return_WAatVhp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_WAatVhp["null"]=true;
            return return_WAatVhp;
        }
        
        return_WAatVhp["members"]={};
        for(int WAatVhp=0; WAatVhp < strlen(((char*)(name.pNext)))+1; WAatVhp++){
            json temp;
            temp=[&]() {
    json return_WwgqUcy=json({});
    return serialize_char(((char*)(name.pNext))[WAatVhp]);}();
            return_WAatVhp["members"].push_back(temp);
        }
        return return_WAatVhp;
        }();return return_qPOmBMk;}();
result["members"]["width"]=[&]() {
    json return_MMUFEAe=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_DUToipt=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_wJUnCDQ=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_QluoqEq=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_eprDkmm=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_KGfznia=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_VHsFwnh=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_cdAPiKZ=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_EtIhnJL=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int oEKVKZh=0; oEKVKZh < name["members"]["pNext"]["members"].size(); oEKVKZh++){
            [&]() {
temp[oEKVKZh]=deserialize_char(name["members"]["pNext"]["members"][oEKVKZh]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qPOmBMk=json({});
    
        if (name.pNext==NULL){
            return_qPOmBMk["null"]=true;
            return return_qPOmBMk;
        }
        return_qPOmBMk=[&]() {
    json return_WAatVhp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_WAatVhp["null"]=true;
            return return_WAatVhp;
        }
        
        return_WAatVhp["members"]={};
        for(int WAatVhp=0; WAatVhp < strlen(((char*)(name.pNext)))+1; WAatVhp++){
            json temp;
            temp=[&]() {
    json return_WwgqUcy=json({});
    return serialize_char(((char*)(name.pNext))[WAatVhp]);}();
            return_WAatVhp["members"].push_back(temp);
        }
        return return_WAatVhp;
        }();return return_qPOmBMk;}();
result["members"]["id"]=[&]() {
    json return_iKpZruF=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_fOhpmkw=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_kkPPQPs=json({});
    
        if (name.pPrivateData==NULL){
            return_kkPPQPs["null"]=true;
            return return_kkPPQPs;
        }
        return_kkPPQPs=[&]() {
    json return_QfeXJGh=json({});
    
        if (((char*)(name.pPrivateData))==NULL){
            return_QfeXJGh["null"]=true;
            return return_QfeXJGh;
        }
        
        return_QfeXJGh["members"]={};
        for(int QfeXJGh=0; QfeXJGh < strlen(((char*)(name.pPrivateData)))+1; QfeXJGh++){
            json temp;
            temp=[&]() {
    json return_gLTfnhg=json({});
    return serialize_char(((char*)(name.pPrivateData))[QfeXJGh]);}();
            return_QfeXJGh["members"].push_back(temp);
        }
        return return_QfeXJGh;
        }();return return_kkPPQPs;}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int oEKVKZh=0; oEKVKZh < name["members"]["pNext"]["members"].size(); oEKVKZh++){
            [&]() {
temp[oEKVKZh]=deserialize_char(name["members"]["pNext"]["members"][oEKVKZh]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_EgwcKIG;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_EgwcKIG=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pPrivateData"]["members"].size()*sizeof(char));
        for (int MSxwnWR=0; MSxwnWR < name["members"]["pPrivateData"]["members"].size(); MSxwnWR++){
            [&]() {
temp[MSxwnWR]=deserialize_char(name["members"]["pPrivateData"]["members"][MSxwnWR]);}();;
        }
        }();temp_EgwcKIG=(void*)temp;
}();result.pPrivateData=temp_EgwcKIG;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["flags"]=[&]() {
    json return_gVdWTsQ=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_ahDvgyI=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BTaYxAm=json({});
    
        if (name.pRegions==NULL){
            return_BTaYxAm["null"]=true;
            return return_BTaYxAm;
        }
        
        return_BTaYxAm["members"]={};
        for(int BTaYxAm=0; BTaYxAm < name.regionCount; BTaYxAm++){
            json temp;
            temp=[&]() {
    json return_xuYqhxw=json({});
    return serialize_VkRect2D(name.pRegions[BTaYxAm]);}();
            return_BTaYxAm["members"].push_back(temp);
        }
        return return_BTaYxAm;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_GLcXlhb;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_GLcXlhb=NULL;
        return;
        }
    temp_GLcXlhb=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int OToMhFQ=0; OToMhFQ < result.regionCount; OToMhFQ++){
            [&]() {
temp_GLcXlhb[OToMhFQ]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][OToMhFQ]);}();;
        }
        }();result.pRegions=temp_GLcXlhb;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["deviceFault"]=[&]() {
    json return_yDKgLMo=json({});
    return_yDKgLMo=[&]() {
    json return_UZcYSOJ=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_yDKgLMo;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_whysDNh=json({});
    return_whysDNh=[&]() {
    json return_nYirvuL=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_whysDNh;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_sCZMonX=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_IiXnwUC=json({});
    return_IiXnwUC=[&]() {
    json return_YsxcSbH=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_IiXnwUC;}();
result["members"]["addressPrecision"]=[&]() {
    json return_vISJxNn=json({});
    return_vISJxNn=[&]() {
    json return_yROKJtf=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_vISJxNn;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_ytPZELP=json({});
    
        return_ytPZELP["members"]={};
        for(int ytPZELP=0; ytPZELP < VK_MAX_DESCRIPTION_SIZE; ytPZELP++){
            json temp;
            temp=[&]() {
    json return_gLtEPWU=json({});
    return serialize_char(name.description[ytPZELP]);}();
            return_ytPZELP["members"].push_back(temp);
        }
        return return_ytPZELP;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_TKjhUdT=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_uQMlEVD=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int LwqpVeT=0; LwqpVeT < VK_MAX_DESCRIPTION_SIZE; LwqpVeT++){
            [&]() {
result.description[LwqpVeT]=deserialize_char(name["members"]["description"]["members"][LwqpVeT]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["addressInfoCount"]=[&]() {
    json return_axENHRl=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_RrZIUUC=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_OipKQlq=json({});
    return_OipKQlq=[&]() {
    json return_mkyfijY=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_OipKQlq;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["description"]=[&]() {
    json return_ytPZELP=json({});
    
        return_ytPZELP["members"]={};
        for(int ytPZELP=0; ytPZELP < VK_MAX_DESCRIPTION_SIZE; ytPZELP++){
            json temp;
            temp=[&]() {
    json return_gLtEPWU=json({});
    return serialize_char(name.description[ytPZELP]);}();
            return_ytPZELP["members"].push_back(temp);
        }
        return return_ytPZELP;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_aeRfdQs=json({});
    
        if (name.pAddressInfos==NULL){
            return_aeRfdQs["null"]=true;
            return return_aeRfdQs;
        }
        return_aeRfdQs=[&]() {
    json return_aspktqJ=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_aeRfdQs;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_DTBFIfI=json({});
    
        if (name.pVendorInfos==NULL){
            return_DTBFIfI["null"]=true;
            return return_DTBFIfI;
        }
        return_DTBFIfI=[&]() {
    json return_bloJvIQ=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_DTBFIfI;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_vUtEUmH=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_vUtEUmH["null"]=true;
            return return_vUtEUmH;
        }
        return_vUtEUmH=[&]() {
    json return_IIhxACs=json({});
    
        if (((char*)(name.pVendorBinaryData))==NULL){
            return_IIhxACs["null"]=true;
            return return_IIhxACs;
        }
        
        return_IIhxACs["members"]={};
        for(int IIhxACs=0; IIhxACs < strlen(((char*)(name.pVendorBinaryData)))+1; IIhxACs++){
            json temp;
            temp=[&]() {
    json return_fwxJGmc=json({});
    return serialize_char(((char*)(name.pVendorBinaryData))[IIhxACs]);}();
            return_IIhxACs["members"].push_back(temp);
        }
        return return_IIhxACs;
        }();return return_vUtEUmH;}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int LwqpVeT=0; LwqpVeT < VK_MAX_DESCRIPTION_SIZE; LwqpVeT++){
            [&]() {
result.description[LwqpVeT]=deserialize_char(name["members"]["description"]["members"][LwqpVeT]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        return;
        }
    result.pAddressInfos=(VkDeviceFaultAddressInfoEXT*)malloc(sizeof(VkDeviceFaultAddressInfoEXT));
[&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        return;
        }
    result.pVendorInfos=(VkDeviceFaultVendorInfoEXT*)malloc(sizeof(VkDeviceFaultVendorInfoEXT));
[&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pVendorBinaryData"]["members"].size()*sizeof(char));
        for (int BCGOVjU=0; BCGOVjU < name["members"]["pVendorBinaryData"]["members"].size(); BCGOVjU++){
            [&]() {
temp[BCGOVjU]=deserialize_char(name["members"]["pVendorBinaryData"]["members"][BCGOVjU]);}();;
        }
        }();result.pVendorBinaryData=(void*)temp;
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_JDWaDkl=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_iSsSOwL=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_UzxmKCq=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_lcOeawS=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_CZiBmuD=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_vxPupzB=json({});
    
        return_vxPupzB["members"]={};
        for(int vxPupzB=0; vxPupzB < VK_UUID_SIZE; vxPupzB++){
            json temp;
            temp=[&]() {
    json return_oQqntDj=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[vxPupzB]);}();
            return_vxPupzB["members"].push_back(temp);
        }
        return return_vxPupzB;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_uRyMhHh=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_nrSITEp=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_bDweQdt=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_aUWBihq=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_BkZhZiV=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int coRPHdC=0; coRPHdC < VK_UUID_SIZE; coRPHdC++){
            [&]() {
result.pipelineCacheUUID[coRPHdC]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][coRPHdC]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QWplarZ=json({});
    
        if (name.pNext==NULL){
            return_QWplarZ["null"]=true;
            return return_QWplarZ;
        }
        return_QWplarZ=[&]() {
    json return_FyGcbvK=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FyGcbvK["null"]=true;
            return return_FyGcbvK;
        }
        
        return_FyGcbvK["members"]={};
        for(int FyGcbvK=0; FyGcbvK < strlen(((char*)(name.pNext)))+1; FyGcbvK++){
            json temp;
            temp=[&]() {
    json return_feAWANy=json({});
    return serialize_char(((char*)(name.pNext))[FyGcbvK]);}();
            return_FyGcbvK["members"].push_back(temp);
        }
        return return_FyGcbvK;
        }();return return_QWplarZ;}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_JFGRGPk=json({});
    return_JFGRGPk=[&]() {
    json return_LfHRCRx=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_JFGRGPk;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ptwmfxO=0; ptwmfxO < name["members"]["pNext"]["members"].size(); ptwmfxO++){
            [&]() {
temp[ptwmfxO]=deserialize_char(name["members"]["pNext"]["members"][ptwmfxO]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_DrALPCs=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_SgRVSsj=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_DSDEJMA=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vvASclu=json({});
    
        if (name.pNext==NULL){
            return_vvASclu["null"]=true;
            return return_vvASclu;
        }
        return_vvASclu=[&]() {
    json return_sZzmQOp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_sZzmQOp["null"]=true;
            return return_sZzmQOp;
        }
        
        return_sZzmQOp["members"]={};
        for(int sZzmQOp=0; sZzmQOp < strlen(((char*)(name.pNext)))+1; sZzmQOp++){
            json temp;
            temp=[&]() {
    json return_kSYLCBc=json({});
    return serialize_char(((char*)(name.pNext))[sZzmQOp]);}();
            return_sZzmQOp["members"].push_back(temp);
        }
        return return_sZzmQOp;
        }();return return_vvASclu;}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_FrOMnTn=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_vNHLzoZ=json({});
    return_vNHLzoZ=[&]() {
    json return_PnAhhaY=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_vNHLzoZ;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rKpvWpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rKpvWpi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ASQjILX=0; ASQjILX < name["members"]["pNext"]["members"].size(); ASQjILX++){
            [&]() {
temp[ASQjILX]=deserialize_char(name["members"]["pNext"]["members"][ASQjILX]);}();;
        }
        }();temp_rKpvWpi=(void*)temp;
}();result.pNext=temp_rKpvWpi;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_ncVwEcK=json({});
    return_ncVwEcK=[&]() {
    json return_UVrNUDN=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_ncVwEcK;}();
result["members"]["dstAddress"]=[&]() {
    json return_XnmhcCF=json({});
    return_XnmhcCF=[&]() {
    json return_iUuPHqN=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_XnmhcCF;}();
result["members"]["compressedSize"]=[&]() {
    json return_raWpyAL=json({});
    return_raWpyAL=[&]() {
    json return_hCqEABx=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_raWpyAL;}();
result["members"]["decompressedSize"]=[&]() {
    json return_BTNuKcg=json({});
    return_BTNuKcg=[&]() {
    json return_sSEImFW=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_BTNuKcg;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_ERzbsAE=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_jWfQUab=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_rHjIWNd=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_SWUcpMS=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_StEXZBv=json({});
    return_StEXZBv=[&]() {
    json return_StBudgK=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_StEXZBv;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkVqlZq=json({});
    
        if (name.pNext==NULL){
            return_QkVqlZq["null"]=true;
            return return_QkVqlZq;
        }
        return_QkVqlZq=[&]() {
    json return_jaGYMMt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_jaGYMMt["null"]=true;
            return return_jaGYMMt;
        }
        
        return_jaGYMMt["members"]={};
        for(int jaGYMMt=0; jaGYMMt < strlen(((char*)(name.pNext)))+1; jaGYMMt++){
            json temp;
            temp=[&]() {
    json return_vucWmcI=json({});
    return serialize_char(((char*)(name.pNext))[jaGYMMt]);}();
            return_jaGYMMt["members"].push_back(temp);
        }
        return return_jaGYMMt;
        }();return return_QkVqlZq;}();
result["members"]["flags"]=[&]() {
    json return_pmahwiT=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_UVgIwTF=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_FhxTtlM=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_YmBbAyS=json({});
    
        if (name.pImages==NULL){
            return_YmBbAyS["null"]=true;
            return return_YmBbAyS;
        }
        
        return_YmBbAyS["members"]={};
        for(int YmBbAyS=0; YmBbAyS < name.imageCount; YmBbAyS++){
            json temp;
            temp=[&]() {
    json return_SmenMGS=json({});
    return serialize_VkImage(name.pImages[YmBbAyS]);}();
            return_YmBbAyS["members"].push_back(temp);
        }
        return return_YmBbAyS;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_jvivObc=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_UntyzaX=json({});
    
        if (name.pBuffers==NULL){
            return_UntyzaX["null"]=true;
            return return_UntyzaX;
        }
        
        return_UntyzaX["members"]={};
        for(int UntyzaX=0; UntyzaX < name.bufferCount; UntyzaX++){
            json temp;
            temp=[&]() {
    json return_fxEvBbB=json({});
    return serialize_VkBuffer(name.pBuffers[UntyzaX]);}();
            return_UntyzaX["members"].push_back(temp);
        }
        return return_UntyzaX;
        }();
result["members"]["tagName"]=[&]() {
    json return_pbydVZn=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_pSDtHKt=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_juXWmZN=json({});
    
        if (name.pTag==NULL){
            return_juXWmZN["null"]=true;
            return return_juXWmZN;
        }
        return_juXWmZN=[&]() {
    json return_ImIGScc=json({});
    
        if (((char*)(name.pTag))==NULL){
            return_ImIGScc["null"]=true;
            return return_ImIGScc;
        }
        
        return_ImIGScc["members"]={};
        for(int ImIGScc=0; ImIGScc < strlen(((char*)(name.pTag)))+1; ImIGScc++){
            json temp;
            temp=[&]() {
    json return_ogUkmBY=json({});
    return serialize_char(((char*)(name.pTag))[ImIGScc]);}();
            return_ImIGScc["members"].push_back(temp);
        }
        return return_ImIGScc;
        }();return return_juXWmZN;}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOnLiIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOnLiIL=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int yPIrNHj=0; yPIrNHj < name["members"]["pNext"]["members"].size(); yPIrNHj++){
            [&]() {
temp[yPIrNHj]=deserialize_char(name["members"]["pNext"]["members"][yPIrNHj]);}();;
        }
        }();temp_BOnLiIL=(void*)temp;
}();result.pNext=temp_BOnLiIL;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_mTxyrXV;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_mTxyrXV=NULL;
        return;
        }
    temp_mTxyrXV=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int hlUJSqq=0; hlUJSqq < result.imageCount; hlUJSqq++){
            [&]() {
temp_mTxyrXV[hlUJSqq]=deserialize_VkImage(name["members"]["pImages"]["members"][hlUJSqq]);}();;
        }
        }();result.pImages=temp_mTxyrXV;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_zvWbhPJ;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_zvWbhPJ=NULL;
        return;
        }
    temp_zvWbhPJ=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int yAeqfSz=0; yAeqfSz < result.bufferCount; yAeqfSz++){
            [&]() {
temp_zvWbhPJ[yAeqfSz]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][yAeqfSz]);}();;
        }
        }();result.pBuffers=temp_zvWbhPJ;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_osdFHPX;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_osdFHPX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pTag"]["members"].size()*sizeof(char));
        for (int FTLruKP=0; FTLruKP < name["members"]["pTag"]["members"].size(); FTLruKP++){
            [&]() {
temp[FTLruKP]=deserialize_char(name["members"]["pTag"]["members"][FTLruKP]);}();;
        }
        }();temp_osdFHPX=(void*)temp;
}();result.pTag=temp_osdFHPX;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["frameBoundary"]=[&]() {
    json return_LJOPHKY=json({});
    return_LJOPHKY=[&]() {
    json return_rzyOAaE=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_LJOPHKY;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHdHwdr=json({});
    
        if (name.pNext==NULL){
            return_HHdHwdr["null"]=true;
            return return_HHdHwdr;
        }
        return_HHdHwdr=[&]() {
    json return_LMzVXwE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LMzVXwE["null"]=true;
            return return_LMzVXwE;
        }
        
        return_LMzVXwE["members"]={};
        for(int LMzVXwE=0; LMzVXwE < strlen(((char*)(name.pNext)))+1; LMzVXwE++){
            json temp;
            temp=[&]() {
    json return_DRTKwys=json({});
    return serialize_char(((char*)(name.pNext))[LMzVXwE]);}();
            return_LMzVXwE["members"].push_back(temp);
        }
        return return_LMzVXwE;
        }();return return_HHdHwdr;}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_oRurcxD=json({});
    return_oRurcxD=[&]() {
    json return_akjZCTK=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_oRurcxD;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int UYJmhMR=0; UYJmhMR < name["members"]["pNext"]["members"].size(); UYJmhMR++){
            [&]() {
temp[UYJmhMR]=deserialize_char(name["members"]["pNext"]["members"][UYJmhMR]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["presentMode"]=[&]() {
    json return_rnYezzN=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ILZGytE=json({});
    
        if (name.pNext==NULL){
            return_ILZGytE["null"]=true;
            return return_ILZGytE;
        }
        return_ILZGytE=[&]() {
    json return_MklKjfA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MklKjfA["null"]=true;
            return return_MklKjfA;
        }
        
        return_MklKjfA["members"]={};
        for(int MklKjfA=0; MklKjfA < strlen(((char*)(name.pNext)))+1; MklKjfA++){
            json temp;
            temp=[&]() {
    json return_YMVEXPu=json({});
    return serialize_char(((char*)(name.pNext))[MklKjfA]);}();
            return_MklKjfA["members"].push_back(temp);
        }
        return return_MklKjfA;
        }();return return_ILZGytE;}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_cVSOAxH=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_boADsbh=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_VbhDjwj=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_yzYThOF=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_jeJQhsn=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kiiXcHb=0; kiiXcHb < name["members"]["pNext"]["members"].size(); kiiXcHb++){
            [&]() {
temp[kiiXcHb]=deserialize_char(name["members"]["pNext"]["members"][kiiXcHb]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYOWBxS=json({});
    
        if (name.pNext==NULL){
            return_RYOWBxS["null"]=true;
            return return_RYOWBxS;
        }
        return_RYOWBxS=[&]() {
    json return_hByJpGl=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hByJpGl["null"]=true;
            return return_hByJpGl;
        }
        
        return_hByJpGl["members"]={};
        for(int hByJpGl=0; hByJpGl < strlen(((char*)(name.pNext)))+1; hByJpGl++){
            json temp;
            temp=[&]() {
    json return_zOSmHzD=json({});
    return serialize_char(((char*)(name.pNext))[hByJpGl]);}();
            return_hByJpGl["members"].push_back(temp);
        }
        return return_hByJpGl;
        }();return return_RYOWBxS;}();
result["members"]["presentModeCount"]=[&]() {
    json return_YsEMUZc=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_uvxhrwA=json({});
    
        if (name.pPresentModes==NULL){
            return_uvxhrwA["null"]=true;
            return return_uvxhrwA;
        }
        
        return_uvxhrwA["members"]={};
        for(int uvxhrwA=0; uvxhrwA < name.presentModeCount; uvxhrwA++){
            json temp;
            temp=[&]() {
    json return_MWmekzg=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[uvxhrwA]);}();
            return_uvxhrwA["members"].push_back(temp);
        }
        return return_uvxhrwA;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sKmKhOn=0; sKmKhOn < name["members"]["pNext"]["members"].size(); sKmKhOn++){
            [&]() {
temp[sKmKhOn]=deserialize_char(name["members"]["pNext"]["members"][sKmKhOn]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        return;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int FmyyEYd=0; FmyyEYd < result.presentModeCount; FmyyEYd++){
            [&]() {
result.pPresentModes[FmyyEYd]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][FmyyEYd]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_mzInESL=json({});
    return_mzInESL=[&]() {
    json return_taBiTtI=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_mzInESL;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["swapchainCount"]=[&]() {
    json return_JrDtLcF=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_ExmOllB=json({});
    
        if (name.pFences==NULL){
            return_ExmOllB["null"]=true;
            return return_ExmOllB;
        }
        
        return_ExmOllB["members"]={};
        for(int ExmOllB=0; ExmOllB < name.swapchainCount; ExmOllB++){
            json temp;
            temp=[&]() {
    json return_EAvfSPi=json({});
    return serialize_VkFence(name.pFences[ExmOllB]);}();
            return_ExmOllB["members"].push_back(temp);
        }
        return return_ExmOllB;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_qIhEGRT;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_qIhEGRT=NULL;
        return;
        }
    temp_qIhEGRT=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int brVRHvi=0; brVRHvi < result.swapchainCount; brVRHvi++){
            [&]() {
temp_qIhEGRT[brVRHvi]=deserialize_VkFence(name["members"]["pFences"]["members"][brVRHvi]);}();;
        }
        }();result.pFences=temp_qIhEGRT;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["presentModeCount"]=[&]() {
    json return_hedjxbN=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_MNcYtTl=json({});
    
        if (name.pPresentModes==NULL){
            return_MNcYtTl["null"]=true;
            return return_MNcYtTl;
        }
        
        return_MNcYtTl["members"]={};
        for(int MNcYtTl=0; MNcYtTl < name.presentModeCount; MNcYtTl++){
            json temp;
            temp=[&]() {
    json return_xldNXZf=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[MNcYtTl]);}();
            return_MNcYtTl["members"].push_back(temp);
        }
        return return_MNcYtTl;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_dtOEFhq;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_dtOEFhq=NULL;
        return;
        }
    temp_dtOEFhq=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int BAFswCh=0; BAFswCh < result.presentModeCount; BAFswCh++){
            [&]() {
temp_dtOEFhq[BAFswCh]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][BAFswCh]);}();;
        }
        }();result.pPresentModes=temp_dtOEFhq;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EzOapuf=json({});
    
        if (name.pNext==NULL){
            return_EzOapuf["null"]=true;
            return return_EzOapuf;
        }
        return_EzOapuf=[&]() {
    json return_zteIbMs=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_zteIbMs["null"]=true;
            return return_zteIbMs;
        }
        
        return_zteIbMs["members"]={};
        for(int zteIbMs=0; zteIbMs < strlen(((char*)(name.pNext)))+1; zteIbMs++){
            json temp;
            temp=[&]() {
    json return_jwnnJne=json({});
    return serialize_char(((char*)(name.pNext))[zteIbMs]);}();
            return_zteIbMs["members"].push_back(temp);
        }
        return return_zteIbMs;
        }();return return_EzOapuf;}();
result["members"]["swapchainCount"]=[&]() {
    json return_JrDtLcF=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_EQZfvgC=json({});
    
        if (name.pPresentModes==NULL){
            return_EQZfvgC["null"]=true;
            return return_EQZfvgC;
        }
        
        return_EQZfvgC["members"]={};
        for(int EQZfvgC=0; EQZfvgC < name.swapchainCount; EQZfvgC++){
            json temp;
            temp=[&]() {
    json return_RENGrZP=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[EQZfvgC]);}();
            return_EQZfvgC["members"].push_back(temp);
        }
        return return_EQZfvgC;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pqdomxx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pqdomxx=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int YNRXBXy=0; YNRXBXy < name["members"]["pNext"]["members"].size(); YNRXBXy++){
            [&]() {
temp[YNRXBXy]=deserialize_char(name["members"]["pNext"]["members"][YNRXBXy]);}();;
        }
        }();temp_Pqdomxx=(void*)temp;
}();result.pNext=temp_Pqdomxx;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_MfhdEel;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_MfhdEel=NULL;
        return;
        }
    temp_MfhdEel=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int RaiPPWj=0; RaiPPWj < result.swapchainCount; RaiPPWj++){
            [&]() {
temp_MfhdEel[RaiPPWj]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][RaiPPWj]);}();;
        }
        }();result.pPresentModes=temp_MfhdEel;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkrTyoI=json({});
    
        if (name.pNext==NULL){
            return_dkrTyoI["null"]=true;
            return return_dkrTyoI;
        }
        return_dkrTyoI=[&]() {
    json return_HwomHKN=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HwomHKN["null"]=true;
            return return_HwomHKN;
        }
        
        return_HwomHKN["members"]={};
        for(int HwomHKN=0; HwomHKN < strlen(((char*)(name.pNext)))+1; HwomHKN++){
            json temp;
            temp=[&]() {
    json return_kNuhIKz=json({});
    return serialize_char(((char*)(name.pNext))[HwomHKN]);}();
            return_HwomHKN["members"].push_back(temp);
        }
        return return_HwomHKN;
        }();return return_dkrTyoI;}();
result["members"]["scalingBehavior"]=[&]() {
    json return_HBEswJb=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_jpsNCyp=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_UYUEytN=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBAOmYt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBAOmYt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RRrHqsk=0; RRrHqsk < name["members"]["pNext"]["members"].size(); RRrHqsk++){
            [&]() {
temp[RRrHqsk]=deserialize_char(name["members"]["pNext"]["members"][RRrHqsk]);}();;
        }
        }();temp_VBAOmYt=(void*)temp;
}();result.pNext=temp_VBAOmYt;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkrTyoI=json({});
    
        if (name.pNext==NULL){
            return_dkrTyoI["null"]=true;
            return return_dkrTyoI;
        }
        return_dkrTyoI=[&]() {
    json return_HwomHKN=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HwomHKN["null"]=true;
            return return_HwomHKN;
        }
        
        return_HwomHKN["members"]={};
        for(int HwomHKN=0; HwomHKN < strlen(((char*)(name.pNext)))+1; HwomHKN++){
            json temp;
            temp=[&]() {
    json return_kNuhIKz=json({});
    return serialize_char(((char*)(name.pNext))[HwomHKN]);}();
            return_HwomHKN["members"].push_back(temp);
        }
        return return_HwomHKN;
        }();return return_dkrTyoI;}();
result["members"]["swapchain"]=[&]() {
    json return_WpHrSgm=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_kEIFhxW=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_kIINvTN=json({});
    
        if (name.pImageIndices==NULL){
            return_kIINvTN["null"]=true;
            return return_kIINvTN;
        }
        
        return_kIINvTN["members"]={};
        for(int kIINvTN=0; kIINvTN < name.imageIndexCount; kIINvTN++){
            json temp;
            temp=[&]() {
    json return_meNfHbO=json({});
    return serialize_uint32_t(name.pImageIndices[kIINvTN]);}();
            return_kIINvTN["members"].push_back(temp);
        }
        return return_kIINvTN;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBAOmYt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBAOmYt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RRrHqsk=0; RRrHqsk < name["members"]["pNext"]["members"].size(); RRrHqsk++){
            [&]() {
temp[RRrHqsk]=deserialize_char(name["members"]["pNext"]["members"][RRrHqsk]);}();;
        }
        }();temp_VBAOmYt=(void*)temp;
}();result.pNext=temp_VBAOmYt;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_EqHArWs;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_EqHArWs=NULL;
        return;
        }
    temp_EqHArWs=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int roqNGmq=0; roqNGmq < result.imageIndexCount; roqNGmq++){
            [&]() {
temp_EqHArWs[roqNGmq]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][roqNGmq]);}();;
        }
        }();result.pImageIndices=temp_EqHArWs;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["depthBiasControl"]=[&]() {
    json return_oJcIJWO=json({});
    return_oJcIJWO=[&]() {
    json return_bYFTSfw=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_oJcIJWO;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_qGyQwQj=json({});
    return_qGyQwQj=[&]() {
    json return_tscXfFr=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_qGyQwQj;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_YHDTLuX=json({});
    return_YHDTLuX=[&]() {
    json return_VkWLmpF=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_YHDTLuX;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_vNHLzoZ=json({});
    return_vNHLzoZ=[&]() {
    json return_PnAhhaY=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_vNHLzoZ;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IWbgTku=json({});
    
        if (name.pNext==NULL){
            return_IWbgTku["null"]=true;
            return return_IWbgTku;
        }
        return_IWbgTku=[&]() {
    json return_VVzrTxc=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_VVzrTxc["null"]=true;
            return return_VVzrTxc;
        }
        
        return_VVzrTxc["members"]={};
        for(int VVzrTxc=0; VVzrTxc < strlen(((char*)(name.pNext)))+1; VVzrTxc++){
            json temp;
            temp=[&]() {
    json return_nTiUyji=json({});
    return serialize_char(((char*)(name.pNext))[VVzrTxc]);}();
            return_VVzrTxc["members"].push_back(temp);
        }
        return return_VVzrTxc;
        }();return return_IWbgTku;}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_seRYjjP=json({});
    return_seRYjjP=[&]() {
    json return_elRAHKQ=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_seRYjjP;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int OKkmuQS=0; OKkmuQS < name["members"]["pNext"]["members"].size(); OKkmuQS++){
            [&]() {
temp[OKkmuQS]=deserialize_char(name["members"]["pNext"]["members"][OKkmuQS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QkLalKs=json({});
    
        if (name.pNext==NULL){
            return_QkLalKs["null"]=true;
            return return_QkLalKs;
        }
        return_QkLalKs=[&]() {
    json return_ADDANKp=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_ADDANKp["null"]=true;
            return return_ADDANKp;
        }
        
        return_ADDANKp["members"]={};
        for(int ADDANKp=0; ADDANKp < strlen(((char*)(name.pNext)))+1; ADDANKp++){
            json temp;
            temp=[&]() {
    json return_jjiMkmX=json({});
    return serialize_char(((char*)(name.pNext))[ADDANKp]);}();
            return_ADDANKp["members"].push_back(temp);
        }
        return return_ADDANKp;
        }();return return_QkLalKs;}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_HtLABdu=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int FoFGpmG=0; FoFGpmG < name["members"]["pNext"]["members"].size(); FoFGpmG++){
            [&]() {
temp[FoFGpmG]=deserialize_char(name["members"]["pNext"]["members"][FoFGpmG]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUmGQDi=json({});
    
        if (name.pNext==NULL){
            return_RUmGQDi["null"]=true;
            return return_RUmGQDi;
        }
        return_RUmGQDi=[&]() {
    json return_iUMONij=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_iUMONij["null"]=true;
            return return_iUMONij;
        }
        
        return_iUMONij["members"]={};
        for(int iUMONij=0; iUMONij < strlen(((char*)(name.pNext)))+1; iUMONij++){
            json temp;
            temp=[&]() {
    json return_jKBjTOw=json({});
    return serialize_char(((char*)(name.pNext))[iUMONij]);}();
            return_iUMONij["members"].push_back(temp);
        }
        return return_iUMONij;
        }();return return_RUmGQDi;}();
result["members"]["flags"]=[&]() {
    json return_ctuwgfn=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_OsnjIbm=json({});
    return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);}();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iDKuMMl=0; iDKuMMl < name["members"]["pNext"]["members"].size(); iDKuMMl++){
            [&]() {
temp[iDKuMMl]=deserialize_char(name["members"]["pNext"]["members"][iDKuMMl]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PDsRnKJ=json({});
    
        if (name.pNext==NULL){
            return_PDsRnKJ["null"]=true;
            return return_PDsRnKJ;
        }
        return_PDsRnKJ=[&]() {
    json return_hlKaMUa=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_hlKaMUa["null"]=true;
            return return_hlKaMUa;
        }
        
        return_hlKaMUa["members"]={};
        for(int hlKaMUa=0; hlKaMUa < strlen(((char*)(name.pNext)))+1; hlKaMUa++){
            json temp;
            temp=[&]() {
    json return_onYiYtv=json({});
    return serialize_char(((char*)(name.pNext))[hlKaMUa]);}();
            return_hlKaMUa["members"].push_back(temp);
        }
        return return_hlKaMUa;
        }();return return_PDsRnKJ;}();
result["members"]["mode"]=[&]() {
    json return_UbPihSw=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_PssMzqG=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_biYAPDP=json({});
    
        if (name.pDrivers==NULL){
            return_biYAPDP["null"]=true;
            return return_biYAPDP;
        }
        
        return_biYAPDP["members"]={};
        for(int biYAPDP=0; biYAPDP < name.driverCount; biYAPDP++){
            json temp;
            temp=[&]() {
    json return_CFPTfEB=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[biYAPDP]);}();
            return_biYAPDP["members"].push_back(temp);
        }
        return return_biYAPDP;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int VkHsbvD=0; VkHsbvD < name["members"]["pNext"]["members"].size(); VkHsbvD++){
            [&]() {
temp[VkHsbvD]=deserialize_char(name["members"]["pNext"]["members"][VkHsbvD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_RzZwJvX;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_RzZwJvX=NULL;
        return;
        }
    temp_RzZwJvX=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int mntwWlP=0; mntwWlP < result.driverCount; mntwWlP++){
            [&]() {
temp_RzZwJvX[mntwWlP]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][mntwWlP]);}();;
        }
        }();result.pDrivers=temp_RzZwJvX;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_jhpOtoG=json({});
    return_jhpOtoG=[&]() {
    json return_ILofBTD=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_jhpOtoG;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_IfqovBc=json({});
    return_IfqovBc=[&]() {
    json return_alzQWoQ=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_IfqovBc;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmAFwZb=json({});
    
        if (name.pNext==NULL){
            return_vmAFwZb["null"]=true;
            return return_vmAFwZb;
        }
        return_vmAFwZb=[&]() {
    json return_SaCCuQS=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_SaCCuQS["null"]=true;
            return return_SaCCuQS;
        }
        
        return_SaCCuQS["members"]={};
        for(int SaCCuQS=0; SaCCuQS < strlen(((char*)(name.pNext)))+1; SaCCuQS++){
            json temp;
            temp=[&]() {
    json return_tKWDhbh=json({});
    return serialize_char(((char*)(name.pNext))[SaCCuQS]);}();
            return_SaCCuQS["members"].push_back(temp);
        }
        return return_SaCCuQS;
        }();return return_vmAFwZb;}();
result["members"]["pCreateInfo"]=[&]() {
    json return_IUrMHJR=json({});
    
        if (name.pCreateInfo==NULL){
            return_IUrMHJR["null"]=true;
            return return_IUrMHJR;
        }
        return_IUrMHJR=[&]() {
    json return_bziWbtH=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_IUrMHJR;}();
result["members"]["pSubresource"]=[&]() {
    json return_WuvvYyM=json({});
    
        if (name.pSubresource==NULL){
            return_WuvvYyM["null"]=true;
            return return_WuvvYyM;
        }
        return_WuvvYyM=[&]() {
    json return_RWqvndZ=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_WuvvYyM;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WQLvfWf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WQLvfWf=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int iRVYrIE=0; iRVYrIE < name["members"]["pNext"]["members"].size(); iRVYrIE++){
            [&]() {
temp[iRVYrIE]=deserialize_char(name["members"]["pNext"]["members"][iRVYrIE]);}();;
        }
        }();temp_WQLvfWf=(void*)temp;
}();result.pNext=temp_WQLvfWf;}();
[&]() {
VkImageCreateInfo* temp_sVUFqhS;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_sVUFqhS=NULL;
        return;
        }
    temp_sVUFqhS=(VkImageCreateInfo*)malloc(sizeof(VkImageCreateInfo));
[&]() {
*(temp_sVUFqhS)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_sVUFqhS;}();
[&]() {
VkImageSubresource2KHR* temp_ABBQaBg;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_ABBQaBg=NULL;
        return;
        }
    temp_ABBQaBg=(VkImageSubresource2KHR*)malloc(sizeof(VkImageSubresource2KHR));
[&]() {
*(temp_ABBQaBg)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_ABBQaBg;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AUzQemx=json({});
    
        if (name.pNext==NULL){
            return_AUzQemx["null"]=true;
            return return_AUzQemx;
        }
        return_AUzQemx=[&]() {
    json return_mDIroCt=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_mDIroCt["null"]=true;
            return return_mDIroCt;
        }
        
        return_mDIroCt["members"]={};
        for(int mDIroCt=0; mDIroCt < strlen(((char*)(name.pNext)))+1; mDIroCt++){
            json temp;
            temp=[&]() {
    json return_Riekxgn=json({});
    return serialize_char(((char*)(name.pNext))[mDIroCt]);}();
            return_mDIroCt["members"].push_back(temp);
        }
        return return_mDIroCt;
        }();return return_AUzQemx;}();
result["members"]["pixelRate"]=[&]() {
    json return_nrCaJci=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_BEMEJGo=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_ZbmntRm=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RzJZikE=0; RzJZikE < name["members"]["pNext"]["members"].size(); RzJZikE++){
            [&]() {
temp[RzJZikE]=deserialize_char(name["members"]["pNext"]["members"][RzJZikE]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_tmUYKdG=json({});
    return_tmUYKdG=[&]() {
    json return_orfHOwv=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_tmUYKdG;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_blrjCfs=json({});
    
        if (name.pNext==NULL){
            return_blrjCfs["null"]=true;
            return return_blrjCfs;
        }
        return_blrjCfs=[&]() {
    json return_HLJxZkA=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HLJxZkA["null"]=true;
            return return_HLJxZkA;
        }
        
        return_HLJxZkA["members"]={};
        for(int HLJxZkA=0; HLJxZkA < strlen(((char*)(name.pNext)))+1; HLJxZkA++){
            json temp;
            temp=[&]() {
    json return_UzBGJSH=json({});
    return serialize_char(((char*)(name.pNext))[HLJxZkA]);}();
            return_HLJxZkA["members"].push_back(temp);
        }
        return return_HLJxZkA;
        }();return return_blrjCfs;}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_uPNNfrJ=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_eMMGVUx=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_eMMGVUx["null"]=true;
            return return_eMMGVUx;
        }
        
        return_eMMGVUx["members"]={};
        for(int eMMGVUx=0; eMMGVUx < name.perViewRenderAreaCount; eMMGVUx++){
            json temp;
            temp=[&]() {
    json return_lwgKBew=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[eMMGVUx]);}();
            return_eMMGVUx["members"].push_back(temp);
        }
        return return_eMMGVUx;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HPQLPrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HPQLPrg=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int mqQpGAK=0; mqQpGAK < name["members"]["pNext"]["members"].size(); mqQpGAK++){
            [&]() {
temp[mqQpGAK]=deserialize_char(name["members"]["pNext"]["members"][mqQpGAK]);}();;
        }
        }();temp_HPQLPrg=(void*)temp;
}();result.pNext=temp_HPQLPrg;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_oTSGtMh;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_oTSGtMh=NULL;
        return;
        }
    temp_oTSGtMh=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int IKYuxBr=0; IKYuxBr < result.perViewRenderAreaCount; IKYuxBr++){
            [&]() {
temp_oTSGtMh[IKYuxBr]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][IKYuxBr]);}();;
        }
        }();result.pPerViewRenderAreas=temp_oTSGtMh;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mHObuRU=json({});
    
        if (name.pNext==NULL){
            return_mHObuRU["null"]=true;
            return return_mHObuRU;
        }
        return_mHObuRU=[&]() {
    json return_BSnhWHz=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_BSnhWHz["null"]=true;
            return return_BSnhWHz;
        }
        
        return_BSnhWHz["members"]={};
        for(int BSnhWHz=0; BSnhWHz < strlen(((char*)(name.pNext)))+1; BSnhWHz++){
            json temp;
            temp=[&]() {
    json return_nERznot=json({});
    return serialize_char(((char*)(name.pNext))[BSnhWHz]);}();
            return_BSnhWHz["members"].push_back(temp);
        }
        return return_BSnhWHz;
        }();return return_mHObuRU;}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_iuRJEgD=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_iuRJEgD["null"]=true;
            return return_iuRJEgD;
        }
        return_iuRJEgD=[&]() {
    json return_pmpJbAK=json({});
    
        if (((char*)(name.pQueriedLowLatencyData))==NULL){
            return_pmpJbAK["null"]=true;
            return return_pmpJbAK;
        }
        
        return_pmpJbAK["members"]={};
        for(int pmpJbAK=0; pmpJbAK < strlen(((char*)(name.pQueriedLowLatencyData)))+1; pmpJbAK++){
            json temp;
            temp=[&]() {
    json return_DsUsXDp=json({});
    return serialize_char(((char*)(name.pQueriedLowLatencyData))[pmpJbAK]);}();
            return_pmpJbAK["members"].push_back(temp);
        }
        return return_pmpJbAK;
        }();return return_iuRJEgD;}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJwVPQi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJwVPQi=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int uYAMLtE=0; uYAMLtE < name["members"]["pNext"]["members"].size(); uYAMLtE++){
            [&]() {
temp[uYAMLtE]=deserialize_char(name["members"]["pNext"]["members"][uYAMLtE]);}();;
        }
        }();temp_WJwVPQi=(void*)temp;
}();result.pNext=temp_WJwVPQi;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pQueriedLowLatencyData"]["members"].size()*sizeof(char));
        for (int suPkpss=0; suPkpss < name["members"]["pQueriedLowLatencyData"]["members"].size(); suPkpss++){
            [&]() {
temp[suPkpss]=deserialize_char(name["members"]["pQueriedLowLatencyData"]["members"][suPkpss]);}();;
        }
        }();result.pQueriedLowLatencyData=(void*)temp;
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["flags"]=[&]() {
    json return_GcIkuFg=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_cTrpjWa=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_WLrqbBF=json({});
    return_WLrqbBF=[&]() {
    json return_fVAHfne=json({});
    return serialize_uint64_t(name.offset);}();return return_WLrqbBF;}();
result["members"]["size"]=[&]() {
    json return_wPIIxYr=json({});
    return_wPIIxYr=[&]() {
    json return_MhTlZty=json({});
    return serialize_uint64_t(name.size);}();return return_wPIIxYr;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBZnaFx=json({});
    
        if (name.pNext==NULL){
            return_OBZnaFx["null"]=true;
            return return_OBZnaFx;
        }
        return_OBZnaFx=[&]() {
    json return_vdrriXD=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_vdrriXD["null"]=true;
            return return_vdrriXD;
        }
        
        return_vdrriXD["members"]={};
        for(int vdrriXD=0; vdrriXD < strlen(((char*)(name.pNext)))+1; vdrriXD++){
            json temp;
            temp=[&]() {
    json return_eBYaBVT=json({});
    return serialize_char(((char*)(name.pNext))[vdrriXD]);}();
            return_vdrriXD["members"].push_back(temp);
        }
        return return_vdrriXD;
        }();return return_OBZnaFx;}();
result["members"]["flags"]=[&]() {
    json return_DxjVTzF=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_VtdjVpi=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oEiJnWX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oEiJnWX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int XfVRDPx=0; XfVRDPx < name["members"]["pNext"]["members"].size(); XfVRDPx++){
            [&]() {
temp[XfVRDPx]=deserialize_char(name["members"]["pNext"]["members"][XfVRDPx]);}();;
        }
        }();temp_oEiJnWX=(void*)temp;
}();result.pNext=temp_oEiJnWX;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HwdAAZR=json({});
    
        if (name.pNext==NULL){
            return_HwdAAZR["null"]=true;
            return return_HwdAAZR;
        }
        return_HwdAAZR=[&]() {
    json return_qrsQwZl=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_qrsQwZl["null"]=true;
            return return_qrsQwZl;
        }
        
        return_qrsQwZl["members"]={};
        for(int qrsQwZl=0; qrsQwZl < strlen(((char*)(name.pNext)))+1; qrsQwZl++){
            json temp;
            temp=[&]() {
    json return_XGoKtAF=json({});
    return serialize_char(((char*)(name.pNext))[qrsQwZl]);}();
            return_qrsQwZl["members"].push_back(temp);
        }
        return return_qrsQwZl;
        }();return return_HwdAAZR;}();
result["members"]["shaderObject"]=[&]() {
    json return_EOuaLbS=json({});
    return_EOuaLbS=[&]() {
    json return_BdFLSAT=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_EOuaLbS;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int EuYCLtQ=0; EuYCLtQ < name["members"]["pNext"]["members"].size(); EuYCLtQ++){
            [&]() {
temp[EuYCLtQ]=deserialize_char(name["members"]["pNext"]["members"][EuYCLtQ]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qGTHgst=json({});
    
        if (name.pNext==NULL){
            return_qGTHgst["null"]=true;
            return return_qGTHgst;
        }
        return_qGTHgst=[&]() {
    json return_NOHcLvZ=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_NOHcLvZ["null"]=true;
            return return_NOHcLvZ;
        }
        
        return_NOHcLvZ["members"]={};
        for(int NOHcLvZ=0; NOHcLvZ < strlen(((char*)(name.pNext)))+1; NOHcLvZ++){
            json temp;
            temp=[&]() {
    json return_cJzFexl=json({});
    return serialize_char(((char*)(name.pNext))[NOHcLvZ]);}();
            return_NOHcLvZ["members"].push_back(temp);
        }
        return return_NOHcLvZ;
        }();return return_qGTHgst;}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_phrwzWJ=json({});
    
        return_phrwzWJ["members"]={};
        for(int phrwzWJ=0; phrwzWJ < VK_UUID_SIZE; phrwzWJ++){
            json temp;
            temp=[&]() {
    json return_KSMnuKX=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[phrwzWJ]);}();
            return_phrwzWJ["members"].push_back(temp);
        }
        return return_phrwzWJ;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_pCFrgcQ=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int xYFdAfs=0; xYFdAfs < name["members"]["pNext"]["members"].size(); xYFdAfs++){
            [&]() {
temp[xYFdAfs]=deserialize_char(name["members"]["pNext"]["members"][xYFdAfs]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {

        for (int sDuQsQc=0; sDuQsQc < VK_UUID_SIZE; sDuQsQc++){
            [&]() {
result.shaderBinaryUUID[sDuQsQc]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][sDuQsQc]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRIcJpU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EJodExn=json({});
    
        if (name.pNext==NULL){
            return_EJodExn["null"]=true;
            return return_EJodExn;
        }
        return_EJodExn=[&]() {
    json return_DuYkTid=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_DuYkTid["null"]=true;
            return return_DuYkTid;
        }
        
        return_DuYkTid["members"]={};
        for(int DuYkTid=0; DuYkTid < strlen(((char*)(name.pNext)))+1; DuYkTid++){
            json temp;
            temp=[&]() {
    json return_lzqnZOX=json({});
    return serialize_char(((char*)(name.pNext))[DuYkTid]);}();
            return_DuYkTid["members"].push_back(temp);
        }
        return return_DuYkTid;
        }();return return_EJodExn;}();
result["members"]["flags"]=[&]() {
    json return_wjwJRps=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_xgkPPLY=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_DzKyMzr=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_nWMcTuz=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_TtoNvaV=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_hdhuQvZ=json({});
    
        if (name.pCode==NULL){
            return_hdhuQvZ["null"]=true;
            return return_hdhuQvZ;
        }
        return_hdhuQvZ=[&]() {
    json return_ItRrAea=json({});
    
        if (((char*)(name.pCode))==NULL){
            return_ItRrAea["null"]=true;
            return return_ItRrAea;
        }
        
        return_ItRrAea["members"]={};
        for(int ItRrAea=0; ItRrAea < name.codeSize; ItRrAea++){
            json temp;
            temp=[&]() {
    json return_GZJmECI=json({});
    return serialize_char(((char*)(name.pCode))[ItRrAea]);}();
            return_ItRrAea["members"].push_back(temp);
        }
        return return_ItRrAea;
        }();return return_hdhuQvZ;}();
result["members"]["pName"]=[&]() {
    json return_kSZCtHR=json({});
    
        if (name.pName==NULL){
            return_kSZCtHR["null"]=true;
            return return_kSZCtHR;
        }
        
        return_kSZCtHR["members"]={};
        for(int kSZCtHR=0; kSZCtHR < strlen(name.pName)+1; kSZCtHR++){
            json temp;
            temp=[&]() {
    json return_aXTWYrb=json({});
    return serialize_char(name.pName[kSZCtHR]);}();
            return_kSZCtHR["members"].push_back(temp);
        }
        return return_kSZCtHR;
        }();
result["members"]["setLayoutCount"]=[&]() {
    json return_vCgTBRu=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_FRrOUGv=json({});
    
        if (name.pSetLayouts==NULL){
            return_FRrOUGv["null"]=true;
            return return_FRrOUGv;
        }
        
        return_FRrOUGv["members"]={};
        for(int FRrOUGv=0; FRrOUGv < name.setLayoutCount; FRrOUGv++){
            json temp;
            temp=[&]() {
    json return_ipgQVRy=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[FRrOUGv]);}();
            return_FRrOUGv["members"].push_back(temp);
        }
        return return_FRrOUGv;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_BCBpPYB=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_budvQJQ=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_budvQJQ["null"]=true;
            return return_budvQJQ;
        }
        
        return_budvQJQ["members"]={};
        for(int budvQJQ=0; budvQJQ < name.pushConstantRangeCount; budvQJQ++){
            json temp;
            temp=[&]() {
    json return_qYMnilL=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[budvQJQ]);}();
            return_budvQJQ["members"].push_back(temp);
        }
        return return_budvQJQ;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_CTYlWJD=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_CTYlWJD["null"]=true;
            return return_CTYlWJD;
        }
        return_CTYlWJD=[&]() {
    json return_rgOreic=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_CTYlWJD;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ORQkGkt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ORQkGkt=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int wtSINMt=0; wtSINMt < name["members"]["pNext"]["members"].size(); wtSINMt++){
            [&]() {
temp[wtSINMt]=deserialize_char(name["members"]["pNext"]["members"][wtSINMt]);}();;
        }
        }();temp_ORQkGkt=(void*)temp;
}();result.pNext=temp_ORQkGkt;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_HYQDOmX;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_HYQDOmX=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(result.codeSize*sizeof(char));
        for (int bPOOznP=0; bPOOznP < result.codeSize; bPOOznP++){
            [&]() {
temp[bPOOznP]=deserialize_char(name["members"]["pCode"]["members"][bPOOznP]);}();;
        }
        }();temp_HYQDOmX=(void*)temp;
}();result.pCode=temp_HYQDOmX;}();
[&]() {
char* temp_TWxpuLh;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_TWxpuLh=NULL;
        return;
        }
    temp_TWxpuLh=(char*)malloc(name["members"]["pName"]["members"].size()*sizeof(char));
        for (int EeyoVnX=0; EeyoVnX < name["members"]["pName"]["members"].size(); EeyoVnX++){
            [&]() {
temp_TWxpuLh[EeyoVnX]=deserialize_char(name["members"]["pName"]["members"][EeyoVnX]);}();;
        }
        }();result.pName=temp_TWxpuLh;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_LRNXTvg;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_LRNXTvg=NULL;
        return;
        }
    temp_LRNXTvg=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int pxvxLVa=0; pxvxLVa < result.setLayoutCount; pxvxLVa++){
            [&]() {
temp_LRNXTvg[pxvxLVa]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][pxvxLVa]);}();;
        }
        }();result.pSetLayouts=temp_LRNXTvg;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_JXujaaV;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_JXujaaV=NULL;
        return;
        }
    temp_JXujaaV=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int frupLaJ=0; frupLaJ < result.pushConstantRangeCount; frupLaJ++){
            [&]() {
temp_JXujaaV[frupLaJ]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][frupLaJ]);}();;
        }
        }();result.pPushConstantRanges=temp_JXujaaV;}();
[&]() {
VkSpecializationInfo* temp_JZtOoDo;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_JZtOoDo=NULL;
        return;
        }
    temp_JZtOoDo=(VkSpecializationInfo*)malloc(sizeof(VkSpecializationInfo));
[&]() {
*(temp_JZtOoDo)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_JZtOoDo;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_vdPBpoH=json({});
    return_vdPBpoH=[&]() {
    json return_XjkemVm=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_vdPBpoH;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_jLshdGB=json({});
    return_jLshdGB=[&]() {
    json return_sFnVXpW=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_jLshdGB;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_snBoVIi=json({});
    return_snBoVIi=[&]() {
    json return_IlcXAuV=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_snBoVIi;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_rLLxYaL=json({});
    return_rLLxYaL=[&]() {
    json return_bgqTABr=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_rLLxYaL;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_XMzrxtf=json({});
    return_XMzrxtf=[&]() {
    json return_NloJtcD=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_XMzrxtf;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_YHIKnVJ=json({});
    return_YHIKnVJ=[&]() {
    json return_rPnqOPR=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_YHIKnVJ;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDSWZOL=json({});
    
        if (name.pNext==NULL){
            return_cDSWZOL["null"]=true;
            return return_cDSWZOL;
        }
        return_cDSWZOL=[&]() {
    json return_TKZgOGe=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_TKZgOGe["null"]=true;
            return return_TKZgOGe;
        }
        
        return_TKZgOGe["members"]={};
        for(int TKZgOGe=0; TKZgOGe < strlen(((char*)(name.pNext)))+1; TKZgOGe++){
            json temp;
            temp=[&]() {
    json return_vKaymkQ=json({});
    return serialize_char(((char*)(name.pNext))[TKZgOGe]);}();
            return_TKZgOGe["members"].push_back(temp);
        }
        return return_TKZgOGe;
        }();return return_cDSWZOL;}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_dSMDcNF=json({});
    return_dSMDcNF=[&]() {
    json return_IbgxVzj=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_dSMDcNF;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_dLOzjiL=json({});
    return_dLOzjiL=[&]() {
    json return_vvanVmQ=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_dLOzjiL;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int RflsJpr=0; RflsJpr < name["members"]["pNext"]["members"].size(); RflsJpr++){
            [&]() {
temp[RflsJpr]=deserialize_char(name["members"]["pNext"]["members"][RflsJpr]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["MSize"]=[&]() {
    json return_lMoHGYH=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_COzCYfI=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_CUWCazn=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_eFQNwSd=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_Fakiqdm=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_GDrIZrP=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_SffXqjL=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_kjVfwXH=json({});
    return_kjVfwXH=[&]() {
    json return_FOTCXHA=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_kjVfwXH;}();
result["members"]["scope"]=[&]() {
    json return_TddcgQR=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTCvips=json({});
    
        if (name.pNext==NULL){
            return_VTCvips["null"]=true;
            return return_VTCvips;
        }
        return_VTCvips=[&]() {
    json return_envrzLP=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_envrzLP["null"]=true;
            return return_envrzLP;
        }
        
        return_envrzLP["members"]={};
        for(int envrzLP=0; envrzLP < strlen(((char*)(name.pNext)))+1; envrzLP++){
            json temp;
            temp=[&]() {
    json return_bIHwLEY=json({});
    return serialize_char(((char*)(name.pNext))[envrzLP]);}();
            return_envrzLP["members"].push_back(temp);
        }
        return return_envrzLP;
        }();return return_VTCvips;}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_fjIhNsh=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int JXSHXlV=0; JXSHXlV < name["members"]["pNext"]["members"].size(); JXSHXlV++){
            [&]() {
temp[JXSHXlV]=deserialize_char(name["members"]["pNext"]["members"][JXSHXlV]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_SaWjQhc=json({});
    return_SaWjQhc=[&]() {
    json return_cLCrYkn=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_SaWjQhc;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utdeRas=json({});
    
        if (name.pNext==NULL){
            return_utdeRas["null"]=true;
            return return_utdeRas;
        }
        return_utdeRas=[&]() {
    json return_HTvJxwI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_HTvJxwI["null"]=true;
            return return_HTvJxwI;
        }
        
        return_HTvJxwI["members"]={};
        for(int HTvJxwI=0; HTvJxwI < strlen(((char*)(name.pNext)))+1; HTvJxwI++){
            json temp;
            temp=[&]() {
    json return_UtdlQJE=json({});
    return serialize_char(((char*)(name.pNext))[HTvJxwI]);}();
            return_HTvJxwI["members"].push_back(temp);
        }
        return return_HTvJxwI;
        }();return return_utdeRas;}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_ZzqHFWh=json({});
    return_ZzqHFWh=[&]() {
    json return_drTeJgp=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_ZzqHFWh;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int tQwdmnK=0; tQwdmnK < name["members"]["pNext"]["members"].size(); tQwdmnK++){
            [&]() {
temp[tQwdmnK]=deserialize_char(name["members"]["pNext"]["members"][tQwdmnK]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSPxUdN=json({});
    
        if (name.pNext==NULL){
            return_qSPxUdN["null"]=true;
            return return_qSPxUdN;
        }
        return_qSPxUdN=[&]() {
    json return_MLeWUnI=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_MLeWUnI["null"]=true;
            return return_MLeWUnI;
        }
        
        return_MLeWUnI["members"]={};
        for(int MLeWUnI=0; MLeWUnI < strlen(((char*)(name.pNext)))+1; MLeWUnI++){
            json temp;
            temp=[&]() {
    json return_CttfuGI=json({});
    return serialize_char(((char*)(name.pNext))[MLeWUnI]);}();
            return_MLeWUnI["members"].push_back(temp);
        }
        return return_MLeWUnI;
        }();return return_qSPxUdN;}();
result["members"]["enableYDegamma"]=[&]() {
    json return_SsSwExv=json({});
    return_SsSwExv=[&]() {
    json return_WSimVKm=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_SsSwExv;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_HOAUJcs=json({});
    return_HOAUJcs=[&]() {
    json return_fvbDcuc=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_HOAUJcs;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int jheBiPD=0; jheBiPD < name["members"]["pNext"]["members"].size(); jheBiPD++){
            [&]() {
temp[jheBiPD]=deserialize_char(name["members"]["pNext"]["members"][jheBiPD]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klMSyRl=json({});
    
        if (name.pNext==NULL){
            return_klMSyRl["null"]=true;
            return return_klMSyRl;
        }
        return_klMSyRl=[&]() {
    json return_IjXjCjG=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_IjXjCjG["null"]=true;
            return return_IjXjCjG;
        }
        
        return_IjXjCjG["members"]={};
        for(int IjXjCjG=0; IjXjCjG < strlen(((char*)(name.pNext)))+1; IjXjCjG++){
            json temp;
            temp=[&]() {
    json return_tIlAozv=json({});
    return serialize_char(((char*)(name.pNext))[IjXjCjG]);}();
            return_IjXjCjG["members"].push_back(temp);
        }
        return return_IjXjCjG;
        }();return return_klMSyRl;}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_QJPAunv=json({});
    return_QJPAunv=[&]() {
    json return_uUzuwKD=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_QJPAunv;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int dePiXNt=0; dePiXNt < name["members"]["pNext"]["members"].size(); dePiXNt++){
            [&]() {
temp[dePiXNt]=deserialize_char(name["members"]["pNext"]["members"][dePiXNt]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["cubicWeights"]=[&]() {
    json return_VxPApvx=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AImwkxO=json({});
    
        if (name.pNext==NULL){
            return_AImwkxO["null"]=true;
            return return_AImwkxO;
        }
        return_AImwkxO=[&]() {
    json return_cJJSNOb=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_cJJSNOb["null"]=true;
            return return_cJJSNOb;
        }
        
        return_cJJSNOb["members"]={};
        for(int cJJSNOb=0; cJJSNOb < strlen(((char*)(name.pNext)))+1; cJJSNOb++){
            json temp;
            temp=[&]() {
    json return_JzTcWlY=json({});
    return serialize_char(((char*)(name.pNext))[cJJSNOb]);}();
            return_cJJSNOb["members"].push_back(temp);
        }
        return return_cJJSNOb;
        }();return return_AImwkxO;}();
result["members"]["cubicWeights"]=[&]() {
    json return_VxPApvx=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hwqRCnl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hwqRCnl=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int ggXCSdi=0; ggXCSdi < name["members"]["pNext"]["members"].size(); ggXCSdi++){
            [&]() {
temp[ggXCSdi]=deserialize_char(name["members"]["pNext"]["members"][ggXCSdi]);}();;
        }
        }();temp_hwqRCnl=(void*)temp;
}();result.pNext=temp_hwqRCnl;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zyqIzWU=json({});
    
        if (name.pNext==NULL){
            return_zyqIzWU["null"]=true;
            return return_zyqIzWU;
        }
        return_zyqIzWU=[&]() {
    json return_tjJmLHi=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_tjJmLHi["null"]=true;
            return return_tjJmLHi;
        }
        
        return_tjJmLHi["members"]={};
        for(int tjJmLHi=0; tjJmLHi < strlen(((char*)(name.pNext)))+1; tjJmLHi++){
            json temp;
            temp=[&]() {
    json return_vzPYEMV=json({});
    return serialize_char(((char*)(name.pNext))[tjJmLHi]);}();
            return_tjJmLHi["members"].push_back(temp);
        }
        return return_tjJmLHi;
        }();return return_zyqIzWU;}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_NQQcTJR=json({});
    return_NQQcTJR=[&]() {
    json return_qcrHDke=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_NQQcTJR;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int kMUZTCS=0; kMUZTCS < name["members"]["pNext"]["members"].size(); kMUZTCS++){
            [&]() {
temp[kMUZTCS]=deserialize_char(name["members"]["pNext"]["members"][kMUZTCS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAvNCCO=json({});
    
        if (name.pNext==NULL){
            return_CAvNCCO["null"]=true;
            return return_CAvNCCO;
        }
        return_CAvNCCO=[&]() {
    json return_tWulzyC=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_tWulzyC["null"]=true;
            return return_tWulzyC;
        }
        
        return_tWulzyC["members"]={};
        for(int tWulzyC=0; tWulzyC < strlen(((char*)(name.pNext)))+1; tWulzyC++){
            json temp;
            temp=[&]() {
    json return_QXYdWqR=json({});
    return serialize_char(((char*)(name.pNext))[tWulzyC]);}();
            return_tWulzyC["members"].push_back(temp);
        }
        return return_tWulzyC;
        }();return return_CAvNCCO;}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_DGuPWnl=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int WLIbwGg=0; WLIbwGg < name["members"]["pNext"]["members"].size(); WLIbwGg++){
            [&]() {
temp[WLIbwGg]=deserialize_char(name["members"]["pNext"]["members"][WLIbwGg]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cyzVfUY=json({});
    
        if (name.pNext==NULL){
            return_cyzVfUY["null"]=true;
            return return_cyzVfUY;
        }
        return_cyzVfUY=[&]() {
    json return_pVnrwtO=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_pVnrwtO["null"]=true;
            return return_pVnrwtO;
        }
        
        return_pVnrwtO["members"]={};
        for(int pVnrwtO=0; pVnrwtO < strlen(((char*)(name.pNext)))+1; pVnrwtO++){
            json temp;
            temp=[&]() {
    json return_TMMALWy=json({});
    return serialize_char(((char*)(name.pNext))[pVnrwtO]);}();
            return_pVnrwtO["members"].push_back(temp);
        }
        return return_pVnrwtO;
        }();return return_cyzVfUY;}();
result["members"]["windowExtent"]=[&]() {
    json return_wPMEzAF=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_GJKRXsy=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hVMMtNZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hVMMtNZ=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int pygSTjW=0; pygSTjW < name["members"]["pNext"]["members"].size(); pygSTjW++){
            [&]() {
temp[pygSTjW]=deserialize_char(name["members"]["pNext"]["members"][pygSTjW]);}();;
        }
        }();temp_hVMMtNZ=(void*)temp;
}();result.pNext=temp_hVMMtNZ;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kUFMjgD=json({});
    
        if (name.pNext==NULL){
            return_kUFMjgD["null"]=true;
            return return_kUFMjgD;
        }
        return_kUFMjgD=[&]() {
    json return_LwAgtLE=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_LwAgtLE["null"]=true;
            return return_LwAgtLE;
        }
        
        return_LwAgtLE["members"]={};
        for(int LwAgtLE=0; LwAgtLE < strlen(((char*)(name.pNext)))+1; LwAgtLE++){
            json temp;
            temp=[&]() {
    json return_OVgpfbc=json({});
    return serialize_char(((char*)(name.pNext))[LwAgtLE]);}();
            return_LwAgtLE["members"].push_back(temp);
        }
        return return_LwAgtLE;
        }();return return_kUFMjgD;}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_BpwyGus=json({});
    return_BpwyGus=[&]() {
    json return_MCxIhUd=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_BpwyGus;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int sgpUUYH=0; sgpUUYH < name["members"]["pNext"]["members"].size(); sgpUUYH++){
            [&]() {
temp[sgpUUYH]=deserialize_char(name["members"]["pNext"]["members"][sgpUUYH]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TgliIzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AnQDLbU=json({});
    
        if (name.pNext==NULL){
            return_AnQDLbU["null"]=true;
            return return_AnQDLbU;
        }
        return_AnQDLbU=[&]() {
    json return_FShuePX=json({});
    
        if (((char*)(name.pNext))==NULL){
            return_FShuePX["null"]=true;
            return return_FShuePX;
        }
        
        return_FShuePX["members"]={};
        for(int FShuePX=0; FShuePX < strlen(((char*)(name.pNext)))+1; FShuePX++){
            json temp;
            temp=[&]() {
    json return_dBkoKjt=json({});
    return serialize_char(((char*)(name.pNext))[FShuePX]);}();
            return_FShuePX["members"].push_back(temp);
        }
        return return_FShuePX;
        }();return return_AnQDLbU;}();
result["members"]["underlyingAPI"]=[&]() {
    json return_XKdncWC=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        return;
        }
    char* temp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(name["members"]["pNext"]["members"].size()*sizeof(char));
        for (int BTyZxfS=0; BTyZxfS < name["members"]["pNext"]["members"].size(); BTyZxfS++){
            [&]() {
temp[BTyZxfS]=deserialize_char(name["members"]["pNext"]["members"][BTyZxfS]);}();;
        }
        }();result.pNext=(void*)temp;
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_zGZXhho=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return_qUMsCyj=[&]() {
    json return_hpAXNbU=json({});
    
        if (((char*)(pOriginal))==NULL){
            return_hpAXNbU["null"]=true;
            return return_hpAXNbU;
        }
        
        return_hpAXNbU["members"]={};
        for(int hpAXNbU=0; hpAXNbU < strlen(((char*)(pOriginal)))+1; hpAXNbU++){
            json temp;
            temp=[&]() {
    json return_OLmcPVf=json({});
    return serialize_char(((char*)(pOriginal))[hpAXNbU]);}();
            return_hpAXNbU["members"].push_back(temp);
        }
        return return_hpAXNbU;
        }();return return_qUMsCyj;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pOriginal"]["members"].size()*sizeof(char));
        for (int SBajMeG=0; SBajMeG < data["members"]["pOriginal"]["members"].size(); SBajMeG++){
            [&]() {
temp[SBajMeG]=deserialize_char(data["members"]["pOriginal"]["members"][SBajMeG]);}();;
        }
        }();pOriginal=(void*)temp;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_Arllkwk=json({});
    
        if (result_temp==NULL){
            return_Arllkwk["null"]=true;
            return return_Arllkwk;
        }
        return_Arllkwk=[&]() {
    json return_XKfffIn=json({});
    
        if (((char*)(result_temp))==NULL){
            return_XKfffIn["null"]=true;
            return return_XKfffIn;
        }
        
        return_XKfffIn["members"]={};
        for(int XKfffIn=0; XKfffIn < strlen(((char*)(result_temp)))+1; XKfffIn++){
            json temp;
            temp=[&]() {
    json return_kogWQlH=json({});
    return serialize_char(((char*)(result_temp))[XKfffIn]);}();
            return_XKfffIn["members"].push_back(temp);
        }
        return return_XKfffIn;
        }();return return_Arllkwk;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["pOriginal"]=[&]() {
    json return_qUMsCyj=json({});
    
        if (pOriginal==NULL){
            return_qUMsCyj["null"]=true;
            return return_qUMsCyj;
        }
        return_qUMsCyj=[&]() {
    json return_hpAXNbU=json({});
    
        if (((char*)(pOriginal))==NULL){
            return_hpAXNbU["null"]=true;
            return return_hpAXNbU;
        }
        
        return_hpAXNbU["members"]={};
        for(int hpAXNbU=0; hpAXNbU < strlen(((char*)(pOriginal)))+1; hpAXNbU++){
            json temp;
            temp=[&]() {
    json return_OLmcPVf=json({});
    return serialize_char(((char*)(pOriginal))[hpAXNbU]);}();
            return_hpAXNbU["members"].push_back(temp);
        }
        return return_hpAXNbU;
        }();return return_qUMsCyj;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pOriginal"]["members"].size()*sizeof(char));
        for (int SBajMeG=0; SBajMeG < data["members"]["pOriginal"]["members"].size(); SBajMeG++){
            [&]() {
temp[SBajMeG]=deserialize_char(data["members"]["pOriginal"]["members"][SBajMeG]);}();;
        }
        }();pOriginal=(void*)temp;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["result"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["result"]["members"].size()*sizeof(char));
        for (int pZIIzsC=0; pZIIzsC < data["result"]["members"].size(); pZIIzsC++){
            [&]() {
temp[pZIIzsC]=deserialize_char(data["result"]["members"][pZIIzsC]);}();;
        }
        }();result=(void*)temp;
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_CaWjkee=json({});
    
        if (result_temp==NULL){
            return_CaWjkee["null"]=true;
            return return_CaWjkee;
        }
        return_CaWjkee=[&]() {
    json return_CDUsIoi=json({});
    
        if (((char*)(result_temp))==NULL){
            return_CDUsIoi["null"]=true;
            return return_CDUsIoi;
        }
        
        return_CDUsIoi["members"]={};
        for(int CDUsIoi=0; CDUsIoi < strlen(((char*)(result_temp)))+1; CDUsIoi++){
            json temp;
            temp=[&]() {
    json return_zIefmUP=json({});
    return serialize_char(((char*)(result_temp))[CDUsIoi]);}();
            return_CDUsIoi["members"].push_back(temp);
        }
        return return_CDUsIoi;
        }();return return_CaWjkee;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["size"]=[&]() {
    json return_VqIFOyn=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_HAJEZdY=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_gexmXvX=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["result"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["result"]["members"].size()*sizeof(char));
        for (int IgLZDWV=0; IgLZDWV < data["result"]["members"].size(); IgLZDWV++){
            [&]() {
temp[IgLZDWV]=deserialize_char(data["result"]["members"][IgLZDWV]);}();;
        }
        }();result=(void*)temp;
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();
data["members"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return_sFERVwr=[&]() {
    json return_tUdVjxD=json({});
    
        if (((char*)(pMemory))==NULL){
            return_tUdVjxD["null"]=true;
            return return_tUdVjxD;
        }
        
        return_tUdVjxD["members"]={};
        for(int tUdVjxD=0; tUdVjxD < strlen(((char*)(pMemory)))+1; tUdVjxD++){
            json temp;
            temp=[&]() {
    json return_MNfkVsd=json({});
    return serialize_char(((char*)(pMemory))[tUdVjxD]);}();
            return_tUdVjxD["members"].push_back(temp);
        }
        return return_tUdVjxD;
        }();return return_sFERVwr;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pMemory"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pMemory"]["members"].size()*sizeof(char));
        for (int gIlUuhM=0; gIlUuhM < data["members"]["pMemory"]["members"].size(); gIlUuhM++){
            [&]() {
temp[gIlUuhM]=deserialize_char(data["members"]["pMemory"]["members"][gIlUuhM]);}();;
        }
        }();pMemory=(void*)temp;
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
result["params"]["pMemory"]=[&]() {
    json return_sFERVwr=json({});
    
        if (pMemory==NULL){
            return_sFERVwr["null"]=true;
            return return_sFERVwr;
        }
        return_sFERVwr=[&]() {
    json return_tUdVjxD=json({});
    
        if (((char*)(pMemory))==NULL){
            return_tUdVjxD["null"]=true;
            return return_tUdVjxD;
        }
        
        return_tUdVjxD["members"]={};
        for(int tUdVjxD=0; tUdVjxD < strlen(((char*)(pMemory)))+1; tUdVjxD++){
            json temp;
            temp=[&]() {
    json return_MNfkVsd=json({});
    return serialize_char(((char*)(pMemory))[tUdVjxD]);}();
            return_tUdVjxD["members"].push_back(temp);
        }
        return return_tUdVjxD;
        }();return return_sFERVwr;}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pMemory"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pMemory"]["members"].size()*sizeof(char));
        for (int gIlUuhM=0; gIlUuhM < data["members"]["pMemory"]["members"].size(); gIlUuhM++){
            [&]() {
temp[gIlUuhM]=deserialize_char(data["members"]["pMemory"]["members"][gIlUuhM]);}();;
        }
        }();pMemory=(void*)temp;
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return_dAeRyOC=[&]() {
    json return_YkzUCyD=json({});
    return serialize_char(*pLayerPrefix);}();
return return_dAeRyOC;}();
data["members"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return_bPCQekx=[&]() {
    json return_qCszycM=json({});
    return serialize_char(*pMessage);}();
return return_bPCQekx;}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_BwfBQOH;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_BwfBQOH=NULL;
        return;
        }
    temp_BwfBQOH=(char*)malloc(sizeof(char));
[&]() {
*(temp_BwfBQOH)=deserialize_char(data["members"]["pLayerPrefix"]);}();
}();pLayerPrefix=temp_BwfBQOH;}();
const char*                                 pMessage;
[&]() {
char* temp_iHizcpU;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_iHizcpU=NULL;
        return;
        }
    temp_iHizcpU=(char*)malloc(sizeof(char));
[&]() {
*(temp_iHizcpU)=deserialize_char(data["members"]["pMessage"]);}();
}();pMessage=temp_iHizcpU;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_zpvJyFZ=json({});
    return_zpvJyFZ=[&]() {
    json return_YcIYsel=json({});
    return serialize_uint32_t(result_temp);}();return return_zpvJyFZ;}();
result["params"]["flags"]=[&]() {
    json return_XSZRFnv=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_KZUYZEp=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_ePswGlN=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_MfvLciZ=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_YoGUCPx=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_dAeRyOC=json({});
    
        if (pLayerPrefix==NULL){
            return_dAeRyOC["null"]=true;
            return return_dAeRyOC;
        }
        return_dAeRyOC=[&]() {
    json return_YkzUCyD=json({});
    return serialize_char(*pLayerPrefix);}();
return return_dAeRyOC;}();
result["params"]["pMessage"]=[&]() {
    json return_bPCQekx=json({});
    
        if (pMessage==NULL){
            return_bPCQekx["null"]=true;
            return return_bPCQekx;
        }
        return_bPCQekx=[&]() {
    json return_qCszycM=json({});
    return serialize_char(*pMessage);}();
return return_bPCQekx;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
data["members"]["pUserData"]=[&]() {
    json return_dHTULNO=json({});
    
        if (_struct->pUserData==NULL){
            return_dHTULNO["null"]=true;
            return return_dHTULNO;
        }
        return_dHTULNO=[&]() {
    json return_fRlCnrV=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_fRlCnrV["null"]=true;
            return return_fRlCnrV;
        }
        
        return_fRlCnrV["members"]={};
        for(int fRlCnrV=0; fRlCnrV < strlen(((char*)(_struct->pUserData)))+1; fRlCnrV++){
            json temp;
            temp=[&]() {
    json return_XipnJcc=json({});
    return serialize_char(((char*)(_struct->pUserData))[fRlCnrV]);}();
            return_fRlCnrV["members"].push_back(temp);
        }
        return return_fRlCnrV;
        }();return return_dHTULNO;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_xGrGtVB;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_xGrGtVB=NULL;
        return;
        }
    temp_xGrGtVB=(VkDebugUtilsMessengerCallbackDataEXT*)malloc(sizeof(VkDebugUtilsMessengerCallbackDataEXT));
[&]() {
*(temp_xGrGtVB)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_xGrGtVB;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int YtUluaf=0; YtUluaf < data["members"]["pUserData"]["members"].size(); YtUluaf++){
            [&]() {
temp[YtUluaf]=deserialize_char(data["members"]["pUserData"]["members"][YtUluaf]);}();;
        }
        }();pUserData=(void*)temp;
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_eplspvb=json({});
    return_eplspvb=[&]() {
    json return_qXBGUnK=json({});
    return serialize_uint32_t(result_temp);}();return return_eplspvb;}();
result["params"]["messageSeverity"]=[&]() {
    json return_sNxtKmA=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_vagGLtM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_oJOcfsX=json({});
    
        if (pCallbackData==NULL){
            return_oJOcfsX["null"]=true;
            return return_oJOcfsX;
        }
        return_oJOcfsX=[&]() {
    json return_FPrcMto=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_oJOcfsX;}();
result["params"]["pUserData"]=[&]() {
    json return_fZfXUrt=json({});
    
        if (pUserData==NULL){
            return_fZfXUrt["null"]=true;
            return return_fZfXUrt;
        }
        return_fZfXUrt=[&]() {
    json return_gGNzsdh=json({});
    
        if (((char*)(pUserData))==NULL){
            return_gGNzsdh["null"]=true;
            return return_gGNzsdh;
        }
        
        return_gGNzsdh["members"]={};
        for(int gGNzsdh=0; gGNzsdh < strlen(((char*)(pUserData)))+1; gGNzsdh++){
            json temp;
            temp=[&]() {
    json return_BJHGTiO=json({});
    return serialize_char(((char*)(pUserData))[gGNzsdh]);}();
            return_gGNzsdh["members"].push_back(temp);
        }
        return return_gGNzsdh;
        }();return return_fZfXUrt;}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int YtUluaf=0; YtUluaf < data["members"]["pUserData"]["members"].size(); YtUluaf++){
            [&]() {
temp[YtUluaf]=deserialize_char(data["members"]["pUserData"]["members"][YtUluaf]);}();;
        }
        }();pUserData=(void*)temp;
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
data["members"]["pUserData"]=[&]() {
    json return_TXopdKD=json({});
    
        if (_struct->pUserData==NULL){
            return_TXopdKD["null"]=true;
            return return_TXopdKD;
        }
        return_TXopdKD=[&]() {
    json return_unEcZHd=json({});
    
        if (((char*)(_struct->pUserData))==NULL){
            return_unEcZHd["null"]=true;
            return return_unEcZHd;
        }
        
        return_unEcZHd["members"]={};
        for(int unEcZHd=0; unEcZHd < strlen(((char*)(_struct->pUserData)))+1; unEcZHd++){
            json temp;
            temp=[&]() {
    json return_raAVfvN=json({});
    return serialize_char(((char*)(_struct->pUserData))[unEcZHd]);}();
            return_unEcZHd["members"].push_back(temp);
        }
        return return_unEcZHd;
        }();return return_TXopdKD;}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_NmJlCaN;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_NmJlCaN=NULL;
        return;
        }
    temp_NmJlCaN=(VkDeviceMemoryReportCallbackDataEXT*)malloc(sizeof(VkDeviceMemoryReportCallbackDataEXT));
[&]() {
*(temp_NmJlCaN)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_NmJlCaN;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_lDVRiGB=json({});
    
        if (pCallbackData==NULL){
            return_lDVRiGB["null"]=true;
            return return_lDVRiGB;
        }
        return_lDVRiGB=[&]() {
    json return_bRBLRaq=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_lDVRiGB;}();
result["params"]["pUserData"]=[&]() {
    json return_RSwZPSo=json({});
    
        if (pUserData==NULL){
            return_RSwZPSo["null"]=true;
            return return_RSwZPSo;
        }
        return_RSwZPSo=[&]() {
    json return_qPEUoOT=json({});
    
        if (((char*)(pUserData))==NULL){
            return_qPEUoOT["null"]=true;
            return return_qPEUoOT;
        }
        
        return_qPEUoOT["members"]={};
        for(int qPEUoOT=0; qPEUoOT < strlen(((char*)(pUserData)))+1; qPEUoOT++){
            json temp;
            temp=[&]() {
    json return_BCIGQWq=json({});
    return serialize_char(((char*)(pUserData))[qPEUoOT]);}();
            return_qPEUoOT["members"].push_back(temp);
        }
        return return_qPEUoOT;
        }();return return_RSwZPSo;}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        return;
        }
    char* temp;[&]() {

        if (data["members"]["pUserData"].contains("null")){
        temp=NULL;
        return;
        }
    temp=(char*)malloc(data["members"]["pUserData"]["members"].size()*sizeof(char));
        for (int GXobTLu=0; GXobTLu < data["members"]["pUserData"]["members"].size(); GXobTLu++){
            [&]() {
temp[GXobTLu]=deserialize_char(data["members"]["pUserData"]["members"][GXobTLu]);}();;
        }
        }();pUserData=(void*)temp;
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
