
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>
#include <ThreadStruct.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XdaFfTI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MbzPRYr=json({});
    
        if (name.pNext==NULL){
            return_MbzPRYr["null"]=true;
            return return_MbzPRYr;
        }
        return_MbzPRYr=[&]() {
    json return_laLTPFH=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_MbzPRYr;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    [&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JGhcaCb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DiRUAtT=json({});
    
        if (name.pNext==NULL){
            return_DiRUAtT["null"]=true;
            return return_DiRUAtT;
        }
        return_DiRUAtT=[&]() {
    json return_ZLysejM=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_DiRUAtT;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_zjAFyrR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zjAFyrR=NULL;
        }
    [&]() {
*(temp_zjAFyrR)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_zjAFyrR;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_MggnfqI=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_GEnusaq=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_vrqgBcV=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_hvRYfgg=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_sZnoAmQ=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_pBBTIAM=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_mAcMcQv=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_hgdQZWm=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_JNQnOCk=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_arHrqEU=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_MdVJoZI=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_mVMZYeq=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_lWznDsX=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_aDKUOBZ=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_GKezIFd=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_OXLnNNl=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_ApUKDvz=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_lRzusXz=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_noagEEw=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_jdPpHao=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_TLFRNYF=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_DQYBDCr=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_QQblkaW=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_pIsQRdI=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_UKohAnY=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_ZEEHRvm=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_XCyZGbT=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_TOtGdOh=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_DDLWDYr=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_yZRCElu=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_HXZMWOM=json({});
    
        return_HXZMWOM["members"]={};
        for(int i=0; i < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_dBCjdDU=json({});
    return serialize_char(name.deviceName[i]);}();
            return_HXZMWOM["members"][std::to_string(i)].push_back(temp);
        }
        return return_HXZMWOM;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_LWFPcpt=json({});
    
        return_LWFPcpt["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_qLgUQVB=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_LWFPcpt["members"][std::to_string(i)].push_back(temp);
        }
        return return_LWFPcpt;
        }();
result["members"]["limits"]=[&]() {
    json return_BykdzqP=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_BgxyZCt=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int zUyOfGY=0; zUyOfGY < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; zUyOfGY++){
            [&]() {
result.deviceName[zUyOfGY]=deserialize_char(name["members"]["deviceName"]["members"][zUyOfGY]);}();;
        }
        }();
[&]() {

        for (int QCXhNuD=0; QCXhNuD < VK_UUID_SIZE; QCXhNuD++){
            [&]() {
result.pipelineCacheUUID[QCXhNuD]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][QCXhNuD]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_asZuJFp=json({});
    
        return_asZuJFp["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aNUmlHu=json({});
    return serialize_char(name.extensionName[i]);}();
            return_asZuJFp["members"][std::to_string(i)].push_back(temp);
        }
        return return_asZuJFp;
        }();
result["members"]["specVersion"]=[&]() {
    json return_KwOTpTC=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int rNkSWXT=0; rNkSWXT < VK_MAX_EXTENSION_NAME_SIZE; rNkSWXT++){
            [&]() {
result.extensionName[rNkSWXT]=deserialize_char(name["members"]["extensionName"]["members"][rNkSWXT]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_NllfHlQ=json({});
    
        return_NllfHlQ["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_zQBXCzY=json({});
    return serialize_char(name.layerName[i]);}();
            return_NllfHlQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_NllfHlQ;
        }();
result["members"]["specVersion"]=[&]() {
    json return_dlPkxiy=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_nQxhbYb=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_vgtXVwt=json({});
    
        return_vgtXVwt["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NBIizzg=json({});
    return serialize_char(name.description[i]);}();
            return_vgtXVwt["members"][std::to_string(i)].push_back(temp);
        }
        return return_vgtXVwt;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int mTYOoPD=0; mTYOoPD < VK_MAX_EXTENSION_NAME_SIZE; mTYOoPD++){
            [&]() {
result.layerName[mTYOoPD]=deserialize_char(name["members"]["layerName"]["members"][mTYOoPD]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int FqSLgHj=0; FqSLgHj < VK_MAX_DESCRIPTION_SIZE; FqSLgHj++){
            [&]() {
result.description[FqSLgHj]=deserialize_char(name["members"]["description"]["members"][FqSLgHj]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ENITlVn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fwLgbJv=json({});
    
        if (name.pNext==NULL){
            return_fwLgbJv["null"]=true;
            return return_fwLgbJv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pApplicationName"]=[&]() {
    json return_EhJbOJw=json({});
    
        if (name.pApplicationName==NULL){
            return_EhJbOJw["null"]=true;
            return return_EhJbOJw;
        }
        return serialize_char_p(name.pApplicationName);
}();
result["members"]["applicationVersion"]=[&]() {
    json return_agQxBJB=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_CeqmBMJ=json({});
    
        if (name.pEngineName==NULL){
            return_CeqmBMJ["null"]=true;
            return return_CeqmBMJ;
        }
        return serialize_char_p(name.pEngineName);
}();
result["members"]["engineVersion"]=[&]() {
    json return_cwCwemu=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_LfDhvSy=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AvFLqgW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AvFLqgW=NULL;
        }
    temp_AvFLqgW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AvFLqgW;}();
[&]() {
char* temp_yVkWWwh;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_yVkWWwh=NULL;
        }
    temp_yVkWWwh=deserialize_char_p(name["members"]["pApplicationName"]);
}();result.pApplicationName=temp_yVkWWwh;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_QUUcwsM;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_QUUcwsM=NULL;
        }
    temp_QUUcwsM=deserialize_char_p(name["members"]["pEngineName"]);
}();result.pEngineName=temp_QUUcwsM;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_beXnNMD=json({});
    
        if (name.pUserData==NULL){
            return_beXnNMD["null"]=true;
            return return_beXnNMD;
        }
        return serialize_void_p(name.pUserData);
}();
result["members"]["pfnAllocation"]=[&]() {
    json return_jGOSKKN=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkAllocationFunction(name.pfnAllocation);
        #endif
        }();
result["members"]["pfnReallocation"]=[&]() {
    json return_ajBeiYs=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkReallocationFunction(name.pfnReallocation);
        #endif
        }();
result["members"]["pfnFree"]=[&]() {
    json return_DNmseBm=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkFreeFunction(name.pfnFree);
        #endif
        }();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_OzMlMHU=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);
        #endif
        }();
result["members"]["pfnInternalFree"]=[&]() {
    json return_YfTXSvn=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);
        #endif
        }();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yZrhdfc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_feoAmHR=json({});
    
        if (name.pNext==NULL){
            return_feoAmHR["null"]=true;
            return return_feoAmHR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tqETPJL=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_VyZNYyM=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_zNsidUY=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_dxeVVyE=json({});
    
        if (name.pQueuePriorities==NULL){
            return_dxeVVyE["null"]=true;
            return return_dxeVVyE;
        }
        
        return_dxeVVyE["members"]={};
        for(int i=0; i < name.queueCount; i++){
            json temp;
            temp=[&]() {
    json return_koVsWCN=json({});
    return serialize_float(name.pQueuePriorities[i]);}();
            return_dxeVVyE["members"][std::to_string(i)].push_back(temp);
        }
        return return_dxeVVyE;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ptkEFka;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ptkEFka=NULL;
        }
    temp_ptkEFka=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ptkEFka;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_emXVaQn;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_emXVaQn=NULL;
        }
    temp_emXVaQn=(float*)malloc(result.queueCount*sizeof(float));
        for (int FQIaRrl=0; FQIaRrl < result.queueCount; FQIaRrl++){
            [&]() {
temp_emXVaQn[FQIaRrl]=deserialize_float(name["members"]["pQueuePriorities"]["members"][FQIaRrl]);}();;
        }
        }();result.pQueuePriorities=temp_emXVaQn;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sWctdGD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pUBtYgU=json({});
    
        if (name.pNext==NULL){
            return_pUBtYgU["null"]=true;
            return return_pUBtYgU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YAFYjfe=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_itgDrXF=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_JuJZCQc=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_JuJZCQc["null"]=true;
            return return_JuJZCQc;
        }
        
        return_JuJZCQc["members"]={};
        for(int i=0; i < name.queueCreateInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_rpALaIW=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[i]);}();
            return_JuJZCQc["members"][std::to_string(i)].push_back(temp);
        }
        return return_JuJZCQc;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_arYaJGb=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_gSRRrxd=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_gSRRrxd["null"]=true;
            return return_gSRRrxd;
        }
        
        return_gSRRrxd["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_dBipvsu=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_dBipvsu["null"]=true;
            return return_dBipvsu;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_gSRRrxd["members"][std::to_string(i)].push_back(temp);
        }
        return return_gSRRrxd;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_IAUYGGV=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_VzUGvwu=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_VzUGvwu["null"]=true;
            return return_VzUGvwu;
        }
        
        return_VzUGvwu["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_ANCAWDa=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_ANCAWDa["null"]=true;
            return return_ANCAWDa;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_VzUGvwu["members"][std::to_string(i)].push_back(temp);
        }
        return return_VzUGvwu;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_gWEhDia=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_gWEhDia["null"]=true;
            return return_gWEhDia;
        }
        return_gWEhDia=[&]() {
    json return_akpRIDl=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_gWEhDia;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XGwjaRZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XGwjaRZ=NULL;
        }
    temp_XGwjaRZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XGwjaRZ;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_TuUvokn;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_TuUvokn=NULL;
        }
    temp_TuUvokn=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int CXqDZbO=0; CXqDZbO < result.queueCreateInfoCount; CXqDZbO++){
            [&]() {
temp_TuUvokn[CXqDZbO]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][CXqDZbO]);}();;
        }
        }();result.pQueueCreateInfos=temp_TuUvokn;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_qDXvUuM;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_qDXvUuM=NULL;
        }
    temp_qDXvUuM=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int iRXIGxL=0; iRXIGxL < result.enabledLayerCount; iRXIGxL++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][iRXIGxL].contains("null")){
        temp_qDXvUuM[iRXIGxL]=NULL;
        }
    temp_qDXvUuM[iRXIGxL]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][iRXIGxL]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_qDXvUuM;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_CChNGyG;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_CChNGyG=NULL;
        }
    temp_CChNGyG=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int Elovytd=0; Elovytd < result.enabledExtensionCount; Elovytd++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][Elovytd].contains("null")){
        temp_CChNGyG[Elovytd]=NULL;
        }
    temp_CChNGyG[Elovytd]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][Elovytd]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_CChNGyG;}();
[&]() {
VkPhysicalDeviceFeatures* temp_pOPXEPP;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_pOPXEPP=NULL;
        }
    [&]() {
*(temp_pOPXEPP)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_pOPXEPP;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oQOEIAx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lKfxLpi=json({});
    
        if (name.pNext==NULL){
            return_lKfxLpi["null"]=true;
            return return_lKfxLpi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_agBgcjO=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_IhmTWeR=json({});
    
        if (name.pApplicationInfo==NULL){
            return_IhmTWeR["null"]=true;
            return return_IhmTWeR;
        }
        return_IhmTWeR=[&]() {
    json return_XTkjxSj=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_IhmTWeR;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_rQFzpcm=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_IKCUfQq=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_IKCUfQq["null"]=true;
            return return_IKCUfQq;
        }
        
        return_IKCUfQq["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_SksVQmG=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_SksVQmG["null"]=true;
            return return_SksVQmG;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_IKCUfQq["members"][std::to_string(i)].push_back(temp);
        }
        return return_IKCUfQq;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_EedCcVQ=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_vrPcKbm=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_vrPcKbm["null"]=true;
            return return_vrPcKbm;
        }
        
        return_vrPcKbm["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_WCfMXVU=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_WCfMXVU["null"]=true;
            return return_WCfMXVU;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_vrPcKbm["members"][std::to_string(i)].push_back(temp);
        }
        return return_vrPcKbm;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_llbwKeG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_llbwKeG=NULL;
        }
    temp_llbwKeG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_llbwKeG;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_panmKvi;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_panmKvi=NULL;
        }
    [&]() {
*(temp_panmKvi)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_panmKvi;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_YVYxSlk;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_YVYxSlk=NULL;
        }
    temp_YVYxSlk=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int XfsRaDb=0; XfsRaDb < result.enabledLayerCount; XfsRaDb++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][XfsRaDb].contains("null")){
        temp_YVYxSlk[XfsRaDb]=NULL;
        }
    temp_YVYxSlk[XfsRaDb]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][XfsRaDb]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_YVYxSlk;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_XIKKKxi;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_XIKKKxi=NULL;
        }
    temp_XIKKKxi=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int bKTJBNC=0; bKTJBNC < result.enabledExtensionCount; bKTJBNC++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][bKTJBNC].contains("null")){
        temp_XIKKKxi[bKTJBNC]=NULL;
        }
    temp_XIKKKxi[bKTJBNC]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][bKTJBNC]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_XIKKKxi;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_TemYuLq=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_eBRgAIu=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_NUxfvRh=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_OLuXKmx=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_VdDmijh=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_XAcqpVE=json({});
    
        return_XAcqpVE["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_TYPES; i++){
            json temp;
            temp=[&]() {
    json return_ashgMoT=json({});
    return serialize_VkMemoryType(name.memoryTypes[i]);}();
            return_XAcqpVE["members"][std::to_string(i)].push_back(temp);
        }
        return return_XAcqpVE;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_iChmSEg=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_mBaGpep=json({});
    
        return_mBaGpep["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_cpvBUYs=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[i]);}();
            return_mBaGpep["members"][std::to_string(i)].push_back(temp);
        }
        return return_mBaGpep;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int NrzFnyf=0; NrzFnyf < VK_MAX_MEMORY_TYPES; NrzFnyf++){
            [&]() {
result.memoryTypes[NrzFnyf]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][NrzFnyf]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int ZFanBtJ=0; ZFanBtJ < VK_MAX_MEMORY_HEAPS; ZFanBtJ++){
            [&]() {
result.memoryHeaps[ZFanBtJ]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][ZFanBtJ]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QnMYVUI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zDeoGIh=json({});
    
        if (name.pNext==NULL){
            return_zDeoGIh["null"]=true;
            return return_zDeoGIh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allocationSize"]=[&]() {
    json return_MoTVtDV=json({});
    return_MoTVtDV=[&]() {
    json return_JdqwOUt=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_MoTVtDV;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_eXTsvay=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xgKrEOB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xgKrEOB=NULL;
        }
    temp_xgKrEOB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xgKrEOB;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_rDuCNma=json({});
    return_rDuCNma=[&]() {
    json return_vNOXVTC=json({});
    return serialize_uint64_t(name.size);}();return return_rDuCNma;}();
result["members"]["alignment"]=[&]() {
    json return_YUjxdwB=json({});
    return_YUjxdwB=[&]() {
    json return_PjRlxit=json({});
    return serialize_uint64_t(name.alignment);}();return return_YUjxdwB;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_gcqWQVT=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_PUtMVgg=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_oZlVxiJ=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_yVpJVAH=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_EeyXZgb=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_DpumuuN=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_qhgkvVQ=json({});
    return_qhgkvVQ=[&]() {
    json return_xpJgztV=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_qhgkvVQ;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_NQhFJDz=json({});
    return_NQhFJDz=[&]() {
    json return_YyzDWoC=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_NQhFJDz;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_TImspzd=json({});
    return_TImspzd=[&]() {
    json return_zSZhlPK=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_TImspzd;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_RzRmuxk=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_WZQIcUo=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_NvAPPRB=json({});
    return_NvAPPRB=[&]() {
    json return_SKjyseI=json({});
    return serialize_uint64_t(name.size);}();return return_NvAPPRB;}();
result["members"]["flags"]=[&]() {
    json return_RlfOKGt=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_txYYMVo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMgysAF=json({});
    
        if (name.pNext==NULL){
            return_HMgysAF["null"]=true;
            return return_HMgysAF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_WVrsWxl=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_GUfjOMV=json({});
    return_GUfjOMV=[&]() {
    json return_IgoYYHb=json({});
    return serialize_uint64_t(name.offset);}();return return_GUfjOMV;}();
result["members"]["size"]=[&]() {
    json return_GgBnBKO=json({});
    return_GgBnBKO=[&]() {
    json return_BeCAvum=json({});
    return serialize_uint64_t(name.size);}();return return_GgBnBKO;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eUPuvyg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eUPuvyg=NULL;
        }
    temp_eUPuvyg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eUPuvyg;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_eItpeac=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_YFgpsyn=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_GjNoypW=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_rPppQZW=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_WVpIbyk=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_ehYKeCr=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_qKMICVj=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_AhTxtAy=json({});
    return_AhTxtAy=[&]() {
    json return_eiAtLsY=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_AhTxtAy;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_MNaiiwX=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_VOYZIAv=json({});
    return_VOYZIAv=[&]() {
    json return_xlebnVQ=json({});
    return serialize_uint64_t(name.offset);}();return return_VOYZIAv;}();
result["members"]["range"]=[&]() {
    json return_ENRRlEO=json({});
    return_ENRRlEO=[&]() {
    json return_NBcSTTQ=json({});
    return serialize_uint64_t(name.range);}();return return_ENRRlEO;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_zJZXzaj=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_NXMhOiE=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_AcXHFFn=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yghzUrW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qdllvqu=json({});
    
        if (name.pNext==NULL){
            return_qdllvqu["null"]=true;
            return return_qdllvqu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dstSet"]=[&]() {
    json return_RYZcQrP=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_OIHkLgi=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_pGehAoB=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_dyvqkLq=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_zgnSNrt=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_cMEilWc=json({});
    
        if (name.pImageInfo==NULL){
            return_cMEilWc["null"]=true;
            return return_cMEilWc;
        }
        
        return_cMEilWc["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_ctPHpMB=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[i]);}();
            return_cMEilWc["members"][std::to_string(i)].push_back(temp);
        }
        return return_cMEilWc;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_TvFEyCd=json({});
    
        if (name.pBufferInfo==NULL){
            return_TvFEyCd["null"]=true;
            return return_TvFEyCd;
        }
        
        return_TvFEyCd["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_ftwXIOr=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[i]);}();
            return_TvFEyCd["members"][std::to_string(i)].push_back(temp);
        }
        return return_TvFEyCd;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_VRJKTXD=json({});
    
        if (name.pTexelBufferView==NULL){
            return_VRJKTXD["null"]=true;
            return return_VRJKTXD;
        }
        
        return_VRJKTXD["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_JuCtKlK=json({});
    return serialize_VkBufferView(name.pTexelBufferView[i]);}();
            return_VRJKTXD["members"][std::to_string(i)].push_back(temp);
        }
        return return_VRJKTXD;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BclTokr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BclTokr=NULL;
        }
    temp_BclTokr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BclTokr;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_pvLcwAX;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_pvLcwAX=NULL;
        }
    temp_pvLcwAX=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int ptLxZhE=0; ptLxZhE < result.descriptorCount; ptLxZhE++){
            [&]() {
temp_pvLcwAX[ptLxZhE]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][ptLxZhE]);}();;
        }
        }();result.pImageInfo=temp_pvLcwAX;}();
[&]() {
VkDescriptorBufferInfo* temp_wuaTLLJ;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_wuaTLLJ=NULL;
        }
    temp_wuaTLLJ=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int JVtsbxo=0; JVtsbxo < result.descriptorCount; JVtsbxo++){
            [&]() {
temp_wuaTLLJ[JVtsbxo]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][JVtsbxo]);}();;
        }
        }();result.pBufferInfo=temp_wuaTLLJ;}();
[&]() {
VkBufferView* temp_dAFpwpr;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_dAFpwpr=NULL;
        }
    temp_dAFpwpr=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int XQeSSzO=0; XQeSSzO < result.descriptorCount; XQeSSzO++){
            [&]() {
temp_dAFpwpr[XQeSSzO]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][XQeSSzO]);}();;
        }
        }();result.pTexelBufferView=temp_dAFpwpr;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rFXztKC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UGQQVBF=json({});
    
        if (name.pNext==NULL){
            return_UGQQVBF["null"]=true;
            return return_UGQQVBF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSet"]=[&]() {
    json return_TZkOByF=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_LDuXdrP=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_VBUlTpV=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_xevmNKY=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_FoerZxZ=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_lNUISvP=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_lTUCNGN=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tzFWbZC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tzFWbZC=NULL;
        }
    temp_tzFWbZC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tzFWbZC;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fJzFZVY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CpswvFq=json({});
    
        if (name.pNext==NULL){
            return_CpswvFq["null"]=true;
            return return_CpswvFq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_QIYahOH=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nskxIag;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nskxIag=NULL;
        }
    temp_nskxIag=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nskxIag;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IQOocWe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OqKUKuG=json({});
    
        if (name.pNext==NULL){
            return_OqKUKuG["null"]=true;
            return return_OqKUKuG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RUhVGkI=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_NcUcIOu=json({});
    return_NcUcIOu=[&]() {
    json return_lMGmYxz=json({});
    return serialize_uint64_t(name.size);}();return return_NcUcIOu;}();
result["members"]["usage"]=[&]() {
    json return_FGwsSJR=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_wZeiaMz=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_CZgmqZC=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_cYJmsgo=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_cYJmsgo["null"]=true;
            return return_cYJmsgo;
        }
        
        return_cYJmsgo["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_vcgMyqm=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_cYJmsgo["members"][std::to_string(i)].push_back(temp);
        }
        return return_cYJmsgo;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tlSLubG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tlSLubG=NULL;
        }
    temp_tlSLubG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tlSLubG;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_uKKqegW;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_uKKqegW=NULL;
        }
    temp_uKKqegW=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int oahgcRu=0; oahgcRu < result.queueFamilyIndexCount; oahgcRu++){
            [&]() {
temp_uKKqegW[oahgcRu]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][oahgcRu]);}();;
        }
        }();result.pQueueFamilyIndices=temp_uKKqegW;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nxOgTjV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oGEVkQz=json({});
    
        if (name.pNext==NULL){
            return_oGEVkQz["null"]=true;
            return return_oGEVkQz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bqicxak=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_KCDUKzJ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_wVxOWZN=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_BBPSEOm=json({});
    return_BBPSEOm=[&]() {
    json return_VTbStii=json({});
    return serialize_uint64_t(name.offset);}();return return_BBPSEOm;}();
result["members"]["range"]=[&]() {
    json return_TmfHFfX=json({});
    return_TmfHFfX=[&]() {
    json return_yreEOvS=json({});
    return serialize_uint64_t(name.range);}();return return_TmfHFfX;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PHKkNkR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PHKkNkR=NULL;
        }
    temp_PHKkNkR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PHKkNkR;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_ZZPpKmB=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_VfCbgza=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_fYrByQi=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_DYFuOHz=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_atXKQHw=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_rRnXETm=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_KGOJVOz=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_ICqCMpc=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_lbMIebH=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_ONiEURp=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_QJZogyu=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_QCefZAw=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SseJenC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_waVrOia=json({});
    
        if (name.pNext==NULL){
            return_waVrOia["null"]=true;
            return return_waVrOia;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_DCkMDJE=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_ECWcjws=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YdFSPDX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YdFSPDX=NULL;
        }
    temp_YdFSPDX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YdFSPDX;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iGzVbpT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SLPPzWx=json({});
    
        if (name.pNext==NULL){
            return_SLPPzWx["null"]=true;
            return return_SLPPzWx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_pkzcSxQ=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zdDVzsm=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_VRegrCt=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_bMtFvUC=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_LpQVWbw=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_EqyIwRj=json({});
    return_EqyIwRj=[&]() {
    json return_cRAsZHF=json({});
    return serialize_uint64_t(name.offset);}();return return_EqyIwRj;}();
result["members"]["size"]=[&]() {
    json return_RFtjHLt=json({});
    return_RFtjHLt=[&]() {
    json return_TVggmPn=json({});
    return serialize_uint64_t(name.size);}();return return_RFtjHLt;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vQaPwzr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vQaPwzr=NULL;
        }
    temp_vQaPwzr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vQaPwzr;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RFUjnTv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DADGJYp=json({});
    
        if (name.pNext==NULL){
            return_DADGJYp["null"]=true;
            return return_DADGJYp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_HziuoMz=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_spzlBBn=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_rnQSrxb=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_scSJpmi=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_ahgAscF=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_DJTVdWI=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_bkrMmoV=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_IdOXTVB=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aFdjtPx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aFdjtPx=NULL;
        }
    temp_aFdjtPx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aFdjtPx;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rMbIzHy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wnUCsyg=json({});
    
        if (name.pNext==NULL){
            return_wnUCsyg["null"]=true;
            return return_wnUCsyg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hUOxiBQ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_zQfwClN=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_IEgteeS=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_uGDgApR=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_jItiduM=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_jTAqGUv=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_GZhDaHU=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_TJAOxrG=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_KfiCJir=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_qkHeeRc=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_UedDMbd=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_JabMmRP=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_JabMmRP["null"]=true;
            return return_JabMmRP;
        }
        
        return_JabMmRP["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_WkVxILm=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_JabMmRP["members"][std::to_string(i)].push_back(temp);
        }
        return return_JabMmRP;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_zVFNZXE=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LTzDhjY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LTzDhjY=NULL;
        }
    temp_LTzDhjY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LTzDhjY;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_cRylxFZ;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_cRylxFZ=NULL;
        }
    temp_cRylxFZ=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int tdnBUaH=0; tdnBUaH < result.queueFamilyIndexCount; tdnBUaH++){
            [&]() {
temp_cRylxFZ[tdnBUaH]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][tdnBUaH]);}();;
        }
        }();result.pQueueFamilyIndices=temp_cRylxFZ;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_nzXHctE=json({});
    return_nzXHctE=[&]() {
    json return_bguQmgQ=json({});
    return serialize_uint64_t(name.offset);}();return return_nzXHctE;}();
result["members"]["size"]=[&]() {
    json return_JQQJnoy=json({});
    return_JQQJnoy=[&]() {
    json return_WFHJzqJ=json({});
    return serialize_uint64_t(name.size);}();return return_JQQJnoy;}();
result["members"]["rowPitch"]=[&]() {
    json return_KBgfWav=json({});
    return_KBgfWav=[&]() {
    json return_tRmXSLH=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_KBgfWav;}();
result["members"]["arrayPitch"]=[&]() {
    json return_tUyHQQX=json({});
    return_tUyHQQX=[&]() {
    json return_YISAZnb=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_tUyHQQX;}();
result["members"]["depthPitch"]=[&]() {
    json return_WUGQZxW=json({});
    return_WUGQZxW=[&]() {
    json return_KfDUqMw=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_WUGQZxW;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XxCsaQU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gUThQET=json({});
    
        if (name.pNext==NULL){
            return_gUThQET["null"]=true;
            return return_gUThQET;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_rITwUYL=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_XRCIGqu=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_WBQYXsE=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_SrrCxaw=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_uCNAHao=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_sTbXNHD=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vmWvEVg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vmWvEVg=NULL;
        }
    temp_vmWvEVg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vmWvEVg;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_TwFYlNd=json({});
    return_TwFYlNd=[&]() {
    json return_tqwHVEA=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_TwFYlNd;}();
result["members"]["dstOffset"]=[&]() {
    json return_ypctqZo=json({});
    return_ypctqZo=[&]() {
    json return_tjeBvqC=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_ypctqZo;}();
result["members"]["size"]=[&]() {
    json return_gVyVoql=json({});
    return_gVyVoql=[&]() {
    json return_fnJOSlN=json({});
    return serialize_uint64_t(name.size);}();return return_gVyVoql;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_ixHzIhG=json({});
    return_ixHzIhG=[&]() {
    json return_rUTvGqF=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_ixHzIhG;}();
result["members"]["size"]=[&]() {
    json return_YVhsBhf=json({});
    return_YVhsBhf=[&]() {
    json return_RvnUWvS=json({});
    return serialize_uint64_t(name.size);}();return return_YVhsBhf;}();
result["members"]["memory"]=[&]() {
    json return_LGkiGcw=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_NpfbhSJ=json({});
    return_NpfbhSJ=[&]() {
    json return_JMvNTii=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_NpfbhSJ;}();
result["members"]["flags"]=[&]() {
    json return_iQRJRsW=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_FVYiHik=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_kAzPWnr=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_ZnSQQqD=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_xxzIuHf=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_ZdRARBU=json({});
    return_ZdRARBU=[&]() {
    json return_FWZAGux=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_ZdRARBU;}();
result["members"]["flags"]=[&]() {
    json return_fFecLJx=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_kRZNxDH=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_gWKJbdm=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_ostRmZe=json({});
    
        if (name.pBinds==NULL){
            return_ostRmZe["null"]=true;
            return return_ostRmZe;
        }
        
        return_ostRmZe["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_thueYUh=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_ostRmZe["members"][std::to_string(i)].push_back(temp);
        }
        return return_ostRmZe;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_ZtasodQ;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_ZtasodQ=NULL;
        }
    temp_ZtasodQ=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int LRMkGBZ=0; LRMkGBZ < result.bindCount; LRMkGBZ++){
            [&]() {
temp_ZtasodQ[LRMkGBZ]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][LRMkGBZ]);}();;
        }
        }();result.pBinds=temp_ZtasodQ;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_xMUYaDI=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_HZqeCYg=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_FAroCqd=json({});
    
        if (name.pBinds==NULL){
            return_FAroCqd["null"]=true;
            return return_FAroCqd;
        }
        
        return_FAroCqd["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_CpQvXMc=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_FAroCqd["members"][std::to_string(i)].push_back(temp);
        }
        return return_FAroCqd;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_bbRqmsi;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_bbRqmsi=NULL;
        }
    temp_bbRqmsi=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int LEiCJRT=0; LEiCJRT < result.bindCount; LEiCJRT++){
            [&]() {
temp_bbRqmsi[LEiCJRT]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][LEiCJRT]);}();;
        }
        }();result.pBinds=temp_bbRqmsi;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_CHpeFBk=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_DPqpdxo=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_tUpgqYx=json({});
    
        if (name.pBinds==NULL){
            return_tUpgqYx["null"]=true;
            return return_tUpgqYx;
        }
        
        return_tUpgqYx["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_xSLgBpt=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[i]);}();
            return_tUpgqYx["members"][std::to_string(i)].push_back(temp);
        }
        return return_tUpgqYx;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_eaLjzrB;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_eaLjzrB=NULL;
        }
    temp_eaLjzrB=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int dJUwYVI=0; dJUwYVI < result.bindCount; dJUwYVI++){
            [&]() {
temp_eaLjzrB[dJUwYVI]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][dJUwYVI]);}();;
        }
        }();result.pBinds=temp_eaLjzrB;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bgZUBRk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WInztco=json({});
    
        if (name.pNext==NULL){
            return_WInztco["null"]=true;
            return return_WInztco;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_MuLqxfz=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_ZdVOmBU=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_ZdVOmBU["null"]=true;
            return return_ZdVOmBU;
        }
        
        return_ZdVOmBU["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_sqnXUpr=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_ZdVOmBU["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZdVOmBU;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_boehnGn=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_aqjrkjg=json({});
    
        if (name.pBufferBinds==NULL){
            return_aqjrkjg["null"]=true;
            return return_aqjrkjg;
        }
        
        return_aqjrkjg["members"]={};
        for(int i=0; i < name.bufferBindCount; i++){
            json temp;
            temp=[&]() {
    json return_aEvnJBE=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[i]);}();
            return_aqjrkjg["members"][std::to_string(i)].push_back(temp);
        }
        return return_aqjrkjg;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_PynzyWB=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_aqQNreE=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_aqQNreE["null"]=true;
            return return_aqQNreE;
        }
        
        return_aqQNreE["members"]={};
        for(int i=0; i < name.imageOpaqueBindCount; i++){
            json temp;
            temp=[&]() {
    json return_QKMXKnC=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[i]);}();
            return_aqQNreE["members"][std::to_string(i)].push_back(temp);
        }
        return return_aqQNreE;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_GzxTvTH=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_MufNNni=json({});
    
        if (name.pImageBinds==NULL){
            return_MufNNni["null"]=true;
            return return_MufNNni;
        }
        
        return_MufNNni["members"]={};
        for(int i=0; i < name.imageBindCount; i++){
            json temp;
            temp=[&]() {
    json return_nkjnmqS=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[i]);}();
            return_MufNNni["members"][std::to_string(i)].push_back(temp);
        }
        return return_MufNNni;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_IHQgZCz=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_hXqwsMp=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_hXqwsMp["null"]=true;
            return return_hXqwsMp;
        }
        
        return_hXqwsMp["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_hTsGHHH=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_hXqwsMp["members"][std::to_string(i)].push_back(temp);
        }
        return return_hXqwsMp;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_btAGgjB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_btAGgjB=NULL;
        }
    temp_btAGgjB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_btAGgjB;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_NwdjOjO;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_NwdjOjO=NULL;
        }
    temp_NwdjOjO=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int diqguYb=0; diqguYb < result.waitSemaphoreCount; diqguYb++){
            [&]() {
temp_NwdjOjO[diqguYb]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][diqguYb]);}();;
        }
        }();result.pWaitSemaphores=temp_NwdjOjO;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_VtbDwxp;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_VtbDwxp=NULL;
        }
    temp_VtbDwxp=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int GJvjFdE=0; GJvjFdE < result.bufferBindCount; GJvjFdE++){
            [&]() {
temp_VtbDwxp[GJvjFdE]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][GJvjFdE]);}();;
        }
        }();result.pBufferBinds=temp_VtbDwxp;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_MYlhMSe;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_MYlhMSe=NULL;
        }
    temp_MYlhMSe=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int ZskvEOu=0; ZskvEOu < result.imageOpaqueBindCount; ZskvEOu++){
            [&]() {
temp_MYlhMSe[ZskvEOu]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][ZskvEOu]);}();;
        }
        }();result.pImageOpaqueBinds=temp_MYlhMSe;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_WVbkLnV;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_WVbkLnV=NULL;
        }
    temp_WVbkLnV=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int IxFJsNz=0; IxFJsNz < result.imageBindCount; IxFJsNz++){
            [&]() {
temp_WVbkLnV[IxFJsNz]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][IxFJsNz]);}();;
        }
        }();result.pImageBinds=temp_WVbkLnV;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_FvuZREg;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_FvuZREg=NULL;
        }
    temp_FvuZREg=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int veRGqKp=0; veRGqKp < result.signalSemaphoreCount; veRGqKp++){
            [&]() {
temp_FvuZREg[veRGqKp]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][veRGqKp]);}();;
        }
        }();result.pSignalSemaphores=temp_FvuZREg;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_xhGIiUY=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_bTdxZSm=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_SDarHlT=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_lLSKCVk=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_wItQdFp=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_XpDYdnq=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_NXFZwjJ=json({});
    
        return_NXFZwjJ["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_UODtbYQ=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_NXFZwjJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_NXFZwjJ;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_vZwrBsT=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_vhhEAWk=json({});
    
        return_vhhEAWk["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_oeZjFde=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_vhhEAWk["members"][std::to_string(i)].push_back(temp);
        }
        return return_vhhEAWk;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int cLmXtiv=0; cLmXtiv < 2; cLmXtiv++){
            [&]() {
result.srcOffsets[cLmXtiv]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][cLmXtiv]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int WPRYvNI=0; WPRYvNI < 2; WPRYvNI++){
            [&]() {
result.dstOffsets[WPRYvNI]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][WPRYvNI]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_iXfabbg=json({});
    return_iXfabbg=[&]() {
    json return_oOLQTZM=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_iXfabbg;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_bTEQnJx=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_CXILvnq=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_LFzwIpZ=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_MRLFmKc=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_pQTmcJP=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_VBwspoz=json({});
    return_VBwspoz=[&]() {
    json return_inEqyii=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_VBwspoz;}();
result["members"]["dstAddress"]=[&]() {
    json return_KngtGuC=json({});
    return_KngtGuC=[&]() {
    json return_nVuPwKp=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_KngtGuC;}();
result["members"]["size"]=[&]() {
    json return_LXhWGTl=json({});
    return_LXhWGTl=[&]() {
    json return_FyqAJcD=json({});
    return serialize_uint64_t(name.size);}();return return_LXhWGTl;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_zYKBiEE=json({});
    return_zYKBiEE=[&]() {
    json return_usapVFV=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_zYKBiEE;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_XbfHmiG=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_lklZQRP=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_GTZCgYW=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_EKtIJmn=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_kLOLAsA=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_TIagkuI=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_RkcRpoF=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_xFvMNPL=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_kZEvFJN=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_QCFCIMb=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JGjrxtD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HOfXJBC=json({});
    
        if (name.pNext==NULL){
            return_HOfXJBC["null"]=true;
            return return_HOfXJBC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TgYTUMx=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_FsyVrBt=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_YrrqNvf=json({});
    
        if (name.pCode==NULL){
            return_YrrqNvf["null"]=true;
            return return_YrrqNvf;
        }
        
        return_YrrqNvf["members"]={};
        for(int i=0; i < name.codeSize / 4; i++){
            json temp;
            temp=[&]() {
    json return_dxthpKY=json({});
    return serialize_uint32_t(name.pCode[i]);}();
            return_YrrqNvf["members"][std::to_string(i)].push_back(temp);
        }
        return return_YrrqNvf;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qpDgZiX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qpDgZiX=NULL;
        }
    temp_qpDgZiX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qpDgZiX;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_toMvPxj;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_toMvPxj=NULL;
        }
    temp_toMvPxj=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int sxyvUkt=0; sxyvUkt < result.codeSize / 4; sxyvUkt++){
            [&]() {
temp_toMvPxj[sxyvUkt]=deserialize_uint32_t(name["members"]["pCode"]["members"][sxyvUkt]);}();;
        }
        }();result.pCode=temp_toMvPxj;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_SvQBiYD=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_ZuVfdLq=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_bpWRUmw=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_RMfeIPN=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_xSbGkWh=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_xSbGkWh["null"]=true;
            return return_xSbGkWh;
        }
        
        return_xSbGkWh["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_NqJfNjf=json({});
    return serialize_VkSampler(name.pImmutableSamplers[i]);}();
            return_xSbGkWh["members"][std::to_string(i)].push_back(temp);
        }
        return return_xSbGkWh;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_zPLBSQF;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_zPLBSQF=NULL;
        }
    temp_zPLBSQF=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int qEPTBzS=0; qEPTBzS < result.descriptorCount; qEPTBzS++){
            [&]() {
temp_zPLBSQF[qEPTBzS]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][qEPTBzS]);}();;
        }
        }();result.pImmutableSamplers=temp_zPLBSQF;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sAZJjqV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GKWvIAX=json({});
    
        if (name.pNext==NULL){
            return_GKWvIAX["null"]=true;
            return return_GKWvIAX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wbgfTKZ=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_wnuwZgF=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_QlHwMCX=json({});
    
        if (name.pBindings==NULL){
            return_QlHwMCX["null"]=true;
            return return_QlHwMCX;
        }
        
        return_QlHwMCX["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_lBIEKcE=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[i]);}();
            return_QlHwMCX["members"][std::to_string(i)].push_back(temp);
        }
        return return_QlHwMCX;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WaULbsE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WaULbsE=NULL;
        }
    temp_WaULbsE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WaULbsE;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_FlviKzz;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_FlviKzz=NULL;
        }
    temp_FlviKzz=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int krSjDLu=0; krSjDLu < result.bindingCount; krSjDLu++){
            [&]() {
temp_FlviKzz[krSjDLu]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][krSjDLu]);}();;
        }
        }();result.pBindings=temp_FlviKzz;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_RYvwQJV=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_XrVDLOK=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZoyVYIc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ISMSqbn=json({});
    
        if (name.pNext==NULL){
            return_ISMSqbn["null"]=true;
            return return_ISMSqbn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NNVnpnV=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_HFwOQID=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_HMJEehQ=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_iWAVDdC=json({});
    
        if (name.pPoolSizes==NULL){
            return_iWAVDdC["null"]=true;
            return return_iWAVDdC;
        }
        
        return_iWAVDdC["members"]={};
        for(int i=0; i < name.poolSizeCount; i++){
            json temp;
            temp=[&]() {
    json return_fDghojk=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[i]);}();
            return_iWAVDdC["members"][std::to_string(i)].push_back(temp);
        }
        return return_iWAVDdC;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lrBZuQv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lrBZuQv=NULL;
        }
    temp_lrBZuQv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lrBZuQv;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_nlBFDHO;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_nlBFDHO=NULL;
        }
    temp_nlBFDHO=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int LUdHBaA=0; LUdHBaA < result.poolSizeCount; LUdHBaA++){
            [&]() {
temp_nlBFDHO[LUdHBaA]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][LUdHBaA]);}();;
        }
        }();result.pPoolSizes=temp_nlBFDHO;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NPBGiaB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cgvAkwM=json({});
    
        if (name.pNext==NULL){
            return_cgvAkwM["null"]=true;
            return return_cgvAkwM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPool"]=[&]() {
    json return_UGeASyZ=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_SKkiWCS=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_lepkrWr=json({});
    
        if (name.pSetLayouts==NULL){
            return_lepkrWr["null"]=true;
            return return_lepkrWr;
        }
        
        return_lepkrWr["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_ShOajPZ=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_lepkrWr["members"][std::to_string(i)].push_back(temp);
        }
        return return_lepkrWr;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jfQDZDU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jfQDZDU=NULL;
        }
    temp_jfQDZDU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jfQDZDU;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_xEGgfhz;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_xEGgfhz=NULL;
        }
    temp_xEGgfhz=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int bCwwfnI=0; bCwwfnI < result.descriptorSetCount; bCwwfnI++){
            [&]() {
temp_xEGgfhz[bCwwfnI]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][bCwwfnI]);}();;
        }
        }();result.pSetLayouts=temp_xEGgfhz;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_GoINgGp=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_RjZxSCV=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_GNsCEfz=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_bfaLSrf=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_FGNXFpI=json({});
    
        if (name.pMapEntries==NULL){
            return_FGNXFpI["null"]=true;
            return return_FGNXFpI;
        }
        
        return_FGNXFpI["members"]={};
        for(int i=0; i < name.mapEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_oGqSXAn=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[i]);}();
            return_FGNXFpI["members"][std::to_string(i)].push_back(temp);
        }
        return return_FGNXFpI;
        }();
result["members"]["dataSize"]=[&]() {
    json return_EqNHYWS=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_gOGPbby=json({});
    
        if (name.pData==NULL){
            return_gOGPbby["null"]=true;
            return return_gOGPbby;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_PXwBhLb;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_PXwBhLb=NULL;
        }
    temp_PXwBhLb=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int vdGlrEu=0; vdGlrEu < result.mapEntryCount; vdGlrEu++){
            [&]() {
temp_PXwBhLb[vdGlrEu]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][vdGlrEu]);}();;
        }
        }();result.pMapEntries=temp_PXwBhLb;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_qgHHubl;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_qgHHubl=NULL;
        }
    temp_qgHHubl=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_qgHHubl;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WTJuepH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Pfcukqy=json({});
    
        if (name.pNext==NULL){
            return_Pfcukqy["null"]=true;
            return return_Pfcukqy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_izsEiQV=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_lsfJwhp=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_FcnGzfz=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_vewVEwy=json({});
    
        if (name.pName==NULL){
            return_vewVEwy["null"]=true;
            return return_vewVEwy;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pName"]=[&]() {
    json return_rGvDmqG=json({});
    
        if (name.pName==NULL){
            return_rGvDmqG["null"]=true;
            return return_rGvDmqG;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_GFWIVKg=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_GFWIVKg["null"]=true;
            return return_GFWIVKg;
        }
        return_GFWIVKg=[&]() {
    json return_kkSAjFX=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_GFWIVKg;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aEidpAB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aEidpAB=NULL;
        }
    temp_aEidpAB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aEidpAB;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_KHBgTIz;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_KHBgTIz=NULL;
        }
    temp_KHBgTIz=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_KHBgTIz;}();
[&]() {
char* temp_EKPtwuH;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_EKPtwuH=NULL;
        }
    temp_EKPtwuH=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_EKPtwuH;}();
[&]() {
VkSpecializationInfo* temp_vXfJKpI;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_vXfJKpI=NULL;
        }
    [&]() {
*(temp_vXfJKpI)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_vXfJKpI;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Fxjirpb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLhxGvI=json({});
    
        if (name.pNext==NULL){
            return_kLhxGvI["null"]=true;
            return return_kLhxGvI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JlBvPuE=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_cwxWQPh=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_sBvYWFf=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_SklCTKc=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_pjKelVv=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DhRpjnZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DhRpjnZ=NULL;
        }
    temp_DhRpjnZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DhRpjnZ;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sbJJdxd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rmBDmmd=json({});
    
        if (name.pNext==NULL){
            return_rmBDmmd["null"]=true;
            return return_rmBDmmd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_KxZoSFB=json({});
    return_KxZoSFB=[&]() {
    json return_fTXZaPI=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_KxZoSFB;}();
result["members"]["size"]=[&]() {
    json return_DCvFfqr=json({});
    return_DCvFfqr=[&]() {
    json return_HGIOpiy=json({});
    return serialize_uint64_t(name.size);}();return return_DCvFfqr;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_BiIbYII=json({});
    return_BiIbYII=[&]() {
    json return_LqrZrDY=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_BiIbYII;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iDgKTDM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iDgKTDM=NULL;
        }
    temp_iDgKTDM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iDgKTDM;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AmrBaLX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YdPOULy=json({});
    
        if (name.pNext==NULL){
            return_YdPOULy["null"]=true;
            return return_YdPOULy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zfxfmyu=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wLQKwpc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wLQKwpc=NULL;
        }
    temp_wLQKwpc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wLQKwpc;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_ukTUuGv=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_qqLBXSc=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_sWJjdXL=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_khsAqlT=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_VIXhQNR=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_lMWSNHC=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_eFXsqqw=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XiMKmzw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ePcILXJ=json({});
    
        if (name.pNext==NULL){
            return_ePcILXJ["null"]=true;
            return return_ePcILXJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZJzcYak=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_uRCqRde=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_GmPILar=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_GmPILar["null"]=true;
            return return_GmPILar;
        }
        
        return_GmPILar["members"]={};
        for(int i=0; i < name.vertexBindingDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_VZDkxzg=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[i]);}();
            return_GmPILar["members"][std::to_string(i)].push_back(temp);
        }
        return return_GmPILar;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_PNlIVvq=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_jynzTbM=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_jynzTbM["null"]=true;
            return return_jynzTbM;
        }
        
        return_jynzTbM["members"]={};
        for(int i=0; i < name.vertexAttributeDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_HvpFctR=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[i]);}();
            return_jynzTbM["members"][std::to_string(i)].push_back(temp);
        }
        return return_jynzTbM;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iIbSJHQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iIbSJHQ=NULL;
        }
    temp_iIbSJHQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iIbSJHQ;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_FqPUvus;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_FqPUvus=NULL;
        }
    temp_FqPUvus=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int iDAQzEK=0; iDAQzEK < result.vertexBindingDescriptionCount; iDAQzEK++){
            [&]() {
temp_FqPUvus[iDAQzEK]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][iDAQzEK]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_FqPUvus;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_gGDKlSA;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_gGDKlSA=NULL;
        }
    temp_gGDKlSA=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int LwLbcGt=0; LwLbcGt < result.vertexAttributeDescriptionCount; LwLbcGt++){
            [&]() {
temp_gGDKlSA[LwLbcGt]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][LwLbcGt]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_gGDKlSA;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BEyJAar=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QDPdOqM=json({});
    
        if (name.pNext==NULL){
            return_QDPdOqM["null"]=true;
            return return_QDPdOqM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yNseOdg=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_urqplMv=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_BGwyLPQ=json({});
    return_BGwyLPQ=[&]() {
    json return_NBrztYm=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_BGwyLPQ;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QJUcKCu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QJUcKCu=NULL;
        }
    temp_QJUcKCu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QJUcKCu;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TugNaRJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jYFFqmh=json({});
    
        if (name.pNext==NULL){
            return_jYFFqmh["null"]=true;
            return return_jYFFqmh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_htMoVTH=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_TPnJxmj=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NwFASRm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NwFASRm=NULL;
        }
    temp_NwFASRm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NwFASRm;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XOHwQfA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wqUsqeu=json({});
    
        if (name.pNext==NULL){
            return_wqUsqeu["null"]=true;
            return return_wqUsqeu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_woORbWY=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_PMSRVeh=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_uhDaSox=json({});
    
        if (name.pViewports==NULL){
            return_uhDaSox["null"]=true;
            return return_uhDaSox;
        }
        
        return_uhDaSox["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_zzmmijX=json({});
    return serialize_VkViewport(name.pViewports[i]);}();
            return_uhDaSox["members"][std::to_string(i)].push_back(temp);
        }
        return return_uhDaSox;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_SVIGjpf=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_oJbuNsf=json({});
    
        if (name.pScissors==NULL){
            return_oJbuNsf["null"]=true;
            return return_oJbuNsf;
        }
        
        return_oJbuNsf["members"]={};
        for(int i=0; i < name.scissorCount; i++){
            json temp;
            temp=[&]() {
    json return_QeqsABg=json({});
    return serialize_VkRect2D(name.pScissors[i]);}();
            return_oJbuNsf["members"][std::to_string(i)].push_back(temp);
        }
        return return_oJbuNsf;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RiMTRze;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RiMTRze=NULL;
        }
    temp_RiMTRze=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RiMTRze;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_qYmiNnj;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_qYmiNnj=NULL;
        }
    temp_qYmiNnj=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int CKiyvLA=0; CKiyvLA < result.viewportCount; CKiyvLA++){
            [&]() {
temp_qYmiNnj[CKiyvLA]=deserialize_VkViewport(name["members"]["pViewports"]["members"][CKiyvLA]);}();;
        }
        }();result.pViewports=temp_qYmiNnj;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_mBRDHlc;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_mBRDHlc=NULL;
        }
    temp_mBRDHlc=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int vDABHWG=0; vDABHWG < result.scissorCount; vDABHWG++){
            [&]() {
temp_mBRDHlc[vDABHWG]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][vDABHWG]);}();;
        }
        }();result.pScissors=temp_mBRDHlc;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WahxZVw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mnQyhAQ=json({});
    
        if (name.pNext==NULL){
            return_mnQyhAQ["null"]=true;
            return return_mnQyhAQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PqGMoXi=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_HmcZCwy=json({});
    return_HmcZCwy=[&]() {
    json return_stYUTON=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_HmcZCwy;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_NnYCEmF=json({});
    return_NnYCEmF=[&]() {
    json return_buPZKkY=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_NnYCEmF;}();
result["members"]["polygonMode"]=[&]() {
    json return_cfTQVGg=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_BDFcnKw=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_LkizJpP=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_HBexNCo=json({});
    return_HBexNCo=[&]() {
    json return_beKQLdJ=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_HBexNCo;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_rqcrDOG=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_SXXSeME=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_uxpdvHe=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_TqCnJRe=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dluLyHF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dluLyHF=NULL;
        }
    temp_dluLyHF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dluLyHF;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OyemmOP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zgpwdjP=json({});
    
        if (name.pNext==NULL){
            return_zgpwdjP["null"]=true;
            return return_zgpwdjP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xPEqtqf=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_VqXHNcf=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_xZyXeBz=json({});
    return_xZyXeBz=[&]() {
    json return_bxezPUn=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_xZyXeBz;}();
result["members"]["minSampleShading"]=[&]() {
    json return_icBZZyZ=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_GLgGeFz=json({});
    
        if (name.pSampleMask==NULL){
            return_GLgGeFz["null"]=true;
            return return_GLgGeFz;
        }
        
        return_GLgGeFz["members"]={};
        for(int i=0; i < (name.rasterizationSamples + 31) / 32; i++){
            json temp;
            temp=[&]() {
    json return_lkGPoaW=json({});
    return_lkGPoaW=[&]() {
    json return_XYOMSnT=json({});
    return serialize_uint32_t(name.pSampleMask[i]);}();return return_lkGPoaW;}();
            return_GLgGeFz["members"][std::to_string(i)].push_back(temp);
        }
        return return_GLgGeFz;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_QlzhUNi=json({});
    return_QlzhUNi=[&]() {
    json return_heZfACJ=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_QlzhUNi;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_bkGicHm=json({});
    return_bkGicHm=[&]() {
    json return_GxfWRUz=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_bkGicHm;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZqdtXqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZqdtXqv=NULL;
        }
    temp_ZqdtXqv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZqdtXqv;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_lgRshDs;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_lgRshDs=NULL;
        }
    temp_lgRshDs=(VkSampleMask*)malloc((result.rasterizationSamples + 31) / 32*sizeof(VkSampleMask));
        for (int tifJdfW=0; tifJdfW < (result.rasterizationSamples + 31) / 32; tifJdfW++){
            [&]() {
[&]() {
temp_lgRshDs[tifJdfW]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][tifJdfW]);}();}();;
        }
        }();result.pSampleMask=temp_lgRshDs;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_DOgyIGH=json({});
    return_DOgyIGH=[&]() {
    json return_urcUvYx=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_DOgyIGH;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_OAuPCzF=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_gdbhjwg=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_lPfQSdc=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_ZSrARxO=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_xKEksLS=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_CMZUhZO=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_JjweoXW=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FHEHGUR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yFuOBln=json({});
    
        if (name.pNext==NULL){
            return_yFuOBln["null"]=true;
            return return_yFuOBln;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vyXWcOn=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_qbQwUvc=json({});
    return_qbQwUvc=[&]() {
    json return_RhBPlNz=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_qbQwUvc;}();
result["members"]["logicOp"]=[&]() {
    json return_sNfGymM=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_agppwyq=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_ZQCMhrb=json({});
    
        if (name.pAttachments==NULL){
            return_ZQCMhrb["null"]=true;
            return return_ZQCMhrb;
        }
        
        return_ZQCMhrb["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_cBGlUkF=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[i]);}();
            return_ZQCMhrb["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZQCMhrb;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_bWigIzZ=json({});
    
        return_bWigIzZ["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_efVDFUQ=json({});
    return serialize_float(name.blendConstants[i]);}();
            return_bWigIzZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_bWigIzZ;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ytwwmPk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ytwwmPk=NULL;
        }
    temp_ytwwmPk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ytwwmPk;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_RyNUxkf;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_RyNUxkf=NULL;
        }
    temp_RyNUxkf=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int qdjGoCM=0; qdjGoCM < result.attachmentCount; qdjGoCM++){
            [&]() {
temp_RyNUxkf[qdjGoCM]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][qdjGoCM]);}();;
        }
        }();result.pAttachments=temp_RyNUxkf;}();
[&]() {

        for (int lcVReal=0; lcVReal < 4; lcVReal++){
            [&]() {
result.blendConstants[lcVReal]=deserialize_float(name["members"]["blendConstants"]["members"][lcVReal]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WfqVaKf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KrwqwHd=json({});
    
        if (name.pNext==NULL){
            return_KrwqwHd["null"]=true;
            return return_KrwqwHd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gVkRedm=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_gSmwxUL=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_QkwhGrP=json({});
    
        if (name.pDynamicStates==NULL){
            return_QkwhGrP["null"]=true;
            return return_QkwhGrP;
        }
        
        return_QkwhGrP["members"]={};
        for(int i=0; i < name.dynamicStateCount; i++){
            json temp;
            temp=[&]() {
    json return_uBNjLqb=json({});
    return serialize_VkDynamicState(name.pDynamicStates[i]);}();
            return_QkwhGrP["members"][std::to_string(i)].push_back(temp);
        }
        return return_QkwhGrP;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KBOJTDM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KBOJTDM=NULL;
        }
    temp_KBOJTDM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KBOJTDM;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_PCFRCrK;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_PCFRCrK=NULL;
        }
    temp_PCFRCrK=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int YawccdO=0; YawccdO < result.dynamicStateCount; YawccdO++){
            [&]() {
temp_PCFRCrK[YawccdO]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][YawccdO]);}();;
        }
        }();result.pDynamicStates=temp_PCFRCrK;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_kdaUNoQ=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_yDiQVTl=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_gPzdYsk=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_FOaIbWk=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_jRPYOsm=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_NCaJPbJ=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_qJYuHLG=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ElvunBN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nVkxouX=json({});
    
        if (name.pNext==NULL){
            return_nVkxouX["null"]=true;
            return return_nVkxouX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tloWGIZ=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_zdVPzkY=json({});
    return_zdVPzkY=[&]() {
    json return_qxawaYH=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_zdVPzkY;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_oYOKyfP=json({});
    return_oYOKyfP=[&]() {
    json return_iUTEJrv=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_oYOKyfP;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_rYTZYPs=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_VYdMOaT=json({});
    return_VYdMOaT=[&]() {
    json return_ZfjJOCj=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_VYdMOaT;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_HNPyHls=json({});
    return_HNPyHls=[&]() {
    json return_VohAtLT=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_HNPyHls;}();
result["members"]["front"]=[&]() {
    json return_OgThBwg=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_eMzRDfn=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_QbtvAOr=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_yvKwVvF=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cVjrazp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cVjrazp=NULL;
        }
    temp_cVjrazp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cVjrazp;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oswlpBv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FauMODe=json({});
    
        if (name.pNext==NULL){
            return_FauMODe["null"]=true;
            return return_FauMODe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nvbbUxU=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_JzfgmNX=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_qbDbQnQ=json({});
    
        if (name.pStages==NULL){
            return_qbDbQnQ["null"]=true;
            return return_qbDbQnQ;
        }
        
        return_qbDbQnQ["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_RELXVAm=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_qbDbQnQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_qbDbQnQ;
        }();
result["members"]["pStages"]=[&]() {
    json return_KXpcevO=json({});
    
        if (name.pStages==NULL){
            return_KXpcevO["null"]=true;
            return return_KXpcevO;
        }
        
        return_KXpcevO["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_IhKwmgb=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_KXpcevO["members"][std::to_string(i)].push_back(temp);
        }
        return return_KXpcevO;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_GvIoJja=json({});
    
        if (name.pVertexInputState==NULL){
            return_GvIoJja["null"]=true;
            return return_GvIoJja;
        }
        return_GvIoJja=[&]() {
    json return_uGgCWNa=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_GvIoJja;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_CZjxqLd=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_CZjxqLd["null"]=true;
            return return_CZjxqLd;
        }
        return_CZjxqLd=[&]() {
    json return_TMOwKjP=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_CZjxqLd;}();
result["members"]["pTessellationState"]=[&]() {
    json return_QIjCySU=json({});
    
        if (name.pTessellationState==NULL){
            return_QIjCySU["null"]=true;
            return return_QIjCySU;
        }
        return_QIjCySU=[&]() {
    json return_LTnlqdk=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_QIjCySU;}();
result["members"]["pViewportState"]=[&]() {
    json return_GdBrjNs=json({});
    
        if (name.pViewportState==NULL){
            return_GdBrjNs["null"]=true;
            return return_GdBrjNs;
        }
        return_GdBrjNs=[&]() {
    json return_ruTTvth=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_GdBrjNs;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_WZfcDfJ=json({});
    
        if (name.pRasterizationState==NULL){
            return_WZfcDfJ["null"]=true;
            return return_WZfcDfJ;
        }
        return_WZfcDfJ=[&]() {
    json return_DzoGLdn=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_WZfcDfJ;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_LOwIxAp=json({});
    
        if (name.pMultisampleState==NULL){
            return_LOwIxAp["null"]=true;
            return return_LOwIxAp;
        }
        return_LOwIxAp=[&]() {
    json return_CbupPIH=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_LOwIxAp;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_BOToyyB=json({});
    
        if (name.pDepthStencilState==NULL){
            return_BOToyyB["null"]=true;
            return return_BOToyyB;
        }
        return_BOToyyB=[&]() {
    json return_CgusCLR=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_BOToyyB;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_KDxYQlB=json({});
    
        if (name.pColorBlendState==NULL){
            return_KDxYQlB["null"]=true;
            return return_KDxYQlB;
        }
        return_KDxYQlB=[&]() {
    json return_NxkXLzY=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_KDxYQlB;}();
result["members"]["pDynamicState"]=[&]() {
    json return_FyMnKzn=json({});
    
        if (name.pDynamicState==NULL){
            return_FyMnKzn["null"]=true;
            return return_FyMnKzn;
        }
        return_FyMnKzn=[&]() {
    json return_vUKYKMM=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_FyMnKzn;}();
result["members"]["layout"]=[&]() {
    json return_QXSVTsT=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_skdKDQl=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_YklXmee=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_bBCpupZ=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_jCQyOrM=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BqnUrVA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BqnUrVA=NULL;
        }
    temp_BqnUrVA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BqnUrVA;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_EUWFsPn;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_EUWFsPn=NULL;
        }
    temp_EUWFsPn=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int YITCJNZ=0; YITCJNZ < result.stageCount; YITCJNZ++){
            [&]() {
temp_EUWFsPn[YITCJNZ]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][YITCJNZ]);}();;
        }
        }();result.pStages=temp_EUWFsPn;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_RXyqatZ;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_RXyqatZ=NULL;
        }
    temp_RXyqatZ=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int FpGyecq=0; FpGyecq < result.stageCount; FpGyecq++){
            [&]() {
temp_RXyqatZ[FpGyecq]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][FpGyecq]);}();;
        }
        }();result.pStages=temp_RXyqatZ;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_NsVfWeB;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_NsVfWeB=NULL;
        }
    [&]() {
*(temp_NsVfWeB)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_NsVfWeB;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_TUEyIGt;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_TUEyIGt=NULL;
        }
    [&]() {
*(temp_TUEyIGt)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_TUEyIGt;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_FrMaYDe;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_FrMaYDe=NULL;
        }
    [&]() {
*(temp_FrMaYDe)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_FrMaYDe;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_njXJuQq;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_njXJuQq=NULL;
        }
    [&]() {
*(temp_njXJuQq)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_njXJuQq;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_MaDMhvd;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_MaDMhvd=NULL;
        }
    [&]() {
*(temp_MaDMhvd)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_MaDMhvd;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_MpfYiAg;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_MpfYiAg=NULL;
        }
    [&]() {
*(temp_MpfYiAg)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_MpfYiAg;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_apOlCbm;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_apOlCbm=NULL;
        }
    [&]() {
*(temp_apOlCbm)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_apOlCbm;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_MOkZQAK;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_MOkZQAK=NULL;
        }
    [&]() {
*(temp_MOkZQAK)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_MOkZQAK;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_zdyixti;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_zdyixti=NULL;
        }
    [&]() {
*(temp_zdyixti)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_zdyixti;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bELyjil=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXrfabv=json({});
    
        if (name.pNext==NULL){
            return_QXrfabv["null"]=true;
            return return_QXrfabv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xBJiZMw=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_rdxhgli=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_VTEvSWd=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_GBMXwbZ=json({});
    
        if (name.pInitialData==NULL){
            return_GBMXwbZ["null"]=true;
            return return_GBMXwbZ;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QqwgwYD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QqwgwYD=NULL;
        }
    temp_QqwgwYD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QqwgwYD;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_WtEdavk;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_WtEdavk=NULL;
        }
    temp_WtEdavk=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_WtEdavk;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_sIyOywm=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_EqdGHYT=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_kBTgNBK=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_qIPyLGQ=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_QBsQRky=json({});
    
        return_QBsQRky["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_tdrxnlK=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_QBsQRky["members"][std::to_string(i)].push_back(temp);
        }
        return return_QBsQRky;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int BguskTd=0; BguskTd < VK_UUID_SIZE; BguskTd++){
            [&]() {
result.pipelineCacheUUID[BguskTd]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][BguskTd]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_ohBEwbh=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_gaKvtKw=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_JUDdApd=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MvIFpaG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bGWwaWG=json({});
    
        if (name.pNext==NULL){
            return_bGWwaWG["null"]=true;
            return return_bGWwaWG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LSVnAZU=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_nMsiBtX=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_IRAhQFL=json({});
    
        if (name.pSetLayouts==NULL){
            return_IRAhQFL["null"]=true;
            return return_IRAhQFL;
        }
        
        return_IRAhQFL["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_lhbVFUi=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_IRAhQFL["members"][std::to_string(i)].push_back(temp);
        }
        return return_IRAhQFL;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_qkvfzjo=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_wINPQrx=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_wINPQrx["null"]=true;
            return return_wINPQrx;
        }
        
        return_wINPQrx["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_cCwHOGv=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_wINPQrx["members"][std::to_string(i)].push_back(temp);
        }
        return return_wINPQrx;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xtMZdDO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xtMZdDO=NULL;
        }
    temp_xtMZdDO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xtMZdDO;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_LcnSMsF;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_LcnSMsF=NULL;
        }
    temp_LcnSMsF=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int EJmxjRD=0; EJmxjRD < result.setLayoutCount; EJmxjRD++){
            [&]() {
temp_LcnSMsF[EJmxjRD]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][EJmxjRD]);}();;
        }
        }();result.pSetLayouts=temp_LcnSMsF;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_LuUyLCB;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_LuUyLCB=NULL;
        }
    temp_LuUyLCB=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int NPJvXaV=0; NPJvXaV < result.pushConstantRangeCount; NPJvXaV++){
            [&]() {
temp_LuUyLCB[NPJvXaV]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][NPJvXaV]);}();;
        }
        }();result.pPushConstantRanges=temp_LuUyLCB;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OjyPyQz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BAyJVsB=json({});
    
        if (name.pNext==NULL){
            return_BAyJVsB["null"]=true;
            return return_BAyJVsB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fOUmRAS=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_CmIrOuk=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_UfMipcu=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_tASZmSQ=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_ygwNKCE=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_wTATIYt=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_JZEPmQL=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_RoAwPhP=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_XjGimgk=json({});
    return_XjGimgk=[&]() {
    json return_wBwHuBl=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_XjGimgk;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_VdoqULf=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_UWdwcOJ=json({});
    return_UWdwcOJ=[&]() {
    json return_uGstKxO=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_UWdwcOJ;}();
result["members"]["compareOp"]=[&]() {
    json return_ApvFWhu=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_dqAKkWF=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_jYErbIy=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_pQJUCiD=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_wUcbWvQ=json({});
    return_wUcbWvQ=[&]() {
    json return_ztIizfd=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_wUcbWvQ;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lOacyPk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lOacyPk=NULL;
        }
    temp_lOacyPk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lOacyPk;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HxcKSZt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zLaTYBT=json({});
    
        if (name.pNext==NULL){
            return_zLaTYBT["null"]=true;
            return return_zLaTYBT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QoawhgX=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_MSVedwi=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_niiMgzu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_niiMgzu=NULL;
        }
    temp_niiMgzu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_niiMgzu;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OZUGNar=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BZXenNa=json({});
    
        if (name.pNext==NULL){
            return_BZXenNa["null"]=true;
            return return_BZXenNa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandPool"]=[&]() {
    json return_VLgaXeW=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_rrDsPds=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_CitKKqO=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RmMehGM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RmMehGM=NULL;
        }
    temp_RmMehGM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RmMehGM;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bAJrSUv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JwshUXh=json({});
    
        if (name.pNext==NULL){
            return_JwshUXh["null"]=true;
            return return_JwshUXh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_DjKCeps=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_hQQsDDT=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_iLTJLNC=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_QHoGOle=json({});
    return_QHoGOle=[&]() {
    json return_MXQwXuz=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_QHoGOle;}();
result["members"]["queryFlags"]=[&]() {
    json return_VtuAORv=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_nejsEpz=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RaSTKtG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RaSTKtG=NULL;
        }
    temp_RaSTKtG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RaSTKtG;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PzDYGvb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YmsxafJ=json({});
    
        if (name.pNext==NULL){
            return_YmsxafJ["null"]=true;
            return return_YmsxafJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JjxAIyF=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_lDQxnRC=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_lDQxnRC["null"]=true;
            return return_lDQxnRC;
        }
        return_lDQxnRC=[&]() {
    json return_CrKwvOo=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_lDQxnRC;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kvFnDyv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kvFnDyv=NULL;
        }
    temp_kvFnDyv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kvFnDyv;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_UsnAizl;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_UsnAizl=NULL;
        }
    [&]() {
*(temp_UsnAizl)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_UsnAizl;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ToWjwNX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ocPwFuu=json({});
    
        if (name.pNext==NULL){
            return_ocPwFuu["null"]=true;
            return return_ocPwFuu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_oVTxNjH=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_NtuufWk=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_xqHVjhc=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_hKHWUIj=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_HpbABaF=json({});
    
        if (name.pClearValues==NULL){
            return_HpbABaF["null"]=true;
            return return_HpbABaF;
        }
        
        return_HpbABaF["members"]={};
        for(int i=0; i < name.clearValueCount; i++){
            json temp;
            temp=[&]() {
    json return_ymWAjrE=json({});
    return serialize_VkClearValue(name.pClearValues[i]);}();
            return_HpbABaF["members"][std::to_string(i)].push_back(temp);
        }
        return return_HpbABaF;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gqqxqdI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gqqxqdI=NULL;
        }
    temp_gqqxqdI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gqqxqdI;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_SmXJCVd;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_SmXJCVd=NULL;
        }
    temp_SmXJCVd=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int bdliHeX=0; bdliHeX < result.clearValueCount; bdliHeX++){
            [&]() {
temp_SmXJCVd[bdliHeX]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][bdliHeX]);}();;
        }
        }();result.pClearValues=temp_SmXJCVd;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_BrFwTIZ=json({});
    
        return_BrFwTIZ["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_ixoqzWc=json({});
    return serialize_float(name.float32[i]);}();
            return_BrFwTIZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_BrFwTIZ;
        }();
result["members"]["int32"]=[&]() {
    json return_MAqrzCH=json({});
    
        return_MAqrzCH["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_IVKdEse=json({});
    return serialize_int32_t(name.int32[i]);}();
            return_MAqrzCH["members"][std::to_string(i)].push_back(temp);
        }
        return return_MAqrzCH;
        }();
result["members"]["uint32"]=[&]() {
    json return_fYWSQDf=json({});
    
        return_fYWSQDf["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_LCthfhJ=json({});
    return serialize_uint32_t(name.uint32[i]);}();
            return_fYWSQDf["members"][std::to_string(i)].push_back(temp);
        }
        return return_fYWSQDf;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int IfcvsZg=0; IfcvsZg < 4; IfcvsZg++){
            [&]() {
result.float32[IfcvsZg]=deserialize_float(name["members"]["float32"]["members"][IfcvsZg]);}();;
        }
        }();
[&]() {

        for (int jEhilbi=0; jEhilbi < 4; jEhilbi++){
            [&]() {
result.int32[jEhilbi]=deserialize_int32_t(name["members"]["int32"]["members"][jEhilbi]);}();;
        }
        }();
[&]() {

        for (int KFWUrGY=0; KFWUrGY < 4; KFWUrGY++){
            [&]() {
result.uint32[KFWUrGY]=deserialize_uint32_t(name["members"]["uint32"]["members"][KFWUrGY]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_cPYuSRA=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_zmsbHNU=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_KhZwbwj=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_DgjoHmG=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_poFWpfo=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_voibySJ=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_DEMsEYd=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_ElKqegk=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_Senlsvv=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_NiBzqYC=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_oYJLxoN=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_HBRHjxL=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_bwUxogy=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_jynlANq=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_lJIFrAK=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_RKRuTSK=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_vGdoEfQ=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_lnEcNEE=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_gBJvNbw=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_FWBzXiX=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_RIkDlCM=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_bYJiXEi=json({});
    
        if (name.pInputAttachments==NULL){
            return_bYJiXEi["null"]=true;
            return return_bYJiXEi;
        }
        
        return_bYJiXEi["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_VpOOfHM=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[i]);}();
            return_bYJiXEi["members"][std::to_string(i)].push_back(temp);
        }
        return return_bYJiXEi;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ovWFPza=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_fKitEfH=json({});
    
        if (name.pColorAttachments==NULL){
            return_fKitEfH["null"]=true;
            return return_fKitEfH;
        }
        
        return_fKitEfH["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_OEgZkLj=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[i]);}();
            return_fKitEfH["members"][std::to_string(i)].push_back(temp);
        }
        return return_fKitEfH;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_RsjVjKz=json({});
    
        if (name.pResolveAttachments==NULL){
            return_RsjVjKz["null"]=true;
            return return_RsjVjKz;
        }
        
        return_RsjVjKz["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_PhQqWUd=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[i]);}();
            return_RsjVjKz["members"][std::to_string(i)].push_back(temp);
        }
        return return_RsjVjKz;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_IPPWAOD=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_IPPWAOD["null"]=true;
            return return_IPPWAOD;
        }
        return_IPPWAOD=[&]() {
    json return_WdwDMzQ=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_IPPWAOD;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_aEMqzuQ=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_wiDwqco=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_wiDwqco["null"]=true;
            return return_wiDwqco;
        }
        
        return_wiDwqco["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_KFeGQDK=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_wiDwqco["members"][std::to_string(i)].push_back(temp);
        }
        return return_wiDwqco;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_IqPQAeR;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_IqPQAeR=NULL;
        }
    temp_IqPQAeR=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int oWuLwGz=0; oWuLwGz < result.inputAttachmentCount; oWuLwGz++){
            [&]() {
temp_IqPQAeR[oWuLwGz]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][oWuLwGz]);}();;
        }
        }();result.pInputAttachments=temp_IqPQAeR;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_JFlvoFi;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_JFlvoFi=NULL;
        }
    temp_JFlvoFi=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int CwqZELt=0; CwqZELt < result.colorAttachmentCount; CwqZELt++){
            [&]() {
temp_JFlvoFi[CwqZELt]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][CwqZELt]);}();;
        }
        }();result.pColorAttachments=temp_JFlvoFi;}();
[&]() {
VkAttachmentReference* temp_DWhQbzI;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_DWhQbzI=NULL;
        }
    temp_DWhQbzI=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int wmLDwdi=0; wmLDwdi < result.colorAttachmentCount; wmLDwdi++){
            [&]() {
temp_DWhQbzI[wmLDwdi]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][wmLDwdi]);}();;
        }
        }();result.pResolveAttachments=temp_DWhQbzI;}();
[&]() {
VkAttachmentReference* temp_iVmnSsj;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_iVmnSsj=NULL;
        }
    [&]() {
*(temp_iVmnSsj)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_iVmnSsj;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_tUqmiXl;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_tUqmiXl=NULL;
        }
    temp_tUqmiXl=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int OtJINlg=0; OtJINlg < result.preserveAttachmentCount; OtJINlg++){
            [&]() {
temp_tUqmiXl[OtJINlg]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][OtJINlg]);}();;
        }
        }();result.pPreserveAttachments=temp_tUqmiXl;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_usodYSp=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_jFGUjmd=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_BJIFCwy=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_EHHjoXq=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_BckrTeD=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_wAWLERp=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_iNQQVNF=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DHqqwrS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DcEggXH=json({});
    
        if (name.pNext==NULL){
            return_DcEggXH["null"]=true;
            return return_DcEggXH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_itFozsL=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_rYptJBG=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_WgdFLkT=json({});
    
        if (name.pAttachments==NULL){
            return_WgdFLkT["null"]=true;
            return return_WgdFLkT;
        }
        
        return_WgdFLkT["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_NHbGODT=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[i]);}();
            return_WgdFLkT["members"][std::to_string(i)].push_back(temp);
        }
        return return_WgdFLkT;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_SpKdKGu=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_EGvZhKp=json({});
    
        if (name.pSubpasses==NULL){
            return_EGvZhKp["null"]=true;
            return return_EGvZhKp;
        }
        
        return_EGvZhKp["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_iifQllq=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[i]);}();
            return_EGvZhKp["members"][std::to_string(i)].push_back(temp);
        }
        return return_EGvZhKp;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eAZCrbq=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_xZFmbEi=json({});
    
        if (name.pDependencies==NULL){
            return_xZFmbEi["null"]=true;
            return return_xZFmbEi;
        }
        
        return_xZFmbEi["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_aSqyTjN=json({});
    return serialize_VkSubpassDependency(name.pDependencies[i]);}();
            return_xZFmbEi["members"][std::to_string(i)].push_back(temp);
        }
        return return_xZFmbEi;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lyNkHIe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lyNkHIe=NULL;
        }
    temp_lyNkHIe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lyNkHIe;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_EGuDvVo;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_EGuDvVo=NULL;
        }
    temp_EGuDvVo=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int BOiUkBi=0; BOiUkBi < result.attachmentCount; BOiUkBi++){
            [&]() {
temp_EGuDvVo[BOiUkBi]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][BOiUkBi]);}();;
        }
        }();result.pAttachments=temp_EGuDvVo;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_pegmYLL;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_pegmYLL=NULL;
        }
    temp_pegmYLL=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int vcvFDQY=0; vcvFDQY < result.subpassCount; vcvFDQY++){
            [&]() {
temp_pegmYLL[vcvFDQY]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][vcvFDQY]);}();;
        }
        }();result.pSubpasses=temp_pegmYLL;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_vOBdWGI;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_vOBdWGI=NULL;
        }
    temp_vOBdWGI=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int GVKxWrh=0; GVKxWrh < result.dependencyCount; GVKxWrh++){
            [&]() {
temp_vOBdWGI[GVKxWrh]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][GVKxWrh]);}();;
        }
        }();result.pDependencies=temp_vOBdWGI;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PlEqLwp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gykgcUQ=json({});
    
        if (name.pNext==NULL){
            return_gykgcUQ["null"]=true;
            return return_gykgcUQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WGoMCMg=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gpmppHR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gpmppHR=NULL;
        }
    temp_gpmppHR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gpmppHR;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_edrfBGl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VhdEGWm=json({});
    
        if (name.pNext==NULL){
            return_VhdEGWm["null"]=true;
            return return_VhdEGWm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oiHqpgb=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TCjiBxp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TCjiBxp=NULL;
        }
    temp_TCjiBxp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TCjiBxp;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_SVNwwTH=json({});
    return_SVNwwTH=[&]() {
    json return_HyVWuiK=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_SVNwwTH;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_znVkgyf=json({});
    return_znVkgyf=[&]() {
    json return_wCkIYYm=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_znVkgyf;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_CEqMsEn=json({});
    return_CEqMsEn=[&]() {
    json return_zbFgjTf=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_CEqMsEn;}();
result["members"]["independentBlend"]=[&]() {
    json return_ShNgZeS=json({});
    return_ShNgZeS=[&]() {
    json return_VaVgBDd=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_ShNgZeS;}();
result["members"]["geometryShader"]=[&]() {
    json return_QnHfLtE=json({});
    return_QnHfLtE=[&]() {
    json return_YThmgKd=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_QnHfLtE;}();
result["members"]["tessellationShader"]=[&]() {
    json return_VaGHXqz=json({});
    return_VaGHXqz=[&]() {
    json return_YVXZSlk=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_VaGHXqz;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_kKcUiZL=json({});
    return_kKcUiZL=[&]() {
    json return_UyWAyyf=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_kKcUiZL;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_UldfiBW=json({});
    return_UldfiBW=[&]() {
    json return_qWhnuFy=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_UldfiBW;}();
result["members"]["logicOp"]=[&]() {
    json return_LWQmPuo=json({});
    return_LWQmPuo=[&]() {
    json return_LqAHdhI=json({});
    return serialize_uint32_t(name.logicOp);}();return return_LWQmPuo;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_vIeDEYM=json({});
    return_vIeDEYM=[&]() {
    json return_epxRbEd=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_vIeDEYM;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_nsUQZIv=json({});
    return_nsUQZIv=[&]() {
    json return_ZZFHBJK=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_nsUQZIv;}();
result["members"]["depthClamp"]=[&]() {
    json return_tjbViIW=json({});
    return_tjbViIW=[&]() {
    json return_ZYoRkDh=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_tjbViIW;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_pAaYJGP=json({});
    return_pAaYJGP=[&]() {
    json return_ZgRgnXs=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_pAaYJGP;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_kDwDiva=json({});
    return_kDwDiva=[&]() {
    json return_bkejeBe=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_kDwDiva;}();
result["members"]["depthBounds"]=[&]() {
    json return_OCJouKd=json({});
    return_OCJouKd=[&]() {
    json return_RYBkMtX=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_OCJouKd;}();
result["members"]["wideLines"]=[&]() {
    json return_vjLLmUZ=json({});
    return_vjLLmUZ=[&]() {
    json return_idFdXYw=json({});
    return serialize_uint32_t(name.wideLines);}();return return_vjLLmUZ;}();
result["members"]["largePoints"]=[&]() {
    json return_XfrFKvY=json({});
    return_XfrFKvY=[&]() {
    json return_MVnBHNs=json({});
    return serialize_uint32_t(name.largePoints);}();return return_XfrFKvY;}();
result["members"]["alphaToOne"]=[&]() {
    json return_uuTDNtV=json({});
    return_uuTDNtV=[&]() {
    json return_cNsYtOp=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_uuTDNtV;}();
result["members"]["multiViewport"]=[&]() {
    json return_yoeuSYN=json({});
    return_yoeuSYN=[&]() {
    json return_mAcILnA=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_yoeuSYN;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_hngzFAb=json({});
    return_hngzFAb=[&]() {
    json return_cQwGNZR=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_hngzFAb;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_HZggBRK=json({});
    return_HZggBRK=[&]() {
    json return_rSLEqMP=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_HZggBRK;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_bSnQKEb=json({});
    return_bSnQKEb=[&]() {
    json return_OsdyJqJ=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_bSnQKEb;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_LQwcBRT=json({});
    return_LQwcBRT=[&]() {
    json return_CkRspST=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_LQwcBRT;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_JxguMNJ=json({});
    return_JxguMNJ=[&]() {
    json return_fWuzfka=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_JxguMNJ;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_oyzZTHP=json({});
    return_oyzZTHP=[&]() {
    json return_tcQoiSk=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_oyzZTHP;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_vwxVtuY=json({});
    return_vwxVtuY=[&]() {
    json return_GdpFrXC=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_vwxVtuY;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_jDfpOgE=json({});
    return_jDfpOgE=[&]() {
    json return_xOdkZWs=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_jDfpOgE;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_hrwdJhz=json({});
    return_hrwdJhz=[&]() {
    json return_Ribiumw=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_hrwdJhz;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_xhBpSae=json({});
    return_xhBpSae=[&]() {
    json return_CLLfuQS=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_xhBpSae;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_DFgaFmt=json({});
    return_DFgaFmt=[&]() {
    json return_bWqXMId=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_DFgaFmt;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_JLGDhSM=json({});
    return_JLGDhSM=[&]() {
    json return_bglzlcg=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_JLGDhSM;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_LAadrvY=json({});
    return_LAadrvY=[&]() {
    json return_cBinnRp=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_LAadrvY;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_PrrnzLv=json({});
    return_PrrnzLv=[&]() {
    json return_GUJXiaw=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_PrrnzLv;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_GBQecXa=json({});
    return_GBQecXa=[&]() {
    json return_MJQYBee=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_GBQecXa;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_haQqzhk=json({});
    return_haQqzhk=[&]() {
    json return_WRjoKGp=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_haQqzhk;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_dTbZhoM=json({});
    return_dTbZhoM=[&]() {
    json return_gjJhjaG=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_dTbZhoM;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_JlzHgmW=json({});
    return_JlzHgmW=[&]() {
    json return_aSuNtZQ=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_JlzHgmW;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_MmNtTNZ=json({});
    return_MmNtTNZ=[&]() {
    json return_BsjFMJD=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_MmNtTNZ;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_oRZhBny=json({});
    return_oRZhBny=[&]() {
    json return_BtYixar=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_oRZhBny;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_JDvYrev=json({});
    return_JDvYrev=[&]() {
    json return_OQhCVoC=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_JDvYrev;}();
result["members"]["shaderInt64"]=[&]() {
    json return_aKrrpHm=json({});
    return_aKrrpHm=[&]() {
    json return_RITHRJn=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_aKrrpHm;}();
result["members"]["shaderInt16"]=[&]() {
    json return_RuvkVtt=json({});
    return_RuvkVtt=[&]() {
    json return_WsWJTkm=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_RuvkVtt;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_gcetHkK=json({});
    return_gcetHkK=[&]() {
    json return_JBJCnaF=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_gcetHkK;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_dkPyicH=json({});
    return_dkPyicH=[&]() {
    json return_HXNBwOa=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_dkPyicH;}();
result["members"]["sparseBinding"]=[&]() {
    json return_qMDTczp=json({});
    return_qMDTczp=[&]() {
    json return_bBNTDui=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_qMDTczp;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_lFTvYcd=json({});
    return_lFTvYcd=[&]() {
    json return_UpOkgzP=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_lFTvYcd;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_QZVbZRO=json({});
    return_QZVbZRO=[&]() {
    json return_PxTiKJV=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_QZVbZRO;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_qtcYOnV=json({});
    return_qtcYOnV=[&]() {
    json return_khPsruP=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_qtcYOnV;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_dybXJfS=json({});
    return_dybXJfS=[&]() {
    json return_mqLQSge=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_dybXJfS;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_uSmYIbJ=json({});
    return_uSmYIbJ=[&]() {
    json return_lvtYkas=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_uSmYIbJ;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_WpudnHj=json({});
    return_WpudnHj=[&]() {
    json return_dCHSnRV=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_WpudnHj;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_CUTsfSB=json({});
    return_CUTsfSB=[&]() {
    json return_lXGLaDp=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_CUTsfSB;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_eyKWgmv=json({});
    return_eyKWgmv=[&]() {
    json return_AjcNtIm=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_eyKWgmv;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_EqkNafw=json({});
    return_EqkNafw=[&]() {
    json return_NHXLSOA=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_EqkNafw;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_koZhHlS=json({});
    return_koZhHlS=[&]() {
    json return_LJYRgOQ=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_koZhHlS;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_wIOVNkk=json({});
    return_wIOVNkk=[&]() {
    json return_Juvgbgr=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_wIOVNkk;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_GeZuvgV=json({});
    return_GeZuvgV=[&]() {
    json return_OrtqIQY=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_GeZuvgV;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_bHiGgWQ=json({});
    return_bHiGgWQ=[&]() {
    json return_qLfFApu=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_bHiGgWQ;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_NmbZTrE=json({});
    return_NmbZTrE=[&]() {
    json return_kCRufpI=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_NmbZTrE;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_AwbdhxF=json({});
    return_AwbdhxF=[&]() {
    json return_FYUDBjz=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_AwbdhxF;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_gFTZgdb=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_iGnLdek=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_iwwfjhC=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_ImLxQtr=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_SIOhCTD=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_mpGtEpB=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_qWuoDsr=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_ZnlyrnS=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_SYQdslk=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_pqzmkci=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_juJERnN=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_bfRTYug=json({});
    return_bfRTYug=[&]() {
    json return_NBEIjjO=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_bfRTYug;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_hkbaBmy=json({});
    return_hkbaBmy=[&]() {
    json return_JMnZdrg=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_hkbaBmy;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_wPnJNHb=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_LIdvAoG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_hLCfVUJ=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_deFESFU=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_WAVqRDg=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_ehjTHiH=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_GpbJMAV=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_AeleoFU=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_lJVIHYA=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_dVNShXL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_vmMapQo=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_mnvJTJM=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_KERpSAD=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_ECmgZrO=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_YGYIRhS=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_XZwKnUT=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_tUYVhln=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_czEveqq=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_nwjxmEC=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_ePBjCTg=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_xeTBUQA=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_dBFdrbR=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_ADFXhYH=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_hGNKmMR=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_cQlUEKU=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_NYBioCM=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_mbuyfnf=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_CQGelMS=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_GnIHXJb=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_tVxpTRg=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_jiRcVLu=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_OXpzoIw=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_KDLsbhX=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_oPOgtqX=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_YzcXJUB=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_RVNGtnM=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_FpyubqP=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_dkjpGFn=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_hsTSyZw=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_FkpBqhC=json({});
    
        return_FkpBqhC["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_jbHfUrj=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[i]);}();
            return_FkpBqhC["members"][std::to_string(i)].push_back(temp);
        }
        return return_FkpBqhC;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_cItLnvH=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_wKtfaFF=json({});
    
        return_wKtfaFF["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_VndsIpd=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[i]);}();
            return_wKtfaFF["members"][std::to_string(i)].push_back(temp);
        }
        return return_wKtfaFF;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_YahFXEm=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_BLNIAQt=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_bZWHFPZ=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_dniUOaB=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_tSbPYre=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_INsrmfA=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_JpPRaaV=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_AYoMDjD=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_ecgPvMa=json({});
    
        return_ecgPvMa["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_VZjLofx=json({});
    return serialize_uint32_t(name.maxViewportDimensions[i]);}();
            return_ecgPvMa["members"][std::to_string(i)].push_back(temp);
        }
        return return_ecgPvMa;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_WYKBwOu=json({});
    
        return_WYKBwOu["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_lcibeJp=json({});
    return serialize_float(name.viewportBoundsRange[i]);}();
            return_WYKBwOu["members"][std::to_string(i)].push_back(temp);
        }
        return return_WYKBwOu;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_qkKtmHh=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_IEwGpVA=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_ptSdLsL=json({});
    return_ptSdLsL=[&]() {
    json return_QGUnLPp=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_ptSdLsL;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_gbZWlVg=json({});
    return_gbZWlVg=[&]() {
    json return_iOYGopo=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_gbZWlVg;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_RcTwCEf=json({});
    return_RcTwCEf=[&]() {
    json return_OXiFusM=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_RcTwCEf;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_JObJnsc=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_FBQyesD=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_siIkoEv=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_OCTWTsn=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_tcGqwdQ=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_xnSgTTv=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_quhJuiq=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_ZkdKDZP=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_RxswcFB=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_IVbLsea=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_odyHitp=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_dXpdZLG=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_yjzyxEE=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_HMUhmPi=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_MtgkoGR=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_ckgfLOC=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_HnFJtUt=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_qGllswC=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_YBYQBZi=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_xdenbBd=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_HENyYzd=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_TuZoRgr=json({});
    return_TuZoRgr=[&]() {
    json return_cuyHHaZ=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_TuZoRgr;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_mWFfoPG=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_ASfjCaw=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_ZLjMuyk=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_mqnNbJx=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_mTDIHNl=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_URHNitB=json({});
    
        return_URHNitB["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_ZcJhkTK=json({});
    return serialize_float(name.pointSizeRange[i]);}();
            return_URHNitB["members"][std::to_string(i)].push_back(temp);
        }
        return return_URHNitB;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_VTHNKIn=json({});
    
        return_VTHNKIn["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_fPjqjiN=json({});
    return serialize_float(name.lineWidthRange[i]);}();
            return_VTHNKIn["members"][std::to_string(i)].push_back(temp);
        }
        return return_VTHNKIn;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_ROGPKMf=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_mJaMlUV=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_rULpYsW=json({});
    return_rULpYsW=[&]() {
    json return_RmTKbky=json({});
    return serialize_uint32_t(name.strictLines);}();return return_rULpYsW;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_ixBxtby=json({});
    return_ixBxtby=[&]() {
    json return_KtdpATH=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_ixBxtby;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_kLhkdlp=json({});
    return_kLhkdlp=[&]() {
    json return_pSxOvTc=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_kLhkdlp;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_zgfxujd=json({});
    return_zgfxujd=[&]() {
    json return_JVQGUIH=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_zgfxujd;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_eouwmDM=json({});
    return_eouwmDM=[&]() {
    json return_vJOWUjY=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_eouwmDM;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int MGEGgrQ=0; MGEGgrQ < 3; MGEGgrQ++){
            [&]() {
result.maxComputeWorkGroupCount[MGEGgrQ]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][MGEGgrQ]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int FPaHlIG=0; FPaHlIG < 3; FPaHlIG++){
            [&]() {
result.maxComputeWorkGroupSize[FPaHlIG]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][FPaHlIG]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int AKUzfnB=0; AKUzfnB < 2; AKUzfnB++){
            [&]() {
result.maxViewportDimensions[AKUzfnB]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][AKUzfnB]);}();;
        }
        }();
[&]() {

        for (int mnYBlDI=0; mnYBlDI < 2; mnYBlDI++){
            [&]() {
result.viewportBoundsRange[mnYBlDI]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][mnYBlDI]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int sGLTueq=0; sGLTueq < 2; sGLTueq++){
            [&]() {
result.pointSizeRange[sGLTueq]=deserialize_float(name["members"]["pointSizeRange"]["members"][sGLTueq]);}();;
        }
        }();
[&]() {

        for (int CDSMxXu=0; CDSMxXu < 2; CDSMxXu++){
            [&]() {
result.lineWidthRange[CDSMxXu]=deserialize_float(name["members"]["lineWidthRange"]["members"][CDSMxXu]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yYFWuBZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UbbQUrw=json({});
    
        if (name.pNext==NULL){
            return_UbbQUrw["null"]=true;
            return return_UbbQUrw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xNKjJbp=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RWCKsFN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RWCKsFN=NULL;
        }
    temp_RWCKsFN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RWCKsFN;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hUNUxbH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AQBxoit=json({});
    
        if (name.pNext==NULL){
            return_AQBxoit["null"]=true;
            return return_AQBxoit;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fertTuQ=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_kYWasNm=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_KCrBkvD=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_VtLeZul=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AILsnrs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AILsnrs=NULL;
        }
    temp_AILsnrs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AILsnrs;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zCCzVen=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ljKmEah=json({});
    
        if (name.pNext==NULL){
            return_ljKmEah["null"]=true;
            return return_ljKmEah;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YVFIvrS=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_mLZLHnK=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_EduKsry=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_KUxmyee=json({});
    
        if (name.pAttachments==NULL){
            return_KUxmyee["null"]=true;
            return return_KUxmyee;
        }
        
        return_KUxmyee["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ARuEaTV=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_KUxmyee["members"][std::to_string(i)].push_back(temp);
        }
        return return_KUxmyee;
        }();
result["members"]["width"]=[&]() {
    json return_tMSZLbk=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_zhvSfMe=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_YeooyBm=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jTJUWXJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jTJUWXJ=NULL;
        }
    temp_jTJUWXJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jTJUWXJ;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_YWPmCCp;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_YWPmCCp=NULL;
        }
    temp_YWPmCCp=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int gzXnjUp=0; gzXnjUp < result.attachmentCount; gzXnjUp++){
            [&]() {
temp_YWPmCCp[gzXnjUp]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][gzXnjUp]);}();;
        }
        }();result.pAttachments=temp_YWPmCCp;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_HrvUFkV=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_GJuxrZG=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_hLPZYIf=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_wtMEEAI=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_aQbgeUn=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_xOyqquU=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_QJdFyVV=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_fsEEaVx=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_GQALNxz=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_dEIUcrZ=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_KWXLDXv=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_yivGLdy=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_cpbJEVi=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_Feecinv=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_IKfHoff=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_eHUEryQ=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_YEtLwkh=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lUFdlcr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qbqmdna=json({});
    
        if (name.pNext==NULL){
            return_qbqmdna["null"]=true;
            return return_qbqmdna;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_FHTyRZf=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_gEkoGWR=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_gEkoGWR["null"]=true;
            return return_gEkoGWR;
        }
        
        return_gEkoGWR["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_vHQGeFS=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_gEkoGWR["members"][std::to_string(i)].push_back(temp);
        }
        return return_gEkoGWR;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_ToUUVMM=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_ToUUVMM["null"]=true;
            return return_ToUUVMM;
        }
        
        return_ToUUVMM["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_CtVutEe=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[i]);}();
            return_ToUUVMM["members"][std::to_string(i)].push_back(temp);
        }
        return return_ToUUVMM;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_dlHQVys=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_OirHPhL=json({});
    
        if (name.pCommandBuffers==NULL){
            return_OirHPhL["null"]=true;
            return return_OirHPhL;
        }
        
        return_OirHPhL["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_fIBMQOv=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[i]);}();
            return_OirHPhL["members"][std::to_string(i)].push_back(temp);
        }
        return return_OirHPhL;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_pdtdSCG=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_TIrWTye=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_TIrWTye["null"]=true;
            return return_TIrWTye;
        }
        
        return_TIrWTye["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_haUQGMJ=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_TIrWTye["members"][std::to_string(i)].push_back(temp);
        }
        return return_TIrWTye;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KwifAkp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KwifAkp=NULL;
        }
    temp_KwifAkp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KwifAkp;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_CwFljMl;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_CwFljMl=NULL;
        }
    temp_CwFljMl=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int cwJaarn=0; cwJaarn < result.waitSemaphoreCount; cwJaarn++){
            [&]() {
temp_CwFljMl[cwJaarn]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][cwJaarn]);}();;
        }
        }();result.pWaitSemaphores=temp_CwFljMl;}();
[&]() {
VkPipelineStageFlags* temp_oPEJYlH;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_oPEJYlH=NULL;
        }
    temp_oPEJYlH=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int buenvTF=0; buenvTF < result.waitSemaphoreCount; buenvTF++){
            [&]() {
temp_oPEJYlH[buenvTF]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][buenvTF]);}();;
        }
        }();result.pWaitDstStageMask=temp_oPEJYlH;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_mFrrSWL;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_mFrrSWL=NULL;
        }
    temp_mFrrSWL=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int GqTYMZr=0; GqTYMZr < result.commandBufferCount; GqTYMZr++){
            [&]() {
temp_mFrrSWL[GqTYMZr]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][GqTYMZr]);}();;
        }
        }();result.pCommandBuffers=temp_mFrrSWL;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_rwJoigB;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_rwJoigB=NULL;
        }
    temp_rwJoigB=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int tbPlUpZ=0; tbPlUpZ < result.signalSemaphoreCount; tbPlUpZ++){
            [&]() {
temp_rwJoigB[tbPlUpZ]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][tbPlUpZ]);}();;
        }
        }();result.pSignalSemaphores=temp_rwJoigB;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_pjPupOA=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_FiehmPJ=json({});
    
        if (name.displayName==NULL){
            return_FiehmPJ["null"]=true;
            return return_FiehmPJ;
        }
        return serialize_char_p(name.displayName);
}();
result["members"]["physicalDimensions"]=[&]() {
    json return_mlUgVKX=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_nNOfZCr=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_HUMKrls=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_xbRboYM=json({});
    return_xbRboYM=[&]() {
    json return_bZUOWTa=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_xbRboYM;}();
result["members"]["persistentContent"]=[&]() {
    json return_FftUcMj=json({});
    return_FftUcMj=[&]() {
    json return_ckJkfgz=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_FftUcMj;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_OMxEvgt;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_OMxEvgt=NULL;
        }
    temp_OMxEvgt=deserialize_char_p(name["members"]["displayName"]);
}();result.displayName=temp_OMxEvgt;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_FTzcvkb=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_xKwGEUI=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_HiVnnvP=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_nAlYvFy=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_xyEjrnV=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_nvxhoQi=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XsiZKfI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dUAmLLL=json({});
    
        if (name.pNext==NULL){
            return_dUAmLLL["null"]=true;
            return return_dUAmLLL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bssHebl=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_VoTsNqW=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dsDZxkI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dsDZxkI=NULL;
        }
    temp_dsDZxkI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dsDZxkI;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_UuCCSll=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_OXMiYoJ=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_NnAdlWB=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_HRfUHII=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_vZenPBf=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_ifALCvF=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_CHjeyxo=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_rVrUbSa=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_HFwvgyc=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_faonGxR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPKMfyE=json({});
    
        if (name.pNext==NULL){
            return_FPKMfyE["null"]=true;
            return return_FPKMfyE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sgNDufT=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_dAubEDW=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_ZsNMITy=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_ENBnvjw=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_UmScWVJ=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_pEYpDhQ=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_mXLQXpH=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_ZtfggKj=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_phkJhFl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_phkJhFl=NULL;
        }
    temp_phkJhFl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_phkJhFl;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_prmKOWw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lhuIigE=json({});
    
        if (name.pNext==NULL){
            return_lhuIigE["null"]=true;
            return return_lhuIigE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcRect"]=[&]() {
    json return_mrdcwTW=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_JxKspEV=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_aTIHYDf=json({});
    return_aTIHYDf=[&]() {
    json return_zevDWmT=json({});
    return serialize_uint32_t(name.persistent);}();return return_aTIHYDf;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wUsxBqE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wUsxBqE=NULL;
        }
    temp_wUsxBqE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wUsxBqE;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_lKAftnK=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_BRODORx=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_mvPHDrh=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_DJYftWM=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_sxBUgQM=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_oQPzbsP=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_XJbJVeI=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_ccoRtoy=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_vBklyOa=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_GTzkALp=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oFUXWAT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DMcMzNq=json({});
    
        if (name.pNext==NULL){
            return_DMcMzNq["null"]=true;
            return return_DMcMzNq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_epZJlQP=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_hZppDSo=json({});
    
        if (name.dpy==NULL){
            return_hZppDSo["null"]=true;
            return return_hZppDSo;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_YAhQjuR=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nEZsobc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nEZsobc=NULL;
        }
    temp_nEZsobc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nEZsobc;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ubNuoQF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rgRfzcd=json({});
    
        if (name.pNext==NULL){
            return_rgRfzcd["null"]=true;
            return return_rgRfzcd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wUjaKOm=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_AdGQErz=json({});
    
        if (name.connection==NULL){
            return_AdGQErz["null"]=true;
            return return_AdGQErz;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_gSSDYzb=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jQOwrQd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jQOwrQd=NULL;
        }
    temp_jQOwrQd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jQOwrQd;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_CpcPXfr=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_lXOvdcx=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zBgulUN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tXodlZO=json({});
    
        if (name.pNext==NULL){
            return_tXodlZO["null"]=true;
            return return_tXodlZO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qYTAgUS=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_GlhUEHa=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_kbuOFwh=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_qFzoeBM=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_FTxIYAQ=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_vRAuMuE=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_qLfUVjt=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_BqavKKt=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_huQBjmW=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_xTqduYr=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_oRtMhMq=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_oRtMhMq["null"]=true;
            return return_oRtMhMq;
        }
        
        return_oRtMhMq["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_riOlmKb=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_oRtMhMq["members"][std::to_string(i)].push_back(temp);
        }
        return return_oRtMhMq;
        }();
result["members"]["preTransform"]=[&]() {
    json return_DZqoEMM=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_NiTqEci=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_eCsUnnX=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_nWIJhFw=json({});
    return_nWIJhFw=[&]() {
    json return_lVwrBkt=json({});
    return serialize_uint32_t(name.clipped);}();return return_nWIJhFw;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_miqmkxM=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_SGfTBRF=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bYctLIf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bYctLIf=NULL;
        }
    temp_bYctLIf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bYctLIf;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_xmXxMJz;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_xmXxMJz=NULL;
        }
    temp_xmXxMJz=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int rNqAkyC=0; rNqAkyC < result.queueFamilyIndexCount; rNqAkyC++){
            [&]() {
temp_xmXxMJz[rNqAkyC]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][rNqAkyC]);}();;
        }
        }();result.pQueueFamilyIndices=temp_xmXxMJz;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OOSxsUu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UcXvOPB=json({});
    
        if (name.pNext==NULL){
            return_UcXvOPB["null"]=true;
            return return_UcXvOPB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_lXmWkiu=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_hLtXFUX=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_hLtXFUX["null"]=true;
            return return_hLtXFUX;
        }
        
        return_hLtXFUX["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_RjwvFBB=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_hLtXFUX["members"][std::to_string(i)].push_back(temp);
        }
        return return_hLtXFUX;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_JQLLmTD=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_nkoMvCB=json({});
    
        if (name.pSwapchains==NULL){
            return_nkoMvCB["null"]=true;
            return return_nkoMvCB;
        }
        
        return_nkoMvCB["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_aUzoevb=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[i]);}();
            return_nkoMvCB["members"][std::to_string(i)].push_back(temp);
        }
        return return_nkoMvCB;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_lHSYRae=json({});
    
        if (name.pImageIndices==NULL){
            return_lHSYRae["null"]=true;
            return return_lHSYRae;
        }
        
        return_lHSYRae["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_NhCDXKS=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_lHSYRae["members"][std::to_string(i)].push_back(temp);
        }
        return return_lHSYRae;
        }();
result["members"]["pResults"]=[&]() {
    json return_JgCVHZv=json({});
    
        if (name.pResults==NULL){
            return_JgCVHZv["null"]=true;
            return return_JgCVHZv;
        }
        
        return_JgCVHZv["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_WSLGmDY=json({});
    return serialize_VkResult(name.pResults[i]);}();
            return_JgCVHZv["members"][std::to_string(i)].push_back(temp);
        }
        return return_JgCVHZv;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xdfzyLB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xdfzyLB=NULL;
        }
    temp_xdfzyLB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xdfzyLB;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_LdiYaIU;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_LdiYaIU=NULL;
        }
    temp_LdiYaIU=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int PnpTKMw=0; PnpTKMw < result.waitSemaphoreCount; PnpTKMw++){
            [&]() {
temp_LdiYaIU[PnpTKMw]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][PnpTKMw]);}();;
        }
        }();result.pWaitSemaphores=temp_LdiYaIU;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_vXtkHEI;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_vXtkHEI=NULL;
        }
    temp_vXtkHEI=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int MmyObIy=0; MmyObIy < result.swapchainCount; MmyObIy++){
            [&]() {
temp_vXtkHEI[MmyObIy]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][MmyObIy]);}();;
        }
        }();result.pSwapchains=temp_vXtkHEI;}();
[&]() {
uint32_t* temp_vwYOIpp;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_vwYOIpp=NULL;
        }
    temp_vwYOIpp=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int CEGSbon=0; CEGSbon < result.swapchainCount; CEGSbon++){
            [&]() {
temp_vwYOIpp[CEGSbon]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][CEGSbon]);}();;
        }
        }();result.pImageIndices=temp_vwYOIpp;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int pAUUNaf=0; pAUUNaf < result.swapchainCount; pAUUNaf++){
            [&]() {
result.pResults[pAUUNaf]=deserialize_VkResult(name["members"]["pResults"]["members"][pAUUNaf]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JdZwAZN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fTfGvMt=json({});
    
        if (name.pNext==NULL){
            return_fTfGvMt["null"]=true;
            return return_fTfGvMt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DqCUZdy=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_QiInruy=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_uwhNRdA=json({});
    
        if (name.pUserData==NULL){
            return_uwhNRdA["null"]=true;
            return return_uwhNRdA;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ltsOJER;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ltsOJER=NULL;
        }
    temp_ltsOJER=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ltsOJER;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qWkUktI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XmUJlbp=json({});
    
        if (name.pNext==NULL){
            return_XmUJlbp["null"]=true;
            return return_XmUJlbp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_JGctjBS=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_EbLXlto=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_EbLXlto["null"]=true;
            return return_EbLXlto;
        }
        
        return_EbLXlto["members"]={};
        for(int i=0; i < name.disabledValidationCheckCount; i++){
            json temp;
            temp=[&]() {
    json return_TmFJCvC=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[i]);}();
            return_EbLXlto["members"][std::to_string(i)].push_back(temp);
        }
        return return_EbLXlto;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XxpyjuD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XxpyjuD=NULL;
        }
    temp_XxpyjuD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XxpyjuD;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_SXcIeJu;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_SXcIeJu=NULL;
        }
    temp_SXcIeJu=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int oEvXuTX=0; oEvXuTX < result.disabledValidationCheckCount; oEvXuTX++){
            [&]() {
temp_SXcIeJu[oEvXuTX]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][oEvXuTX]);}();;
        }
        }();result.pDisabledValidationChecks=temp_SXcIeJu;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LaMwLYV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BYvfHkR=json({});
    
        if (name.pNext==NULL){
            return_BYvfHkR["null"]=true;
            return return_BYvfHkR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_bdxQmnP=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_QQBWLLc=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_QQBWLLc["null"]=true;
            return return_QQBWLLc;
        }
        
        return_QQBWLLc["members"]={};
        for(int i=0; i < name.enabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_TBWDuOg=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[i]);}();
            return_QQBWLLc["members"][std::to_string(i)].push_back(temp);
        }
        return return_QQBWLLc;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_sWbJVUL=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_NOdiCzg=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_NOdiCzg["null"]=true;
            return return_NOdiCzg;
        }
        
        return_NOdiCzg["members"]={};
        for(int i=0; i < name.disabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_ehiYHgV=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[i]);}();
            return_NOdiCzg["members"][std::to_string(i)].push_back(temp);
        }
        return return_NOdiCzg;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UkctxdS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UkctxdS=NULL;
        }
    temp_UkctxdS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UkctxdS;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_xCcAEtV;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_xCcAEtV=NULL;
        }
    temp_xCcAEtV=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int oaKfyqk=0; oaKfyqk < result.enabledValidationFeatureCount; oaKfyqk++){
            [&]() {
temp_xCcAEtV[oaKfyqk]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][oaKfyqk]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_xCcAEtV;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_ScPsHEw;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_ScPsHEw=NULL;
        }
    temp_ScPsHEw=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int oRlooJm=0; oRlooJm < result.disabledValidationFeatureCount; oRlooJm++){
            [&]() {
temp_ScPsHEw[oRlooJm]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][oRlooJm]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_ScPsHEw;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CwEGjJC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aaTJEBT=json({});
    
        if (name.pNext==NULL){
            return_aaTJEBT["null"]=true;
            return return_aaTJEBT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_mIdQARr=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OPtdGui;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OPtdGui=NULL;
        }
    temp_OPtdGui=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OPtdGui;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ncCXzun=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SERQQHh=json({});
    
        if (name.pNext==NULL){
            return_SERQQHh["null"]=true;
            return return_SERQQHh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_JijbDOb=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_VJaCcDp=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_MZDeWWA=json({});
    
        if (name.pObjectName==NULL){
            return_MZDeWWA["null"]=true;
            return return_MZDeWWA;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_elSPxBx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_elSPxBx=NULL;
        }
    temp_elSPxBx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_elSPxBx;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_WSqGFzc;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_WSqGFzc=NULL;
        }
    temp_WSqGFzc=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_WSqGFzc;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HXOqKEe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WolruyV=json({});
    
        if (name.pNext==NULL){
            return_WolruyV["null"]=true;
            return return_WolruyV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_EyMaJgf=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_njJSBEr=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_aoPDrjE=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_edsOdII=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_GLTkCpM=json({});
    
        if (name.pTag==NULL){
            return_GLTkCpM["null"]=true;
            return return_GLTkCpM;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WHAeJaj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WHAeJaj=NULL;
        }
    temp_WHAeJaj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WHAeJaj;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_xiYJrpp;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_xiYJrpp=NULL;
        }
    temp_xiYJrpp=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_xiYJrpp;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NxcNsZW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HeSaAUn=json({});
    
        if (name.pNext==NULL){
            return_HeSaAUn["null"]=true;
            return return_HeSaAUn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pMarkerName"]=[&]() {
    json return_AKIgMAg=json({});
    
        if (name.pMarkerName==NULL){
            return_AKIgMAg["null"]=true;
            return return_AKIgMAg;
        }
        return serialize_char_p(name.pMarkerName);
}();
result["members"]["color"]=[&]() {
    json return_PLbEDyD=json({});
    
        return_PLbEDyD["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_UbagmaO=json({});
    return serialize_float(name.color[i]);}();
            return_PLbEDyD["members"][std::to_string(i)].push_back(temp);
        }
        return return_PLbEDyD;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_siYbUZi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_siYbUZi=NULL;
        }
    temp_siYbUZi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_siYbUZi;}();
[&]() {
char* temp_WQDamBW;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_WQDamBW=NULL;
        }
    temp_WQDamBW=deserialize_char_p(name["members"]["pMarkerName"]);
}();result.pMarkerName=temp_WQDamBW;}();
[&]() {

        for (int DDDZNBH=0; DDDZNBH < 4; DDDZNBH++){
            [&]() {
result.color[DDDZNBH]=deserialize_float(name["members"]["color"]["members"][DDDZNBH]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YYwIwMI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GkzIGcy=json({});
    
        if (name.pNext==NULL){
            return_GkzIGcy["null"]=true;
            return return_GkzIGcy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_CFKSOVp=json({});
    return_CFKSOVp=[&]() {
    json return_WTPaeWX=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_CFKSOVp;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FlEWaSK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FlEWaSK=NULL;
        }
    temp_FlEWaSK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FlEWaSK;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AUaMvMf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QxSgmsL=json({});
    
        if (name.pNext==NULL){
            return_QxSgmsL["null"]=true;
            return return_QxSgmsL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_mmknxxT=json({});
    return_mmknxxT=[&]() {
    json return_PEeNUBL=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_mmknxxT;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DBRgDAQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DBRgDAQ=NULL;
        }
    temp_DBRgDAQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DBRgDAQ;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZguGALm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wqdPQfh=json({});
    
        if (name.pNext==NULL){
            return_wqdPQfh["null"]=true;
            return return_wqdPQfh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_WJvlRVU=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_ZNnlEOI=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lxBkttV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lxBkttV=NULL;
        }
    temp_lxBkttV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lxBkttV;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_pEQxpSK=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_ThXbBPa=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_reotDLG=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_onYUaCX=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yLTWhHN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aTRfZvC=json({});
    
        if (name.pNext==NULL){
            return_aTRfZvC["null"]=true;
            return return_aTRfZvC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_ocCyKny=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_imMMXyc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_imMMXyc=NULL;
        }
    temp_imMMXyc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_imMMXyc;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mCeogFn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pWHwPAp=json({});
    
        if (name.pNext==NULL){
            return_pWHwPAp["null"]=true;
            return return_pWHwPAp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_ScgXUIN=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Gfassau;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Gfassau=NULL;
        }
    temp_Gfassau=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Gfassau;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BLfmOKC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rzowJNq=json({});
    
        if (name.pNext==NULL){
            return_rzowJNq["null"]=true;
            return return_rzowJNq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_rjOCzqG=json({});
    return_rjOCzqG=[&]() {
    json return_omsLgFQ=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_rjOCzqG;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mKdgUco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aDtNKtR=json({});
    
        if (name.pNext==NULL){
            return_aDtNKtR["null"]=true;
            return return_aDtNKtR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_GXTTPET=json({});
    return_GXTTPET=[&]() {
    json return_KyQVUJt=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_GXTTPET;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_QJHlBSp=json({});
    return_QJHlBSp=[&]() {
    json return_QqtIYUk=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_QJHlBSp;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_XsYvejc=json({});
    return_XsYvejc=[&]() {
    json return_pGFVKdg=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_XsYvejc;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fTnxyhB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nydaovz=json({});
    
        if (name.pNext==NULL){
            return_nydaovz["null"]=true;
            return return_nydaovz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_HIBUzvd=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NzfVJbG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NzfVJbG=NULL;
        }
    temp_NzfVJbG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NzfVJbG;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_klAkJsC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IWYWuFo=json({});
    
        if (name.pNext==NULL){
            return_IWYWuFo["null"]=true;
            return return_IWYWuFo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_rvCMTzV=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_THKErlg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_THKErlg=NULL;
        }
    temp_THKErlg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_THKErlg;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oBPjhlx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EVrEruk=json({});
    
        if (name.pNext==NULL){
            return_EVrEruk["null"]=true;
            return return_EVrEruk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_rBZuejG=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VcJihCr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VcJihCr=NULL;
        }
    temp_VcJihCr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VcJihCr;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QshyLMh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HdaEmTC=json({});
    
        if (name.pNext==NULL){
            return_HdaEmTC["null"]=true;
            return return_HdaEmTC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RwmNQgY=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTcZbiH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTcZbiH=NULL;
        }
    temp_tTcZbiH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tTcZbiH;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GRobAvy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_toLogwU=json({});
    
        if (name.pNext==NULL){
            return_toLogwU["null"]=true;
            return return_toLogwU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_YYxaikn=json({});
    return_YYxaikn=[&]() {
    json return_bRsLKMj=json({});
    return serialize_uint32_t(name.privateData);}();return return_YYxaikn;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzmAOah=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wFPOEfV=json({});
    
        if (name.pNext==NULL){
            return_wFPOEfV["null"]=true;
            return return_wFPOEfV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_rFuWUnA=json({});
    return_rFuWUnA=[&]() {
    json return_WmnDffi=json({});
    return serialize_uint32_t(name.privateData);}();return return_rFuWUnA;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dmTFIzK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SEwMDQZ=json({});
    
        if (name.pNext==NULL){
            return_SEwMDQZ["null"]=true;
            return return_SEwMDQZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_BylUCsO=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_TPxnjOL=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_XlyXsCr=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_kSVPGrb=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_ysJodvA=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_rJLBkIi=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_aLmMdlL=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_oMODrCl=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_WwMQPRR=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yMlTpLg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XOylxDZ=json({});
    
        if (name.pNext==NULL){
            return_XOylxDZ["null"]=true;
            return return_XOylxDZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_fynevAl=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XSxYVMn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJzqHMi=json({});
    
        if (name.pNext==NULL){
            return_sJzqHMi["null"]=true;
            return return_sJzqHMi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stageCount"]=[&]() {
    json return_Irdlcdy=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_BwXJyMy=json({});
    
        if (name.pStages==NULL){
            return_BwXJyMy["null"]=true;
            return return_BwXJyMy;
        }
        
        return_BwXJyMy["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_axwuiUn=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_BwXJyMy["members"][std::to_string(i)].push_back(temp);
        }
        return return_BwXJyMy;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_kUXVDxk=json({});
    
        if (name.pVertexInputState==NULL){
            return_kUXVDxk["null"]=true;
            return return_kUXVDxk;
        }
        return_kUXVDxk=[&]() {
    json return_vFUtywa=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_kUXVDxk;}();
result["members"]["pTessellationState"]=[&]() {
    json return_KTnPlUR=json({});
    
        if (name.pTessellationState==NULL){
            return_KTnPlUR["null"]=true;
            return return_KTnPlUR;
        }
        return_KTnPlUR=[&]() {
    json return_opXBpbl=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_KTnPlUR;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jdTPClU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jdTPClU=NULL;
        }
    temp_jdTPClU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jdTPClU;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_hoDjgIc;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_hoDjgIc=NULL;
        }
    temp_hoDjgIc=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int rIcfWcT=0; rIcfWcT < result.stageCount; rIcfWcT++){
            [&]() {
temp_hoDjgIc[rIcfWcT]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][rIcfWcT]);}();;
        }
        }();result.pStages=temp_hoDjgIc;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_nTcQIBR;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_nTcQIBR=NULL;
        }
    [&]() {
*(temp_nTcQIBR)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_nTcQIBR;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_YPjHTNK;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_YPjHTNK=NULL;
        }
    [&]() {
*(temp_YPjHTNK)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_YPjHTNK;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yLWWEMZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ynvfxRs=json({});
    
        if (name.pNext==NULL){
            return_ynvfxRs["null"]=true;
            return return_ynvfxRs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["groupCount"]=[&]() {
    json return_rWgXQyE=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_meGApEH=json({});
    
        if (name.pGroups==NULL){
            return_meGApEH["null"]=true;
            return return_meGApEH;
        }
        
        return_meGApEH["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_aKMuMAJ=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_meGApEH["members"][std::to_string(i)].push_back(temp);
        }
        return return_meGApEH;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_HBcaxZv=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_PdivnYU=json({});
    
        if (name.pPipelines==NULL){
            return_PdivnYU["null"]=true;
            return return_PdivnYU;
        }
        
        return_PdivnYU["members"]={};
        for(int i=0; i < name.pipelineCount; i++){
            json temp;
            temp=[&]() {
    json return_QKmPweu=json({});
    return serialize_VkPipeline(name.pPipelines[i]);}();
            return_PdivnYU["members"][std::to_string(i)].push_back(temp);
        }
        return return_PdivnYU;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OMRToNE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OMRToNE=NULL;
        }
    temp_OMRToNE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OMRToNE;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_TVwIrcn;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_TVwIrcn=NULL;
        }
    temp_TVwIrcn=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int IuJwpzD=0; IuJwpzD < result.groupCount; IuJwpzD++){
            [&]() {
temp_TVwIrcn[IuJwpzD]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][IuJwpzD]);}();;
        }
        }();result.pGroups=temp_TVwIrcn;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_GtyMWbi;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_GtyMWbi=NULL;
        }
    temp_GtyMWbi=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int nvLuUwh=0; nvLuUwh < result.pipelineCount; nvLuUwh++){
            [&]() {
temp_GtyMWbi[nvLuUwh]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][nvLuUwh]);}();;
        }
        }();result.pPipelines=temp_GtyMWbi;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_VtqeoCr=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_cYEmKfH=json({});
    return_cYEmKfH=[&]() {
    json return_ZaXDfqV=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_cYEmKfH;}();
result["members"]["size"]=[&]() {
    json return_gbfiODG=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_xgXmyNb=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_UHMrEJb=json({});
    return_UHMrEJb=[&]() {
    json return_JKrLVYE=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_UHMrEJb;}();
result["members"]["size"]=[&]() {
    json return_erdBbTM=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_UTHghFj=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_dLyDXhL=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_ywAqSIx=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_lVQnnFg=json({});
    return_lVQnnFg=[&]() {
    json return_ofWaLnH=json({});
    return serialize_uint64_t(name.offset);}();return return_lVQnnFg;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BiTSgnQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CGaamcM=json({});
    
        if (name.pNext==NULL){
            return_CGaamcM["null"]=true;
            return return_CGaamcM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tokenType"]=[&]() {
    json return_LXEUZWF=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_pyctDOl=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_JBItpIP=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_mcTaWGs=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_sGgZIrb=json({});
    return_sGgZIrb=[&]() {
    json return_dERgJoA=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_sGgZIrb;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_LaNjbiT=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_tnIHofE=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_fMgJzxq=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_GWWjGNj=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_KwJkGXe=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_YBESRVS=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_UJDszMj=json({});
    
        if (name.pIndexTypes==NULL){
            return_UJDszMj["null"]=true;
            return return_UJDszMj;
        }
        
        return_UJDszMj["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_xcJPTzV=json({});
    return serialize_VkIndexType(name.pIndexTypes[i]);}();
            return_UJDszMj["members"][std::to_string(i)].push_back(temp);
        }
        return return_UJDszMj;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_OEkRtFq=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_OEkRtFq["null"]=true;
            return return_OEkRtFq;
        }
        
        return_OEkRtFq["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_SmmroCL=json({});
    return serialize_uint32_t(name.pIndexTypeValues[i]);}();
            return_OEkRtFq["members"][std::to_string(i)].push_back(temp);
        }
        return return_OEkRtFq;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bpzJgco;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bpzJgco=NULL;
        }
    temp_bpzJgco=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bpzJgco;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_xoAjnrd;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_xoAjnrd=NULL;
        }
    temp_xoAjnrd=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int VdmQzFy=0; VdmQzFy < result.indexTypeCount; VdmQzFy++){
            [&]() {
temp_xoAjnrd[VdmQzFy]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][VdmQzFy]);}();;
        }
        }();result.pIndexTypes=temp_xoAjnrd;}();
[&]() {
uint32_t* temp_GOXVRLl;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_GOXVRLl=NULL;
        }
    temp_GOXVRLl=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int zrNNajf=0; zrNNajf < result.indexTypeCount; zrNNajf++){
            [&]() {
temp_GOXVRLl[zrNNajf]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][zrNNajf]);}();;
        }
        }();result.pIndexTypeValues=temp_GOXVRLl;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dhonQlu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jeXJuRu=json({});
    
        if (name.pNext==NULL){
            return_jeXJuRu["null"]=true;
            return return_jeXJuRu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ERfjZlW=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_PEalBMi=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_wFDFjCB=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_McaVZjB=json({});
    
        if (name.pTokens==NULL){
            return_McaVZjB["null"]=true;
            return return_McaVZjB;
        }
        
        return_McaVZjB["members"]={};
        for(int i=0; i < name.tokenCount; i++){
            json temp;
            temp=[&]() {
    json return_uULLdVA=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[i]);}();
            return_McaVZjB["members"][std::to_string(i)].push_back(temp);
        }
        return return_McaVZjB;
        }();
result["members"]["streamCount"]=[&]() {
    json return_DalKDBV=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_zZpdMjX=json({});
    
        if (name.pStreamStrides==NULL){
            return_zZpdMjX["null"]=true;
            return return_zZpdMjX;
        }
        
        return_zZpdMjX["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_YSMtyWs=json({});
    return serialize_uint32_t(name.pStreamStrides[i]);}();
            return_zZpdMjX["members"][std::to_string(i)].push_back(temp);
        }
        return return_zZpdMjX;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ibYSgol;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ibYSgol=NULL;
        }
    temp_ibYSgol=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ibYSgol;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_awEVtDN;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_awEVtDN=NULL;
        }
    temp_awEVtDN=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int HBHtPmi=0; HBHtPmi < result.tokenCount; HBHtPmi++){
            [&]() {
temp_awEVtDN[HBHtPmi]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][HBHtPmi]);}();;
        }
        }();result.pTokens=temp_awEVtDN;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_GEbgpqv;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_GEbgpqv=NULL;
        }
    temp_GEbgpqv=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int AgDRruT=0; AgDRruT < result.streamCount; AgDRruT++){
            [&]() {
temp_GEbgpqv[AgDRruT]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][AgDRruT]);}();;
        }
        }();result.pStreamStrides=temp_GEbgpqv;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TQBrvkA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ERZkNtd=json({});
    
        if (name.pNext==NULL){
            return_ERZkNtd["null"]=true;
            return return_ERZkNtd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_hBoBmGl=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_rzVBYPG=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_KzkfEtt=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_uTCBgHv=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_pzBRPVl=json({});
    
        if (name.pStreams==NULL){
            return_pzBRPVl["null"]=true;
            return return_pzBRPVl;
        }
        
        return_pzBRPVl["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_aIoocEZ=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[i]);}();
            return_pzBRPVl["members"][std::to_string(i)].push_back(temp);
        }
        return return_pzBRPVl;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_KrjHVxd=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_BpaVLQn=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_MPZiWoH=json({});
    return_MPZiWoH=[&]() {
    json return_MaIfZjX=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_MPZiWoH;}();
result["members"]["preprocessSize"]=[&]() {
    json return_KbwBNJQ=json({});
    return_KbwBNJQ=[&]() {
    json return_HlGOaJX=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_KbwBNJQ;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_MoDhEru=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_fmSOSYw=json({});
    return_fmSOSYw=[&]() {
    json return_dklWAhU=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_fmSOSYw;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_BefLzPE=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_peOLcBY=json({});
    return_peOLcBY=[&]() {
    json return_tHaAFip=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_peOLcBY;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lxCzmzT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lxCzmzT=NULL;
        }
    temp_lxCzmzT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lxCzmzT;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_QcFhaxn;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_QcFhaxn=NULL;
        }
    temp_QcFhaxn=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int VUwDhCQ=0; VUwDhCQ < result.streamCount; VUwDhCQ++){
            [&]() {
temp_QcFhaxn[VUwDhCQ]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][VUwDhCQ]);}();;
        }
        }();result.pStreams=temp_QcFhaxn;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AJEIDgs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zFvDqiJ=json({});
    
        if (name.pNext==NULL){
            return_zFvDqiJ["null"]=true;
            return return_zFvDqiJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_VzUrwqp=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_ijXUrqg=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_xklZBYR=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_cqELaPZ=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xevFfaT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xevFfaT=NULL;
        }
    temp_xevFfaT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xevFfaT;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bekGzlU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LKUQKJa=json({});
    
        if (name.pNext==NULL){
            return_LKUQKJa["null"]=true;
            return return_LKUQKJa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_QnXHhZQ=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_HgNFxhS=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uXWDLwl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uXWDLwl=NULL;
        }
    temp_uXWDLwl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uXWDLwl;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_ePrKRzJ=json({});
    return_ePrKRzJ=[&]() {
    json return_XVBrTis=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_ePrKRzJ;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QTZESBu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IMyDAXj=json({});
    
        if (name.pNext==NULL){
            return_IMyDAXj["null"]=true;
            return return_IMyDAXj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_Gjymtrd=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TBaqvqc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wyLhjdq=json({});
    
        if (name.pNext==NULL){
            return_wyLhjdq["null"]=true;
            return return_wyLhjdq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_rTktKyM=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ydjwbZT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BAyzaBD=json({});
    
        if (name.pNext==NULL){
            return_BAyzaBD["null"]=true;
            return return_BAyzaBD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_fhWLRRO=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PekLlwT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QVkiZTD=json({});
    
        if (name.pNext==NULL){
            return_QVkiZTD["null"]=true;
            return return_QVkiZTD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_sBiPinE=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QXKIlsC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ERYutCA=json({});
    
        if (name.pNext==NULL){
            return_ERYutCA["null"]=true;
            return return_ERYutCA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_dCTFYVi=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HQmhBTk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CZngNDm=json({});
    
        if (name.pNext==NULL){
            return_CZngNDm["null"]=true;
            return return_CZngNDm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_hoezehP=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ENALrFG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SsbPifz=json({});
    
        if (name.pNext==NULL){
            return_SsbPifz["null"]=true;
            return return_SsbPifz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_wKLJDYK=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BgOvyAN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KztSJZr=json({});
    
        if (name.pNext==NULL){
            return_KztSJZr["null"]=true;
            return return_KztSJZr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_NjYJJOT=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HpvxncM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YdPZuJC=json({});
    
        if (name.pNext==NULL){
            return_YdPZuJC["null"]=true;
            return return_YdPZuJC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_tpngOWo=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_JutFACt=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_ulhseZf=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_PIBMUOj=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_eMIUbiw=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BISgCqP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BISgCqP=NULL;
        }
    temp_BISgCqP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BISgCqP;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BVrdWJy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wYlrfoK=json({});
    
        if (name.pNext==NULL){
            return_wYlrfoK["null"]=true;
            return return_wYlrfoK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_wRPgYan=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_XQRTtzC=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_lMBtIax=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_HXIevip=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_DIjTRrW=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DOVBWjp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DOVBWjp=NULL;
        }
    temp_DOVBWjp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DOVBWjp;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hhLufPF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hmRXYpZ=json({});
    
        if (name.pNext==NULL){
            return_hmRXYpZ["null"]=true;
            return return_hmRXYpZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_ObPtDOm=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_snqssHV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QBJQlnu=json({});
    
        if (name.pNext==NULL){
            return_QBJQlnu["null"]=true;
            return return_QBJQlnu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_JFKZxbz=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dwyoknZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pgfksbK=json({});
    
        if (name.pNext==NULL){
            return_pgfksbK["null"]=true;
            return return_pgfksbK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_gerhkXZ=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZUaTBHx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TuVpJWj=json({});
    
        if (name.pNext==NULL){
            return_TuVpJWj["null"]=true;
            return return_TuVpJWj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_qbHDjjG=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XhCDCaG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ihwYCbm=json({});
    
        if (name.pNext==NULL){
            return_ihwYCbm["null"]=true;
            return return_ihwYCbm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_NZooBkm=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tjpuYEa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vDWgNfa=json({});
    
        if (name.pNext==NULL){
            return_vDWgNfa["null"]=true;
            return return_vDWgNfa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_LbUkyVF=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qsnLGcG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JdpzgnT=json({});
    
        if (name.pNext==NULL){
            return_JdpzgnT["null"]=true;
            return return_JdpzgnT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_aTBynnO=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_KcupJLU=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_Wavobpn=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_evgKZtu=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_BkjazOv=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kWbTiJV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kWbTiJV=NULL;
        }
    temp_kWbTiJV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kWbTiJV;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xxrplgl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xRvuJZz=json({});
    
        if (name.pNext==NULL){
            return_xRvuJZz["null"]=true;
            return return_xRvuJZz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_pBCoNeO=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_YyFIJwz=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_xELVuAI=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_biqeWdZ=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_DWMDDKh=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uZkAubp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uZkAubp=NULL;
        }
    temp_uZkAubp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uZkAubp;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YMieHfU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RdIPaVh=json({});
    
        if (name.pNext==NULL){
            return_RdIPaVh["null"]=true;
            return return_RdIPaVh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_PXhMzZI=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_THnywvV=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_rFRybzj=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_DNIOyeu=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_kKmkIHh=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_rBAoWkR=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_qXMewPj=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_WgGKURW=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_hYjLGcI=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eblEPxx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YWUerkF=json({});
    
        if (name.pNext==NULL){
            return_YWUerkF["null"]=true;
            return return_YWUerkF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_jFStsYc=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_bAQoCeF=json({});
    
        return_bAQoCeF["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lesVGJS=json({});
    return serialize_char(name.driverName[i]);}();
            return_bAQoCeF["members"][std::to_string(i)].push_back(temp);
        }
        return return_bAQoCeF;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_GWTwRvY=json({});
    
        return_GWTwRvY["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_MWXuGFN=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_GWTwRvY["members"][std::to_string(i)].push_back(temp);
        }
        return return_GWTwRvY;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_Zktzkpp=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int AGSwzJc=0; AGSwzJc < VK_MAX_DRIVER_NAME_SIZE; AGSwzJc++){
            [&]() {
result.driverName[AGSwzJc]=deserialize_char(name["members"]["driverName"]["members"][AGSwzJc]);}();;
        }
        }();
[&]() {

        for (int ErLoQbB=0; ErLoQbB < VK_MAX_DRIVER_INFO_SIZE; ErLoQbB++){
            [&]() {
result.driverInfo[ErLoQbB]=deserialize_char(name["members"]["driverInfo"]["members"][ErLoQbB]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HvkNlka=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mTKbEdz=json({});
    
        if (name.pNext==NULL){
            return_mTKbEdz["null"]=true;
            return return_mTKbEdz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_xgRiWgf=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_kLdIdaY=json({});
    
        return_kLdIdaY["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ObAAmnU=json({});
    return serialize_char(name.driverName[i]);}();
            return_kLdIdaY["members"][std::to_string(i)].push_back(temp);
        }
        return return_kLdIdaY;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_bEbsIuz=json({});
    
        return_bEbsIuz["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lhMjQti=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_bEbsIuz["members"][std::to_string(i)].push_back(temp);
        }
        return return_bEbsIuz;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_ufAHvpX=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int BtsQGxr=0; BtsQGxr < VK_MAX_DRIVER_NAME_SIZE; BtsQGxr++){
            [&]() {
result.driverName[BtsQGxr]=deserialize_char(name["members"]["driverName"]["members"][BtsQGxr]);}();;
        }
        }();
[&]() {

        for (int fRwklkk=0; fRwklkk < VK_MAX_DRIVER_INFO_SIZE; fRwklkk++){
            [&]() {
result.driverInfo[fRwklkk]=deserialize_char(name["members"]["driverInfo"]["members"][fRwklkk]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lQFxkhU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yfPOtsp=json({});
    
        if (name.pNext==NULL){
            return_yfPOtsp["null"]=true;
            return return_yfPOtsp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_WoMOMKr=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_gbeVAgH=json({});
    
        if (name.pRegions==NULL){
            return_gbeVAgH["null"]=true;
            return return_gbeVAgH;
        }
        
        return_gbeVAgH["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_inqNNFU=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[i]);}();
            return_gbeVAgH["members"][std::to_string(i)].push_back(temp);
        }
        return return_gbeVAgH;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fUTHJio;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fUTHJio=NULL;
        }
    temp_fUTHJio=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fUTHJio;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_vACKuAu;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_vACKuAu=NULL;
        }
    temp_vACKuAu=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int CQhjCEl=0; CQhjCEl < result.swapchainCount; CQhjCEl++){
            [&]() {
temp_vACKuAu[CQhjCEl]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][CQhjCEl]);}();;
        }
        }();result.pRegions=temp_vACKuAu;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_DEJplVT=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_ybTVdeQ=json({});
    
        if (name.pRectangles==NULL){
            return_ybTVdeQ["null"]=true;
            return return_ybTVdeQ;
        }
        
        return_ybTVdeQ["members"]={};
        for(int i=0; i < name.rectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_wbLSycu=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[i]);}();
            return_ybTVdeQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_ybTVdeQ;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_iwryHuh;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_iwryHuh=NULL;
        }
    temp_iwryHuh=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int XbTEQEl=0; XbTEQEl < result.rectangleCount; XbTEQEl++){
            [&]() {
temp_iwryHuh[XbTEQEl]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][XbTEQEl]);}();;
        }
        }();result.pRectangles=temp_iwryHuh;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_sLmwFpO=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_WfIxLie=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_wfwgNsB=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BszEdrZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cwhQuRZ=json({});
    
        if (name.pNext==NULL){
            return_cwhQuRZ["null"]=true;
            return return_cwhQuRZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_ZhQrgpL=json({});
    return_ZhQrgpL=[&]() {
    json return_oyWfWdl=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_ZhQrgpL;}();
result["members"]["variablePointers"]=[&]() {
    json return_EDQrtqx=json({});
    return_EDQrtqx=[&]() {
    json return_NKsrKaN=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_EDQrtqx;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sbKsLqM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kydHOWy=json({});
    
        if (name.pNext==NULL){
            return_kydHOWy["null"]=true;
            return return_kydHOWy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_LPoBMSF=json({});
    return_LPoBMSF=[&]() {
    json return_CLUtXNG=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_LPoBMSF;}();
result["members"]["variablePointers"]=[&]() {
    json return_fiIfGhc=json({});
    return_fiIfGhc=[&]() {
    json return_mnlVJGU=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_fiIfGhc;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eZTSmiT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QOwuGOJ=json({});
    
        if (name.pNext==NULL){
            return_QOwuGOJ["null"]=true;
            return return_QOwuGOJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_gcazEhd=json({});
    return_gcazEhd=[&]() {
    json return_GZAAVHA=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_gcazEhd;}();
result["members"]["variablePointers"]=[&]() {
    json return_yXHJcSB=json({});
    return_yXHJcSB=[&]() {
    json return_vbnzmNj=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_yXHJcSB;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AOInKUE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYzCMbV=json({});
    
        if (name.pNext==NULL){
            return_vYzCMbV["null"]=true;
            return return_vYzCMbV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_laIXcJH=json({});
    return_laIXcJH=[&]() {
    json return_TOAsBfw=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_laIXcJH;}();
result["members"]["variablePointers"]=[&]() {
    json return_ydnOzSd=json({});
    return_ydnOzSd=[&]() {
    json return_nVfuTMF=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_ydnOzSd;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_wNCGoop=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_kWVDMco=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_NHOBIaW=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_RcglHPU=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_MfBAIEZ=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_mJODFTA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cvTQPOC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zTirdYW=json({});
    
        if (name.pNext==NULL){
            return_zTirdYW["null"]=true;
            return return_zTirdYW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_CpYoKQt=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JrQsbkk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JrQsbkk=NULL;
        }
    temp_JrQsbkk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JrQsbkk;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BgxrDZB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HziTXwb=json({});
    
        if (name.pNext==NULL){
            return_HziTXwb["null"]=true;
            return return_HziTXwb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_XXIrzdL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LvSYkls;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LvSYkls=NULL;
        }
    temp_LvSYkls=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LvSYkls;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ncuyLhC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_apPIrkg=json({});
    
        if (name.pNext==NULL){
            return_apPIrkg["null"]=true;
            return return_apPIrkg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_vRLBnTv=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NsOXRnR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vBBQJwO=json({});
    
        if (name.pNext==NULL){
            return_vBBQJwO["null"]=true;
            return return_vBBQJwO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_SlWnITY=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vvoyyTl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lfgYLoi=json({});
    
        if (name.pNext==NULL){
            return_lfgYLoi["null"]=true;
            return return_lfgYLoi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yXEuNwZ=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_lCVcTym=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_wBJJtTf=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XmOCmSq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XmOCmSq=NULL;
        }
    temp_XmOCmSq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XmOCmSq;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YxqKBWO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NgBZKiR=json({});
    
        if (name.pNext==NULL){
            return_NgBZKiR["null"]=true;
            return return_NgBZKiR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_SzqwJvs=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_kzBSFUN=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_PfWRvOK=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OZvGoaq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OZvGoaq=NULL;
        }
    temp_OZvGoaq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OZvGoaq;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EBadOqt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hDnETYE=json({});
    
        if (name.pNext==NULL){
            return_hDnETYE["null"]=true;
            return return_hDnETYE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_ykvcLSJ=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sdKEouh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BoqUGuW=json({});
    
        if (name.pNext==NULL){
            return_BoqUGuW["null"]=true;
            return return_BoqUGuW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_CMqLwdP=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vHUgjQG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pqdPAto=json({});
    
        if (name.pNext==NULL){
            return_pqdPAto["null"]=true;
            return return_pqdPAto;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_lbuFSUq=json({});
    
        return_lbuFSUq["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NWYIcQV=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_lbuFSUq["members"][std::to_string(i)].push_back(temp);
        }
        return return_lbuFSUq;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_dAECpbY=json({});
    
        return_dAECpbY["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_gpBlxSI=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_dAECpbY["members"][std::to_string(i)].push_back(temp);
        }
        return return_dAECpbY;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_iVfqfjO=json({});
    
        return_iVfqfjO["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xHTdHWh=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_iVfqfjO["members"][std::to_string(i)].push_back(temp);
        }
        return return_iVfqfjO;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_zpWIHwu=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_UwcPoHB=json({});
    return_UwcPoHB=[&]() {
    json return_FUkAunO=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_UwcPoHB;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int AifJDOs=0; AifJDOs < VK_UUID_SIZE; AifJDOs++){
            [&]() {
result.deviceUUID[AifJDOs]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][AifJDOs]);}();;
        }
        }();
[&]() {

        for (int NKvOelL=0; NKvOelL < VK_UUID_SIZE; NKvOelL++){
            [&]() {
result.driverUUID[NKvOelL]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][NKvOelL]);}();;
        }
        }();
[&]() {

        for (int cuAtDFi=0; cuAtDFi < VK_LUID_SIZE; cuAtDFi++){
            [&]() {
result.deviceLUID[cuAtDFi]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][cuAtDFi]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bIEoEdp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rKXmkfc=json({});
    
        if (name.pNext==NULL){
            return_rKXmkfc["null"]=true;
            return return_rKXmkfc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_SFtctJB=json({});
    
        return_SFtctJB["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_CGIGmHY=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_SFtctJB["members"][std::to_string(i)].push_back(temp);
        }
        return return_SFtctJB;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_KMePtpF=json({});
    
        return_KMePtpF["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_XFctEzS=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_KMePtpF["members"][std::to_string(i)].push_back(temp);
        }
        return return_KMePtpF;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_dtzNaqK=json({});
    
        return_dtzNaqK["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_JwfPvHp=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_dtzNaqK["members"][std::to_string(i)].push_back(temp);
        }
        return return_dtzNaqK;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_shCJfla=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_VzXFVbT=json({});
    return_VzXFVbT=[&]() {
    json return_qLyOUgM=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_VzXFVbT;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int UgsxLfy=0; UgsxLfy < VK_UUID_SIZE; UgsxLfy++){
            [&]() {
result.deviceUUID[UgsxLfy]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][UgsxLfy]);}();;
        }
        }();
[&]() {

        for (int cBGUuEL=0; cBGUuEL < VK_UUID_SIZE; cBGUuEL++){
            [&]() {
result.driverUUID[cBGUuEL]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][cBGUuEL]);}();;
        }
        }();
[&]() {

        for (int HTsZidX=0; HTsZidX < VK_LUID_SIZE; HTsZidX++){
            [&]() {
result.deviceLUID[HTsZidX]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][HTsZidX]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xOjiOGb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tLvExbw=json({});
    
        if (name.pNext==NULL){
            return_tLvExbw["null"]=true;
            return return_tLvExbw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_QtFrISL=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AaAwyKH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AaAwyKH=NULL;
        }
    temp_AaAwyKH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AaAwyKH;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rmpMODq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PrKWORh=json({});
    
        if (name.pNext==NULL){
            return_PrKWORh["null"]=true;
            return return_PrKWORh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_JxYYEYV=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EakSVgR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EakSVgR=NULL;
        }
    temp_EakSVgR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EakSVgR;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EpaMEWj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GdGBhbs=json({});
    
        if (name.pNext==NULL){
            return_GdGBhbs["null"]=true;
            return return_GdGBhbs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_aFIgTtr=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nfZSDBf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nfZSDBf=NULL;
        }
    temp_nfZSDBf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nfZSDBf;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_asgAzoZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jJMJuST=json({});
    
        if (name.pNext==NULL){
            return_jJMJuST["null"]=true;
            return return_jJMJuST;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_JtAosqr=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qkWlApF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qkWlApF=NULL;
        }
    temp_qkWlApF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qkWlApF;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RmelFnK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwYhXrO=json({});
    
        if (name.pNext==NULL){
            return_AwYhXrO["null"]=true;
            return return_AwYhXrO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_njRNlit=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yOtQYsu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yOtQYsu=NULL;
        }
    temp_yOtQYsu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yOtQYsu;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lIDsuod=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tEJpaPR=json({});
    
        if (name.pNext==NULL){
            return_tEJpaPR["null"]=true;
            return return_tEJpaPR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_DlGovlL=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oyFfLHH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oyFfLHH=NULL;
        }
    temp_oyFfLHH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oyFfLHH;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lnQEsUC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kVeJudz=json({});
    
        if (name.pNext==NULL){
            return_kVeJudz["null"]=true;
            return return_kVeJudz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_ONWmltB=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_GdntDHj=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lkAOTnb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lkAOTnb=NULL;
        }
    temp_lkAOTnb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lkAOTnb;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rEvGhRA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAayavq=json({});
    
        if (name.pNext==NULL){
            return_CAayavq["null"]=true;
            return return_CAayavq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_LJPRiuN=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FlxdATP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eScXyyl=json({});
    
        if (name.pNext==NULL){
            return_eScXyyl["null"]=true;
            return return_eScXyyl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_aFNrffK=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_fnYCxHw=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bEQaKuk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bEQaKuk=NULL;
        }
    temp_bEQaKuk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bEQaKuk;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UMrGPlA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dmrnWKy=json({});
    
        if (name.pNext==NULL){
            return_dmrnWKy["null"]=true;
            return return_dmrnWKy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_mrEGDOg=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YrxcHnn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YrxcHnn=NULL;
        }
    temp_YrxcHnn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YrxcHnn;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pFhBrVO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BIGpsaB=json({});
    
        if (name.pNext==NULL){
            return_BIGpsaB["null"]=true;
            return return_BIGpsaB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_ougooYS=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tVqLOdz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tVqLOdz=NULL;
        }
    temp_tVqLOdz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tVqLOdz;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PPZNCEv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gmvLWGG=json({});
    
        if (name.pNext==NULL){
            return_gmvLWGG["null"]=true;
            return return_gmvLWGG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_JAWbGgS=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_DNvrQfy=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_kxALHqy=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tWtGWDm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sMeriBp=json({});
    
        if (name.pNext==NULL){
            return_sMeriBp["null"]=true;
            return return_sMeriBp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_YnrLceT=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_keBJjfK=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_kZwsFly=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rJGnBTY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DQJCgqe=json({});
    
        if (name.pNext==NULL){
            return_DQJCgqe["null"]=true;
            return return_DQJCgqe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_OLJhxDw=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zuEzRqT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zuEzRqT=NULL;
        }
    temp_zuEzRqT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zuEzRqT;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YhCpCaT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kXfOdiv=json({});
    
        if (name.pNext==NULL){
            return_kXfOdiv["null"]=true;
            return return_kXfOdiv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_FigrPJE=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HxZmQnn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HxZmQnn=NULL;
        }
    temp_HxZmQnn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HxZmQnn;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_srdYIcM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IVJzfrL=json({});
    
        if (name.pNext==NULL){
            return_IVJzfrL["null"]=true;
            return return_IVJzfrL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_kxJmGxp=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_ZRItLUm=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_GTRrnPe=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_MtpTliJ=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yInYSbd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yInYSbd=NULL;
        }
    temp_yInYSbd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yInYSbd;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sROgTAO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xGNxrQs=json({});
    
        if (name.pNext==NULL){
            return_xGNxrQs["null"]=true;
            return return_xGNxrQs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_iFrPLJK=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_EUuvnaC=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HUqwtao;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HUqwtao=NULL;
        }
    temp_HUqwtao=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HUqwtao;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JxNDzTe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jszhFeX=json({});
    
        if (name.pNext==NULL){
            return_jszhFeX["null"]=true;
            return return_jszhFeX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_lGTTvVz=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JDNTnQv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JDNTnQv=NULL;
        }
    temp_JDNTnQv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JDNTnQv;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zxyVsWi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_volWxOe=json({});
    
        if (name.pNext==NULL){
            return_volWxOe["null"]=true;
            return return_volWxOe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_OlZIqfu=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tKkGayI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tKkGayI=NULL;
        }
    temp_tKkGayI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tKkGayI;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jkmQxMJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_acBZQSm=json({});
    
        if (name.pNext==NULL){
            return_acBZQSm["null"]=true;
            return return_acBZQSm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_lyroAGt=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_ZjEfYbF=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_cBKnKEk=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AQTdtXC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hEhGRaE=json({});
    
        if (name.pNext==NULL){
            return_hEhGRaE["null"]=true;
            return return_hEhGRaE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_gBOiBfS=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_JKWLVYk=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_HViJPiF=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oOVESAv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_spoISHV=json({});
    
        if (name.pNext==NULL){
            return_spoISHV["null"]=true;
            return return_spoISHV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_CLgtQST=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FXmfdFQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FXmfdFQ=NULL;
        }
    temp_FXmfdFQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FXmfdFQ;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XAAxDno=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EcoctCD=json({});
    
        if (name.pNext==NULL){
            return_EcoctCD["null"]=true;
            return return_EcoctCD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_HwvACyI=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FhYZBiW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FhYZBiW=NULL;
        }
    temp_FhYZBiW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FhYZBiW;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sRVkDEt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RKVzyTZ=json({});
    
        if (name.pNext==NULL){
            return_RKVzyTZ["null"]=true;
            return return_RKVzyTZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_cXaZQDv=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_tDpgzWf=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_XWYCsAl=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_jKYJcNz=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DNhOBfp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DNhOBfp=NULL;
        }
    temp_DNhOBfp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DNhOBfp;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rgxClQG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vAbqEDF=json({});
    
        if (name.pNext==NULL){
            return_vAbqEDF["null"]=true;
            return return_vAbqEDF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_SKWlUJX=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_AnruWsT=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ztBeXcj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ztBeXcj=NULL;
        }
    temp_ztBeXcj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ztBeXcj;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CJpQrYB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UGyvXbd=json({});
    
        if (name.pNext==NULL){
            return_UGyvXbd["null"]=true;
            return return_UGyvXbd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_APKHFTD=json({});
    return_APKHFTD=[&]() {
    json return_gwBdIQM=json({});
    return serialize_uint32_t(name.multiview);}();return return_APKHFTD;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_CrvzGGM=json({});
    return_CrvzGGM=[&]() {
    json return_eRaoEKQ=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_CrvzGGM;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_puCuAcG=json({});
    return_puCuAcG=[&]() {
    json return_AyiQTcb=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_puCuAcG;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zFUvHkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CYatBTf=json({});
    
        if (name.pNext==NULL){
            return_CYatBTf["null"]=true;
            return return_CYatBTf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_MjqrZns=json({});
    return_MjqrZns=[&]() {
    json return_YcTSwbx=json({});
    return serialize_uint32_t(name.multiview);}();return return_MjqrZns;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_AKXUbMX=json({});
    return_AKXUbMX=[&]() {
    json return_nlQrOmZ=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_AKXUbMX;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_nbuFjct=json({});
    return_nbuFjct=[&]() {
    json return_ypbPLVK=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_nbuFjct;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zIFdzqQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VFxXmxN=json({});
    
        if (name.pNext==NULL){
            return_VFxXmxN["null"]=true;
            return return_VFxXmxN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_SdjxXqS=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_aMXxXWe=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mbgasYM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gHSOoeU=json({});
    
        if (name.pNext==NULL){
            return_gHSOoeU["null"]=true;
            return return_gHSOoeU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_DaPeGzE=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_zQxXcRz=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zmKGZyg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tdLuwad=json({});
    
        if (name.pNext==NULL){
            return_tdLuwad["null"]=true;
            return return_tdLuwad;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_QCSQgoO=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_YsZCiOo=json({});
    
        if (name.pViewMasks==NULL){
            return_YsZCiOo["null"]=true;
            return return_YsZCiOo;
        }
        
        return_YsZCiOo["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_hYUSAuj=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_YsZCiOo["members"][std::to_string(i)].push_back(temp);
        }
        return return_YsZCiOo;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_JRCMtyd=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_UOQQWLR=json({});
    
        if (name.pViewOffsets==NULL){
            return_UOQQWLR["null"]=true;
            return return_UOQQWLR;
        }
        
        return_UOQQWLR["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_jpttiCM=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_UOQQWLR["members"][std::to_string(i)].push_back(temp);
        }
        return return_UOQQWLR;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_riJvgzv=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_zOlSaKQ=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_zOlSaKQ["null"]=true;
            return return_zOlSaKQ;
        }
        
        return_zOlSaKQ["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_SLdJuAp=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_zOlSaKQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_zOlSaKQ;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gFViyzS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gFViyzS=NULL;
        }
    temp_gFViyzS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gFViyzS;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_gASriqM;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_gASriqM=NULL;
        }
    temp_gASriqM=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int yZGkiVy=0; yZGkiVy < result.subpassCount; yZGkiVy++){
            [&]() {
temp_gASriqM[yZGkiVy]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][yZGkiVy]);}();;
        }
        }();result.pViewMasks=temp_gASriqM;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_RLGYxMr;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_RLGYxMr=NULL;
        }
    temp_RLGYxMr=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int esStvLl=0; esStvLl < result.dependencyCount; esStvLl++){
            [&]() {
temp_RLGYxMr[esStvLl]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][esStvLl]);}();;
        }
        }();result.pViewOffsets=temp_RLGYxMr;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_ogJlUGo;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_ogJlUGo=NULL;
        }
    temp_ogJlUGo=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int sQfhKBN=0; sQfhKBN < result.correlationMaskCount; sQfhKBN++){
            [&]() {
temp_ogJlUGo[sQfhKBN]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][sQfhKBN]);}();;
        }
        }();result.pCorrelationMasks=temp_ogJlUGo;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PycUpdZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AyplDFE=json({});
    
        if (name.pNext==NULL){
            return_AyplDFE["null"]=true;
            return return_AyplDFE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_NyyzRYs=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_oSFqzNl=json({});
    
        if (name.pViewMasks==NULL){
            return_oSFqzNl["null"]=true;
            return return_oSFqzNl;
        }
        
        return_oSFqzNl["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_inOEeRa=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_oSFqzNl["members"][std::to_string(i)].push_back(temp);
        }
        return return_oSFqzNl;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_JOlhQRK=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_CTRXKEq=json({});
    
        if (name.pViewOffsets==NULL){
            return_CTRXKEq["null"]=true;
            return return_CTRXKEq;
        }
        
        return_CTRXKEq["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_vvKJHaI=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_CTRXKEq["members"][std::to_string(i)].push_back(temp);
        }
        return return_CTRXKEq;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_OEjooVu=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_OqJyMEN=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_OqJyMEN["null"]=true;
            return return_OqJyMEN;
        }
        
        return_OqJyMEN["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_VXvObVn=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_OqJyMEN["members"][std::to_string(i)].push_back(temp);
        }
        return return_OqJyMEN;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OUJLWJM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OUJLWJM=NULL;
        }
    temp_OUJLWJM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OUJLWJM;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_DrIMGfn;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_DrIMGfn=NULL;
        }
    temp_DrIMGfn=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int MFQHqmT=0; MFQHqmT < result.subpassCount; MFQHqmT++){
            [&]() {
temp_DrIMGfn[MFQHqmT]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][MFQHqmT]);}();;
        }
        }();result.pViewMasks=temp_DrIMGfn;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_zQweZfG;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_zQweZfG=NULL;
        }
    temp_zQweZfG=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int nRdGTZk=0; nRdGTZk < result.dependencyCount; nRdGTZk++){
            [&]() {
temp_zQweZfG[nRdGTZk]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][nRdGTZk]);}();;
        }
        }();result.pViewOffsets=temp_zQweZfG;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_JoUFhne;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_JoUFhne=NULL;
        }
    temp_JoUFhne=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int XTpZBbP=0; XTpZBbP < result.correlationMaskCount; XTpZBbP++){
            [&]() {
temp_JoUFhne[XTpZBbP]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][XTpZBbP]);}();;
        }
        }();result.pCorrelationMasks=temp_JoUFhne;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XomaXpX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xeOvQQl=json({});
    
        if (name.pNext==NULL){
            return_xeOvQQl["null"]=true;
            return return_xeOvQQl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImageCount"]=[&]() {
    json return_qItTEdz=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_vkOdqcC=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_ToRtzMO=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_PSGtIhn=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_wVinDaj=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_nyVSEjQ=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_IpXFlEn=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_PjSqpnu=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_MbuILIY=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_yVBnKZV=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_ffOIFaP=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_exDCbWH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gzZpDno=json({});
    
        if (name.pNext==NULL){
            return_gzZpDno["null"]=true;
            return return_gzZpDno;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["powerState"]=[&]() {
    json return_AvIKhiY=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RjTfzCJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RjTfzCJ=NULL;
        }
    temp_RjTfzCJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RjTfzCJ;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eUkFbYL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cuYNxvj=json({});
    
        if (name.pNext==NULL){
            return_cuYNxvj["null"]=true;
            return return_cuYNxvj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceEvent"]=[&]() {
    json return_OHyFxvJ=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ejnIPGW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ejnIPGW=NULL;
        }
    temp_ejnIPGW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ejnIPGW;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eqdtczd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KTtRaZW=json({});
    
        if (name.pNext==NULL){
            return_KTtRaZW["null"]=true;
            return return_KTtRaZW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayEvent"]=[&]() {
    json return_gCpsyiF=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XhjMOPQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XhjMOPQ=NULL;
        }
    temp_XhjMOPQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XhjMOPQ;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vbiUBIE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XliWWHH=json({});
    
        if (name.pNext==NULL){
            return_XliWWHH["null"]=true;
            return return_XliWWHH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCounters"]=[&]() {
    json return_tTsMhcS=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PHOGZbi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PHOGZbi=NULL;
        }
    temp_PHOGZbi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PHOGZbi;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aQsknWU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GmFJTiN=json({});
    
        if (name.pNext==NULL){
            return_GmFJTiN["null"]=true;
            return return_GmFJTiN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_tigkfBP=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_RDVImmN=json({});
    
        return_RDVImmN["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kiGgDnx=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_RDVImmN["members"][std::to_string(i)].push_back(temp);
        }
        return return_RDVImmN;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_rtRQxnf=json({});
    return_rtRQxnf=[&]() {
    json return_EKFMtzX=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_rtRQxnf;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int EBogBuy=0; EBogBuy < VK_MAX_DEVICE_GROUP_SIZE; EBogBuy++){
            [&]() {
result.physicalDevices[EBogBuy]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][EBogBuy]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lKEoZlE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CWwcDkx=json({});
    
        if (name.pNext==NULL){
            return_CWwcDkx["null"]=true;
            return return_CWwcDkx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_TshqlBa=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_lCtbqdH=json({});
    
        return_lCtbqdH["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VKeOKje=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_lCtbqdH["members"][std::to_string(i)].push_back(temp);
        }
        return return_lCtbqdH;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_WFgCuWA=json({});
    return_WFgCuWA=[&]() {
    json return_LDlropX=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_WFgCuWA;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int xcKGmiv=0; xcKGmiv < VK_MAX_DEVICE_GROUP_SIZE; xcKGmiv++){
            [&]() {
result.physicalDevices[xcKGmiv]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][xcKGmiv]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mwAyuYE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_atmUTVd=json({});
    
        if (name.pNext==NULL){
            return_atmUTVd["null"]=true;
            return return_atmUTVd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jedVoUO=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_QXxefVB=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_chuVkYc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_chuVkYc=NULL;
        }
    temp_chuVkYc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_chuVkYc;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DxvlJpH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WbYKrEQ=json({});
    
        if (name.pNext==NULL){
            return_WbYKrEQ["null"]=true;
            return return_WbYKrEQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_pGPMeIP=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_qovYkFV=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oYglgRP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oYglgRP=NULL;
        }
    temp_oYglgRP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oYglgRP;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CdtNdtZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tPpnpnX=json({});
    
        if (name.pNext==NULL){
            return_tPpnpnX["null"]=true;
            return return_tPpnpnX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_trYvtZM=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_okiJFer=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_AdJKfqg=json({});
    return_AdJKfqg=[&]() {
    json return_etPUIcW=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_AdJKfqg;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aYDgvlJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aYDgvlJ=NULL;
        }
    temp_aYDgvlJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aYDgvlJ;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eywQQjq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bGaDTAc=json({});
    
        if (name.pNext==NULL){
            return_bGaDTAc["null"]=true;
            return return_bGaDTAc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_jeNXejI=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_PJeDMNE=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_BknLqan=json({});
    return_BknLqan=[&]() {
    json return_dfmlrBG=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_BknLqan;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bKokDGh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bKokDGh=NULL;
        }
    temp_bKokDGh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bKokDGh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QMWgjDX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PpjXTZu=json({});
    
        if (name.pNext==NULL){
            return_PpjXTZu["null"]=true;
            return return_PpjXTZu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_kHjwTtf=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_fhVDJqJ=json({});
    
        if (name.pDeviceIndices==NULL){
            return_fhVDJqJ["null"]=true;
            return return_fhVDJqJ;
        }
        
        return_fhVDJqJ["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_fghvpSY=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_fhVDJqJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_fhVDJqJ;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vCSuouy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vCSuouy=NULL;
        }
    temp_vCSuouy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vCSuouy;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_RCadJEI;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_RCadJEI=NULL;
        }
    temp_RCadJEI=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int PRIYCns=0; PRIYCns < result.deviceIndexCount; PRIYCns++){
            [&]() {
temp_RCadJEI[PRIYCns]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][PRIYCns]);}();;
        }
        }();result.pDeviceIndices=temp_RCadJEI;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SdTgmSk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GwHsGPl=json({});
    
        if (name.pNext==NULL){
            return_GwHsGPl["null"]=true;
            return return_GwHsGPl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_idJETcm=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_rKBKnWV=json({});
    
        if (name.pDeviceIndices==NULL){
            return_rKBKnWV["null"]=true;
            return return_rKBKnWV;
        }
        
        return_rKBKnWV["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_HnyzmMV=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_rKBKnWV["members"][std::to_string(i)].push_back(temp);
        }
        return return_rKBKnWV;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KYyZCGC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KYyZCGC=NULL;
        }
    temp_KYyZCGC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KYyZCGC;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_ZPMNdSX;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_ZPMNdSX=NULL;
        }
    temp_ZPMNdSX=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int aCasjdG=0; aCasjdG < result.deviceIndexCount; aCasjdG++){
            [&]() {
temp_ZPMNdSX[aCasjdG]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][aCasjdG]);}();;
        }
        }();result.pDeviceIndices=temp_ZPMNdSX;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dPpAKQh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwALFpD=json({});
    
        if (name.pNext==NULL){
            return_AwALFpD["null"]=true;
            return return_AwALFpD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_zCZMMda=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_pEAKLum=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_SNjZcVH=json({});
    return_SNjZcVH=[&]() {
    json return_nPmvFTO=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_SNjZcVH;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jusWxhj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jusWxhj=NULL;
        }
    temp_jusWxhj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jusWxhj;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PuBCWGx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PvqxPIM=json({});
    
        if (name.pNext==NULL){
            return_PvqxPIM["null"]=true;
            return return_PvqxPIM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_yyrGRIn=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_PPJCUYB=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_drXMDoo=json({});
    return_drXMDoo=[&]() {
    json return_rxVEGpQ=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_drXMDoo;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fXRrFEN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fXRrFEN=NULL;
        }
    temp_fXRrFEN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fXRrFEN;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EakYBRv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BETiEhF=json({});
    
        if (name.pNext==NULL){
            return_BETiEhF["null"]=true;
            return return_BETiEhF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_EvTxali=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_fbRmvwu=json({});
    
        if (name.pDeviceIndices==NULL){
            return_fbRmvwu["null"]=true;
            return return_fbRmvwu;
        }
        
        return_fbRmvwu["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_TLlZsxi=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_fbRmvwu["members"][std::to_string(i)].push_back(temp);
        }
        return return_fbRmvwu;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_HdYENCY=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_VPJunSA=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_VPJunSA["null"]=true;
            return return_VPJunSA;
        }
        
        return_VPJunSA["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_YvHFUGU=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_VPJunSA["members"][std::to_string(i)].push_back(temp);
        }
        return return_VPJunSA;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xLiubMT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xLiubMT=NULL;
        }
    temp_xLiubMT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xLiubMT;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_RQOeGom;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_RQOeGom=NULL;
        }
    temp_RQOeGom=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int YqiZlWU=0; YqiZlWU < result.deviceIndexCount; YqiZlWU++){
            [&]() {
temp_RQOeGom[YqiZlWU]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][YqiZlWU]);}();;
        }
        }();result.pDeviceIndices=temp_RQOeGom;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_GxbrHij;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_GxbrHij=NULL;
        }
    temp_GxbrHij=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int zPwpjsc=0; zPwpjsc < result.splitInstanceBindRegionCount; zPwpjsc++){
            [&]() {
temp_GxbrHij[zPwpjsc]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][zPwpjsc]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_GxbrHij;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KEcKMKZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yLxAPhO=json({});
    
        if (name.pNext==NULL){
            return_yLxAPhO["null"]=true;
            return return_yLxAPhO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_vQAInpf=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_HXxUJqk=json({});
    
        if (name.pDeviceIndices==NULL){
            return_HXxUJqk["null"]=true;
            return return_HXxUJqk;
        }
        
        return_HXxUJqk["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_KGljvtu=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_HXxUJqk["members"][std::to_string(i)].push_back(temp);
        }
        return return_HXxUJqk;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_BAKSktn=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_BZMYFqO=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_BZMYFqO["null"]=true;
            return return_BZMYFqO;
        }
        
        return_BZMYFqO["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_aUMeHHG=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_BZMYFqO["members"][std::to_string(i)].push_back(temp);
        }
        return return_BZMYFqO;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UwiNRvk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UwiNRvk=NULL;
        }
    temp_UwiNRvk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UwiNRvk;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_INIdTKr;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_INIdTKr=NULL;
        }
    temp_INIdTKr=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int vJsnbnI=0; vJsnbnI < result.deviceIndexCount; vJsnbnI++){
            [&]() {
temp_INIdTKr[vJsnbnI]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][vJsnbnI]);}();;
        }
        }();result.pDeviceIndices=temp_INIdTKr;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_sknMjnz;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_sknMjnz=NULL;
        }
    temp_sknMjnz=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int nEmUwiM=0; nEmUwiM < result.splitInstanceBindRegionCount; nEmUwiM++){
            [&]() {
temp_sknMjnz[nEmUwiM]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][nEmUwiM]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_sknMjnz;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eFvUJrQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WCFTfSf=json({});
    
        if (name.pNext==NULL){
            return_WCFTfSf["null"]=true;
            return return_WCFTfSf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_noaPcBk=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_mIYPnTB=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_jygNGDu=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_jygNGDu["null"]=true;
            return return_jygNGDu;
        }
        
        return_jygNGDu["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_SEEvena=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_jygNGDu["members"][std::to_string(i)].push_back(temp);
        }
        return return_jygNGDu;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FYsvZSV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FYsvZSV=NULL;
        }
    temp_FYsvZSV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FYsvZSV;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_GQDyfPg;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_GQDyfPg=NULL;
        }
    temp_GQDyfPg=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int GHflMUd=0; GHflMUd < result.deviceRenderAreaCount; GHflMUd++){
            [&]() {
temp_GQDyfPg[GHflMUd]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][GHflMUd]);}();;
        }
        }();result.pDeviceRenderAreas=temp_GQDyfPg;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yAiMxiL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ALheJpH=json({});
    
        if (name.pNext==NULL){
            return_ALheJpH["null"]=true;
            return return_ALheJpH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_jnDrucF=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_hIZdAve=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_HParJqV=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_HParJqV["null"]=true;
            return return_HParJqV;
        }
        
        return_HParJqV["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_ErCWwFE=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_HParJqV["members"][std::to_string(i)].push_back(temp);
        }
        return return_HParJqV;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RzjPbqW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RzjPbqW=NULL;
        }
    temp_RzjPbqW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RzjPbqW;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_VOcUrIR;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_VOcUrIR=NULL;
        }
    temp_VOcUrIR=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int OMMXkAE=0; OMMXkAE < result.deviceRenderAreaCount; OMMXkAE++){
            [&]() {
temp_VOcUrIR[OMMXkAE]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][OMMXkAE]);}();;
        }
        }();result.pDeviceRenderAreas=temp_VOcUrIR;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_stZyBiK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_APQKsEr=json({});
    
        if (name.pNext==NULL){
            return_APQKsEr["null"]=true;
            return return_APQKsEr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_nbEzmdb=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BTUfomG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BTUfomG=NULL;
        }
    temp_BTUfomG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BTUfomG;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aDDpzbt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AVBAmyB=json({});
    
        if (name.pNext==NULL){
            return_AVBAmyB["null"]=true;
            return return_AVBAmyB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_MLDRRfp=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MJcgslq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MJcgslq=NULL;
        }
    temp_MJcgslq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MJcgslq;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IWRIfcX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wvvCUVL=json({});
    
        if (name.pNext==NULL){
            return_wvvCUVL["null"]=true;
            return return_wvvCUVL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_ozRzCME=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_TBMamks=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_TBMamks["null"]=true;
            return return_TBMamks;
        }
        
        return_TBMamks["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_PJBsste=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_TBMamks["members"][std::to_string(i)].push_back(temp);
        }
        return return_TBMamks;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_OLJuOjl=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_RObXjLJ=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_RObXjLJ["null"]=true;
            return return_RObXjLJ;
        }
        
        return_RObXjLJ["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_yxnMIJy=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_RObXjLJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_RObXjLJ;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_fLAsKMe=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_fTMDxvY=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_fTMDxvY["null"]=true;
            return return_fTMDxvY;
        }
        
        return_fTMDxvY["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_bQjxtyi=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_fTMDxvY["members"][std::to_string(i)].push_back(temp);
        }
        return return_fTMDxvY;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vvwDYDu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vvwDYDu=NULL;
        }
    temp_vvwDYDu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vvwDYDu;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_cUeYMGv;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_cUeYMGv=NULL;
        }
    temp_cUeYMGv=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int ZZErDTE=0; ZZErDTE < result.waitSemaphoreCount; ZZErDTE++){
            [&]() {
temp_cUeYMGv[ZZErDTE]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][ZZErDTE]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_cUeYMGv;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_eTKsbTY;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_eTKsbTY=NULL;
        }
    temp_eTKsbTY=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int krLueby=0; krLueby < result.commandBufferCount; krLueby++){
            [&]() {
temp_eTKsbTY[krLueby]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][krLueby]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_eTKsbTY;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_iDEvxFA;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_iDEvxFA=NULL;
        }
    temp_iDEvxFA=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int lNglvGm=0; lNglvGm < result.signalSemaphoreCount; lNglvGm++){
            [&]() {
temp_iDEvxFA[lNglvGm]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][lNglvGm]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_iDEvxFA;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zxGzZTr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dUMkieV=json({});
    
        if (name.pNext==NULL){
            return_dUMkieV["null"]=true;
            return return_dUMkieV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_aXqcRiK=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_AmSbmTI=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_AmSbmTI["null"]=true;
            return return_AmSbmTI;
        }
        
        return_AmSbmTI["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_pzmHXkq=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_AmSbmTI["members"][std::to_string(i)].push_back(temp);
        }
        return return_AmSbmTI;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_gFsFPMo=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_KrSuQJj=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_KrSuQJj["null"]=true;
            return return_KrSuQJj;
        }
        
        return_KrSuQJj["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_btEFLrG=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_KrSuQJj["members"][std::to_string(i)].push_back(temp);
        }
        return return_KrSuQJj;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_fkoZefe=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_ZkGyEdq=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_ZkGyEdq["null"]=true;
            return return_ZkGyEdq;
        }
        
        return_ZkGyEdq["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_feLUvbm=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_ZkGyEdq["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZkGyEdq;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pKsiaxl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pKsiaxl=NULL;
        }
    temp_pKsiaxl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pKsiaxl;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_bFMJiFe;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_bFMJiFe=NULL;
        }
    temp_bFMJiFe=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int vJRDsNc=0; vJRDsNc < result.waitSemaphoreCount; vJRDsNc++){
            [&]() {
temp_bFMJiFe[vJRDsNc]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][vJRDsNc]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_bFMJiFe;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_OsPPYrO;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_OsPPYrO=NULL;
        }
    temp_OsPPYrO=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int pqBqRJi=0; pqBqRJi < result.commandBufferCount; pqBqRJi++){
            [&]() {
temp_OsPPYrO[pqBqRJi]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][pqBqRJi]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_OsPPYrO;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_YCHyhKu;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_YCHyhKu=NULL;
        }
    temp_YCHyhKu=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int RGEgVgF=0; RGEgVgF < result.signalSemaphoreCount; RGEgVgF++){
            [&]() {
temp_YCHyhKu[RGEgVgF]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][RGEgVgF]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_YCHyhKu;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nQCGQhl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ewwbyZK=json({});
    
        if (name.pNext==NULL){
            return_ewwbyZK["null"]=true;
            return return_ewwbyZK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_GEjpSHp=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_hdWlaWp=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_chnhJFQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_chnhJFQ=NULL;
        }
    temp_chnhJFQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_chnhJFQ;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NqeDqCS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_drvCIvf=json({});
    
        if (name.pNext==NULL){
            return_drvCIvf["null"]=true;
            return return_drvCIvf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_zrxokwU=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_ouSToKS=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UVciTWe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UVciTWe=NULL;
        }
    temp_UVciTWe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UVciTWe;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EOkFDRm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vtRAPeU=json({});
    
        if (name.pNext==NULL){
            return_vtRAPeU["null"]=true;
            return return_vtRAPeU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMask"]=[&]() {
    json return_DkZUpLA=json({});
    
        return_DkZUpLA["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZtTPfHE=json({});
    return serialize_uint32_t(name.presentMask[i]);}();
            return_DkZUpLA["members"][std::to_string(i)].push_back(temp);
        }
        return return_DkZUpLA;
        }();
result["members"]["modes"]=[&]() {
    json return_YqFEQtc=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int aXptRby=0; aXptRby < VK_MAX_DEVICE_GROUP_SIZE; aXptRby++){
            [&]() {
result.presentMask[aXptRby]=deserialize_uint32_t(name["members"]["presentMask"]["members"][aXptRby]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_veLSRtr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ejOmaCL=json({});
    
        if (name.pNext==NULL){
            return_ejOmaCL["null"]=true;
            return return_ejOmaCL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_mzTfGPR=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QPOKxQx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QPOKxQx=NULL;
        }
    temp_QPOKxQx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QPOKxQx;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iiiyYtB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_feJnLNU=json({});
    
        if (name.pNext==NULL){
            return_feJnLNU["null"]=true;
            return return_feJnLNU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_Ydcpsyo=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_yIJaRKS=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_InOjZPD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_InOjZPD=NULL;
        }
    temp_InOjZPD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_InOjZPD;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CWJwCKw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YenvQEe=json({});
    
        if (name.pNext==NULL){
            return_YenvQEe["null"]=true;
            return return_YenvQEe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_ztectAp=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_mCwZrXW=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_ogukwal=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_XirdIeW=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_jlEEPEe=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QPIcqEh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QPIcqEh=NULL;
        }
    temp_QPIcqEh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QPIcqEh;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_katDbBC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LdPhEiE=json({});
    
        if (name.pNext==NULL){
            return_LdPhEiE["null"]=true;
            return return_LdPhEiE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_RcKMmWO=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_eVRPyNB=json({});
    
        if (name.pDeviceMasks==NULL){
            return_eVRPyNB["null"]=true;
            return return_eVRPyNB;
        }
        
        return_eVRPyNB["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_jYDVZsr=json({});
    return serialize_uint32_t(name.pDeviceMasks[i]);}();
            return_eVRPyNB["members"][std::to_string(i)].push_back(temp);
        }
        return return_eVRPyNB;
        }();
result["members"]["mode"]=[&]() {
    json return_wmEDkUS=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jJpRIhR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jJpRIhR=NULL;
        }
    temp_jJpRIhR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jJpRIhR;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_iWZUJyW;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_iWZUJyW=NULL;
        }
    temp_iWZUJyW=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int VXDHtGf=0; VXDHtGf < result.swapchainCount; VXDHtGf++){
            [&]() {
temp_iWZUJyW[VXDHtGf]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][VXDHtGf]);}();;
        }
        }();result.pDeviceMasks=temp_iWZUJyW;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ByHENFg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TErNhOM=json({});
    
        if (name.pNext==NULL){
            return_TErNhOM["null"]=true;
            return return_TErNhOM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_ulXFyuY=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_xnoxaks=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_xnoxaks["null"]=true;
            return return_xnoxaks;
        }
        
        return_xnoxaks["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_inxWmrV=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_xnoxaks["members"][std::to_string(i)].push_back(temp);
        }
        return return_xnoxaks;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JjfISKs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JjfISKs=NULL;
        }
    temp_JjfISKs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JjfISKs;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_iKCGyPV;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_iKCGyPV=NULL;
        }
    temp_iKCGyPV=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int yVSzrid=0; yVSzrid < result.physicalDeviceCount; yVSzrid++){
            [&]() {
temp_iKCGyPV[yVSzrid]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][yVSzrid]);}();;
        }
        }();result.pPhysicalDevices=temp_iKCGyPV;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EaSxGRT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cGEstib=json({});
    
        if (name.pNext==NULL){
            return_cGEstib["null"]=true;
            return return_cGEstib;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_EaGQiiK=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_hJShzZX=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_hJShzZX["null"]=true;
            return return_hJShzZX;
        }
        
        return_hJShzZX["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_whTFoTb=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_hJShzZX["members"][std::to_string(i)].push_back(temp);
        }
        return return_hJShzZX;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_djgazyl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_djgazyl=NULL;
        }
    temp_djgazyl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_djgazyl;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_aecABPE;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_aecABPE=NULL;
        }
    temp_aecABPE=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int SThFQOt=0; SThFQOt < result.physicalDeviceCount; SThFQOt++){
            [&]() {
temp_aecABPE[SThFQOt]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][SThFQOt]);}();;
        }
        }();result.pPhysicalDevices=temp_aecABPE;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KSebvqE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fdIySQI=json({});
    
        if (name.pNext==NULL){
            return_fdIySQI["null"]=true;
            return return_fdIySQI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["modes"]=[&]() {
    json return_RfIJFek=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WPUYQfF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WPUYQfF=NULL;
        }
    temp_WPUYQfF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WPUYQfF;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_cyUSgeM=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ZsuQbZM=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_ZRaCMpe=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_tvFlOwo=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_DVdWfyC=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_PfKwDBY=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_BUDuJkN=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_VRpByTv=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_HsrNfBp=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_FaAZdBA=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_DqgAkaN=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_pEqmIiG=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wGTpBaX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zXjKsFn=json({});
    
        if (name.pNext==NULL){
            return_zXjKsFn["null"]=true;
            return return_zXjKsFn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MIwKWYU=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_pFVVsVE=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_jbrlyUf=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_jbrlyUf["null"]=true;
            return return_jbrlyUf;
        }
        
        return_jbrlyUf["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_aSjaojt=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_jbrlyUf["members"][std::to_string(i)].push_back(temp);
        }
        return return_jbrlyUf;
        }();
result["members"]["templateType"]=[&]() {
    json return_faZNAmZ=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_LfXegmY=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_euKbEIN=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_nWESeKC=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_DWNUUft=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZTAbyVd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZTAbyVd=NULL;
        }
    temp_ZTAbyVd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZTAbyVd;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_auFINYT;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_auFINYT=NULL;
        }
    temp_auFINYT=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int uUzzjQd=0; uUzzjQd < result.descriptorUpdateEntryCount; uUzzjQd++){
            [&]() {
temp_auFINYT[uUzzjQd]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][uUzzjQd]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_auFINYT;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hXWxmHG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yEDfbuJ=json({});
    
        if (name.pNext==NULL){
            return_yEDfbuJ["null"]=true;
            return return_yEDfbuJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wQprJXH=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_xLjENXq=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_brHpyxI=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_brHpyxI["null"]=true;
            return return_brHpyxI;
        }
        
        return_brHpyxI["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_FIpekMo=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_brHpyxI["members"][std::to_string(i)].push_back(temp);
        }
        return return_brHpyxI;
        }();
result["members"]["templateType"]=[&]() {
    json return_ienIpCS=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_TxgIfnj=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_ltSXqaX=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_JkjwLti=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_CDUgcwJ=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dZcNkSw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dZcNkSw=NULL;
        }
    temp_dZcNkSw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dZcNkSw;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_wZBYrRn;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_wZBYrRn=NULL;
        }
    temp_wZBYrRn=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int EgbYWEl=0; EgbYWEl < result.descriptorUpdateEntryCount; EgbYWEl++){
            [&]() {
temp_wZBYrRn[EgbYWEl]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][EgbYWEl]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_wZBYrRn;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_ZaGYYfo=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_bmyrabY=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hKCZbHA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ITNoOYd=json({});
    
        if (name.pNext==NULL){
            return_ITNoOYd["null"]=true;
            return return_ITNoOYd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentId"]=[&]() {
    json return_cRzpBJb=json({});
    return_cRzpBJb=[&]() {
    json return_SnvaxZi=json({});
    return serialize_uint32_t(name.presentId);}();return return_cRzpBJb;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HyCPPIT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VpQZfsJ=json({});
    
        if (name.pNext==NULL){
            return_VpQZfsJ["null"]=true;
            return return_VpQZfsJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_OWJbUvC=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_QXemmxj=json({});
    
        if (name.pPresentIds==NULL){
            return_QXemmxj["null"]=true;
            return return_QXemmxj;
        }
        
        return_QXemmxj["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_CMtKDjg=json({});
    return serialize_uint64_t(name.pPresentIds[i]);}();
            return_QXemmxj["members"][std::to_string(i)].push_back(temp);
        }
        return return_QXemmxj;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YdzhlyR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YdzhlyR=NULL;
        }
    temp_YdzhlyR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YdzhlyR;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_EWlYscD;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_EWlYscD=NULL;
        }
    temp_EWlYscD=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int eOSFZOo=0; eOSFZOo < result.swapchainCount; eOSFZOo++){
            [&]() {
temp_EWlYscD[eOSFZOo]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][eOSFZOo]);}();;
        }
        }();result.pPresentIds=temp_EWlYscD;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QjyYCRY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cuipJzx=json({});
    
        if (name.pNext==NULL){
            return_cuipJzx["null"]=true;
            return return_cuipJzx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentWait"]=[&]() {
    json return_dhhngrx=json({});
    return_dhhngrx=[&]() {
    json return_oOXKULm=json({});
    return serialize_uint32_t(name.presentWait);}();return return_dhhngrx;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_chVuAgz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EBdWsbp=json({});
    
        if (name.pNext==NULL){
            return_EBdWsbp["null"]=true;
            return return_EBdWsbp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_vArashM=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_RVzwygj=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_jCyYIHk=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_yhsxxLw=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_ODToCuM=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_LhHFAkl=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_kzpbcQl=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_EWRufYt=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YddCAGt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YddCAGt=NULL;
        }
    temp_YddCAGt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YddCAGt;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LDOnwHp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WMyUZjq=json({});
    
        if (name.pNext==NULL){
            return_WMyUZjq["null"]=true;
            return return_WMyUZjq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_cMtugQu=json({});
    return_cMtugQu=[&]() {
    json return_zhiVQpA=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_cMtugQu;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NorozkB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GvksvVz=json({});
    
        if (name.pNext==NULL){
            return_GvksvVz["null"]=true;
            return return_GvksvVz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_SVDtZQj=json({});
    return_SVDtZQj=[&]() {
    json return_FdgtzaT=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_SVDtZQj;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NNZcpei;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NNZcpei=NULL;
        }
    temp_NNZcpei=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NNZcpei;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_QeusOLg=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_ckqlAcq=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_rDTsaoX=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_GYXlMxq=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_tstTdGf=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_fDeqrUq=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EYUmqlE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TIyQZrt=json({});
    
        if (name.pNext==NULL){
            return_TIyQZrt["null"]=true;
            return return_TIyQZrt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_PvjvWaR=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_NRGboNI=json({});
    
        if (name.pTimes==NULL){
            return_NRGboNI["null"]=true;
            return return_NRGboNI;
        }
        
        return_NRGboNI["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_SnAmKfZ=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[i]);}();
            return_NRGboNI["members"][std::to_string(i)].push_back(temp);
        }
        return return_NRGboNI;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KZJqEfJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KZJqEfJ=NULL;
        }
    temp_KZJqEfJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KZJqEfJ;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_wQmeaqg;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_wQmeaqg=NULL;
        }
    temp_wQmeaqg=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int igttqzg=0; igttqzg < result.swapchainCount; igttqzg++){
            [&]() {
temp_wQmeaqg[igttqzg]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][igttqzg]);}();;
        }
        }();result.pTimes=temp_wQmeaqg;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_QMRsvhL=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_NPtiNTg=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_tdwkywH=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_PPKseLN=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XgaFXJN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pJmHpUM=json({});
    
        if (name.pNext==NULL){
            return_pJmHpUM["null"]=true;
            return return_pJmHpUM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_LNMZKNk=json({});
    return_LNMZKNk=[&]() {
    json return_RXRqyFl=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_LNMZKNk;}();
result["members"]["viewportCount"]=[&]() {
    json return_UGkDicV=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_kuogsaV=json({});
    
        if (name.pViewportWScalings==NULL){
            return_kuogsaV["null"]=true;
            return return_kuogsaV;
        }
        
        return_kuogsaV["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_BLykgtT=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[i]);}();
            return_kuogsaV["members"][std::to_string(i)].push_back(temp);
        }
        return return_kuogsaV;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rZWmRFI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rZWmRFI=NULL;
        }
    temp_rZWmRFI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rZWmRFI;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_WGXTwct;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_WGXTwct=NULL;
        }
    temp_WGXTwct=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int VRtWGGl=0; VRtWGGl < result.viewportCount; VRtWGGl++){
            [&]() {
temp_WGXTwct[VRtWGGl]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][VRtWGGl]);}();;
        }
        }();result.pViewportWScalings=temp_WGXTwct;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_oOMysLx=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_fzSZEtL=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_GjtBnUq=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_MGyvzFt=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cBsImBw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TeHxsCd=json({});
    
        if (name.pNext==NULL){
            return_TeHxsCd["null"]=true;
            return return_TeHxsCd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IflDyKR=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_HtLmTca=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_bmioZdZ=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_bmioZdZ["null"]=true;
            return return_bmioZdZ;
        }
        
        return_bmioZdZ["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_azjewxU=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[i]);}();
            return_bmioZdZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_bmioZdZ;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bTWYyWa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bTWYyWa=NULL;
        }
    temp_bTWYyWa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bTWYyWa;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_rsXWCAS;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_rsXWCAS=NULL;
        }
    temp_rsXWCAS=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int UEzCuGN=0; UEzCuGN < result.viewportCount; UEzCuGN++){
            [&]() {
temp_rsXWCAS[UEzCuGN]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][UEzCuGN]);}();;
        }
        }();result.pViewportSwizzles=temp_rsXWCAS;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mTJEJDx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LJfzIdP=json({});
    
        if (name.pNext==NULL){
            return_LJfzIdP["null"]=true;
            return return_LJfzIdP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_wBOvbwz=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QHpelfP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_phAYfTU=json({});
    
        if (name.pNext==NULL){
            return_phAYfTU["null"]=true;
            return return_phAYfTU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UxJwowO=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_KoAbbvz=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_dKbaRtd=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_TARzaQS=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_TARzaQS["null"]=true;
            return return_TARzaQS;
        }
        
        return_TARzaQS["members"]={};
        for(int i=0; i < name.discardRectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_UvwOTLJ=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[i]);}();
            return_TARzaQS["members"][std::to_string(i)].push_back(temp);
        }
        return return_TARzaQS;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SKsxJYr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SKsxJYr=NULL;
        }
    temp_SKsxJYr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SKsxJYr;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_ILcvtAT;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_ILcvtAT=NULL;
        }
    temp_ILcvtAT=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int NWqCMUZ=0; NWqCMUZ < result.discardRectangleCount; NWqCMUZ++){
            [&]() {
temp_ILcvtAT[NWqCMUZ]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][NWqCMUZ]);}();;
        }
        }();result.pDiscardRectangles=temp_ILcvtAT;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CyaUIkd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FbYEkzk=json({});
    
        if (name.pNext==NULL){
            return_FbYEkzk["null"]=true;
            return return_FbYEkzk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_hvNLzJD=json({});
    return_hvNLzJD=[&]() {
    json return_anzGzdM=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_hvNLzJD;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_lMTteBQ=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_yYnDcdn=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_cXeUiAk=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_PGaNrhZ=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_meBUTSE=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_xXPyfAp=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NQGFZKJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JOdOesy=json({});
    
        if (name.pNext==NULL){
            return_JOdOesy["null"]=true;
            return return_JOdOesy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_ngLaGTw=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_pmfooTm=json({});
    
        if (name.pAspectReferences==NULL){
            return_pmfooTm["null"]=true;
            return return_pmfooTm;
        }
        
        return_pmfooTm["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_WrOOCrh=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_pmfooTm["members"][std::to_string(i)].push_back(temp);
        }
        return return_pmfooTm;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IBVjDMz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IBVjDMz=NULL;
        }
    temp_IBVjDMz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IBVjDMz;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_RzMnXhi;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_RzMnXhi=NULL;
        }
    temp_RzMnXhi=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int cEysYpA=0; cEysYpA < result.aspectReferenceCount; cEysYpA++){
            [&]() {
temp_RzMnXhi[cEysYpA]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][cEysYpA]);}();;
        }
        }();result.pAspectReferences=temp_RzMnXhi;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kYMnYpe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aJjUBLd=json({});
    
        if (name.pNext==NULL){
            return_aJjUBLd["null"]=true;
            return return_aJjUBLd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_OtEpVhQ=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_kiROcOD=json({});
    
        if (name.pAspectReferences==NULL){
            return_kiROcOD["null"]=true;
            return return_kiROcOD;
        }
        
        return_kiROcOD["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_nBPbxij=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_kiROcOD["members"][std::to_string(i)].push_back(temp);
        }
        return return_kiROcOD;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xcrKtVd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xcrKtVd=NULL;
        }
    temp_xcrKtVd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xcrKtVd;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_EHgRoVk;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_EHgRoVk=NULL;
        }
    temp_EHgRoVk=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int rUZeVij=0; rUZeVij < result.aspectReferenceCount; rUZeVij++){
            [&]() {
temp_EHgRoVk[rUZeVij]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][rUZeVij]);}();;
        }
        }();result.pAspectReferences=temp_EHgRoVk;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iVnXpfx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LJFyDWS=json({});
    
        if (name.pNext==NULL){
            return_LJFyDWS["null"]=true;
            return return_LJFyDWS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surface"]=[&]() {
    json return_vaeSKDd=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZcwbfLS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZcwbfLS=NULL;
        }
    temp_ZcwbfLS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZcwbfLS;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wpPiTDf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hfbIXPt=json({});
    
        if (name.pNext==NULL){
            return_hfbIXPt["null"]=true;
            return return_hfbIXPt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_VnCrrOv=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JSglPgY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UQmeNwG=json({});
    
        if (name.pNext==NULL){
            return_UQmeNwG["null"]=true;
            return return_UQmeNwG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceFormat"]=[&]() {
    json return_xeobtZN=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sNmTNDL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ldyEQAp=json({});
    
        if (name.pNext==NULL){
            return_ldyEQAp["null"]=true;
            return return_ldyEQAp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayProperties"]=[&]() {
    json return_UTZUDtd=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lywzmHH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KHreQji=json({});
    
        if (name.pNext==NULL){
            return_KHreQji["null"]=true;
            return return_KHreQji;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_ZaWQnIP=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qBcTyAy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tnwIdEk=json({});
    
        if (name.pNext==NULL){
            return_tnwIdEk["null"]=true;
            return return_tnwIdEk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayModeProperties"]=[&]() {
    json return_paAcdPc=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dShsjDY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kvVqHNA=json({});
    
        if (name.pNext==NULL){
            return_kvVqHNA["null"]=true;
            return return_kvVqHNA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_LVOYTsY=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_jiYxcme=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FufhKjt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FufhKjt=NULL;
        }
    temp_FufhKjt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FufhKjt;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ctlijdm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HOgItMy=json({});
    
        if (name.pNext==NULL){
            return_HOgItMy["null"]=true;
            return return_HOgItMy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["capabilities"]=[&]() {
    json return_ffDkmxy=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SdppRXd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ARwHyex=json({});
    
        if (name.pNext==NULL){
            return_ARwHyex["null"]=true;
            return return_ARwHyex;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_zkyYpUI=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oVemaCZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iEeNPcn=json({});
    
        if (name.pNext==NULL){
            return_iEeNPcn["null"]=true;
            return return_iEeNPcn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_adKEEos=json({});
    return_adKEEos=[&]() {
    json return_rlBMtfd=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_adKEEos;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_likdohq=json({});
    return_likdohq=[&]() {
    json return_rQbNauh=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_likdohq;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_BXhpXAe=json({});
    return_BXhpXAe=[&]() {
    json return_nUGLjpW=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_BXhpXAe;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_RgsJfOr=json({});
    return_RgsJfOr=[&]() {
    json return_BysQmJM=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_RgsJfOr;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EZHdhpI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KoSzXsl=json({});
    
        if (name.pNext==NULL){
            return_KoSzXsl["null"]=true;
            return return_KoSzXsl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_FVtrXkN=json({});
    return_FVtrXkN=[&]() {
    json return_BxejSqQ=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_FVtrXkN;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_uKezwnV=json({});
    return_uKezwnV=[&]() {
    json return_kXiMBMj=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_uKezwnV;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_YWxNFuW=json({});
    return_YWxNFuW=[&]() {
    json return_lHcnPsh=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_YWxNFuW;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_vpzpJtt=json({});
    return_vpzpJtt=[&]() {
    json return_eThovPb=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_vpzpJtt;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KsopmBE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fcwAfAd=json({});
    
        if (name.pNext==NULL){
            return_fcwAfAd["null"]=true;
            return return_fcwAfAd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSize"]=[&]() {
    json return_NlgrOfU=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_otxuIxq=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_HeUiLig=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_pXweCEE=json({});
    return_pXweCEE=[&]() {
    json return_yXHymIc=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_pXweCEE;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EuDVdmp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XbFEIIR=json({});
    
        if (name.pNext==NULL){
            return_XbFEIIR["null"]=true;
            return return_XbFEIIR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_ipGqucR=json({});
    return_ipGqucR=[&]() {
    json return_jCVlprn=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_ipGqucR;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BpAvvpo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ncvaTui=json({});
    
        if (name.pNext==NULL){
            return_ncvaTui["null"]=true;
            return return_ncvaTui;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_ywcueSc=json({});
    return_ywcueSc=[&]() {
    json return_DqYfhqP=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_ywcueSc;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CqFfjCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lPqmJZi=json({});
    
        if (name.pNext==NULL){
            return_lPqmJZi["null"]=true;
            return return_lPqmJZi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_YJcSjfz=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZRFpbLk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZRFpbLk=NULL;
        }
    temp_ZRFpbLk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZRFpbLk;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cpaNnBc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tyIzLqf=json({});
    
        if (name.pNext==NULL){
            return_tyIzLqf["null"]=true;
            return return_tyIzLqf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_ffGyOEq=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_agvWRmL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_agvWRmL=NULL;
        }
    temp_agvWRmL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_agvWRmL;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YBmMkFc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qodbuZo=json({});
    
        if (name.pNext==NULL){
            return_qodbuZo["null"]=true;
            return return_qodbuZo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_lxbjjlz=json({});
    
        if (name.pCreateInfo==NULL){
            return_lxbjjlz["null"]=true;
            return return_lxbjjlz;
        }
        return_lxbjjlz=[&]() {
    json return_JJaiIGo=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_lxbjjlz;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fzYBjlX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fzYBjlX=NULL;
        }
    temp_fzYBjlX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fzYBjlX;}();
[&]() {
VkBufferCreateInfo* temp_CqgyXdT;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_CqgyXdT=NULL;
        }
    [&]() {
*(temp_CqgyXdT)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_CqgyXdT;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UUjfwPK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tquqPQs=json({});
    
        if (name.pNext==NULL){
            return_tquqPQs["null"]=true;
            return return_tquqPQs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_wydjHQy=json({});
    
        if (name.pCreateInfo==NULL){
            return_wydjHQy["null"]=true;
            return return_wydjHQy;
        }
        return_wydjHQy=[&]() {
    json return_xyulClV=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_wydjHQy;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tqTsNPX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tqTsNPX=NULL;
        }
    temp_tqTsNPX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tqTsNPX;}();
[&]() {
VkBufferCreateInfo* temp_ocKYXSI;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_ocKYXSI=NULL;
        }
    [&]() {
*(temp_ocKYXSI)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_ocKYXSI;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YOwtfco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hJNkjZD=json({});
    
        if (name.pNext==NULL){
            return_hJNkjZD["null"]=true;
            return return_hJNkjZD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_OYollag=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HYCFzTt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HYCFzTt=NULL;
        }
    temp_HYCFzTt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HYCFzTt;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oVpHBJu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tTbLCSL=json({});
    
        if (name.pNext==NULL){
            return_tTbLCSL["null"]=true;
            return return_tTbLCSL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_KHLkVVf=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NscVFQn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NscVFQn=NULL;
        }
    temp_NscVFQn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NscVFQn;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OctzKch=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_INNOGip=json({});
    
        if (name.pNext==NULL){
            return_INNOGip["null"]=true;
            return return_INNOGip;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_HhkwPvn=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JCiWgUP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JCiWgUP=NULL;
        }
    temp_JCiWgUP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JCiWgUP;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bMVgUbb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ztbbjcq=json({});
    
        if (name.pNext==NULL){
            return_ztbbjcq["null"]=true;
            return return_ztbbjcq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_cVfqgQC=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QlxtnIX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QlxtnIX=NULL;
        }
    temp_QlxtnIX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QlxtnIX;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aZVboyD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bPbYHRE=json({});
    
        if (name.pNext==NULL){
            return_bPbYHRE["null"]=true;
            return return_bPbYHRE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_SOwzoGb=json({});
    
        if (name.pCreateInfo==NULL){
            return_SOwzoGb["null"]=true;
            return return_SOwzoGb;
        }
        return_SOwzoGb=[&]() {
    json return_AjwnhhT=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_SOwzoGb;}();
result["members"]["planeAspect"]=[&]() {
    json return_TMwXVQn=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IaRquaL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IaRquaL=NULL;
        }
    temp_IaRquaL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IaRquaL;}();
[&]() {
VkImageCreateInfo* temp_DLpSRwA;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_DLpSRwA=NULL;
        }
    [&]() {
*(temp_DLpSRwA)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_DLpSRwA;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ngbFgKz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GuUnUAB=json({});
    
        if (name.pNext==NULL){
            return_GuUnUAB["null"]=true;
            return return_GuUnUAB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_UaZrMut=json({});
    
        if (name.pCreateInfo==NULL){
            return_UaZrMut["null"]=true;
            return return_UaZrMut;
        }
        return_UaZrMut=[&]() {
    json return_FzgOjhN=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_UaZrMut;}();
result["members"]["planeAspect"]=[&]() {
    json return_SJRYrNE=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gpcOMBv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gpcOMBv=NULL;
        }
    temp_gpcOMBv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gpcOMBv;}();
[&]() {
VkImageCreateInfo* temp_uhkfrNk;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_uhkfrNk=NULL;
        }
    [&]() {
*(temp_uhkfrNk)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_uhkfrNk;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UcVsedc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uLHvnYJ=json({});
    
        if (name.pNext==NULL){
            return_uLHvnYJ["null"]=true;
            return return_uLHvnYJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_cpMOSJM=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EWDbxvf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yjAdazw=json({});
    
        if (name.pNext==NULL){
            return_yjAdazw["null"]=true;
            return return_yjAdazw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_OQSgIbh=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ozzVDOf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pFyOqzy=json({});
    
        if (name.pNext==NULL){
            return_pFyOqzy["null"]=true;
            return return_pFyOqzy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_InRDSvJ=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lhrOVna=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LaHRGLG=json({});
    
        if (name.pNext==NULL){
            return_LaHRGLG["null"]=true;
            return return_LaHRGLG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_iIvDmlc=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KtvYPRl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WNawNZp=json({});
    
        if (name.pNext==NULL){
            return_WNawNZp["null"]=true;
            return return_WNawNZp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_YqHcAaU=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZjLeQYZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LsIKogD=json({});
    
        if (name.pNext==NULL){
            return_LsIKogD["null"]=true;
            return return_LsIKogD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_OKYeBDe=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rGCAouM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rsCQXjZ=json({});
    
        if (name.pNext==NULL){
            return_rsCQXjZ["null"]=true;
            return return_rsCQXjZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_WvrDdIw=json({});
    return_WvrDdIw=[&]() {
    json return_bQkmMyL=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_WvrDdIw;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_Vtzocxr=json({});
    return_Vtzocxr=[&]() {
    json return_WkmGgUA=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_Vtzocxr;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oBLtags=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nWrhTyY=json({});
    
        if (name.pNext==NULL){
            return_nWrhTyY["null"]=true;
            return return_nWrhTyY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_GJlaAfU=json({});
    return_GJlaAfU=[&]() {
    json return_QPhZols=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_GJlaAfU;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_GqDLxTn=json({});
    return_GqDLxTn=[&]() {
    json return_qtcAVxa=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_GqDLxTn;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_myFYSGK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kofZioW=json({});
    
        if (name.pNext==NULL){
            return_kofZioW["null"]=true;
            return return_kofZioW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_bexMULO=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_KASMzbH=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RDPfRAb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RDPfRAb=NULL;
        }
    temp_RDPfRAb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RDPfRAb;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jnVXszj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YDOqwUZ=json({});
    
        if (name.pNext==NULL){
            return_YDOqwUZ["null"]=true;
            return return_YDOqwUZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_bFhMSXJ=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_YgrGifq=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QkcBmRC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QkcBmRC=NULL;
        }
    temp_QkcBmRC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QkcBmRC;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dLjxFVe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jIchXoD=json({});
    
        if (name.pNext==NULL){
            return_jIchXoD["null"]=true;
            return return_jIchXoD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_bAVofLO=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zbLMila;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zbLMila=NULL;
        }
    temp_zbLMila=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zbLMila;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dktXQpr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NamoagX=json({});
    
        if (name.pNext==NULL){
            return_NamoagX["null"]=true;
            return return_NamoagX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sliceOffset"]=[&]() {
    json return_IUMTues=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_XFEDFLC=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nMIvmqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nMIvmqv=NULL;
        }
    temp_nMIvmqv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nMIvmqv;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fqhjPRJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LekCsxx=json({});
    
        if (name.pNext==NULL){
            return_LekCsxx["null"]=true;
            return return_LekCsxx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_VLkqwgc=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PwmYLFU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PwmYLFU=NULL;
        }
    temp_PwmYLFU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PwmYLFU;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dzpFgnl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OxOCHJv=json({});
    
        if (name.pNext==NULL){
            return_OxOCHJv["null"]=true;
            return return_OxOCHJv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_IeWRfmT=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zmvKOEe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zmvKOEe=NULL;
        }
    temp_zmvKOEe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zmvKOEe;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mavIrGd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xDiVoov=json({});
    
        if (name.pNext==NULL){
            return_xDiVoov["null"]=true;
            return return_xDiVoov;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_CDlPGJu=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qXRdUqe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qXRdUqe=NULL;
        }
    temp_qXRdUqe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qXRdUqe;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OdzRQUo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZpftdrI=json({});
    
        if (name.pNext==NULL){
            return_ZpftdrI["null"]=true;
            return return_ZpftdrI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_ayJrHOL=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BnMtnGU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BnMtnGU=NULL;
        }
    temp_BnMtnGU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BnMtnGU;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dcfxYks=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QYNzELD=json({});
    
        if (name.pNext==NULL){
            return_QYNzELD["null"]=true;
            return return_QYNzELD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_oKGWisI=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JVKzAfY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JVKzAfY=NULL;
        }
    temp_JVKzAfY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JVKzAfY;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUjJhis=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EwKZiFm=json({});
    
        if (name.pNext==NULL){
            return_EwKZiFm["null"]=true;
            return return_EwKZiFm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_phRnSud=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_lUJuSzn=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_aTxKeoa=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_rLjtVWW=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_SyQzumU=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_VmaDRok=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_iICDfzX=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_sJzDrIr=json({});
    return_sJzDrIr=[&]() {
    json return_qSDxYKp=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_sJzDrIr;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yyAawWk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yyAawWk=NULL;
        }
    temp_yyAawWk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yyAawWk;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ececOBH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FSpvKdx=json({});
    
        if (name.pNext==NULL){
            return_FSpvKdx["null"]=true;
            return return_FSpvKdx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_PdHmiBV=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_eCphOst=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_CGhbnZv=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_bOiGlaY=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_PYMTJqk=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_HuozmxB=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_hNHVRgo=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_GNiBcZp=json({});
    return_GNiBcZp=[&]() {
    json return_wxfAIqQ=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_GNiBcZp;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bHLuJff;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bHLuJff=NULL;
        }
    temp_bHLuJff=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bHLuJff;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIwyUvq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klljtBF=json({});
    
        if (name.pNext==NULL){
            return_klljtBF["null"]=true;
            return return_klljtBF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_guiDnwl=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CxQrptM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CxQrptM=NULL;
        }
    temp_CxQrptM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CxQrptM;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZGPAUFb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pWuDnMy=json({});
    
        if (name.pNext==NULL){
            return_pWuDnMy["null"]=true;
            return return_pWuDnMy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_yVIMqUo=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mUZtvri;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mUZtvri=NULL;
        }
    temp_mUZtvri=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mUZtvri;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gHsaYRb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AEjdskN=json({});
    
        if (name.pNext==NULL){
            return_AEjdskN["null"]=true;
            return return_AEjdskN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_mOPDprZ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pFeFGlq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pFeFGlq=NULL;
        }
    temp_pFeFGlq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pFeFGlq;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cAZVIkW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YIMsZdT=json({});
    
        if (name.pNext==NULL){
            return_YIMsZdT["null"]=true;
            return return_YIMsZdT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_BgfeHnS=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ezXOMbx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ezXOMbx=NULL;
        }
    temp_ezXOMbx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ezXOMbx;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUjLiIT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bAVStYp=json({});
    
        if (name.pNext==NULL){
            return_bAVStYp["null"]=true;
            return return_bAVStYp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_goJjzMj=json({});
    return_goJjzMj=[&]() {
    json return_PtJeuAv=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_goJjzMj;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lhqIpQI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sqitirL=json({});
    
        if (name.pNext==NULL){
            return_sqitirL["null"]=true;
            return return_sqitirL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_yElmBTu=json({});
    return_yElmBTu=[&]() {
    json return_MGymWLK=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_yElmBTu;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bUHYUFg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HptzWBL=json({});
    
        if (name.pNext==NULL){
            return_HptzWBL["null"]=true;
            return return_HptzWBL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_PoyIXKn=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oToVHPN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dedVLYy=json({});
    
        if (name.pNext==NULL){
            return_dedVLYy["null"]=true;
            return return_dedVLYy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_yynEqdE=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nFhGBEw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hfAyjea=json({});
    
        if (name.pNext==NULL){
            return_hfAyjea["null"]=true;
            return return_hfAyjea;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_FaaEPEZ=json({});
    return_FaaEPEZ=[&]() {
    json return_ILQEUJY=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_FaaEPEZ;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WXexmMP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBlyUqm=json({});
    
        if (name.pNext==NULL){
            return_OBlyUqm["null"]=true;
            return return_OBlyUqm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_kJgSMxB=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_bvQvgHJ=json({});
    return_bvQvgHJ=[&]() {
    json return_tIbDGhL=json({});
    return serialize_uint64_t(name.offset);}();return return_bvQvgHJ;}();
result["members"]["flags"]=[&]() {
    json return_IPCOqdj=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VFRaziL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VFRaziL=NULL;
        }
    temp_VFRaziL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VFRaziL;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RWFMSmB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tulLdWh=json({});
    
        if (name.pNext==NULL){
            return_tulLdWh["null"]=true;
            return return_tulLdWh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedSubmit"]=[&]() {
    json return_Lrdmmyd=json({});
    return_Lrdmmyd=[&]() {
    json return_ckoLIuf=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_Lrdmmyd;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hdlRPFb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hdlRPFb=NULL;
        }
    temp_hdlRPFb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hdlRPFb;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ltWSLxV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KyWdkJe=json({});
    
        if (name.pNext==NULL){
            return_KyWdkJe["null"]=true;
            return return_KyWdkJe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedMemory"]=[&]() {
    json return_ZThhtmX=json({});
    return_ZThhtmX=[&]() {
    json return_NHLuPPj=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_ZThhtmX;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jeDezXn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pskCwmH=json({});
    
        if (name.pNext==NULL){
            return_pskCwmH["null"]=true;
            return return_pskCwmH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedNoFault"]=[&]() {
    json return_hxvHocr=json({});
    return_hxvHocr=[&]() {
    json return_QVLimui=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_hxvHocr;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AsNIGNe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JtGGAHg=json({});
    
        if (name.pNext==NULL){
            return_JtGGAHg["null"]=true;
            return return_JtGGAHg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vOwsohc=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_UNsGGiy=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_gPiHjvP=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SDAknRM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SDAknRM=NULL;
        }
    temp_SDAknRM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SDAknRM;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MSskPdb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KQoFWNc=json({});
    
        if (name.pNext==NULL){
            return_KQoFWNc["null"]=true;
            return return_KQoFWNc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UderDcD=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_GRlrlOA=json({});
    return_GRlrlOA=[&]() {
    json return_zTvPbVy=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_GRlrlOA;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_Vvfdont=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gANllIz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gANllIz=NULL;
        }
    temp_gANllIz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gANllIz;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NwsQxut=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xTyfgfK=json({});
    
        if (name.pNext==NULL){
            return_xTyfgfK["null"]=true;
            return return_xTyfgfK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_fSiBSTp=json({});
    return_fSiBSTp=[&]() {
    json return_kkUUDyB=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_fSiBSTp;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_RONBIQh=json({});
    return_RONBIQh=[&]() {
    json return_zGmaNJP=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_RONBIQh;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RRPatoD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ITAGTOq=json({});
    
        if (name.pNext==NULL){
            return_ITAGTOq["null"]=true;
            return return_ITAGTOq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_FgmYelf=json({});
    return_FgmYelf=[&]() {
    json return_rStqUET=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_FgmYelf;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_oYrZHzI=json({});
    return_oYrZHzI=[&]() {
    json return_khratLP=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_oYrZHzI;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_CksuYlj=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_LAiSsIW=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NUFXKqc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RlIkVOU=json({});
    
        if (name.pNext==NULL){
            return_RlIkVOU["null"]=true;
            return return_RlIkVOU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_KXBkFSi=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_OnHugAf=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_FdHzbzV=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_QUZZFGS=json({});
    
        if (name.pSampleLocations==NULL){
            return_QUZZFGS["null"]=true;
            return return_QUZZFGS;
        }
        
        return_QUZZFGS["members"]={};
        for(int i=0; i < name.sampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_CgfOStZ=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[i]);}();
            return_QUZZFGS["members"][std::to_string(i)].push_back(temp);
        }
        return return_QUZZFGS;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MuPyXPK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MuPyXPK=NULL;
        }
    temp_MuPyXPK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MuPyXPK;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_CotBXtc;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_CotBXtc=NULL;
        }
    temp_CotBXtc=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int AMirgOJ=0; AMirgOJ < result.sampleLocationsCount; AMirgOJ++){
            [&]() {
temp_CotBXtc[AMirgOJ]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][AMirgOJ]);}();;
        }
        }();result.pSampleLocations=temp_CotBXtc;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_lcBDdrW=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_AwrctAs=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_LbLmVmN=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_UtSoCYx=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_McoOGFv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cRmPIrk=json({});
    
        if (name.pNext==NULL){
            return_cRmPIrk["null"]=true;
            return return_cRmPIrk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_brfUPLo=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_dtaGqFL=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_dtaGqFL["null"]=true;
            return return_dtaGqFL;
        }
        
        return_dtaGqFL["members"]={};
        for(int i=0; i < name.attachmentInitialSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_UROaSwa=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[i]);}();
            return_dtaGqFL["members"][std::to_string(i)].push_back(temp);
        }
        return return_dtaGqFL;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_tqZKPTm=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_ajIbqJX=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_ajIbqJX["null"]=true;
            return return_ajIbqJX;
        }
        
        return_ajIbqJX["members"]={};
        for(int i=0; i < name.postSubpassSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_CrVnvEl=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[i]);}();
            return_ajIbqJX["members"][std::to_string(i)].push_back(temp);
        }
        return return_ajIbqJX;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YLVEoWb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YLVEoWb=NULL;
        }
    temp_YLVEoWb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YLVEoWb;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_UfgHnuM;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_UfgHnuM=NULL;
        }
    temp_UfgHnuM=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int jQGpIqO=0; jQGpIqO < result.attachmentInitialSampleLocationsCount; jQGpIqO++){
            [&]() {
temp_UfgHnuM[jQGpIqO]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][jQGpIqO]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_UfgHnuM;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_UlvVHeg;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_UlvVHeg=NULL;
        }
    temp_UlvVHeg=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int FrGGYPY=0; FrGGYPY < result.postSubpassSampleLocationsCount; FrGGYPY++){
            [&]() {
temp_UlvVHeg[FrGGYPY]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][FrGGYPY]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_UlvVHeg;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DJJhzaP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pQaGlRm=json({});
    
        if (name.pNext==NULL){
            return_pQaGlRm["null"]=true;
            return return_pQaGlRm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_RdCeskE=json({});
    return_RdCeskE=[&]() {
    json return_KBNTxjB=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_RdCeskE;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_wcwygao=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sQeVywM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sQeVywM=NULL;
        }
    temp_sQeVywM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sQeVywM;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pnWFDmZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kYwKMYD=json({});
    
        if (name.pNext==NULL){
            return_kYwKMYD["null"]=true;
            return return_kYwKMYD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_qMEXuVQ=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_yFvSHKe=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_tJXedGi=json({});
    
        return_tJXedGi["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_gNkbCza=json({});
    return serialize_float(name.sampleLocationCoordinateRange[i]);}();
            return_tJXedGi["members"][std::to_string(i)].push_back(temp);
        }
        return return_tJXedGi;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_XNeQkAg=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_PkLwBLm=json({});
    return_PkLwBLm=[&]() {
    json return_REgGaNG=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_PkLwBLm;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int rJpaTZc=0; rJpaTZc < 2; rJpaTZc++){
            [&]() {
result.sampleLocationCoordinateRange[rJpaTZc]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][rJpaTZc]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Cuqlrtd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_THPsIMz=json({});
    
        if (name.pNext==NULL){
            return_THPsIMz["null"]=true;
            return return_THPsIMz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_EsMzpWt=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SMowUGf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ScwvpBz=json({});
    
        if (name.pNext==NULL){
            return_ScwvpBz["null"]=true;
            return return_ScwvpBz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_KknezJc=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yGjyCeb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yGjyCeb=NULL;
        }
    temp_yGjyCeb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yGjyCeb;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mDgwbkN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_phiXiKR=json({});
    
        if (name.pNext==NULL){
            return_phiXiKR["null"]=true;
            return return_phiXiKR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_LLHGtvK=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WXdDyHi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WXdDyHi=NULL;
        }
    temp_WXdDyHi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WXdDyHi;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KqGXFTu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_leiMhDN=json({});
    
        if (name.pNext==NULL){
            return_leiMhDN["null"]=true;
            return return_leiMhDN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_kOkwevi=json({});
    return_kOkwevi=[&]() {
    json return_LEzskDs=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_kOkwevi;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eZshQtY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WbIqpZe=json({});
    
        if (name.pNext==NULL){
            return_WbIqpZe["null"]=true;
            return return_WbIqpZe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiDraw"]=[&]() {
    json return_RCMYMOk=json({});
    return_RCMYMOk=[&]() {
    json return_bJazhsi=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_RCMYMOk;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_danjHCt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IVybgyr=json({});
    
        if (name.pNext==NULL){
            return_IVybgyr["null"]=true;
            return return_IVybgyr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_ABYcboh=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_SIdGQhE=json({});
    return_SIdGQhE=[&]() {
    json return_qiqblmF=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_SIdGQhE;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_zWTChyo=json({});
    return_zWTChyo=[&]() {
    json return_zuyaHCS=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_zWTChyo;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_fWuCebc=json({});
    return_fWuCebc=[&]() {
    json return_zpGQdar=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_fWuCebc;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_AXncyuC=json({});
    return_AXncyuC=[&]() {
    json return_jWqonuL=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_AXncyuC;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_VtNIbrA=json({});
    return_VtNIbrA=[&]() {
    json return_wFazfVS=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_VtNIbrA;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MJNsyCA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uxMNDDq=json({});
    
        if (name.pNext==NULL){
            return_uxMNDDq["null"]=true;
            return return_uxMNDDq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_DJvpcJk=json({});
    return_DJvpcJk=[&]() {
    json return_AhBSENZ=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_DJvpcJk;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_WkuAxxm=json({});
    return_WkuAxxm=[&]() {
    json return_xhVzyVB=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_WkuAxxm;}();
result["members"]["blendOverlap"]=[&]() {
    json return_Gsdgokd=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gJJWSlI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gJJWSlI=NULL;
        }
    temp_gJJWSlI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gJJWSlI;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AJoVlkg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gJSQcTV=json({});
    
        if (name.pNext==NULL){
            return_gJSQcTV["null"]=true;
            return return_gJSQcTV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_BCTzjSf=json({});
    return_BCTzjSf=[&]() {
    json return_AoIxpgG=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_BCTzjSf;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_dhSonGL=json({});
    return_dhSonGL=[&]() {
    json return_uBswYUQ=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_dhSonGL;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NOfbvge=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_edoWFNv=json({});
    
        if (name.pNext==NULL){
            return_edoWFNv["null"]=true;
            return return_edoWFNv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_EfeUTep=json({});
    return_EfeUTep=[&]() {
    json return_DLRAppl=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_EfeUTep;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_IazntAs=json({});
    return_IazntAs=[&]() {
    json return_PxYkMci=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_IazntAs;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TKrJhmc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LITGSRv=json({});
    
        if (name.pNext==NULL){
            return_LITGSRv["null"]=true;
            return return_LITGSRv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_hFLnfcx=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_xJSdXUi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ElSBSXd=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_FHhEntv=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_yPJDODQ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gNHsEGx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NyJUXbS=json({});
    
        if (name.pNext==NULL){
            return_NyJUXbS["null"]=true;
            return return_NyJUXbS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_yOlYFUq=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_MOOWUjl=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_TFdFRic=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_sXjbzCB=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_oBkNNji=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DfpRVxl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wPryCNy=json({});
    
        if (name.pNext==NULL){
            return_wPryCNy["null"]=true;
            return return_wPryCNy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_fICcrWB=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_TsTapDK=json({});
    
        if (name.pData==NULL){
            return_TsTapDK["null"]=true;
            return return_TsTapDK;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GJUTxfQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GJUTxfQ=NULL;
        }
    temp_GJUTxfQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GJUTxfQ;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_IyJgRtn;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_IyJgRtn=NULL;
        }
    temp_IyJgRtn=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_IyJgRtn;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rIfkNyW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rVdFozL=json({});
    
        if (name.pNext==NULL){
            return_rVdFozL["null"]=true;
            return return_rVdFozL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_vrwBzTz=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_LSVshdH=json({});
    
        if (name.pData==NULL){
            return_LSVshdH["null"]=true;
            return return_LSVshdH;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RbMPIkX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RbMPIkX=NULL;
        }
    temp_RbMPIkX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RbMPIkX;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_lWNadBk;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_lWNadBk=NULL;
        }
    temp_lWNadBk=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_lWNadBk;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_chApMgg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rHeFuEt=json({});
    
        if (name.pNext==NULL){
            return_rHeFuEt["null"]=true;
            return return_rHeFuEt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_jdTnpee=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BXtuCwP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BXtuCwP=NULL;
        }
    temp_BXtuCwP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BXtuCwP;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uYNxKuW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vKUrSvH=json({});
    
        if (name.pNext==NULL){
            return_vKUrSvH["null"]=true;
            return return_vKUrSvH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_GarnIFD=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RByNhfs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RByNhfs=NULL;
        }
    temp_RByNhfs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RByNhfs;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pmiWowT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YffmSkS=json({});
    
        if (name.pNext==NULL){
            return_YffmSkS["null"]=true;
            return return_YffmSkS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JBfqCnW=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_zhygcpm=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_EtIWkkP=json({});
    return_EtIWkkP=[&]() {
    json return_LtAVdkG=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_EtIWkkP;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_muWRSwx=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_wXnaHbx=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_wXnaHbx["null"]=true;
            return return_wXnaHbx;
        }
        
        return_wXnaHbx["members"]={};
        for(int i=0; i < name.coverageModulationTableCount; i++){
            json temp;
            temp=[&]() {
    json return_xLwtmbg=json({});
    return serialize_float(name.pCoverageModulationTable[i]);}();
            return_wXnaHbx["members"][std::to_string(i)].push_back(temp);
        }
        return return_wXnaHbx;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oUjvTWq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oUjvTWq=NULL;
        }
    temp_oUjvTWq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oUjvTWq;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_gVdTOSY;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_gVdTOSY=NULL;
        }
    temp_gVdTOSY=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int OWxuUCa=0; OWxuUCa < result.coverageModulationTableCount; OWxuUCa++){
            [&]() {
temp_gVdTOSY[OWxuUCa]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][OWxuUCa]);}();;
        }
        }();result.pCoverageModulationTable=temp_gVdTOSY;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MUlxhlP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ThyJstP=json({});
    
        if (name.pNext==NULL){
            return_ThyJstP["null"]=true;
            return return_ThyJstP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_frmooCo=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_xZjNwHO=json({});
    
        if (name.pViewFormats==NULL){
            return_xZjNwHO["null"]=true;
            return return_xZjNwHO;
        }
        
        return_xZjNwHO["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_yjgOTsz=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_xZjNwHO["members"][std::to_string(i)].push_back(temp);
        }
        return return_xZjNwHO;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DbzTLAm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DbzTLAm=NULL;
        }
    temp_DbzTLAm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DbzTLAm;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_cqUGPTD;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_cqUGPTD=NULL;
        }
    temp_cqUGPTD=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int wNbXNtK=0; wNbXNtK < result.viewFormatCount; wNbXNtK++){
            [&]() {
temp_cqUGPTD[wNbXNtK]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][wNbXNtK]);}();;
        }
        }();result.pViewFormats=temp_cqUGPTD;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mIfSlsA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bboaIyc=json({});
    
        if (name.pNext==NULL){
            return_bboaIyc["null"]=true;
            return return_bboaIyc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_GoSqeoO=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_ATJkiIR=json({});
    
        if (name.pViewFormats==NULL){
            return_ATJkiIR["null"]=true;
            return return_ATJkiIR;
        }
        
        return_ATJkiIR["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_zVqJitu=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_ATJkiIR["members"][std::to_string(i)].push_back(temp);
        }
        return return_ATJkiIR;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oOEIPwg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oOEIPwg=NULL;
        }
    temp_oOEIPwg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oOEIPwg;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_MHLcPOo;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_MHLcPOo=NULL;
        }
    temp_MHLcPOo=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int dtygPQj=0; dtygPQj < result.viewFormatCount; dtygPQj++){
            [&]() {
temp_MHLcPOo[dtygPQj]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][dtygPQj]);}();;
        }
        }();result.pViewFormats=temp_MHLcPOo;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RYiLBWZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JotXmHK=json({});
    
        if (name.pNext==NULL){
            return_JotXmHK["null"]=true;
            return return_JotXmHK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_iHluDrW=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_PIzCglA=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_SIUjHCV=json({});
    
        if (name.pInitialData==NULL){
            return_SIUjHCV["null"]=true;
            return return_SIUjHCV;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PdYLeoa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PdYLeoa=NULL;
        }
    temp_PdYLeoa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PdYLeoa;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_khWgCcc;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_khWgCcc=NULL;
        }
    temp_khWgCcc=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_khWgCcc;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_diXYhEl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_siHpmQB=json({});
    
        if (name.pNext==NULL){
            return_siHpmQB["null"]=true;
            return return_siHpmQB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["validationCache"]=[&]() {
    json return_fQkvXOw=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CGILplq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CGILplq=NULL;
        }
    temp_CGILplq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CGILplq;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_arVqUxz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fIehjyi=json({});
    
        if (name.pNext==NULL){
            return_fIehjyi["null"]=true;
            return return_fIehjyi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_ciLZqFD=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_zBKCIEt=json({});
    return_zBKCIEt=[&]() {
    json return_GWAYxmL=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_zBKCIEt;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tpxPtsM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sRMwKHX=json({});
    
        if (name.pNext==NULL){
            return_sRMwKHX["null"]=true;
            return return_sRMwKHX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_HgrYksy=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_HDysodN=json({});
    return_HDysodN=[&]() {
    json return_wGehsEG=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_HDysodN;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XmXhjXj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FUPKVXy=json({});
    
        if (name.pNext==NULL){
            return_FUPKVXy["null"]=true;
            return return_FUPKVXy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_gyQiNym=json({});
    return_gyQiNym=[&]() {
    json return_ieeHIQw=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_gyQiNym;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tqxYEov=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lhcZYmZ=json({});
    
        if (name.pNext==NULL){
            return_lhcZYmZ["null"]=true;
            return return_lhcZYmZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_RUVHpzx=json({});
    return_RUVHpzx=[&]() {
    json return_DXxspgg=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_RUVHpzx;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_saTrwCw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mhONhNC=json({});
    
        if (name.pNext==NULL){
            return_mhONhNC["null"]=true;
            return return_mhONhNC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_WWxvmpz=json({});
    return_WWxvmpz=[&]() {
    json return_tqtzsfo=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_WWxvmpz;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jdntHjl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vJaOzgv=json({});
    
        if (name.pNext==NULL){
            return_vJaOzgv["null"]=true;
            return return_vJaOzgv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_tJVHxGL=json({});
    return_tJVHxGL=[&]() {
    json return_oiZyTqY=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_tJVHxGL;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nrswJUp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DgVFNPI=json({});
    
        if (name.pNext==NULL){
            return_DgVFNPI["null"]=true;
            return return_DgVFNPI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance5"]=[&]() {
    json return_hQBeEAu=json({});
    return_hQBeEAu=[&]() {
    json return_XnSBnwH=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_hQBeEAu;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SGKSfZT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XQtXusE=json({});
    
        if (name.pNext==NULL){
            return_XQtXusE["null"]=true;
            return return_XQtXusE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_GbwYSyy=json({});
    return_GbwYSyy=[&]() {
    json return_PMUWMJE=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_GbwYSyy;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_QLAMAdA=json({});
    return_QLAMAdA=[&]() {
    json return_lmmyhJu=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_QLAMAdA;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_osnsoeD=json({});
    return_osnsoeD=[&]() {
    json return_KpvOgSJ=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_osnsoeD;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_uIthati=json({});
    return_uIthati=[&]() {
    json return_IDMMaAJ=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_uIthati;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_wqieZzs=json({});
    return_wqieZzs=[&]() {
    json return_osxtwcg=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_wqieZzs;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_PchpPJC=json({});
    return_PchpPJC=[&]() {
    json return_ExsHqeu=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_PchpPJC;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Ehksgwi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_amEMPsx=json({});
    
        if (name.pNext==NULL){
            return_amEMPsx["null"]=true;
            return return_amEMPsx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_TcXUbrp=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_WQTAPJy=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_PGpysBn=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_PGpysBn["null"]=true;
            return return_PGpysBn;
        }
        
        return_PGpysBn["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ckJpYZn=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_PGpysBn["members"][std::to_string(i)].push_back(temp);
        }
        return return_PGpysBn;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_pFPKzcW=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_EuEsAFJ=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZAFuOiM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZAFuOiM=NULL;
        }
    temp_ZAFuOiM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZAFuOiM;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_lsCVvjf;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_lsCVvjf=NULL;
        }
    temp_lsCVvjf=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int jdhiZOC=0; jdhiZOC < result.colorAttachmentCount; jdhiZOC++){
            [&]() {
temp_lsCVvjf[jdhiZOC]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][jdhiZOC]);}();;
        }
        }();result.pColorAttachmentFormats=temp_lsCVvjf;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mulWyGE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rnAKkzz=json({});
    
        if (name.pNext==NULL){
            return_rnAKkzz["null"]=true;
            return return_rnAKkzz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_XDqYyxE=json({});
    return_XDqYyxE=[&]() {
    json return_OSNCaQZ=json({});
    return serialize_uint32_t(name.supported);}();return return_XDqYyxE;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_obQVmKG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YfWOksH=json({});
    
        if (name.pNext==NULL){
            return_YfWOksH["null"]=true;
            return return_YfWOksH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_nQzXvAX=json({});
    return_nQzXvAX=[&]() {
    json return_NiJCEjD=json({});
    return serialize_uint32_t(name.supported);}();return return_nQzXvAX;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ikWYnWf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pcUfLXk=json({});
    
        if (name.pNext==NULL){
            return_pcUfLXk["null"]=true;
            return return_pcUfLXk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_PPXWOPx=json({});
    return_PPXWOPx=[&]() {
    json return_IkbdQfF=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_PPXWOPx;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WFmXJdM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ycMpVzy=json({});
    
        if (name.pNext==NULL){
            return_ycMpVzy["null"]=true;
            return return_ycMpVzy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_RfwDAFI=json({});
    return_RfwDAFI=[&]() {
    json return_KettOBl=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_RfwDAFI;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RmtydRb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rfHWEAN=json({});
    
        if (name.pNext==NULL){
            return_rfHWEAN["null"]=true;
            return return_rfHWEAN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_HTtOHqQ=json({});
    return_HTtOHqQ=[&]() {
    json return_MKmmRTD=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_HTtOHqQ;}();
result["members"]["shaderInt8"]=[&]() {
    json return_iREUHnw=json({});
    return_iREUHnw=[&]() {
    json return_kildonQ=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_iREUHnw;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hnyRoky=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fxhhUHZ=json({});
    
        if (name.pNext==NULL){
            return_fxhhUHZ["null"]=true;
            return return_fxhhUHZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_mkwCKko=json({});
    return_mkwCKko=[&]() {
    json return_sSjlXwK=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_mkwCKko;}();
result["members"]["shaderInt8"]=[&]() {
    json return_GvsbrBc=json({});
    return_GvsbrBc=[&]() {
    json return_EmHSKzu=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_GvsbrBc;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SjaklPe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JJQynwC=json({});
    
        if (name.pNext==NULL){
            return_JJQynwC["null"]=true;
            return return_JJQynwC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_OzhwYiN=json({});
    return_OzhwYiN=[&]() {
    json return_DKJOxrd=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_OzhwYiN;}();
result["members"]["shaderInt8"]=[&]() {
    json return_gbppGee=json({});
    return_gbppGee=[&]() {
    json return_jXwYFpw=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_gbppGee;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cARgHiP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yTNTfFB=json({});
    
        if (name.pNext==NULL){
            return_yTNTfFB["null"]=true;
            return return_yTNTfFB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_PawjFpZ=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_jcRIYYU=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_oJmOKaK=json({});
    return_oJmOKaK=[&]() {
    json return_eCOUfSl=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_oJmOKaK;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_gWaWyvh=json({});
    return_gWaWyvh=[&]() {
    json return_QZtuSvn=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_gWaWyvh;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_ntwIGwD=json({});
    return_ntwIGwD=[&]() {
    json return_wNrmWZD=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_ntwIGwD;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_mBAZcfA=json({});
    return_mBAZcfA=[&]() {
    json return_HIEfCgn=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_mBAZcfA;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_zSqrpwX=json({});
    return_zSqrpwX=[&]() {
    json return_kQgvLps=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_zSqrpwX;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_rweCguY=json({});
    return_rweCguY=[&]() {
    json return_fRIrbLj=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_rweCguY;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_HcMjXij=json({});
    return_HcMjXij=[&]() {
    json return_mMoMthe=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_HcMjXij;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_GypsMQY=json({});
    return_GypsMQY=[&]() {
    json return_isorJBl=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_GypsMQY;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_EaQkPHK=json({});
    return_EaQkPHK=[&]() {
    json return_VZADdSg=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_EaQkPHK;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_KObEHUj=json({});
    return_KObEHUj=[&]() {
    json return_vZhNIkK=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_KObEHUj;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_RowxgQF=json({});
    return_RowxgQF=[&]() {
    json return_KWjqIVm=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_RowxgQF;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_yyJIAop=json({});
    return_yyJIAop=[&]() {
    json return_YMwZWWh=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_yyJIAop;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_CkHntZV=json({});
    return_CkHntZV=[&]() {
    json return_qHOEzJg=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_CkHntZV;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_zcRaGnR=json({});
    return_zcRaGnR=[&]() {
    json return_vObjIqg=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_zcRaGnR;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_bCspBeY=json({});
    return_bCspBeY=[&]() {
    json return_gSVVofP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_bCspBeY;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BqSbuBS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_exWfaiB=json({});
    
        if (name.pNext==NULL){
            return_exWfaiB["null"]=true;
            return return_exWfaiB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_eDUJtte=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_dvhAoBO=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_rSOPKTe=json({});
    return_rSOPKTe=[&]() {
    json return_EQpfFeV=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_rSOPKTe;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_fnZtgLX=json({});
    return_fnZtgLX=[&]() {
    json return_VEoYHFv=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_fnZtgLX;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_cgrApeP=json({});
    return_cgrApeP=[&]() {
    json return_ugkbwrh=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_cgrApeP;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_raHwkfb=json({});
    return_raHwkfb=[&]() {
    json return_FgPoTAv=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_raHwkfb;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_BpehRzT=json({});
    return_BpehRzT=[&]() {
    json return_vJEnHpg=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_BpehRzT;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_yFWewvG=json({});
    return_yFWewvG=[&]() {
    json return_eagCyDL=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_yFWewvG;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_gyhtVRw=json({});
    return_gyhtVRw=[&]() {
    json return_qgsSJne=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_gyhtVRw;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_LCKjSVp=json({});
    return_LCKjSVp=[&]() {
    json return_MRRSiir=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_LCKjSVp;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_zqffhzM=json({});
    return_zqffhzM=[&]() {
    json return_crdkpUA=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_zqffhzM;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_JAuPeUH=json({});
    return_JAuPeUH=[&]() {
    json return_pRpCXxX=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_JAuPeUH;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_VXTBhsV=json({});
    return_VXTBhsV=[&]() {
    json return_tQFKzXs=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_VXTBhsV;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_jxRsvQM=json({});
    return_jxRsvQM=[&]() {
    json return_AsqvbJL=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_jxRsvQM;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_qRWtxaK=json({});
    return_qRWtxaK=[&]() {
    json return_dqEhXWg=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_qRWtxaK;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_ZdiJLPx=json({});
    return_ZdiJLPx=[&]() {
    json return_DwOxYmH=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_ZdiJLPx;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_XvcJPCa=json({});
    return_XvcJPCa=[&]() {
    json return_uBLbKDB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_XvcJPCa;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qCGswfb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AazTAJL=json({});
    
        if (name.pNext==NULL){
            return_AazTAJL["null"]=true;
            return return_AazTAJL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_uUqWXYw=json({});
    return_uUqWXYw=[&]() {
    json return_KhUrCgm=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_uUqWXYw;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yatNYVX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xgipAXg=json({});
    
        if (name.pNext==NULL){
            return_xgipAXg["null"]=true;
            return return_xgipAXg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_LHlHmlU=json({});
    return_LHlHmlU=[&]() {
    json return_MCqrOSg=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_LHlHmlU;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_PZIxXCa=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_wILHuWK=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_oHwworw=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_FSjBGmp=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_QxBHYQu=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_HpFzcKy=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_abqZpMH=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_sNdkgrO=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_vKTcmjD=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_TNKPDhA=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_dRuxBBX=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_JwQRiah=json({});
    
        return_JwQRiah["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_TsYqIpC=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[i]);}();
            return_JwQRiah["members"][std::to_string(i)].push_back(temp);
        }
        return return_JwQRiah;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int CAFCOrB=0; CAFCOrB < 3; CAFCOrB++){
            [&]() {
result.computeWorkGroupSize[CAFCOrB]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][CAFCOrB]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WUZVSna=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_URyfPbI=json({});
    
        if (name.pNext==NULL){
            return_URyfPbI["null"]=true;
            return return_URyfPbI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_EIxrzTs=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oYihyvy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oYihyvy=NULL;
        }
    temp_oYihyvy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oYihyvy;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cimIOiQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iGoqCEI=json({});
    
        if (name.pNext==NULL){
            return_iGoqCEI["null"]=true;
            return return_iGoqCEI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_bBGNBhb=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FbBzUnt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FbBzUnt=NULL;
        }
    temp_FbBzUnt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FbBzUnt;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_swkwQsx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bsiHuyR=json({});
    
        if (name.pNext==NULL){
            return_bsiHuyR["null"]=true;
            return return_bsiHuyR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_aWEMhRN=json({});
    return_aWEMhRN=[&]() {
    json return_WNnToAg=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_aWEMhRN;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kCnXcyv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SLLFwdo=json({});
    
        if (name.pNext==NULL){
            return_SLLFwdo["null"]=true;
            return return_SLLFwdo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_SVpRxTD=json({});
    return_SVpRxTD=[&]() {
    json return_gXOLMjy=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_SVpRxTD;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_piTBzkl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qaUtjOw=json({});
    
        if (name.pNext==NULL){
            return_qaUtjOw["null"]=true;
            return return_qaUtjOw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_KXbcsOm=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_bHipyGq=json({});
    
        return_bHipyGq["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_aFHyAiE=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_bHipyGq["members"][std::to_string(i)].push_back(temp);
        }
        return return_bHipyGq;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int pIDERfW=0; pIDERfW < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; pIDERfW++){
            [&]() {
result.priorities[pIDERfW]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][pIDERfW]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Ohplghg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IcEsVwA=json({});
    
        if (name.pNext==NULL){
            return_IcEsVwA["null"]=true;
            return return_IcEsVwA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_bzwSYdr=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_yVuJubA=json({});
    
        return_yVuJubA["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_pGHQrAA=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_yVuJubA["members"][std::to_string(i)].push_back(temp);
        }
        return return_yVuJubA;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int YiwVcot=0; YiwVcot < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; YiwVcot++){
            [&]() {
result.priorities[YiwVcot]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][YiwVcot]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gpqZFze=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZbtDMiK=json({});
    
        if (name.pNext==NULL){
            return_ZbtDMiK["null"]=true;
            return return_ZbtDMiK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_zjWlqgu=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_EFeylnK=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_KqSnrxq=json({});
    
        if (name.pObjectName==NULL){
            return_KqSnrxq["null"]=true;
            return return_KqSnrxq;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XscqxQl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XscqxQl=NULL;
        }
    temp_XscqxQl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XscqxQl;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_twDnqbl;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_twDnqbl=NULL;
        }
    temp_twDnqbl=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_twDnqbl;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CYknxnl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FvqXkyz=json({});
    
        if (name.pNext==NULL){
            return_FvqXkyz["null"]=true;
            return return_FvqXkyz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_cHeNysQ=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_VSHbLUD=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_IDaXFzC=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_yuZPfzM=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_uAupVgu=json({});
    
        if (name.pTag==NULL){
            return_uAupVgu["null"]=true;
            return return_uAupVgu;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UflTYlF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UflTYlF=NULL;
        }
    temp_UflTYlF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UflTYlF;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_RIBUlut;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_RIBUlut=NULL;
        }
    temp_RIBUlut=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_RIBUlut;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_woCDyCb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tMlbOJu=json({});
    
        if (name.pNext==NULL){
            return_tMlbOJu["null"]=true;
            return return_tMlbOJu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pLabelName"]=[&]() {
    json return_rVrBFaz=json({});
    
        if (name.pLabelName==NULL){
            return_rVrBFaz["null"]=true;
            return return_rVrBFaz;
        }
        return serialize_char_p(name.pLabelName);
}();
result["members"]["color"]=[&]() {
    json return_lMMpPDq=json({});
    
        return_lMMpPDq["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_bcCqEfD=json({});
    return serialize_float(name.color[i]);}();
            return_lMMpPDq["members"][std::to_string(i)].push_back(temp);
        }
        return return_lMMpPDq;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kSOkrmo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kSOkrmo=NULL;
        }
    temp_kSOkrmo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kSOkrmo;}();
[&]() {
char* temp_QtwpSxs;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_QtwpSxs=NULL;
        }
    temp_QtwpSxs=deserialize_char_p(name["members"]["pLabelName"]);
}();result.pLabelName=temp_QtwpSxs;}();
[&]() {

        for (int sBcICsk=0; sBcICsk < 4; sBcICsk++){
            [&]() {
result.color[sBcICsk]=deserialize_float(name["members"]["color"]["members"][sBcICsk]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yXelCAt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ynYuTDc=json({});
    
        if (name.pNext==NULL){
            return_ynYuTDc["null"]=true;
            return return_ynYuTDc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_VkgKmzg=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_fyOLMRQ=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_feqhtaL=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_waWumnp=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_PbaJkdo=json({});
    
        if (name.pUserData==NULL){
            return_PbaJkdo["null"]=true;
            return return_PbaJkdo;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JDbWpJh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JDbWpJh=NULL;
        }
    temp_JDbWpJh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JDbWpJh;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oDqnoHI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CAoJmAR=json({});
    
        if (name.pNext==NULL){
            return_CAoJmAR["null"]=true;
            return return_CAoJmAR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_raeUoWs=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_RMJSgYg=json({});
    
        if (name.pMessageIdName==NULL){
            return_RMJSgYg["null"]=true;
            return return_RMJSgYg;
        }
        return serialize_char_p(name.pMessageIdName);
}();
result["members"]["messageIdNumber"]=[&]() {
    json return_BROhnFC=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_KQMODut=json({});
    
        if (name.pMessage==NULL){
            return_KQMODut["null"]=true;
            return return_KQMODut;
        }
        return serialize_char_p(name.pMessage);
}();
result["members"]["queueLabelCount"]=[&]() {
    json return_DjkjzqP=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_dDvdhSf=json({});
    
        if (name.pQueueLabels==NULL){
            return_dDvdhSf["null"]=true;
            return return_dDvdhSf;
        }
        
        return_dDvdhSf["members"]={};
        for(int i=0; i < name.queueLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_kZyqMVJ=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[i]);}();
            return_dDvdhSf["members"][std::to_string(i)].push_back(temp);
        }
        return return_dDvdhSf;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_MKWCnSk=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_hHDWxmk=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_hHDWxmk["null"]=true;
            return return_hHDWxmk;
        }
        
        return_hHDWxmk["members"]={};
        for(int i=0; i < name.cmdBufLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_hSxYsGv=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[i]);}();
            return_hHDWxmk["members"][std::to_string(i)].push_back(temp);
        }
        return return_hHDWxmk;
        }();
result["members"]["objectCount"]=[&]() {
    json return_bjnthDs=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_itWClCN=json({});
    
        if (name.pObjects==NULL){
            return_itWClCN["null"]=true;
            return return_itWClCN;
        }
        
        return_itWClCN["members"]={};
        for(int i=0; i < name.objectCount; i++){
            json temp;
            temp=[&]() {
    json return_ignWiqe=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[i]);}();
            return_itWClCN["members"][std::to_string(i)].push_back(temp);
        }
        return return_itWClCN;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fDewEzF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fDewEzF=NULL;
        }
    temp_fDewEzF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fDewEzF;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_GFvUfzt;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_GFvUfzt=NULL;
        }
    temp_GFvUfzt=deserialize_char_p(name["members"]["pMessageIdName"]);
}();result.pMessageIdName=temp_GFvUfzt;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_cfhSOZb;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_cfhSOZb=NULL;
        }
    temp_cfhSOZb=deserialize_char_p(name["members"]["pMessage"]);
}();result.pMessage=temp_cfhSOZb;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_AtXPsjQ;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_AtXPsjQ=NULL;
        }
    temp_AtXPsjQ=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int QNTPzbq=0; QNTPzbq < result.queueLabelCount; QNTPzbq++){
            [&]() {
temp_AtXPsjQ[QNTPzbq]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][QNTPzbq]);}();;
        }
        }();result.pQueueLabels=temp_AtXPsjQ;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_kdKeIRN;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_kdKeIRN=NULL;
        }
    temp_kdKeIRN=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int LktaqpE=0; LktaqpE < result.cmdBufLabelCount; LktaqpE++){
            [&]() {
temp_kdKeIRN[LktaqpE]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][LktaqpE]);}();;
        }
        }();result.pCmdBufLabels=temp_kdKeIRN;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_mFzRbJy;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_mFzRbJy=NULL;
        }
    temp_mFzRbJy=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int fASkiGE=0; fASkiGE < result.objectCount; fASkiGE++){
            [&]() {
temp_mFzRbJy[fASkiGE]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][fASkiGE]);}();;
        }
        }();result.pObjects=temp_mFzRbJy;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kdXxfhN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nSJKbOU=json({});
    
        if (name.pNext==NULL){
            return_nSJKbOU["null"]=true;
            return return_nSJKbOU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_pIghdqT=json({});
    return_pIghdqT=[&]() {
    json return_xUyjaAk=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_pIghdqT;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BlrAGBR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QHuQPMh=json({});
    
        if (name.pNext==NULL){
            return_QHuQPMh["null"]=true;
            return return_QHuQPMh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jJxzCdc=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_akKAvKJ=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_WwRuAXK=json({});
    
        if (name.pUserData==NULL){
            return_WwRuAXK["null"]=true;
            return return_WwRuAXK;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pWZFXNi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pWZFXNi=NULL;
        }
    temp_pWZFXNi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pWZFXNi;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cXqJpeJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kAEdgCw=json({});
    
        if (name.pNext==NULL){
            return_kAEdgCw["null"]=true;
            return return_kAEdgCw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QUbDLyd=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_NOHNSoR=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_ryUFBzZ=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_UAwGrds=json({});
    return_UAwGrds=[&]() {
    json return_UIWkGHe=json({});
    return serialize_uint64_t(name.size);}();return return_UAwGrds;}();
result["members"]["objectType"]=[&]() {
    json return_dcBqzwp=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_xQLVHWm=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_PscWJkg=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PfsNWXb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AkgasLL=json({});
    
        if (name.pNext==NULL){
            return_AkgasLL["null"]=true;
            return return_AkgasLL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_trnmMxp=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_JsmfTZl=json({});
    
        if (name.pHostPointer==NULL){
            return_JsmfTZl["null"]=true;
            return return_JsmfTZl;
        }
        return serialize_void_p(name.pHostPointer);
}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rveltPP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rveltPP=NULL;
        }
    temp_rveltPP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rveltPP;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ffBJWNc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iQyPuDy=json({});
    
        if (name.pNext==NULL){
            return_iQyPuDy["null"]=true;
            return return_iQyPuDy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_mUnoBaZ=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NnTABjP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PhablIK=json({});
    
        if (name.pNext==NULL){
            return_PhablIK["null"]=true;
            return return_PhablIK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_GCNahPX=json({});
    return_GCNahPX=[&]() {
    json return_iPtWOkK=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_GCNahPX;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QKyVsUK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vLNnIpY=json({});
    
        if (name.pNext==NULL){
            return_vLNnIpY["null"]=true;
            return return_vLNnIpY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_ttkUyAe=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_KNBYwOV=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_UWdgNPr=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_BrxVxyv=json({});
    return_BrxVxyv=[&]() {
    json return_PgDUvls=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_BrxVxyv;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_DMHxglY=json({});
    return_DMHxglY=[&]() {
    json return_KQQvYZj=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_DMHxglY;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_HpILDMr=json({});
    return_HpILDMr=[&]() {
    json return_IpTuYZQ=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_HpILDMr;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_BdaHOLE=json({});
    return_BdaHOLE=[&]() {
    json return_JyIEcup=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_BdaHOLE;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_oVShPiC=json({});
    return_oVShPiC=[&]() {
    json return_TvxBDVx=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_oVShPiC;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_CJnuEHm=json({});
    return_CJnuEHm=[&]() {
    json return_IuWKMcE=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_CJnuEHm;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dxmqfcp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OLvTtcK=json({});
    
        if (name.pNext==NULL){
            return_OLvTtcK["null"]=true;
            return return_OLvTtcK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timeDomain"]=[&]() {
    json return_JwMOrAt=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RvLIaUg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RvLIaUg=NULL;
        }
    temp_RvLIaUg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RvLIaUg;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JVErnVj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wzfYMLb=json({});
    
        if (name.pNext==NULL){
            return_wzfYMLb["null"]=true;
            return return_wzfYMLb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_SXctmyd=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_kvYnejY=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_wLplpcl=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_BSzfPVy=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_PHoZrGy=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_RwVzRCB=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_oqVSBEr=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_TfUOzdY=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_bcsckXR=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_XUkEsUR=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_FbAfchE=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_ikTuChP=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_LGSPpBG=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_hUAckdZ=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GJrNoUb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KQJEmVo=json({});
    
        if (name.pNext==NULL){
            return_KQJEmVo["null"]=true;
            return return_KQJEmVo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_vhVBtaS=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_pgNpWGM=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kMfsKGR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BBapzfz=json({});
    
        if (name.pNext==NULL){
            return_BBapzfz["null"]=true;
            return return_BBapzfz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jMioOTU=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_tPNriSC=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_QsaMnPG=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GkfFewl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GkfFewl=NULL;
        }
    temp_GkfFewl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GkfFewl;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LLbFaiz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bvtsAuJ=json({});
    
        if (name.pNext==NULL){
            return_bvtsAuJ["null"]=true;
            return return_bvtsAuJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_rMwHRgK=json({});
    return_rMwHRgK=[&]() {
    json return_DNDJcCD=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_rMwHRgK;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_MKNUYhH=json({});
    return_MKNUYhH=[&]() {
    json return_NfQpkEH=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_MKNUYhH;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_RQGYQTr=json({});
    return_RQGYQTr=[&]() {
    json return_jAQSRva=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_RQGYQTr;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_uEilSMb=json({});
    return_uEilSMb=[&]() {
    json return_cdvJEma=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_uEilSMb;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_KhXXgdL=json({});
    return_KhXXgdL=[&]() {
    json return_CmUsgLb=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_KhXXgdL;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_nAEhpNc=json({});
    return_nAEhpNc=[&]() {
    json return_LwreXHN=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_nAEhpNc;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_ApzeqSQ=json({});
    return_ApzeqSQ=[&]() {
    json return_eAdkReR=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_ApzeqSQ;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_MJAADcX=json({});
    return_MJAADcX=[&]() {
    json return_lWbwQQS=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_MJAADcX;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_PCNbCoq=json({});
    return_PCNbCoq=[&]() {
    json return_vZFViOO=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_PCNbCoq;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_UAosbTT=json({});
    return_UAosbTT=[&]() {
    json return_Amajiug=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_UAosbTT;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_KvTXngS=json({});
    return_KvTXngS=[&]() {
    json return_qatTsMJ=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_KvTXngS;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_OvoJySO=json({});
    return_OvoJySO=[&]() {
    json return_UABKFGA=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_OvoJySO;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_guFkDlu=json({});
    return_guFkDlu=[&]() {
    json return_uWCEFAi=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_guFkDlu;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_RoHDsNA=json({});
    return_RoHDsNA=[&]() {
    json return_tJdhDHI=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_RoHDsNA;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_XbMWhPA=json({});
    return_XbMWhPA=[&]() {
    json return_yrmcdwR=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_XbMWhPA;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_vaCjOjv=json({});
    return_vaCjOjv=[&]() {
    json return_vGWijYr=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_vaCjOjv;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_MfuyJnj=json({});
    return_MfuyJnj=[&]() {
    json return_bMJMQVd=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_MfuyJnj;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_jiLPyES=json({});
    return_jiLPyES=[&]() {
    json return_gfiYdoR=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_jiLPyES;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_UVcSLUP=json({});
    return_UVcSLUP=[&]() {
    json return_sOadEUX=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_UVcSLUP;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_kEupGjg=json({});
    return_kEupGjg=[&]() {
    json return_gpGdQsv=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_kEupGjg;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kJaAiNQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oMJaCTj=json({});
    
        if (name.pNext==NULL){
            return_oMJaCTj["null"]=true;
            return return_oMJaCTj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_RdoPTLu=json({});
    return_RdoPTLu=[&]() {
    json return_vWghEHn=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_RdoPTLu;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_AylXPkn=json({});
    return_AylXPkn=[&]() {
    json return_gknPJGB=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_AylXPkn;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_pkaVbWk=json({});
    return_pkaVbWk=[&]() {
    json return_LFqXKXe=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_pkaVbWk;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_ipdCebk=json({});
    return_ipdCebk=[&]() {
    json return_umxfqag=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_ipdCebk;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_jIgGALs=json({});
    return_jIgGALs=[&]() {
    json return_qgRTsdb=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_jIgGALs;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_WrYkoEw=json({});
    return_WrYkoEw=[&]() {
    json return_UUXaVaG=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_WrYkoEw;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_jVvDiGG=json({});
    return_jVvDiGG=[&]() {
    json return_XSTnSZx=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_jVvDiGG;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_gkZIxsl=json({});
    return_gkZIxsl=[&]() {
    json return_bGmCqZR=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_gkZIxsl;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_TNpxkcU=json({});
    return_TNpxkcU=[&]() {
    json return_bNcVbwK=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_TNpxkcU;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_ayCkYTI=json({});
    return_ayCkYTI=[&]() {
    json return_WHlJHJY=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_ayCkYTI;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_rjwAhXv=json({});
    return_rjwAhXv=[&]() {
    json return_fbcdZMq=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_rjwAhXv;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_fNpZSUO=json({});
    return_fNpZSUO=[&]() {
    json return_vhYEPBF=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_fNpZSUO;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_NvPLWxl=json({});
    return_NvPLWxl=[&]() {
    json return_PKECcRw=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_NvPLWxl;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_BRBTEBO=json({});
    return_BRBTEBO=[&]() {
    json return_IhhkXdX=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_BRBTEBO;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_oOiFsSW=json({});
    return_oOiFsSW=[&]() {
    json return_txFcoYf=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_oOiFsSW;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_hXubqjd=json({});
    return_hXubqjd=[&]() {
    json return_RnCjhut=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_hXubqjd;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_xBdHnQk=json({});
    return_xBdHnQk=[&]() {
    json return_vtoZblG=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_xBdHnQk;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_cecxhad=json({});
    return_cecxhad=[&]() {
    json return_mPnEgXz=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_cecxhad;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_NenWugi=json({});
    return_NenWugi=[&]() {
    json return_juGEmRn=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_NenWugi;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_HcnztGI=json({});
    return_HcnztGI=[&]() {
    json return_BsEwAtk=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_HcnztGI;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FDTqyQP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MBmAmmT=json({});
    
        if (name.pNext==NULL){
            return_MBmAmmT["null"]=true;
            return return_MBmAmmT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_AsHtgsI=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_dKbsHDn=json({});
    return_dKbsHDn=[&]() {
    json return_HvbOpbi=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_dKbsHDn;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_jClVGil=json({});
    return_jClVGil=[&]() {
    json return_trgvkiu=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_jClVGil;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_gxLbcvr=json({});
    return_gxLbcvr=[&]() {
    json return_FrZIbWp=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_gxLbcvr;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_fvQaHiv=json({});
    return_fvQaHiv=[&]() {
    json return_QhzFoKN=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_fvQaHiv;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_eYujowr=json({});
    return_eYujowr=[&]() {
    json return_sfUMvcb=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_eYujowr;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_ZZNNblE=json({});
    return_ZZNNblE=[&]() {
    json return_MFqVsDs=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_ZZNNblE;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_CwnbdPH=json({});
    return_CwnbdPH=[&]() {
    json return_bKwjtsG=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_CwnbdPH;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_CBeRWpN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_OUvyIkI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_UCWEPEl=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_iKhITgi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_IFgZRLi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_egvmhNO=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_asFKgqa=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_KvcGDbL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_YInTFAE=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_jOksolb=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_xLumpoU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_yEHxENO=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_EqzCxMU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_nAKhvsL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_BpFMvgX=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_roQOvgB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eNiGyUI=json({});
    
        if (name.pNext==NULL){
            return_eNiGyUI["null"]=true;
            return return_eNiGyUI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_RTrbunp=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_fWRNrSl=json({});
    return_fWRNrSl=[&]() {
    json return_yeSOuSZ=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_fWRNrSl;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_WduHcBh=json({});
    return_WduHcBh=[&]() {
    json return_shypdNa=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_WduHcBh;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_mMGppCf=json({});
    return_mMGppCf=[&]() {
    json return_LGxpNrG=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_mMGppCf;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_bUbQfob=json({});
    return_bUbQfob=[&]() {
    json return_bGEKsuj=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_bUbQfob;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_xuZFltS=json({});
    return_xuZFltS=[&]() {
    json return_NpqSOfJ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_xuZFltS;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_DYrhfCp=json({});
    return_DYrhfCp=[&]() {
    json return_aqYcsnu=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_DYrhfCp;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_duJCZRV=json({});
    return_duJCZRV=[&]() {
    json return_ISUTmDX=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_duJCZRV;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_YZNNwEj=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_bqJuDLX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_QmRnKrA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_ZzFzwRs=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_DJrcrRn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_ikgntTX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_ZMujPZN=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_hdXVisq=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_uLeNoxV=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_iNVEhGA=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_LLganVi=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_zrVIoEH=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_xrbIArd=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_AONJXZW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_OzXAZfL=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hMYtRQL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hwLacnQ=json({});
    
        if (name.pNext==NULL){
            return_hwLacnQ["null"]=true;
            return return_hwLacnQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_QLxMZYQ=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_PzdhxLs=json({});
    
        if (name.pBindingFlags==NULL){
            return_PzdhxLs["null"]=true;
            return return_PzdhxLs;
        }
        
        return_PzdhxLs["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_FOkEIaz=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_PzdhxLs["members"][std::to_string(i)].push_back(temp);
        }
        return return_PzdhxLs;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lFrPLjR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lFrPLjR=NULL;
        }
    temp_lFrPLjR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lFrPLjR;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_IuYzear;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_IuYzear=NULL;
        }
    temp_IuYzear=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int MLVyixD=0; MLVyixD < result.bindingCount; MLVyixD++){
            [&]() {
temp_IuYzear[MLVyixD]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][MLVyixD]);}();;
        }
        }();result.pBindingFlags=temp_IuYzear;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HcGfbmg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pmjwdqn=json({});
    
        if (name.pNext==NULL){
            return_pmjwdqn["null"]=true;
            return return_pmjwdqn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_BfbUEMt=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_azOqxvf=json({});
    
        if (name.pBindingFlags==NULL){
            return_azOqxvf["null"]=true;
            return return_azOqxvf;
        }
        
        return_azOqxvf["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_fPqfOAe=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_azOqxvf["members"][std::to_string(i)].push_back(temp);
        }
        return return_azOqxvf;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ApBVxtI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ApBVxtI=NULL;
        }
    temp_ApBVxtI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ApBVxtI;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_PzSlLLi;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_PzSlLLi=NULL;
        }
    temp_PzSlLLi=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int qDyrIbY=0; qDyrIbY < result.bindingCount; qDyrIbY++){
            [&]() {
temp_PzSlLLi[qDyrIbY]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][qDyrIbY]);}();;
        }
        }();result.pBindingFlags=temp_PzSlLLi;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cmhDldc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JkkhGPt=json({});
    
        if (name.pNext==NULL){
            return_JkkhGPt["null"]=true;
            return return_JkkhGPt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_jHKZzgu=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_PZZPaNT=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_PZZPaNT["null"]=true;
            return return_PZZPaNT;
        }
        
        return_PZZPaNT["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_FzWxvvP=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_PZZPaNT["members"][std::to_string(i)].push_back(temp);
        }
        return return_PZZPaNT;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_szrdqGz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_szrdqGz=NULL;
        }
    temp_szrdqGz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_szrdqGz;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_VgzQOxA;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_VgzQOxA=NULL;
        }
    temp_VgzQOxA=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int SpatlZz=0; SpatlZz < result.descriptorSetCount; SpatlZz++){
            [&]() {
temp_VgzQOxA[SpatlZz]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][SpatlZz]);}();;
        }
        }();result.pDescriptorCounts=temp_VgzQOxA;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RIgkaXX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tQlOjQP=json({});
    
        if (name.pNext==NULL){
            return_tQlOjQP["null"]=true;
            return return_tQlOjQP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_SfVFnMF=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_AGtCGLQ=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_AGtCGLQ["null"]=true;
            return return_AGtCGLQ;
        }
        
        return_AGtCGLQ["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_AuVOHIl=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_AGtCGLQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_AGtCGLQ;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AHZfKis;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AHZfKis=NULL;
        }
    temp_AHZfKis=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AHZfKis;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_ctBRLQz;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_ctBRLQz=NULL;
        }
    temp_ctBRLQz=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int ngROjoD=0; ngROjoD < result.descriptorSetCount; ngROjoD++){
            [&]() {
temp_ctBRLQz[ngROjoD]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][ngROjoD]);}();;
        }
        }();result.pDescriptorCounts=temp_ctBRLQz;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JnhNgnx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xVwhZps=json({});
    
        if (name.pNext==NULL){
            return_xVwhZps["null"]=true;
            return return_xVwhZps;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_JAAayci=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YrTxoFS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jdVIdkk=json({});
    
        if (name.pNext==NULL){
            return_jdVIdkk["null"]=true;
            return return_jdVIdkk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_DfrZLht=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xNpNfCY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZMMBwrv=json({});
    
        if (name.pNext==NULL){
            return_ZMMBwrv["null"]=true;
            return return_ZMMBwrv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QdQwURB=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_XudESzc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_BBdbPJi=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_NycmcvI=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_MEkVQwH=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_wYPgAxt=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_NTBbQLG=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_ioOoFqO=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_iEIwHBU=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rRFcNTx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rRFcNTx=NULL;
        }
    temp_rRFcNTx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rRFcNTx;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_najvBbV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pyJRdIO=json({});
    
        if (name.pNext==NULL){
            return_pyJRdIO["null"]=true;
            return return_pyJRdIO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gweHIJB=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_ZPwXAyL=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_MRzhbwe=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_ntRolvc=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_edajNDH=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_mJwjGLe=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_YwKrNFK=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_tytHVwq=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ZDUFTVA=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TkzduFG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TkzduFG=NULL;
        }
    temp_TkzduFG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TkzduFG;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FWSFtVL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yJoOetk=json({});
    
        if (name.pNext==NULL){
            return_yJoOetk["null"]=true;
            return return_yJoOetk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_cmDoVKE=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_HgBTiRj=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_ftXTLdK=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OzXlnLW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OzXlnLW=NULL;
        }
    temp_OzXlnLW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OzXlnLW;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JMXVapv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zvPchou=json({});
    
        if (name.pNext==NULL){
            return_zvPchou["null"]=true;
            return return_zvPchou;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_HnQOaWL=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_CHWVOvf=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_wTUpaUv=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ajqxzVY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ajqxzVY=NULL;
        }
    temp_ajqxzVY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ajqxzVY;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RyFiUom=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zCLyEPv=json({});
    
        if (name.pNext==NULL){
            return_zCLyEPv["null"]=true;
            return return_zCLyEPv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MXycxQL=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_CmJKWER=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_kpuHVMi=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_ZliNxBL=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_OYptrXT=json({});
    
        if (name.pInputAttachments==NULL){
            return_OYptrXT["null"]=true;
            return return_OYptrXT;
        }
        
        return_OYptrXT["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_KIdYPAf=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_OYptrXT["members"][std::to_string(i)].push_back(temp);
        }
        return return_OYptrXT;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_PpuuyFn=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_zXBrbpp=json({});
    
        if (name.pColorAttachments==NULL){
            return_zXBrbpp["null"]=true;
            return return_zXBrbpp;
        }
        
        return_zXBrbpp["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_zEjDnMi=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_zXBrbpp["members"][std::to_string(i)].push_back(temp);
        }
        return return_zXBrbpp;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_yaYJBNt=json({});
    
        if (name.pResolveAttachments==NULL){
            return_yaYJBNt["null"]=true;
            return return_yaYJBNt;
        }
        
        return_yaYJBNt["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_JeqgapL=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_yaYJBNt["members"][std::to_string(i)].push_back(temp);
        }
        return return_yaYJBNt;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_UehaxqL=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_UehaxqL["null"]=true;
            return return_UehaxqL;
        }
        return_UehaxqL=[&]() {
    json return_uiYfmue=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_UehaxqL;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_umCzOWX=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_rxGCYYo=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_rxGCYYo["null"]=true;
            return return_rxGCYYo;
        }
        
        return_rxGCYYo["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_FdPHOKX=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_rxGCYYo["members"][std::to_string(i)].push_back(temp);
        }
        return return_rxGCYYo;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YpsnmwA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YpsnmwA=NULL;
        }
    temp_YpsnmwA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YpsnmwA;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_LgGIVSX;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_LgGIVSX=NULL;
        }
    temp_LgGIVSX=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int kKsfhoz=0; kKsfhoz < result.inputAttachmentCount; kKsfhoz++){
            [&]() {
temp_LgGIVSX[kKsfhoz]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][kKsfhoz]);}();;
        }
        }();result.pInputAttachments=temp_LgGIVSX;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_GPWZlbt;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_GPWZlbt=NULL;
        }
    temp_GPWZlbt=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int anASCTn=0; anASCTn < result.colorAttachmentCount; anASCTn++){
            [&]() {
temp_GPWZlbt[anASCTn]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][anASCTn]);}();;
        }
        }();result.pColorAttachments=temp_GPWZlbt;}();
[&]() {
VkAttachmentReference2* temp_PjdMlQI;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_PjdMlQI=NULL;
        }
    temp_PjdMlQI=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int ANqcUTz=0; ANqcUTz < result.colorAttachmentCount; ANqcUTz++){
            [&]() {
temp_PjdMlQI[ANqcUTz]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][ANqcUTz]);}();;
        }
        }();result.pResolveAttachments=temp_PjdMlQI;}();
[&]() {
VkAttachmentReference2* temp_gRvvMPd;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_gRvvMPd=NULL;
        }
    [&]() {
*(temp_gRvvMPd)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_gRvvMPd;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_xyginDQ;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_xyginDQ=NULL;
        }
    temp_xyginDQ=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int izEbtXN=0; izEbtXN < result.preserveAttachmentCount; izEbtXN++){
            [&]() {
temp_xyginDQ[izEbtXN]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][izEbtXN]);}();;
        }
        }();result.pPreserveAttachments=temp_xyginDQ;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wboLrAB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GxiCYyV=json({});
    
        if (name.pNext==NULL){
            return_GxiCYyV["null"]=true;
            return return_GxiCYyV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nOXkeFn=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_JAlMEON=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_klYbTPL=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_gHmkyaj=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_GkRnnUx=json({});
    
        if (name.pInputAttachments==NULL){
            return_GkRnnUx["null"]=true;
            return return_GkRnnUx;
        }
        
        return_GkRnnUx["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_kdCvIby=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_GkRnnUx["members"][std::to_string(i)].push_back(temp);
        }
        return return_GkRnnUx;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_lfariPF=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_jYDvwmo=json({});
    
        if (name.pColorAttachments==NULL){
            return_jYDvwmo["null"]=true;
            return return_jYDvwmo;
        }
        
        return_jYDvwmo["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_KsHYUHs=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_jYDvwmo["members"][std::to_string(i)].push_back(temp);
        }
        return return_jYDvwmo;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_pCCGUZH=json({});
    
        if (name.pResolveAttachments==NULL){
            return_pCCGUZH["null"]=true;
            return return_pCCGUZH;
        }
        
        return_pCCGUZH["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_tMlLDJA=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_pCCGUZH["members"][std::to_string(i)].push_back(temp);
        }
        return return_pCCGUZH;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_OskxrIF=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_OskxrIF["null"]=true;
            return return_OskxrIF;
        }
        return_OskxrIF=[&]() {
    json return_dpgMmzs=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_OskxrIF;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_JJQrlmv=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_qJMNLQs=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_qJMNLQs["null"]=true;
            return return_qJMNLQs;
        }
        
        return_qJMNLQs["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_IljgkBY=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_qJMNLQs["members"][std::to_string(i)].push_back(temp);
        }
        return return_qJMNLQs;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_erUXnlp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_erUXnlp=NULL;
        }
    temp_erUXnlp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_erUXnlp;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_WkgRPnA;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_WkgRPnA=NULL;
        }
    temp_WkgRPnA=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int hYPHhLg=0; hYPHhLg < result.inputAttachmentCount; hYPHhLg++){
            [&]() {
temp_WkgRPnA[hYPHhLg]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][hYPHhLg]);}();;
        }
        }();result.pInputAttachments=temp_WkgRPnA;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_IifgZvV;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_IifgZvV=NULL;
        }
    temp_IifgZvV=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int oGLWhLF=0; oGLWhLF < result.colorAttachmentCount; oGLWhLF++){
            [&]() {
temp_IifgZvV[oGLWhLF]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][oGLWhLF]);}();;
        }
        }();result.pColorAttachments=temp_IifgZvV;}();
[&]() {
VkAttachmentReference2* temp_kfMKZDt;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_kfMKZDt=NULL;
        }
    temp_kfMKZDt=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int BiniywA=0; BiniywA < result.colorAttachmentCount; BiniywA++){
            [&]() {
temp_kfMKZDt[BiniywA]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][BiniywA]);}();;
        }
        }();result.pResolveAttachments=temp_kfMKZDt;}();
[&]() {
VkAttachmentReference2* temp_UQwjFEF;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_UQwjFEF=NULL;
        }
    [&]() {
*(temp_UQwjFEF)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_UQwjFEF;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_KmJEQeh;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_KmJEQeh=NULL;
        }
    temp_KmJEQeh=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int JlHINoK=0; JlHINoK < result.preserveAttachmentCount; JlHINoK++){
            [&]() {
temp_KmJEQeh[JlHINoK]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][JlHINoK]);}();;
        }
        }();result.pPreserveAttachments=temp_KmJEQeh;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DMKFHkj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CYVOBTa=json({});
    
        if (name.pNext==NULL){
            return_CYVOBTa["null"]=true;
            return return_CYVOBTa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_yotwTZX=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_bWlqNtA=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_EKfmvey=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_IwImMLW=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_xRrdPfL=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_mPzHpdd=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_vnOIBYu=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_liIyUCQ=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_isYqNtR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_isYqNtR=NULL;
        }
    temp_isYqNtR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_isYqNtR;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HEIBLvL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_beEiilI=json({});
    
        if (name.pNext==NULL){
            return_beEiilI["null"]=true;
            return return_beEiilI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_AXDqRpP=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_PLJCvsa=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_UjMpFaY=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_PdyeLEe=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_DFjQPbF=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_NVwoVkm=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_pssfBZn=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_VSOClVk=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OuNLZsL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OuNLZsL=NULL;
        }
    temp_OuNLZsL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OuNLZsL;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UvjfqhV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pPUrFSj=json({});
    
        if (name.pNext==NULL){
            return_pPUrFSj["null"]=true;
            return return_pPUrFSj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fljNBrG=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_cffqTEc=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_lvfQHBI=json({});
    
        if (name.pAttachments==NULL){
            return_lvfQHBI["null"]=true;
            return return_lvfQHBI;
        }
        
        return_lvfQHBI["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_uIMoXQZ=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_lvfQHBI["members"][std::to_string(i)].push_back(temp);
        }
        return return_lvfQHBI;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_AdGCqJO=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_hozHzoo=json({});
    
        if (name.pSubpasses==NULL){
            return_hozHzoo["null"]=true;
            return return_hozHzoo;
        }
        
        return_hozHzoo["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_ypXirJr=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_hozHzoo["members"][std::to_string(i)].push_back(temp);
        }
        return return_hozHzoo;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_mlbBsac=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_zAxgENH=json({});
    
        if (name.pDependencies==NULL){
            return_zAxgENH["null"]=true;
            return return_zAxgENH;
        }
        
        return_zAxgENH["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_cynvHOU=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_zAxgENH["members"][std::to_string(i)].push_back(temp);
        }
        return return_zAxgENH;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_Vfczsav=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_dcUsBow=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_dcUsBow["null"]=true;
            return return_dcUsBow;
        }
        
        return_dcUsBow["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_rsDbXce=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_dcUsBow["members"][std::to_string(i)].push_back(temp);
        }
        return return_dcUsBow;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dNHHXJC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dNHHXJC=NULL;
        }
    temp_dNHHXJC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dNHHXJC;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_bUjTPrX;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_bUjTPrX=NULL;
        }
    temp_bUjTPrX=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int dPRtXDz=0; dPRtXDz < result.attachmentCount; dPRtXDz++){
            [&]() {
temp_bUjTPrX[dPRtXDz]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][dPRtXDz]);}();;
        }
        }();result.pAttachments=temp_bUjTPrX;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_HHWqQHo;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_HHWqQHo=NULL;
        }
    temp_HHWqQHo=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int BOycdEo=0; BOycdEo < result.subpassCount; BOycdEo++){
            [&]() {
temp_HHWqQHo[BOycdEo]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][BOycdEo]);}();;
        }
        }();result.pSubpasses=temp_HHWqQHo;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_AgULWxx;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_AgULWxx=NULL;
        }
    temp_AgULWxx=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int qduuaiB=0; qduuaiB < result.dependencyCount; qduuaiB++){
            [&]() {
temp_AgULWxx[qduuaiB]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][qduuaiB]);}();;
        }
        }();result.pDependencies=temp_AgULWxx;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_mIsqKUE;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_mIsqKUE=NULL;
        }
    temp_mIsqKUE=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int UZcxbqt=0; UZcxbqt < result.correlatedViewMaskCount; UZcxbqt++){
            [&]() {
temp_mIsqKUE[UZcxbqt]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][UZcxbqt]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_mIsqKUE;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jcMOggz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_elTCGZR=json({});
    
        if (name.pNext==NULL){
            return_elTCGZR["null"]=true;
            return return_elTCGZR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nSChWIi=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_NoVDaGs=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_seEgNYh=json({});
    
        if (name.pAttachments==NULL){
            return_seEgNYh["null"]=true;
            return return_seEgNYh;
        }
        
        return_seEgNYh["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_TIehfpz=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_seEgNYh["members"][std::to_string(i)].push_back(temp);
        }
        return return_seEgNYh;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_MjIPhRb=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_HEzqSZr=json({});
    
        if (name.pSubpasses==NULL){
            return_HEzqSZr["null"]=true;
            return return_HEzqSZr;
        }
        
        return_HEzqSZr["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_ZRPYTny=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_HEzqSZr["members"][std::to_string(i)].push_back(temp);
        }
        return return_HEzqSZr;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_lUxDRew=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_stgXKql=json({});
    
        if (name.pDependencies==NULL){
            return_stgXKql["null"]=true;
            return return_stgXKql;
        }
        
        return_stgXKql["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_ryuVYug=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_stgXKql["members"][std::to_string(i)].push_back(temp);
        }
        return return_stgXKql;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_SMzUNZl=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_CrmMnfq=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_CrmMnfq["null"]=true;
            return return_CrmMnfq;
        }
        
        return_CrmMnfq["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_vaeuBKt=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_CrmMnfq["members"][std::to_string(i)].push_back(temp);
        }
        return return_CrmMnfq;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rJfmALq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rJfmALq=NULL;
        }
    temp_rJfmALq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rJfmALq;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_iyQRjeQ;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_iyQRjeQ=NULL;
        }
    temp_iyQRjeQ=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int YBscudI=0; YBscudI < result.attachmentCount; YBscudI++){
            [&]() {
temp_iyQRjeQ[YBscudI]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][YBscudI]);}();;
        }
        }();result.pAttachments=temp_iyQRjeQ;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_qaCKMOW;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_qaCKMOW=NULL;
        }
    temp_qaCKMOW=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int bxTWkVR=0; bxTWkVR < result.subpassCount; bxTWkVR++){
            [&]() {
temp_qaCKMOW[bxTWkVR]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][bxTWkVR]);}();;
        }
        }();result.pSubpasses=temp_qaCKMOW;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_ZowStbI;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_ZowStbI=NULL;
        }
    temp_ZowStbI=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int wtoVqGq=0; wtoVqGq < result.dependencyCount; wtoVqGq++){
            [&]() {
temp_ZowStbI[wtoVqGq]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][wtoVqGq]);}();;
        }
        }();result.pDependencies=temp_ZowStbI;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_UbmZkDq;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_UbmZkDq=NULL;
        }
    temp_UbmZkDq=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int VXxSEfj=0; VXxSEfj < result.correlatedViewMaskCount; VXxSEfj++){
            [&]() {
temp_UbmZkDq[VXxSEfj]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][VXxSEfj]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_UbmZkDq;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZmzGknO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hNRiuIu=json({});
    
        if (name.pNext==NULL){
            return_hNRiuIu["null"]=true;
            return return_hNRiuIu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_TUzKScE=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TqyRnxm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TqyRnxm=NULL;
        }
    temp_TqyRnxm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TqyRnxm;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FYfPjDM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KVVWDgm=json({});
    
        if (name.pNext==NULL){
            return_KVVWDgm["null"]=true;
            return return_KVVWDgm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_AyXhdMM=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AkWczon;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AkWczon=NULL;
        }
    temp_AkWczon=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AkWczon;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uCBPMIB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aPjScKG=json({});
    
        if (name.pNext==NULL){
            return_aPjScKG["null"]=true;
            return return_aPjScKG;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cxUMbsm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cxUMbsm=NULL;
        }
    temp_cxUMbsm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cxUMbsm;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XzkTlNP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VFehQch=json({});
    
        if (name.pNext==NULL){
            return_VFehQch["null"]=true;
            return return_VFehQch;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yBLLtQS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yBLLtQS=NULL;
        }
    temp_yBLLtQS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yBLLtQS;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aFPVxan=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vUYGRDh=json({});
    
        if (name.pNext==NULL){
            return_vUYGRDh["null"]=true;
            return return_vUYGRDh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_agqrgwb=json({});
    return_agqrgwb=[&]() {
    json return_HsiVMUq=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_agqrgwb;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YCauxKX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iifOELw=json({});
    
        if (name.pNext==NULL){
            return_iifOELw["null"]=true;
            return return_iifOELw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_JZIinRJ=json({});
    return_JZIinRJ=[&]() {
    json return_ulsUmtw=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_JZIinRJ;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BLIpzkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NllARov=json({});
    
        if (name.pNext==NULL){
            return_NllARov["null"]=true;
            return return_NllARov;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_QvAVwYa=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qogvPUZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uTmtFDq=json({});
    
        if (name.pNext==NULL){
            return_uTmtFDq["null"]=true;
            return return_uTmtFDq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_lWhuSey=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AYdxUNW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fseOHYa=json({});
    
        if (name.pNext==NULL){
            return_fseOHYa["null"]=true;
            return return_fseOHYa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_oCVWujn=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_HxjibNo=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QZVhhyc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QZVhhyc=NULL;
        }
    temp_QZVhhyc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QZVhhyc;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zUvTlql=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GwJZEkl=json({});
    
        if (name.pNext==NULL){
            return_GwJZEkl["null"]=true;
            return return_GwJZEkl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_IgPxeYz=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_fMLBREP=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RiLbNSP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RiLbNSP=NULL;
        }
    temp_RiLbNSP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RiLbNSP;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cmZNmXP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RlwQhzg=json({});
    
        if (name.pNext==NULL){
            return_RlwQhzg["null"]=true;
            return return_RlwQhzg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_sRDqORu=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_hEswMAu=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_hEswMAu["null"]=true;
            return return_hEswMAu;
        }
        
        return_hEswMAu["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_qOqsJMM=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_hEswMAu["members"][std::to_string(i)].push_back(temp);
        }
        return return_hEswMAu;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_aXkuSAl=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_AHVQJIj=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_AHVQJIj["null"]=true;
            return return_AHVQJIj;
        }
        
        return_AHVQJIj["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_uTdUqmF=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_AHVQJIj["members"][std::to_string(i)].push_back(temp);
        }
        return return_AHVQJIj;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SQuYUwb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SQuYUwb=NULL;
        }
    temp_SQuYUwb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SQuYUwb;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_wHjApbm;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_wHjApbm=NULL;
        }
    temp_wHjApbm=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int HLkBdgU=0; HLkBdgU < result.waitSemaphoreValueCount; HLkBdgU++){
            [&]() {
temp_wHjApbm[HLkBdgU]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][HLkBdgU]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_wHjApbm;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_WYzhSdb;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_WYzhSdb=NULL;
        }
    temp_WYzhSdb=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int qKctefR=0; qKctefR < result.signalSemaphoreValueCount; qKctefR++){
            [&]() {
temp_WYzhSdb[qKctefR]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][qKctefR]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_WYzhSdb;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPxINKB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qbmkiji=json({});
    
        if (name.pNext==NULL){
            return_qbmkiji["null"]=true;
            return return_qbmkiji;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_NaEzDRF=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_EEzMAgL=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_EEzMAgL["null"]=true;
            return return_EEzMAgL;
        }
        
        return_EEzMAgL["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_ykVFoBr=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_EEzMAgL["members"][std::to_string(i)].push_back(temp);
        }
        return return_EEzMAgL;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_gxuhIYh=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_KwVDtaR=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_KwVDtaR["null"]=true;
            return return_KwVDtaR;
        }
        
        return_KwVDtaR["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_qYnzbVU=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_KwVDtaR["members"][std::to_string(i)].push_back(temp);
        }
        return return_KwVDtaR;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QSHAXUJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QSHAXUJ=NULL;
        }
    temp_QSHAXUJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QSHAXUJ;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_PliYLat;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_PliYLat=NULL;
        }
    temp_PliYLat=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int afhLeSh=0; afhLeSh < result.waitSemaphoreValueCount; afhLeSh++){
            [&]() {
temp_PliYLat[afhLeSh]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][afhLeSh]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_PliYLat;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_gMpnlKt;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_gMpnlKt=NULL;
        }
    temp_gMpnlKt=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int ZQFScqG=0; ZQFScqG < result.signalSemaphoreValueCount; ZQFScqG++){
            [&]() {
temp_gMpnlKt[ZQFScqG]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][ZQFScqG]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_gMpnlKt;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LJAmFVV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xEFyPBq=json({});
    
        if (name.pNext==NULL){
            return_xEFyPBq["null"]=true;
            return return_xEFyPBq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_avDHmsA=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_AkgltNf=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_FwLHLIs=json({});
    
        if (name.pSemaphores==NULL){
            return_FwLHLIs["null"]=true;
            return return_FwLHLIs;
        }
        
        return_FwLHLIs["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_bMZreDR=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_FwLHLIs["members"][std::to_string(i)].push_back(temp);
        }
        return return_FwLHLIs;
        }();
result["members"]["pValues"]=[&]() {
    json return_LsGulHC=json({});
    
        if (name.pValues==NULL){
            return_LsGulHC["null"]=true;
            return return_LsGulHC;
        }
        
        return_LsGulHC["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_RawWJAn=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_LsGulHC["members"][std::to_string(i)].push_back(temp);
        }
        return return_LsGulHC;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rinJYTf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rinJYTf=NULL;
        }
    temp_rinJYTf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rinJYTf;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_AXHeCLi;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_AXHeCLi=NULL;
        }
    temp_AXHeCLi=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int vooBEKH=0; vooBEKH < result.semaphoreCount; vooBEKH++){
            [&]() {
temp_AXHeCLi[vooBEKH]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][vooBEKH]);}();;
        }
        }();result.pSemaphores=temp_AXHeCLi;}();
[&]() {
uint64_t* temp_wTcMPBS;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_wTcMPBS=NULL;
        }
    temp_wTcMPBS=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int HgiKJMP=0; HgiKJMP < result.semaphoreCount; HgiKJMP++){
            [&]() {
temp_wTcMPBS[HgiKJMP]=deserialize_uint64_t(name["members"]["pValues"]["members"][HgiKJMP]);}();;
        }
        }();result.pValues=temp_wTcMPBS;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_phgWIhR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_suAWkCI=json({});
    
        if (name.pNext==NULL){
            return_suAWkCI["null"]=true;
            return return_suAWkCI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xsbvZrN=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_hodzWrb=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_imIrihj=json({});
    
        if (name.pSemaphores==NULL){
            return_imIrihj["null"]=true;
            return return_imIrihj;
        }
        
        return_imIrihj["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_RHklNTW=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_imIrihj["members"][std::to_string(i)].push_back(temp);
        }
        return return_imIrihj;
        }();
result["members"]["pValues"]=[&]() {
    json return_OeunAVx=json({});
    
        if (name.pValues==NULL){
            return_OeunAVx["null"]=true;
            return return_OeunAVx;
        }
        
        return_OeunAVx["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_mIRrcOM=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_OeunAVx["members"][std::to_string(i)].push_back(temp);
        }
        return return_OeunAVx;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oGsJrtp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oGsJrtp=NULL;
        }
    temp_oGsJrtp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oGsJrtp;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_SgXvqlQ;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_SgXvqlQ=NULL;
        }
    temp_SgXvqlQ=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int vBhkfGU=0; vBhkfGU < result.semaphoreCount; vBhkfGU++){
            [&]() {
temp_SgXvqlQ[vBhkfGU]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][vBhkfGU]);}();;
        }
        }();result.pSemaphores=temp_SgXvqlQ;}();
[&]() {
uint64_t* temp_cJjUybU;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_cJjUybU=NULL;
        }
    temp_cJjUybU=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int vOjeazc=0; vOjeazc < result.semaphoreCount; vOjeazc++){
            [&]() {
temp_cJjUybU[vOjeazc]=deserialize_uint64_t(name["members"]["pValues"]["members"][vOjeazc]);}();;
        }
        }();result.pValues=temp_cJjUybU;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TPPgJeP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iNuHnUf=json({});
    
        if (name.pNext==NULL){
            return_iNuHnUf["null"]=true;
            return return_iNuHnUf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_MzgmWOj=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_TLrUmvi=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tHZoMIJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tHZoMIJ=NULL;
        }
    temp_tHZoMIJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tHZoMIJ;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tzfpjWl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qwlVUZi=json({});
    
        if (name.pNext==NULL){
            return_qwlVUZi["null"]=true;
            return return_qwlVUZi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_BFKqWJb=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_ahTcZtZ=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sDfBcno;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sDfBcno=NULL;
        }
    temp_sDfBcno=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sDfBcno;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_NvZkyNc=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_ejGGPwZ=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KXOyfHl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rdQvrRA=json({});
    
        if (name.pNext==NULL){
            return_rdQvrRA["null"]=true;
            return return_rdQvrRA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_fdUuSlZ=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_PaJqIWz=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_PaJqIWz["null"]=true;
            return return_PaJqIWz;
        }
        
        return_PaJqIWz["members"]={};
        for(int i=0; i < name.vertexBindingDivisorCount; i++){
            json temp;
            temp=[&]() {
    json return_QQqNRNU=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[i]);}();
            return_PaJqIWz["members"][std::to_string(i)].push_back(temp);
        }
        return return_PaJqIWz;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WBGAAkg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WBGAAkg=NULL;
        }
    temp_WBGAAkg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WBGAAkg;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_mROBgQf;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_mROBgQf=NULL;
        }
    temp_mROBgQf=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int ocxTZYF=0; ocxTZYF < result.vertexBindingDivisorCount; ocxTZYF++){
            [&]() {
temp_mROBgQf[ocxTZYF]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][ocxTZYF]);}();;
        }
        }();result.pVertexBindingDivisors=temp_mROBgQf;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gZyHUhz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DKZkCvu=json({});
    
        if (name.pNext==NULL){
            return_DKZkCvu["null"]=true;
            return return_DKZkCvu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_IeGzJzr=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SiOplVB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oJIgKlT=json({});
    
        if (name.pNext==NULL){
            return_oJIgKlT["null"]=true;
            return return_oJIgKlT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pciDomain"]=[&]() {
    json return_CpHieul=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_uWucAfy=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_TNiDfjI=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_tbgUcRp=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_caJSGlf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tIcCxgp=json({});
    
        if (name.pNext==NULL){
            return_tIcCxgp["null"]=true;
            return return_tIcCxgp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_SabMTnb=json({});
    return_SabMTnb=[&]() {
    json return_MftRQCp=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_SabMTnb;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HQSeItG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HQSeItG=NULL;
        }
    temp_HQSeItG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HQSeItG;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VcJxfrp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zkboNeN=json({});
    
        if (name.pNext==NULL){
            return_zkboNeN["null"]=true;
            return return_zkboNeN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_dXJtbBI=json({});
    return_dXJtbBI=[&]() {
    json return_LPYkYBo=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_dXJtbBI;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_dMTQZOy=json({});
    return_dMTQZOy=[&]() {
    json return_wICfSTz=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_dMTQZOy;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_uQZrWNV=json({});
    return_uQZrWNV=[&]() {
    json return_msYsXUJ=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_uQZrWNV;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UvyIoIQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TjaEUVQ=json({});
    
        if (name.pNext==NULL){
            return_TjaEUVQ["null"]=true;
            return return_TjaEUVQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_ESGnlze=json({});
    return_ESGnlze=[&]() {
    json return_yYRmmsY=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_ESGnlze;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_GRbEDiF=json({});
    return_GRbEDiF=[&]() {
    json return_GylKACN=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_GRbEDiF;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_yTmOUiM=json({});
    return_yTmOUiM=[&]() {
    json return_jwVECvN=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_yTmOUiM;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxYYVaL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oetuCBA=json({});
    
        if (name.pNext==NULL){
            return_oetuCBA["null"]=true;
            return return_oetuCBA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRendering"]=[&]() {
    json return_zKijfBa=json({});
    return_zKijfBa=[&]() {
    json return_DIrXGAU=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_zKijfBa;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_ksuPovX=json({});
    return_ksuPovX=[&]() {
    json return_gAtLzqs=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_ksuPovX;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CimOHkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cGBBSIp=json({});
    
        if (name.pNext==NULL){
            return_cGBBSIp["null"]=true;
            return return_cGBBSIp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_LpYaODK=json({});
    return_LpYaODK=[&]() {
    json return_ymyfkxb=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_LpYaODK;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_ixQnOqO=json({});
    return_ixQnOqO=[&]() {
    json return_tTuYYPH=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_ixQnOqO;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_XjRNVKo=json({});
    return_XjRNVKo=[&]() {
    json return_ZHkOSxD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_XjRNVKo;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cTMEubv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YcQQGJO=json({});
    
        if (name.pNext==NULL){
            return_YcQQGJO["null"]=true;
            return return_YcQQGJO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_PmTvKUj=json({});
    return_PmTvKUj=[&]() {
    json return_TnjKulv=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_PmTvKUj;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_nxAVfGB=json({});
    return_nxAVfGB=[&]() {
    json return_ijHnObQ=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_nxAVfGB;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_qgUIBsR=json({});
    return_qgUIBsR=[&]() {
    json return_tRTIwbP=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_qgUIBsR;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KjuVFEA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GCJwtpe=json({});
    
        if (name.pNext==NULL){
            return_GCJwtpe["null"]=true;
            return return_GCJwtpe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_rSlTCZM=json({});
    return_rSlTCZM=[&]() {
    json return_awiqqYD=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_rSlTCZM;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_jbDUJEb=json({});
    return_jbDUJEb=[&]() {
    json return_qgHXtwG=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_jbDUJEb;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tnzkcPX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tHVCrlt=json({});
    
        if (name.pNext==NULL){
            return_tHVCrlt["null"]=true;
            return return_tHVCrlt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_MhhJwaX=json({});
    return_MhhJwaX=[&]() {
    json return_ZAVpUDR=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_MhhJwaX;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_pqtnhCd=json({});
    return_pqtnhCd=[&]() {
    json return_iBPywpz=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_pqtnhCd;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VjHZLqS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wcJJXHk=json({});
    
        if (name.pNext==NULL){
            return_wcJJXHk["null"]=true;
            return return_wcJJXHk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_LeQNBRi=json({});
    return_LeQNBRi=[&]() {
    json return_eoUBmMG=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_LeQNBRi;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_jNeHZhu=json({});
    return_jNeHZhu=[&]() {
    json return_pwgZdPX=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_jNeHZhu;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_xMVIaJM=json({});
    return_xMVIaJM=[&]() {
    json return_lHuYRdP=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_xMVIaJM;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_dgBTWMY=json({});
    return_dgBTWMY=[&]() {
    json return_aoJNsEq=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_dgBTWMY;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_DLiPYBh=json({});
    return_DLiPYBh=[&]() {
    json return_eplhGgl=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_DLiPYBh;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_NeiuIik=json({});
    return_NeiuIik=[&]() {
    json return_dMjJAAY=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_NeiuIik;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_nIrQPma=json({});
    return_nIrQPma=[&]() {
    json return_TIqjRuh=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_nIrQPma;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_eWqoSkQ=json({});
    return_eWqoSkQ=[&]() {
    json return_TverwDa=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_eWqoSkQ;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_jviqFuj=json({});
    return_jviqFuj=[&]() {
    json return_HMdZQVQ=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_jviqFuj;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_kUZmull=json({});
    return_kUZmull=[&]() {
    json return_urvhUxO=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_kUZmull;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_qqSvtke=json({});
    return_qqSvtke=[&]() {
    json return_sAUyCdm=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_qqSvtke;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_IcCeDrI=json({});
    return_IcCeDrI=[&]() {
    json return_LppfaDp=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_IcCeDrI;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GFyxcxL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DCkqxWs=json({});
    
        if (name.pNext==NULL){
            return_DCkqxWs["null"]=true;
            return return_DCkqxWs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_kMMMEko=json({});
    return_kMMMEko=[&]() {
    json return_oXWiOQn=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_kMMMEko;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_OhBowUQ=json({});
    return_OhBowUQ=[&]() {
    json return_OfGdIxn=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_OhBowUQ;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_EwOYRqJ=json({});
    return_EwOYRqJ=[&]() {
    json return_ODkbqwz=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_EwOYRqJ;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_SEjvtkj=json({});
    return_SEjvtkj=[&]() {
    json return_ZaBWlqO=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_SEjvtkj;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_CVvZQjK=json({});
    return_CVvZQjK=[&]() {
    json return_ZRkdcvX=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_CVvZQjK;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_EXYVQbh=json({});
    return_EXYVQbh=[&]() {
    json return_PRpetOY=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_EXYVQbh;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_WkyxMxp=json({});
    return_WkyxMxp=[&]() {
    json return_eMQLuii=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_WkyxMxp;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_JqKDBmI=json({});
    return_JqKDBmI=[&]() {
    json return_bWjFLkI=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_JqKDBmI;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_nccWuHV=json({});
    return_nccWuHV=[&]() {
    json return_OSfUHOC=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_nccWuHV;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_zPBpLnE=json({});
    return_zPBpLnE=[&]() {
    json return_KlCxtvz=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_zPBpLnE;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_svWhzna=json({});
    return_svWhzna=[&]() {
    json return_koUqotG=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_svWhzna;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_bPjkzkC=json({});
    return_bPjkzkC=[&]() {
    json return_LXKGbCQ=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_bPjkzkC;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OgWLUJR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NgJUOVI=json({});
    
        if (name.pNext==NULL){
            return_NgJUOVI["null"]=true;
            return return_NgJUOVI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_iCxaRHV=json({});
    return_iCxaRHV=[&]() {
    json return_lPFWWgf=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_iCxaRHV;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_SqaXfsA=json({});
    return_SqaXfsA=[&]() {
    json return_Uecdozh=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_SqaXfsA;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YvWzYJY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mBqFSoZ=json({});
    
        if (name.pNext==NULL){
            return_mBqFSoZ["null"]=true;
            return return_mBqFSoZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_BVvpNCK=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jBNHSiU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rObLuTP=json({});
    
        if (name.pNext==NULL){
            return_rObLuTP["null"]=true;
            return return_rObLuTP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_cPZYuEP=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_KyojNnf=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_KyojNnf["null"]=true;
            return return_KyojNnf;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kFLyXBT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XZUQAUk=json({});
    
        if (name.pNext==NULL){
            return_XZUQAUk["null"]=true;
            return return_XZUQAUk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_AgnvJZn=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_HRJYITM=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_DMAHdDP=json({});
    return_DMAHdDP=[&]() {
    json return_zwQdnIP=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_DMAHdDP;}();
result["members"]["independentResolve"]=[&]() {
    json return_POiBxJn=json({});
    return_POiBxJn=[&]() {
    json return_xrytUeM=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_POiBxJn;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YezPiMH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UTzGdkQ=json({});
    
        if (name.pNext==NULL){
            return_UTzGdkQ["null"]=true;
            return return_UTzGdkQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_LhcgjvN=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_QUddNxY=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_Hsretgy=json({});
    return_Hsretgy=[&]() {
    json return_asARksi=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_Hsretgy;}();
result["members"]["independentResolve"]=[&]() {
    json return_CDLFgzW=json({});
    return_CDLFgzW=[&]() {
    json return_fYAsRGh=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_CDLFgzW;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_buUoIzO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cPjhCWH=json({});
    
        if (name.pNext==NULL){
            return_cPjhCWH["null"]=true;
            return return_cPjhCWH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_OhhwAPS=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_tIlLuCR=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_SWWHqAm=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_SWWHqAm["null"]=true;
            return return_SWWHqAm;
        }
        return_SWWHqAm=[&]() {
    json return_WZketDf=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_SWWHqAm;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_reTWrMH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_reTWrMH=NULL;
        }
    temp_reTWrMH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_reTWrMH;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_DFuNwRL;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_DFuNwRL=NULL;
        }
    [&]() {
*(temp_DFuNwRL)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_DFuNwRL;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aEOduCw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kDyXWmh=json({});
    
        if (name.pNext==NULL){
            return_kDyXWmh["null"]=true;
            return return_kDyXWmh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_LUmNVxK=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_QjXQALn=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_iCLzbWk=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_iCLzbWk["null"]=true;
            return return_iCLzbWk;
        }
        return_iCLzbWk=[&]() {
    json return_GVwZjMj=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_iCLzbWk;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fUykHZL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fUykHZL=NULL;
        }
    temp_fUykHZL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fUykHZL;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_uCpvNeo;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_uCpvNeo=NULL;
        }
    [&]() {
*(temp_uCpvNeo)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_uCpvNeo;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LVsqBye=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_grDWbSQ=json({});
    
        if (name.pNext==NULL){
            return_grDWbSQ["null"]=true;
            return return_grDWbSQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeMode"]=[&]() {
    json return_wPBaNwT=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_owBIdcE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_owBIdcE=NULL;
        }
    temp_owBIdcE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_owBIdcE;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pLYctSH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XpwuBuD=json({});
    
        if (name.pNext==NULL){
            return_XpwuBuD["null"]=true;
            return return_XpwuBuD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_bHzjIqB=json({});
    return_bHzjIqB=[&]() {
    json return_OeOdueh=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_bHzjIqB;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AGpXDci=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JsansPA=json({});
    
        if (name.pNext==NULL){
            return_JsansPA["null"]=true;
            return return_JsansPA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transformFeedback"]=[&]() {
    json return_BAVHjMS=json({});
    return_BAVHjMS=[&]() {
    json return_dxVkcPu=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_BAVHjMS;}();
result["members"]["geometryStreams"]=[&]() {
    json return_zCzUhBN=json({});
    return_zCzUhBN=[&]() {
    json return_cRkKgfk=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_zCzUhBN;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CEWTQlC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pRkTSEN=json({});
    
        if (name.pNext==NULL){
            return_pRkTSEN["null"]=true;
            return return_pRkTSEN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_MwjKmeX=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_RKwgpdz=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_cpVcfag=json({});
    return_cpVcfag=[&]() {
    json return_FhDgtnG=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_cpVcfag;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_QWdrIKi=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_qShdDFH=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_KHzLxSa=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_nVfflzy=json({});
    return_nVfflzy=[&]() {
    json return_sTcTpMQ=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_nVfflzy;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_xLviLny=json({});
    return_xLviLny=[&]() {
    json return_OMBAkaV=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_xLviLny;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_jTeibRi=json({});
    return_jTeibRi=[&]() {
    json return_PefRLSZ=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_jTeibRi;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_GnjdYai=json({});
    return_GnjdYai=[&]() {
    json return_InLRGQN=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_GnjdYai;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HmpzlJj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_huYmDDo=json({});
    
        if (name.pNext==NULL){
            return_huYmDDo["null"]=true;
            return return_huYmDDo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_skfmNyx=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_YORztZZ=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NinrluP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NinrluP=NULL;
        }
    temp_NinrluP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NinrluP;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VLAxWPz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KnPTKqF=json({});
    
        if (name.pNext==NULL){
            return_KnPTKqF["null"]=true;
            return return_KnPTKqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_wIhmBrg=json({});
    return_wIhmBrg=[&]() {
    json return_apsGlek=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_wIhmBrg;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GQdaLYa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QYnNSnr=json({});
    
        if (name.pNext==NULL){
            return_QYnNSnr["null"]=true;
            return return_QYnNSnr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_AKiQVTC=json({});
    return_AKiQVTC=[&]() {
    json return_FeZOVdL=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_AKiQVTC;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CUIabVG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CUIabVG=NULL;
        }
    temp_CUIabVG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CUIabVG;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NFtRdnK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BZzgjKs=json({});
    
        if (name.pNext==NULL){
            return_BZzgjKs["null"]=true;
            return return_BZzgjKs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_aJRfJYc=json({});
    return_aJRfJYc=[&]() {
    json return_qlUIrDj=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_aJRfJYc;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EJfcGOz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CuUrMWG=json({});
    
        if (name.pNext==NULL){
            return_CuUrMWG["null"]=true;
            return return_CuUrMWG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_eGQFZei=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_vjBFwkS=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_vjBFwkS["null"]=true;
            return return_vjBFwkS;
        }
        
        return_vjBFwkS["members"]={};
        for(int i=0; i < name.exclusiveScissorCount; i++){
            json temp;
            temp=[&]() {
    json return_QcjwmLW=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[i]);}();
            return_vjBFwkS["members"][std::to_string(i)].push_back(temp);
        }
        return return_vjBFwkS;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IMBAIGR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IMBAIGR=NULL;
        }
    temp_IMBAIGR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IMBAIGR;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_MgZRzqw;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_MgZRzqw=NULL;
        }
    temp_MgZRzqw=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int jygvlrt=0; jygvlrt < result.exclusiveScissorCount; jygvlrt++){
            [&]() {
temp_MgZRzqw[jygvlrt]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][jygvlrt]);}();;
        }
        }();result.pExclusiveScissors=temp_MgZRzqw;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RABwbMz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wXhJYaS=json({});
    
        if (name.pNext==NULL){
            return_wXhJYaS["null"]=true;
            return return_wXhJYaS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_zPKEpDB=json({});
    return_zPKEpDB=[&]() {
    json return_hRdsvbV=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_zPKEpDB;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AQcwBFV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_maeyRPA=json({});
    
        if (name.pNext==NULL){
            return_maeyRPA["null"]=true;
            return return_maeyRPA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_XHGBaNW=json({});
    return_XHGBaNW=[&]() {
    json return_PSAWAhg=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_XHGBaNW;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_wjzEvji=json({});
    return_wjzEvji=[&]() {
    json return_GKsZwIW=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_wjzEvji;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hwPeAcU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_szmczRc=json({});
    
        if (name.pNext==NULL){
            return_szmczRc["null"]=true;
            return return_szmczRc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFootprint"]=[&]() {
    json return_xomqFQT=json({});
    return_xomqFQT=[&]() {
    json return_OxQBmDs=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_xomqFQT;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HYnCwOT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CSJYFtH=json({});
    
        if (name.pNext==NULL){
            return_CSJYFtH["null"]=true;
            return return_CSJYFtH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_ArGkFUW=json({});
    return_ArGkFUW=[&]() {
    json return_LEfwtLb=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_ArGkFUW;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hpZLvcy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QBQaUJF=json({});
    
        if (name.pNext==NULL){
            return_QBQaUJF["null"]=true;
            return return_QBQaUJF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indirectCopy"]=[&]() {
    json return_OiphXKP=json({});
    return_OiphXKP=[&]() {
    json return_TLZYGed=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_OiphXKP;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tshkCMK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfzhMCn=json({});
    
        if (name.pNext==NULL){
            return_UfzhMCn["null"]=true;
            return return_UfzhMCn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedQueues"]=[&]() {
    json return_zBzeXkg=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIvlmIg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VFhqdPe=json({});
    
        if (name.pNext==NULL){
            return_VFhqdPe["null"]=true;
            return return_VFhqdPe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryDecompression"]=[&]() {
    json return_EcNTPJZ=json({});
    return_EcNTPJZ=[&]() {
    json return_JnmYQec=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_EcNTPJZ;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_groRTHa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TmlhMZE=json({});
    
        if (name.pNext==NULL){
            return_TmlhMZE["null"]=true;
            return return_TmlhMZE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decompressionMethods"]=[&]() {
    json return_TFsaNez=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_FbOffsE=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_DluiOyM=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_huQIVKr=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_huQIVKr["null"]=true;
            return return_huQIVKr;
        }
        
        return_huQIVKr["members"]={};
        for(int i=0; i < name.shadingRatePaletteEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_ABLzIno=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[i]);}();
            return_huQIVKr["members"][std::to_string(i)].push_back(temp);
        }
        return return_huQIVKr;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_XndMtNy;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_XndMtNy=NULL;
        }
    temp_XndMtNy=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int YkMwuii=0; YkMwuii < result.shadingRatePaletteEntryCount; YkMwuii++){
            [&]() {
temp_XndMtNy[YkMwuii]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][YkMwuii]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_XndMtNy;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rEQszLe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZdyAEYU=json({});
    
        if (name.pNext==NULL){
            return_ZdyAEYU["null"]=true;
            return return_ZdyAEYU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_BUEdxAQ=json({});
    return_BUEdxAQ=[&]() {
    json return_glOkiYn=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_BUEdxAQ;}();
result["members"]["viewportCount"]=[&]() {
    json return_EzbrUQM=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_LbVoDAw=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_LbVoDAw["null"]=true;
            return return_LbVoDAw;
        }
        
        return_LbVoDAw["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_JDGFdGr=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[i]);}();
            return_LbVoDAw["members"][std::to_string(i)].push_back(temp);
        }
        return return_LbVoDAw;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XHOHZuj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XHOHZuj=NULL;
        }
    temp_XHOHZuj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XHOHZuj;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_OxqcUOV;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_OxqcUOV=NULL;
        }
    temp_OxqcUOV=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int HLWuFEG=0; HLWuFEG < result.viewportCount; HLWuFEG++){
            [&]() {
temp_OxqcUOV[HLWuFEG]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][HLWuFEG]);}();;
        }
        }();result.pShadingRatePalettes=temp_OxqcUOV;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yKqTIdc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lwICRNi=json({});
    
        if (name.pNext==NULL){
            return_lwICRNi["null"]=true;
            return return_lwICRNi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImage"]=[&]() {
    json return_AYEcePS=json({});
    return_AYEcePS=[&]() {
    json return_CaQEOoN=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_AYEcePS;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_wvJkYON=json({});
    return_wvJkYON=[&]() {
    json return_TILBNUL=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_wvJkYON;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yXEszoG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XpRKoDR=json({});
    
        if (name.pNext==NULL){
            return_XpRKoDR["null"]=true;
            return return_XpRKoDR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_rJlpacV=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_RLoJSKQ=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_EkPeHUg=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XgreeDX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VsUcXYl=json({});
    
        if (name.pNext==NULL){
            return_VsUcXYl["null"]=true;
            return return_VsUcXYl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["invocationMask"]=[&]() {
    json return_qJRSPBW=json({});
    return_qJRSPBW=[&]() {
    json return_kdkCHHT=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_qJRSPBW;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_RFuiEZZ=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_DioVXcs=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_cGmhVYe=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_AmwAlSj=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_SgWttWz=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_ZHYQERH=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_izfvwcC=json({});
    
        if (name.pSampleLocations==NULL){
            return_izfvwcC["null"]=true;
            return return_izfvwcC;
        }
        
        return_izfvwcC["members"]={};
        for(int i=0; i < name.sampleLocationCount; i++){
            json temp;
            temp=[&]() {
    json return_epUSOcu=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[i]);}();
            return_izfvwcC["members"][std::to_string(i)].push_back(temp);
        }
        return return_izfvwcC;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_xnMNbTX;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_xnMNbTX=NULL;
        }
    temp_xnMNbTX=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int VGwuktz=0; VGwuktz < result.sampleLocationCount; VGwuktz++){
            [&]() {
temp_xnMNbTX[VGwuktz]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][VGwuktz]);}();;
        }
        }();result.pSampleLocations=temp_xnMNbTX;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LSFPXMh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HZzCtpH=json({});
    
        if (name.pNext==NULL){
            return_HZzCtpH["null"]=true;
            return return_HZzCtpH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleOrderType"]=[&]() {
    json return_bwaDqqj=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_vEkXvzG=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_ECYanMr=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_ECYanMr["null"]=true;
            return return_ECYanMr;
        }
        
        return_ECYanMr["members"]={};
        for(int i=0; i < name.customSampleOrderCount; i++){
            json temp;
            temp=[&]() {
    json return_XeurLhh=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[i]);}();
            return_ECYanMr["members"][std::to_string(i)].push_back(temp);
        }
        return return_ECYanMr;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qnEipBt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qnEipBt=NULL;
        }
    temp_qnEipBt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qnEipBt;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_UFvUzzC;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_UFvUzzC=NULL;
        }
    temp_UFvUzzC=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int OnqHgOX=0; OnqHgOX < result.customSampleOrderCount; OnqHgOX++){
            [&]() {
temp_UFvUzzC[OnqHgOX]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][OnqHgOX]);}();;
        }
        }();result.pCustomSampleOrders=temp_UFvUzzC;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DByIEft=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Pgcafsm=json({});
    
        if (name.pNext==NULL){
            return_Pgcafsm["null"]=true;
            return return_Pgcafsm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_kMiyGEz=json({});
    return_kMiyGEz=[&]() {
    json return_vPjzEyi=json({});
    return serialize_uint32_t(name.taskShader);}();return return_kMiyGEz;}();
result["members"]["meshShader"]=[&]() {
    json return_kriVxfy=json({});
    return_kriVxfy=[&]() {
    json return_QSELoRS=json({});
    return serialize_uint32_t(name.meshShader);}();return return_kriVxfy;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jbirybj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gatQfxn=json({});
    
        if (name.pNext==NULL){
            return_gatQfxn["null"]=true;
            return return_gatQfxn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_otyaTff=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_oTFVykj=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_pmgNwsb=json({});
    
        return_pmgNwsb["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_pxSguGc=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_pmgNwsb["members"][std::to_string(i)].push_back(temp);
        }
        return return_pmgNwsb;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_HGbxgcN=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_mCvHKzM=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_QfdbJWd=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_Mgkbrtt=json({});
    
        return_Mgkbrtt["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_QrRfpdT=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_Mgkbrtt["members"][std::to_string(i)].push_back(temp);
        }
        return return_Mgkbrtt;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_cMDiZyu=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_DbVruLU=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_qASuCTa=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_mzhQCtC=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_QvVENJw=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_ZeBwVmm=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int vmILnTG=0; vmILnTG < 3; vmILnTG++){
            [&]() {
result.maxTaskWorkGroupSize[vmILnTG]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][vmILnTG]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int AITfWVB=0; AITfWVB < 3; AITfWVB++){
            [&]() {
result.maxMeshWorkGroupSize[AITfWVB]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][AITfWVB]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_HEfdpXO=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_BLjoEwW=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PjExbAU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_njjLmcm=json({});
    
        if (name.pNext==NULL){
            return_njjLmcm["null"]=true;
            return return_njjLmcm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_LRpBwou=json({});
    return_LRpBwou=[&]() {
    json return_myGMRmb=json({});
    return serialize_uint32_t(name.taskShader);}();return return_LRpBwou;}();
result["members"]["meshShader"]=[&]() {
    json return_ldHStXO=json({});
    return_ldHStXO=[&]() {
    json return_cSDLrvD=json({});
    return serialize_uint32_t(name.meshShader);}();return return_ldHStXO;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_rlydnnb=json({});
    return_rlydnnb=[&]() {
    json return_kKpiDVE=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_rlydnnb;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_JOoLSrZ=json({});
    return_JOoLSrZ=[&]() {
    json return_IwlgpJm=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_JOoLSrZ;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_qSZDiYH=json({});
    return_qSZDiYH=[&]() {
    json return_TmwCqwq=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_qSZDiYH;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_phYhxGf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EdiAnbu=json({});
    
        if (name.pNext==NULL){
            return_EdiAnbu["null"]=true;
            return return_EdiAnbu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_AzKkZXL=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_yJKJBPu=json({});
    
        return_yJKJBPu["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_tlNZqvb=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[i]);}();
            return_yJKJBPu["members"][std::to_string(i)].push_back(temp);
        }
        return return_yJKJBPu;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_wTkKJCr=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_Jopzgmz=json({});
    
        return_Jopzgmz["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_oKPCHyy=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_Jopzgmz["members"][std::to_string(i)].push_back(temp);
        }
        return return_Jopzgmz;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_HCfCVHm=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_XbTiwXL=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_pJHFxAU=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_phCciGP=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_XtvptWa=json({});
    
        return_XtvptWa["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_YvmesaP=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[i]);}();
            return_XtvptWa["members"][std::to_string(i)].push_back(temp);
        }
        return return_XtvptWa;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_stYVmwk=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_rlRJjIy=json({});
    
        return_rlRJjIy["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_PUUONxV=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_rlRJjIy["members"][std::to_string(i)].push_back(temp);
        }
        return return_rlRJjIy;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_nRgPAdW=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_qJsDoLd=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_jAVBNmH=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_iwtACmc=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_jXJOEVw=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_yUUxJwS=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_zrIrlZj=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_AIAfeqk=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_vQvPyDi=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_gbfaYzh=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_HSqmqrB=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_QVznrex=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_mNWlPHE=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_CWcMePZ=json({});
    return_CWcMePZ=[&]() {
    json return_pGeWYia=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_CWcMePZ;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_foQjEmS=json({});
    return_foQjEmS=[&]() {
    json return_cvJmnyJ=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_foQjEmS;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_SSmkliG=json({});
    return_SSmkliG=[&]() {
    json return_AaCPgOw=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_SSmkliG;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_KbRQEaR=json({});
    return_KbRQEaR=[&]() {
    json return_mZcCtEO=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_KbRQEaR;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int iZxAsBL=0; iZxAsBL < 3; iZxAsBL++){
            [&]() {
result.maxTaskWorkGroupCount[iZxAsBL]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][iZxAsBL]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int SDuJfWy=0; SDuJfWy < 3; SDuJfWy++){
            [&]() {
result.maxTaskWorkGroupSize[SDuJfWy]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][SDuJfWy]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int RYKoRcf=0; RYKoRcf < 3; RYKoRcf++){
            [&]() {
result.maxMeshWorkGroupCount[RYKoRcf]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][RYKoRcf]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int vdzxFKK=0; vdzxFKK < 3; vdzxFKK++){
            [&]() {
result.maxMeshWorkGroupSize[vdzxFKK]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][vdzxFKK]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_BcItDuP=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_QjQiEyo=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_OXQWYej=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rKcjjCW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_akpcKsH=json({});
    
        if (name.pNext==NULL){
            return_akpcKsH["null"]=true;
            return return_akpcKsH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_rVvFWPo=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_CGaRdiD=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_eWaETut=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_ypQZuJw=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_fuTwqTd=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NpJgQyB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NpJgQyB=NULL;
        }
    temp_NpJgQyB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NpJgQyB;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YlGWIvG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gbBTfmS=json({});
    
        if (name.pNext==NULL){
            return_gbBTfmS["null"]=true;
            return return_gbBTfmS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_FCVCBUu=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_XzphwRe=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_yujCTfH=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_ZdxgFpL=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_xmwPvzr=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_ceJQzav=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_ceJQzav["null"]=true;
            return return_ceJQzav;
        }
        return serialize_void_p(name.pShaderGroupCaptureReplayHandle);
}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SGgVRrG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SGgVRrG=NULL;
        }
    temp_SGgVRrG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SGgVRrG;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_HeJTHTe;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_HeJTHTe=NULL;
        }
    temp_HeJTHTe=deserialize_void_p(name["members"]["pShaderGroupCaptureReplayHandle"]);
}();result.pShaderGroupCaptureReplayHandle=temp_HeJTHTe;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tWjGemh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FfsnIxd=json({});
    
        if (name.pNext==NULL){
            return_FfsnIxd["null"]=true;
            return return_FfsnIxd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IeLcXpO=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_OiGIFCH=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_nRguyie=json({});
    
        if (name.pStages==NULL){
            return_nRguyie["null"]=true;
            return return_nRguyie;
        }
        
        return_nRguyie["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_xzprjVy=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_nRguyie["members"][std::to_string(i)].push_back(temp);
        }
        return return_nRguyie;
        }();
result["members"]["groupCount"]=[&]() {
    json return_UPOpEwI=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_QGJFsXx=json({});
    
        if (name.pGroups==NULL){
            return_QGJFsXx["null"]=true;
            return return_QGJFsXx;
        }
        
        return_QGJFsXx["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_RngXDtY=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_QGJFsXx["members"][std::to_string(i)].push_back(temp);
        }
        return return_QGJFsXx;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_TWqZdjV=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_upXZXHh=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_FRNbJWn=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_XRzIKOX=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pijaslg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pijaslg=NULL;
        }
    temp_pijaslg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pijaslg;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_yvRpeDl;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_yvRpeDl=NULL;
        }
    temp_yvRpeDl=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int wKFIuxO=0; wKFIuxO < result.stageCount; wKFIuxO++){
            [&]() {
temp_yvRpeDl[wKFIuxO]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][wKFIuxO]);}();;
        }
        }();result.pStages=temp_yvRpeDl;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_DomZbST;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_DomZbST=NULL;
        }
    temp_DomZbST=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int fKCsPZu=0; fKCsPZu < result.groupCount; fKCsPZu++){
            [&]() {
temp_DomZbST[fKCsPZu]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][fKCsPZu]);}();;
        }
        }();result.pGroups=temp_DomZbST;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xTKdBAD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lBXyXyI=json({});
    
        if (name.pNext==NULL){
            return_lBXyXyI["null"]=true;
            return return_lBXyXyI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YYUxzVW=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_aAgzWzB=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_sgjaiwJ=json({});
    
        if (name.pStages==NULL){
            return_sgjaiwJ["null"]=true;
            return return_sgjaiwJ;
        }
        
        return_sgjaiwJ["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_ePgqdod=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_sgjaiwJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_sgjaiwJ;
        }();
result["members"]["groupCount"]=[&]() {
    json return_bMxBESY=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_FcbNXdY=json({});
    
        if (name.pGroups==NULL){
            return_FcbNXdY["null"]=true;
            return return_FcbNXdY;
        }
        
        return_FcbNXdY["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_XSyrJYU=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[i]);}();
            return_FcbNXdY["members"][std::to_string(i)].push_back(temp);
        }
        return return_FcbNXdY;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_OxvNpZN=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_gcEGgaV=json({});
    
        if (name.pLibraryInfo==NULL){
            return_gcEGgaV["null"]=true;
            return return_gcEGgaV;
        }
        return_gcEGgaV=[&]() {
    json return_RQwnbmo=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_gcEGgaV;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_WJLXqwf=json({});
    
        if (name.pLibraryInterface==NULL){
            return_WJLXqwf["null"]=true;
            return return_WJLXqwf;
        }
        return_WJLXqwf=[&]() {
    json return_KZAYYYI=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_WJLXqwf;}();
result["members"]["pDynamicState"]=[&]() {
    json return_hOTanLK=json({});
    
        if (name.pDynamicState==NULL){
            return_hOTanLK["null"]=true;
            return return_hOTanLK;
        }
        return_hOTanLK=[&]() {
    json return_GUQVnLC=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_hOTanLK;}();
result["members"]["layout"]=[&]() {
    json return_JRzzoUy=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_pJQHGpA=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_dcHQKRQ=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mOZBkdf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mOZBkdf=NULL;
        }
    temp_mOZBkdf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mOZBkdf;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_YtQWzgu;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_YtQWzgu=NULL;
        }
    temp_YtQWzgu=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int oordaji=0; oordaji < result.stageCount; oordaji++){
            [&]() {
temp_YtQWzgu[oordaji]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][oordaji]);}();;
        }
        }();result.pStages=temp_YtQWzgu;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_UYOwuPH;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_UYOwuPH=NULL;
        }
    temp_UYOwuPH=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int KOvGlCE=0; KOvGlCE < result.groupCount; KOvGlCE++){
            [&]() {
temp_UYOwuPH[KOvGlCE]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][KOvGlCE]);}();;
        }
        }();result.pGroups=temp_UYOwuPH;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_FJzveYR;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_FJzveYR=NULL;
        }
    [&]() {
*(temp_FJzveYR)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_FJzveYR;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_ysdvlQy;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_ysdvlQy=NULL;
        }
    [&]() {
*(temp_ysdvlQy)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_ysdvlQy;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_ilaXohj;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_ilaXohj=NULL;
        }
    [&]() {
*(temp_ilaXohj)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_ilaXohj;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ejPwPFY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lrIHPuy=json({});
    
        if (name.pNext==NULL){
            return_lrIHPuy["null"]=true;
            return return_lrIHPuy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_TZAqsGd=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_RcOKPRj=json({});
    return_RcOKPRj=[&]() {
    json return_SrZhJrB=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_RcOKPRj;}();
result["members"]["vertexCount"]=[&]() {
    json return_EVWRTvw=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_ySbleIG=json({});
    return_ySbleIG=[&]() {
    json return_KANsJho=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_ySbleIG;}();
result["members"]["vertexFormat"]=[&]() {
    json return_FRFFuAe=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_McoqNgj=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_YIwdgPV=json({});
    return_YIwdgPV=[&]() {
    json return_rcbhpzX=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_YIwdgPV;}();
result["members"]["indexCount"]=[&]() {
    json return_vYjPjSl=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_VzxdRkE=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_cPBIhMd=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_nzxZzpA=json({});
    return_nzxZzpA=[&]() {
    json return_hrVCLOb=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_nzxZzpA;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KBLCWmx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KBLCWmx=NULL;
        }
    temp_KBLCWmx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KBLCWmx;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MzigRBZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nYVPmcf=json({});
    
        if (name.pNext==NULL){
            return_nYVPmcf["null"]=true;
            return return_nYVPmcf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aabbData"]=[&]() {
    json return_SsVRDpJ=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_OlbFlPa=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_uBFjNGa=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_PuEGjlY=json({});
    return_PuEGjlY=[&]() {
    json return_wQOvzvh=json({});
    return serialize_uint64_t(name.offset);}();return return_PuEGjlY;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TaCNlQx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TaCNlQx=NULL;
        }
    temp_TaCNlQx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TaCNlQx;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_Rerezot=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_izyvCCx=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vChEYrn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RufQbYx=json({});
    
        if (name.pNext==NULL){
            return_RufQbYx["null"]=true;
            return return_RufQbYx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_pePLWTu=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_cPjGCJh=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_gYzPimM=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OVIiICg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OVIiICg=NULL;
        }
    temp_OVIiICg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OVIiICg;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zXTMWNF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iVCjYwT=json({});
    
        if (name.pNext==NULL){
            return_iVCjYwT["null"]=true;
            return return_iVCjYwT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_AIdSAhe=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_EFZwsSQ=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_NBNuKMK=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_tCwSlsT=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_TBtJZsL=json({});
    
        if (name.pGeometries==NULL){
            return_TBtJZsL["null"]=true;
            return return_TBtJZsL;
        }
        
        return_TBtJZsL["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_syiTtLm=json({});
    return serialize_VkGeometryNV(name.pGeometries[i]);}();
            return_TBtJZsL["members"][std::to_string(i)].push_back(temp);
        }
        return return_TBtJZsL;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xejRlfF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xejRlfF=NULL;
        }
    temp_xejRlfF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xejRlfF;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_UtkCpZb;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_UtkCpZb=NULL;
        }
    temp_UtkCpZb=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int cICYVWH=0; cICYVWH < result.geometryCount; cICYVWH++){
            [&]() {
temp_UtkCpZb[cICYVWH]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][cICYVWH]);}();;
        }
        }();result.pGeometries=temp_UtkCpZb;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PAQvEoC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aSJdzfp=json({});
    
        if (name.pNext==NULL){
            return_aSJdzfp["null"]=true;
            return return_aSJdzfp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compactedSize"]=[&]() {
    json return_DLiYoeK=json({});
    return_DLiYoeK=[&]() {
    json return_tfhNcZD=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_DLiYoeK;}();
result["members"]["info"]=[&]() {
    json return_HpwZEil=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sfcxOzl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sfcxOzl=NULL;
        }
    temp_sfcxOzl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sfcxOzl;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lMOKtWM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LWzirnL=json({});
    
        if (name.pNext==NULL){
            return_LWzirnL["null"]=true;
            return return_LWzirnL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_EXLftUU=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_zKtPFxz=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_JsmgMYU=json({});
    return_JsmgMYU=[&]() {
    json return_OWlokOn=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_JsmgMYU;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_sNRPxtQ=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_VOTHhHz=json({});
    
        if (name.pDeviceIndices==NULL){
            return_VOTHhHz["null"]=true;
            return return_VOTHhHz;
        }
        
        return_VOTHhHz["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_IheeJou=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_VOTHhHz["members"][std::to_string(i)].push_back(temp);
        }
        return return_VOTHhHz;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zntniUG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zntniUG=NULL;
        }
    temp_zntniUG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zntniUG;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_GLClzWE;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_GLClzWE=NULL;
        }
    temp_GLClzWE=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int dJOTspG=0; dJOTspG < result.deviceIndexCount; dJOTspG++){
            [&]() {
temp_GLClzWE[dJOTspG]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][dJOTspG]);}();;
        }
        }();result.pDeviceIndices=temp_GLClzWE;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FiuOnJQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uFBKFsh=json({});
    
        if (name.pNext==NULL){
            return_uFBKFsh["null"]=true;
            return return_uFBKFsh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_doklglk=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_SzwYWjM=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_SzwYWjM["null"]=true;
            return return_SzwYWjM;
        }
        
        return_SzwYWjM["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_oLSbmvM=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[i]);}();
            return_SzwYWjM["members"][std::to_string(i)].push_back(temp);
        }
        return return_SzwYWjM;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jAewDiP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jAewDiP=NULL;
        }
    temp_jAewDiP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jAewDiP;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_ocvOhFN;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_ocvOhFN=NULL;
        }
    temp_ocvOhFN=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int jDrhSym=0; jDrhSym < result.accelerationStructureCount; jDrhSym++){
            [&]() {
temp_ocvOhFN[jDrhSym]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][jDrhSym]);}();;
        }
        }();result.pAccelerationStructures=temp_ocvOhFN;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qUaVRvY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xmnFDOo=json({});
    
        if (name.pNext==NULL){
            return_xmnFDOo["null"]=true;
            return return_xmnFDOo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_OxlIALv=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_pVRFlRh=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_pVRFlRh["null"]=true;
            return return_pVRFlRh;
        }
        
        return_pVRFlRh["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_hogYycL=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[i]);}();
            return_pVRFlRh["members"][std::to_string(i)].push_back(temp);
        }
        return return_pVRFlRh;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uyvOpEs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uyvOpEs=NULL;
        }
    temp_uyvOpEs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uyvOpEs;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_jiokDVs;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_jiokDVs=NULL;
        }
    temp_jiokDVs=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int jXfVRrD=0; jXfVRrD < result.accelerationStructureCount; jXfVRrD++){
            [&]() {
temp_jiokDVs[jXfVRrD]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][jXfVRrD]);}();;
        }
        }();result.pAccelerationStructures=temp_jiokDVs;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DjruuKh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IrdEEBa=json({});
    
        if (name.pNext==NULL){
            return_IrdEEBa["null"]=true;
            return return_IrdEEBa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_qnIDtVA=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_sKFInBP=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IUHNlDA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IUHNlDA=NULL;
        }
    temp_IUHNlDA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IUHNlDA;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YeZQkvN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NfRJibJ=json({});
    
        if (name.pNext==NULL){
            return_NfRJibJ["null"]=true;
            return return_NfRJibJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_AMiJtdB=json({});
    return_AMiJtdB=[&]() {
    json return_cUZoydp=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_AMiJtdB;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_pWHDmlL=json({});
    return_pWHDmlL=[&]() {
    json return_outEhJK=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_pWHDmlL;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_dGEvTIn=json({});
    return_dGEvTIn=[&]() {
    json return_GjVxeSo=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_dGEvTIn;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_HCJLUdb=json({});
    return_HCJLUdb=[&]() {
    json return_DvXDxeL=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_HCJLUdb;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_fRMbAYc=json({});
    return_fRMbAYc=[&]() {
    json return_PmWbtXt=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_fRMbAYc;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wRSdJRM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ylQYSei=json({});
    
        if (name.pNext==NULL){
            return_ylQYSei["null"]=true;
            return return_ylQYSei;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_VAtzuCn=json({});
    return_VAtzuCn=[&]() {
    json return_GHRFvlQ=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_VAtzuCn;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_uAqRALl=json({});
    return_uAqRALl=[&]() {
    json return_wpklDfu=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_uAqRALl;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_vUrvDUY=json({});
    return_vUrvDUY=[&]() {
    json return_OSaifhq=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_vUrvDUY;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_ZAXyUAF=json({});
    return_ZAXyUAF=[&]() {
    json return_ECGexGZ=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_ZAXyUAF;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_GBqqJGd=json({});
    return_GBqqJGd=[&]() {
    json return_yUcobab=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_GBqqJGd;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JCbjbog=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_adxmfFh=json({});
    
        if (name.pNext==NULL){
            return_adxmfFh["null"]=true;
            return return_adxmfFh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayQuery"]=[&]() {
    json return_wAGRLpJ=json({});
    return_wAGRLpJ=[&]() {
    json return_gnyHJKD=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_wAGRLpJ;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dfVUuUJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lmOSIih=json({});
    
        if (name.pNext==NULL){
            return_lmOSIih["null"]=true;
            return return_lmOSIih;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_AvZvbeQ=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_eFeGcHl=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_GJHzahm=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_wHJArVi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_GRxOftI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_LZlMyDX=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_XihBJgl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_dtdqqUA=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qaHiBcd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xyAfsgb=json({});
    
        if (name.pNext==NULL){
            return_xyAfsgb["null"]=true;
            return return_xyAfsgb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_VgmjOUN=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_LUphccw=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_pfgsEUp=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_zxcEgad=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_mBvoYeC=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_AdPYnSx=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_xhzBfeG=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_VzyjWSH=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PDeZyyh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MhJSlyW=json({});
    
        if (name.pNext==NULL){
            return_MhJSlyW["null"]=true;
            return return_MhJSlyW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_NGBKPiv=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_LXSswDR=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_cSLCRrw=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_vbpygRm=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_WRhJlec=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_jsjoypi=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_WeMbqrL=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_LVQSuDk=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_xeiPqyj=json({});
    return_xeiPqyj=[&]() {
    json return_Zkrejle=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_xeiPqyj;}();
result["members"]["stride"]=[&]() {
    json return_IkGgVtA=json({});
    return_IkGgVtA=[&]() {
    json return_FzgitPy=json({});
    return serialize_uint64_t(name.stride);}();return return_IkGgVtA;}();
result["members"]["size"]=[&]() {
    json return_QMfCVAs=json({});
    return_QMfCVAs=[&]() {
    json return_EkVoJtG=json({});
    return serialize_uint64_t(name.size);}();return return_QMfCVAs;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_efRVmkK=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HZkdNCg=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_KbYnalN=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_quMCdEN=json({});
    return_quMCdEN=[&]() {
    json return_wAlYphO=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_quMCdEN;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_scFFcXu=json({});
    return_scFFcXu=[&]() {
    json return_kWRjvuE=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_scFFcXu;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_xVNNNyy=json({});
    return_xVNNNyy=[&]() {
    json return_JoOKYAk=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_xVNNNyy;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_mjBMjvn=json({});
    return_mjBMjvn=[&]() {
    json return_ScsnwmZ=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_mjBMjvn;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_xxNbWoR=json({});
    return_xxNbWoR=[&]() {
    json return_NWcujnU=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_xxNbWoR;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_cifQBFu=json({});
    return_cifQBFu=[&]() {
    json return_eprORZy=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_cifQBFu;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_TdpUVfA=json({});
    return_TdpUVfA=[&]() {
    json return_UvmvYNq=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_TdpUVfA;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_qVoTzXe=json({});
    return_qVoTzXe=[&]() {
    json return_uUjuQCO=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_qVoTzXe;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_kGfWzgW=json({});
    return_kGfWzgW=[&]() {
    json return_fstLlPl=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_kGfWzgW;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_UBbaSdD=json({});
    return_UBbaSdD=[&]() {
    json return_sBvqLph=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_UBbaSdD;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_vZlpHMV=json({});
    return_vZlpHMV=[&]() {
    json return_EudIVxr=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_vZlpHMV;}();
result["members"]["width"]=[&]() {
    json return_vUlIUyG=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_TsFXQvP=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_SRMkSyJ=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yIZRmUQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uDZpsrw=json({});
    
        if (name.pNext==NULL){
            return_uDZpsrw["null"]=true;
            return return_uDZpsrw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_lbcSKjH=json({});
    return_lbcSKjH=[&]() {
    json return_tyuAqZj=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_lbcSKjH;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_tSZBLuh=json({});
    return_tSZBLuh=[&]() {
    json return_UioNnJl=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_tSZBLuh;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PziUGIQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nxyyUKp=json({});
    
        if (name.pNext==NULL){
            return_nxyyUKp["null"]=true;
            return return_nxyyUKp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_qynKOWK=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_rWNPXCe=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_rWNPXCe["null"]=true;
            return return_rWNPXCe;
        }
        
        return_rWNPXCe["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_QpNJrDX=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[i]);}();
            return_rWNPXCe["members"][std::to_string(i)].push_back(temp);
        }
        return return_rWNPXCe;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int oWFHZQb=0; oWFHZQb < result.drmFormatModifierCount; oWFHZQb++){
            [&]() {
result.pDrmFormatModifierProperties[oWFHZQb]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][oWFHZQb]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_gzWIbVE=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_TSEqCZN=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_UBpLYmW=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iYbOxGq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hUpoQaq=json({});
    
        if (name.pNext==NULL){
            return_hUpoQaq["null"]=true;
            return return_hUpoQaq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_BJREUTS=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_Bsvsvuf=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_rtlpsXJ=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_FmbRWyy=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_FmbRWyy["null"]=true;
            return return_FmbRWyy;
        }
        
        return_FmbRWyy["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_AVhHZho=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_FmbRWyy["members"][std::to_string(i)].push_back(temp);
        }
        return return_FmbRWyy;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xRwHWnp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xRwHWnp=NULL;
        }
    temp_xRwHWnp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xRwHWnp;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_CkYctpT;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_CkYctpT=NULL;
        }
    temp_CkYctpT=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int kuSWRVN=0; kuSWRVN < result.queueFamilyIndexCount; kuSWRVN++){
            [&]() {
temp_CkYctpT[kuSWRVN]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][kuSWRVN]);}();;
        }
        }();result.pQueueFamilyIndices=temp_CkYctpT;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hHFMTxW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_APVmSpN=json({});
    
        if (name.pNext==NULL){
            return_APVmSpN["null"]=true;
            return return_APVmSpN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_MTrJEhK=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_yYTqVDt=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_yYTqVDt["null"]=true;
            return return_yYTqVDt;
        }
        
        return_yYTqVDt["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_gJyTeyy=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[i]);}();
            return_yYTqVDt["members"][std::to_string(i)].push_back(temp);
        }
        return return_yYTqVDt;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lilLjPd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lilLjPd=NULL;
        }
    temp_lilLjPd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lilLjPd;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_reGafzb;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_reGafzb=NULL;
        }
    temp_reGafzb=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int bFZxuIA=0; bFZxuIA < result.drmFormatModifierCount; bFZxuIA++){
            [&]() {
temp_reGafzb[bFZxuIA]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][bFZxuIA]);}();;
        }
        }();result.pDrmFormatModifiers=temp_reGafzb;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XBDKRtT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qRLILwM=json({});
    
        if (name.pNext==NULL){
            return_qRLILwM["null"]=true;
            return return_qRLILwM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_UTEOZbd=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_skPFcmo=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_DPrwBli=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_DPrwBli["null"]=true;
            return return_DPrwBli;
        }
        
        return_DPrwBli["members"]={};
        for(int i=0; i < name.drmFormatModifierPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_QIeoinE=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[i]);}();
            return_DPrwBli["members"][std::to_string(i)].push_back(temp);
        }
        return return_DPrwBli;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hPXDoHI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hPXDoHI=NULL;
        }
    temp_hPXDoHI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hPXDoHI;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_sgOBmVE;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_sgOBmVE=NULL;
        }
    temp_sgOBmVE=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int jxVIvgz=0; jxVIvgz < result.drmFormatModifierPlaneCount; jxVIvgz++){
            [&]() {
temp_sgOBmVE[jxVIvgz]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][jxVIvgz]);}();;
        }
        }();result.pPlaneLayouts=temp_sgOBmVE;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UNqitrR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PlEzxxj=json({});
    
        if (name.pNext==NULL){
            return_PlEzxxj["null"]=true;
            return return_PlEzxxj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_QQBzrZw=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VwFgKMe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sHJNjBN=json({});
    
        if (name.pNext==NULL){
            return_sHJNjBN["null"]=true;
            return return_sHJNjBN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_IwqsqpD=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OfmQDMO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OfmQDMO=NULL;
        }
    temp_OfmQDMO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OfmQDMO;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jOoPwBD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YXGavlz=json({});
    
        if (name.pNext==NULL){
            return_YXGavlz["null"]=true;
            return return_YXGavlz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_nILXWXz=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sPXPWHD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sPXPWHD=NULL;
        }
    temp_sPXPWHD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sPXPWHD;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nHlwsWq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zLZjyMV=json({});
    
        if (name.pNext==NULL){
            return_zLZjyMV["null"]=true;
            return return_zLZjyMV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_DYtqkQI=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wnIOwJK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wnIOwJK=NULL;
        }
    temp_wnIOwJK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wnIOwJK;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uYouhPU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tqFKMIb=json({});
    
        if (name.pNext==NULL){
            return_tqFKMIb["null"]=true;
            return return_tqFKMIb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_gljblah=json({});
    return_gljblah=[&]() {
    json return_dOwtipF=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_gljblah;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_gLpDQVn=json({});
    return_gLpDQVn=[&]() {
    json return_efoTPPI=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_gLpDQVn;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_OXiqXrf=json({});
    return_OXiqXrf=[&]() {
    json return_lGNqyyp=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_OXiqXrf;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NZSRZph=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pLPdNgS=json({});
    
        if (name.pNext==NULL){
            return_pLPdNgS["null"]=true;
            return return_pLPdNgS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_WWmTnkY=json({});
    return_WWmTnkY=[&]() {
    json return_tLdnqzd=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_WWmTnkY;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DxPhtPY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZEdGlVa=json({});
    
        if (name.pNext==NULL){
            return_ZEdGlVa["null"]=true;
            return return_ZEdGlVa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_mRHoZku=json({});
    return_mRHoZku=[&]() {
    json return_ybGwTvy=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_mRHoZku;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lQsitRP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XbBUERe=json({});
    
        if (name.pNext==NULL){
            return_XbBUERe["null"]=true;
            return return_XbBUERe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_kHPasIb=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_iJMgHhF=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_EqVekEb=json({});
    return_EqVekEb=[&]() {
    json return_kNwNnPj=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_EqVekEb;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CPhkJPw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lsoczIY=json({});
    
        if (name.pNext==NULL){
            return_lsoczIY["null"]=true;
            return return_lsoczIY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subsampledLoads"]=[&]() {
    json return_DGPGAdB=json({});
    return_DGPGAdB=[&]() {
    json return_qjaMDjO=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_DGPGAdB;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_KntCvCM=json({});
    return_KntCvCM=[&]() {
    json return_qPrnmOG=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_KntCvCM;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_AZdMvjy=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_vpZggYp=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GVuqWCG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PbQdwlZ=json({});
    
        if (name.pNext==NULL){
            return_PbQdwlZ["null"]=true;
            return return_PbQdwlZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_VCMUCcn=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Wggxqxq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YmMXbcf=json({});
    
        if (name.pNext==NULL){
            return_YmMXbcf["null"]=true;
            return return_YmMXbcf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_VsAhlrU=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zkFDSwv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zkFDSwv=NULL;
        }
    temp_zkFDSwv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zkFDSwv;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ACCGAOq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zBkOBYK=json({});
    
        if (name.pNext==NULL){
            return_zBkOBYK["null"]=true;
            return return_zBkOBYK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_aMzlTlj=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_vXcXpWi=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_vXcXpWi["null"]=true;
            return return_vXcXpWi;
        }
        
        return_vXcXpWi["members"]={};
        for(int i=0; i < name.fragmentDensityOffsetCount; i++){
            json temp;
            temp=[&]() {
    json return_UoMHxbb=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[i]);}();
            return_vXcXpWi["members"][std::to_string(i)].push_back(temp);
        }
        return return_vXcXpWi;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UPJcHNt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UPJcHNt=NULL;
        }
    temp_UPJcHNt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UPJcHNt;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_bDaUpZY;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_bDaUpZY=NULL;
        }
    temp_bDaUpZY=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int kxDDcyY=0; kxDDcyY < result.fragmentDensityOffsetCount; kxDDcyY++){
            [&]() {
temp_bDaUpZY[kxDDcyY]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][kxDDcyY]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_bDaUpZY;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SVXLwNJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_spvctaq=json({});
    
        if (name.pNext==NULL){
            return_spvctaq["null"]=true;
            return return_spvctaq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_OAyHIST=json({});
    return_OAyHIST=[&]() {
    json return_BTCQeVo=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_OAyHIST;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CxXPhzy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fmsljeA=json({});
    
        if (name.pNext==NULL){
            return_fmsljeA["null"]=true;
            return return_fmsljeA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_yfcuZwM=json({});
    return_yfcuZwM=[&]() {
    json return_zHXQwUm=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_yfcuZwM;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iSxTACr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EyYwVco=json({});
    
        if (name.pNext==NULL){
            return_EyYwVco["null"]=true;
            return return_EyYwVco;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsProtected"]=[&]() {
    json return_qESNDbv=json({});
    return_qESNDbv=[&]() {
    json return_ZMrjxlk=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_qESNDbv;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uXSStoP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uXSStoP=NULL;
        }
    temp_uXSStoP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uXSStoP;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PvQyXRC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ujYqmDY=json({});
    
        if (name.pNext==NULL){
            return_ujYqmDY["null"]=true;
            return return_ujYqmDY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_YtiRVww=json({});
    return_YtiRVww=[&]() {
    json return_eBPJUAE=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_YtiRVww;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VwRTAYb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WkFJwpE=json({});
    
        if (name.pNext==NULL){
            return_WkFJwpE["null"]=true;
            return return_WkFJwpE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_tzkeAHj=json({});
    return_tzkeAHj=[&]() {
    json return_GKiPlKU=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_tzkeAHj;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FuvdPWh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TBoXmSq=json({});
    
        if (name.pNext==NULL){
            return_TBoXmSq["null"]=true;
            return return_TBoXmSq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipEnable"]=[&]() {
    json return_DTldVPq=json({});
    return_DTldVPq=[&]() {
    json return_ebHcrGb=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_DTldVPq;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IfGatdw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FfjAqXc=json({});
    
        if (name.pNext==NULL){
            return_FfjAqXc["null"]=true;
            return return_FfjAqXc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DGWkZrz=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_DnVBShd=json({});
    return_DnVBShd=[&]() {
    json return_iiRymUE=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_DnVBShd;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oMikazo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oMikazo=NULL;
        }
    temp_oMikazo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oMikazo;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QIHPOMF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AWUlRpr=json({});
    
        if (name.pNext==NULL){
            return_AWUlRpr["null"]=true;
            return return_AWUlRpr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["heapBudget"]=[&]() {
    json return_XsznvFI=json({});
    
        return_XsznvFI["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_FFgRdDx=json({});
    return_FFgRdDx=[&]() {
    json return_vrwItyx=json({});
    return serialize_uint64_t(name.heapBudget[i]);}();return return_FFgRdDx;}();
            return_XsznvFI["members"][std::to_string(i)].push_back(temp);
        }
        return return_XsznvFI;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_zTEyedz=json({});
    
        return_zTEyedz["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_RwRJRyq=json({});
    return_RwRJRyq=[&]() {
    json return_hxiOovS=json({});
    return serialize_uint64_t(name.heapUsage[i]);}();return return_RwRJRyq;}();
            return_zTEyedz["members"][std::to_string(i)].push_back(temp);
        }
        return return_zTEyedz;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int CUCeDLD=0; CUCeDLD < VK_MAX_MEMORY_HEAPS; CUCeDLD++){
            [&]() {
[&]() {
result.heapBudget[CUCeDLD]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][CUCeDLD]);}();}();;
        }
        }();
[&]() {

        for (int NrpMjpK=0; NrpMjpK < VK_MAX_MEMORY_HEAPS; NrpMjpK++){
            [&]() {
[&]() {
result.heapUsage[NrpMjpK]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][NrpMjpK]);}();}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ELahPDc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ujyKRFT=json({});
    
        if (name.pNext==NULL){
            return_ujyKRFT["null"]=true;
            return return_ujyKRFT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryPriority"]=[&]() {
    json return_qsFMcuQ=json({});
    return_qsFMcuQ=[&]() {
    json return_tnicMLF=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_qsFMcuQ;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fVixwFf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sMokGox=json({});
    
        if (name.pNext==NULL){
            return_sMokGox["null"]=true;
            return return_sMokGox;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priority"]=[&]() {
    json return_hEQCweh=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yGiNBnm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yGiNBnm=NULL;
        }
    temp_yGiNBnm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yGiNBnm;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gjRydzy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FEYtWRi=json({});
    
        if (name.pNext==NULL){
            return_FEYtWRi["null"]=true;
            return return_FEYtWRi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_RgWccUN=json({});
    return_RgWccUN=[&]() {
    json return_GMJSnaX=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_RgWccUN;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xRNLzGw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bpIbsHo=json({});
    
        if (name.pNext==NULL){
            return_bpIbsHo["null"]=true;
            return return_bpIbsHo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_buvjxEi=json({});
    return_buvjxEi=[&]() {
    json return_qxoaMcq=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_buvjxEi;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_kDcSKCO=json({});
    return_kDcSKCO=[&]() {
    json return_pmBHiJR=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_kDcSKCO;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_lNZZGNB=json({});
    return_lNZZGNB=[&]() {
    json return_TWiUScp=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_lNZZGNB;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZuzHjv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Zcrytyd=json({});
    
        if (name.pNext==NULL){
            return_Zcrytyd["null"]=true;
            return return_Zcrytyd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_xvxNQAm=json({});
    return_xvxNQAm=[&]() {
    json return_mnIgcRl=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_xvxNQAm;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_SFcPthj=json({});
    return_SFcPthj=[&]() {
    json return_ThnYelG=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_SFcPthj;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_PzJyjnU=json({});
    return_PzJyjnU=[&]() {
    json return_xDIdvHh=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_PzJyjnU;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TwyzWfZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_emXUNaA=json({});
    
        if (name.pNext==NULL){
            return_emXUNaA["null"]=true;
            return return_emXUNaA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_JJFTmvk=json({});
    return_JJFTmvk=[&]() {
    json return_lKKwlbC=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_JJFTmvk;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_leCTQIo=json({});
    return_leCTQIo=[&]() {
    json return_OKPqsLn=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_leCTQIo;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jqTaJte=json({});
    return_jqTaJte=[&]() {
    json return_MmdkuNs=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jqTaJte;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KVaDsVB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_srLLAJe=json({});
    
        if (name.pNext==NULL){
            return_srLLAJe["null"]=true;
            return return_srLLAJe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_HNQoFRg=json({});
    return_HNQoFRg=[&]() {
    json return_bflEyxw=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_HNQoFRg;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_liDOmGV=json({});
    return_liDOmGV=[&]() {
    json return_lxDmWqU=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_liDOmGV;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_EmoyFNd=json({});
    return_EmoyFNd=[&]() {
    json return_xvVoRhs=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_EmoyFNd;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gQrGXHq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gsbqDHW=json({});
    
        if (name.pNext==NULL){
            return_gsbqDHW["null"]=true;
            return return_gsbqDHW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_pIxlKXG=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JwekgVD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JwekgVD=NULL;
        }
    temp_JwekgVD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JwekgVD;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vGeBbAz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yRpyHRQ=json({});
    
        if (name.pNext==NULL){
            return_yRpyHRQ["null"]=true;
            return return_yRpyHRQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_mtcFbcc=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ftSPtaC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ftSPtaC=NULL;
        }
    temp_ftSPtaC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ftSPtaC;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZRpuZqt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lmQLUOX=json({});
    
        if (name.pNext==NULL){
            return_lmQLUOX["null"]=true;
            return return_lmQLUOX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_uSAXtxY=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BMvUfzX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BMvUfzX=NULL;
        }
    temp_BMvUfzX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BMvUfzX;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHMHjGJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bTTbUyH=json({});
    
        if (name.pNext==NULL){
            return_bTTbUyH["null"]=true;
            return return_bTTbUyH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_RdJljuK=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bbqcopN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bbqcopN=NULL;
        }
    temp_bbqcopN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bbqcopN;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AdwBDtf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pnBqlkr=json({});
    
        if (name.pNext==NULL){
            return_pnBqlkr["null"]=true;
            return return_pnBqlkr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_UQEsPzM=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZBsTBmG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZBsTBmG=NULL;
        }
    temp_ZBsTBmG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZBsTBmG;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mxGAHhV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hFJFSLS=json({});
    
        if (name.pNext==NULL){
            return_hFJFSLS["null"]=true;
            return return_hFJFSLS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_wmJQciW=json({});
    return_wmJQciW=[&]() {
    json return_Snnaicu=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_wmJQciW;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eMkxvwt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eMkxvwt=NULL;
        }
    temp_eMkxvwt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eMkxvwt;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TnUpItX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oAjRjPD=json({});
    
        if (name.pNext==NULL){
            return_oAjRjPD["null"]=true;
            return return_oAjRjPD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageViewType"]=[&]() {
    json return_IBTfEQX=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GUBNKrk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OrQZcaI=json({});
    
        if (name.pNext==NULL){
            return_OrQZcaI["null"]=true;
            return return_OrQZcaI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCubic"]=[&]() {
    json return_LidItch=json({});
    return_LidItch=[&]() {
    json return_kwbofcv=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_LidItch;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_JQkgiwi=json({});
    return_JQkgiwi=[&]() {
    json return_MRMLGyU=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_JQkgiwi;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZsVkXGF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CHrDxyr=json({});
    
        if (name.pNext==NULL){
            return_CHrDxyr["null"]=true;
            return return_CHrDxyr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_DFFjZnd=json({});
    return_DFFjZnd=[&]() {
    json return_LdoVVKV=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_DFFjZnd;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iHKnbvx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JzhvIri=json({});
    
        if (name.pNext==NULL){
            return_JzhvIri["null"]=true;
            return return_JzhvIri;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_QnxfAfh=json({});
    return_QnxfAfh=[&]() {
    json return_HgZuNLY=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_QnxfAfh;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XBuuSqP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IxbgYFE=json({});
    
        if (name.pNext==NULL){
            return_IxbgYFE["null"]=true;
            return return_IxbgYFE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_NaYCFPF=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_XdinjhS=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_XdinjhS["null"]=true;
            return return_XdinjhS;
        }
        
        return_XdinjhS["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_cezFEfn=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_XdinjhS["members"][std::to_string(i)].push_back(temp);
        }
        return return_XdinjhS;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BvIqVJl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BvIqVJl=NULL;
        }
    temp_BvIqVJl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BvIqVJl;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_EfKYHpg;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_EfKYHpg=NULL;
        }
    temp_EfKYHpg=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int dvdlbIO=0; dvdlbIO < result.attachmentImageInfoCount; dvdlbIO++){
            [&]() {
temp_EfKYHpg[dvdlbIO]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][dvdlbIO]);}();;
        }
        }();result.pAttachmentImageInfos=temp_EfKYHpg;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rVFJHcY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SBEnJoW=json({});
    
        if (name.pNext==NULL){
            return_SBEnJoW["null"]=true;
            return return_SBEnJoW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_mWzABcu=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_Ijfkosr=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_Ijfkosr["null"]=true;
            return return_Ijfkosr;
        }
        
        return_Ijfkosr["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_fKNxzZe=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_Ijfkosr["members"][std::to_string(i)].push_back(temp);
        }
        return return_Ijfkosr;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PeRHwYT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PeRHwYT=NULL;
        }
    temp_PeRHwYT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PeRHwYT;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_rCEkhyA;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_rCEkhyA=NULL;
        }
    temp_rCEkhyA=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int KFNupWo=0; KFNupWo < result.attachmentImageInfoCount; KFNupWo++){
            [&]() {
temp_rCEkhyA[KFNupWo]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][KFNupWo]);}();;
        }
        }();result.pAttachmentImageInfos=temp_rCEkhyA;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iICHkuj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bsjZSHr=json({});
    
        if (name.pNext==NULL){
            return_bsjZSHr["null"]=true;
            return return_bsjZSHr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lippLug=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_VsYHovK=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_LnYBTOe=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_fCZYpJX=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_XrkZwgb=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_EEMNjDA=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_hXgBPBp=json({});
    
        if (name.pViewFormats==NULL){
            return_hXgBPBp["null"]=true;
            return return_hXgBPBp;
        }
        
        return_hXgBPBp["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_SPIEoHY=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_hXgBPBp["members"][std::to_string(i)].push_back(temp);
        }
        return return_hXgBPBp;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AhxODQp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AhxODQp=NULL;
        }
    temp_AhxODQp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AhxODQp;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_kUgIRsI;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_kUgIRsI=NULL;
        }
    temp_kUgIRsI=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int fDYbvIO=0; fDYbvIO < result.viewFormatCount; fDYbvIO++){
            [&]() {
temp_kUgIRsI[fDYbvIO]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][fDYbvIO]);}();;
        }
        }();result.pViewFormats=temp_kUgIRsI;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EjPFrwx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_njvcbEy=json({});
    
        if (name.pNext==NULL){
            return_njvcbEy["null"]=true;
            return return_njvcbEy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tGqBxPa=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_lpDVqBP=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_OQgmOvd=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_SYUgrYZ=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_kBoQozv=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_kQthzNO=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_KyYMizI=json({});
    
        if (name.pViewFormats==NULL){
            return_KyYMizI["null"]=true;
            return return_KyYMizI;
        }
        
        return_KyYMizI["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_KIznfxh=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_KyYMizI["members"][std::to_string(i)].push_back(temp);
        }
        return return_KyYMizI;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qDsSaRU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qDsSaRU=NULL;
        }
    temp_qDsSaRU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qDsSaRU;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_QkfwvzE;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_QkfwvzE=NULL;
        }
    temp_QkfwvzE=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int cqOqfEi=0; cqOqfEi < result.viewFormatCount; cqOqfEi++){
            [&]() {
temp_QkfwvzE[cqOqfEi]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][cqOqfEi]);}();;
        }
        }();result.pViewFormats=temp_QkfwvzE;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OokxqLi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QhOIsvR=json({});
    
        if (name.pNext==NULL){
            return_QhOIsvR["null"]=true;
            return return_QhOIsvR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_vJhszPr=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_yAifvJs=json({});
    
        if (name.pAttachments==NULL){
            return_yAifvJs["null"]=true;
            return return_yAifvJs;
        }
        
        return_yAifvJs["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_AMNylde=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_yAifvJs["members"][std::to_string(i)].push_back(temp);
        }
        return return_yAifvJs;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rncSPUs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rncSPUs=NULL;
        }
    temp_rncSPUs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rncSPUs;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_nyMxnHP;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_nyMxnHP=NULL;
        }
    temp_nyMxnHP=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int ZhWajAP=0; ZhWajAP < result.attachmentCount; ZhWajAP++){
            [&]() {
temp_nyMxnHP[ZhWajAP]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][ZhWajAP]);}();;
        }
        }();result.pAttachments=temp_nyMxnHP;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MKoRpkn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zsKmfpX=json({});
    
        if (name.pNext==NULL){
            return_zsKmfpX["null"]=true;
            return return_zsKmfpX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_SbgnsFX=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_FaDAlAO=json({});
    
        if (name.pAttachments==NULL){
            return_FaDAlAO["null"]=true;
            return return_FaDAlAO;
        }
        
        return_FaDAlAO["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_AiDZTAh=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_FaDAlAO["members"][std::to_string(i)].push_back(temp);
        }
        return return_FaDAlAO;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pJsZahF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pJsZahF=NULL;
        }
    temp_pJsZahF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pJsZahF;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_unmXtnb;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_unmXtnb=NULL;
        }
    temp_unmXtnb=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int LKctIeP=0; LKctIeP < result.attachmentCount; LKctIeP++){
            [&]() {
temp_unmXtnb[LKctIeP]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][LKctIeP]);}();;
        }
        }();result.pAttachments=temp_unmXtnb;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wQuGZym=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OYWrPwj=json({});
    
        if (name.pNext==NULL){
            return_OYWrPwj["null"]=true;
            return return_OYWrPwj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_HjWCAdW=json({});
    return_HjWCAdW=[&]() {
    json return_lzzoTLi=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_HjWCAdW;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RzoGZZO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPBhnJk=json({});
    
        if (name.pNext==NULL){
            return_FPBhnJk["null"]=true;
            return return_FPBhnJk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_TXDoitG=json({});
    return_TXDoitG=[&]() {
    json return_LNaduaQ=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_TXDoitG;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ECyAJaw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZmhyFZe=json({});
    
        if (name.pNext==NULL){
            return_ZmhyFZe["null"]=true;
            return return_ZmhyFZe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_nXHvKfX=json({});
    return_nXHvKfX=[&]() {
    json return_JWItHSZ=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_nXHvKfX;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_TBdoVlD=json({});
    return_TBdoVlD=[&]() {
    json return_skalePe=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_TBdoVlD;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BwLSTBP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cgTasag=json({});
    
        if (name.pNext==NULL){
            return_cgTasag["null"]=true;
            return return_cgTasag;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_JsQdvQX=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wDVolxs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aqvpTgc=json({});
    
        if (name.pNext==NULL){
            return_aqvpTgc["null"]=true;
            return return_aqvpTgc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_FuEVquG=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_RzXHTVW=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_kugmQky=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_DznHQZa=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_laSrERe=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_RrjaVni=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_fnMxrkh=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_cIFSmHR=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NnQWwyX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gVzQBCK=json({});
    
        if (name.pNext==NULL){
            return_gVzQBCK["null"]=true;
            return return_gVzQBCK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_IqaHUqo=json({});
    return_IqaHUqo=[&]() {
    json return_jUpdFuz=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_IqaHUqo;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IZEucKk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dvXpYZU=json({});
    
        if (name.pNext==NULL){
            return_dvXpYZU["null"]=true;
            return return_dvXpYZU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_fuPkEPa=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_TnfCogR=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_RTIyrZX=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zLIMETf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zLIMETf=NULL;
        }
    temp_zLIMETf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zLIMETf;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUPVaDI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mpacMvd=json({});
    
        if (name.pNext==NULL){
            return_mpacMvd["null"]=true;
            return return_mpacMvd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_ZeWTqdp=json({});
    return_ZeWTqdp=[&]() {
    json return_fPPOHoc=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_ZeWTqdp;}();
result["members"]["size"]=[&]() {
    json return_kLcEZNr=json({});
    return_kLcEZNr=[&]() {
    json return_xMxsfZB=json({});
    return serialize_uint64_t(name.size);}();return return_kLcEZNr;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_qZvAdiF=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_cKbGHpt=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_hgSlZwU=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_bVfbBUK=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IAHAdTL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xhcyZVO=json({});
    
        if (name.pNext==NULL){
            return_xhcyZVO["null"]=true;
            return return_xhcyZVO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_AvvnLsi=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_AvvnLsi["null"]=true;
            return return_AvvnLsi;
        }
        return_AvvnLsi=[&]() {
    json return_cDpfubc=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_AvvnLsi;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_fMMdrKv=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_uzcJBpm=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_uzcJBpm["null"]=true;
            return return_uzcJBpm;
        }
        
        return_uzcJBpm["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_sDdBMay=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_uzcJBpm["members"][std::to_string(i)].push_back(temp);
        }
        return return_uzcJBpm;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uVMCRYf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uVMCRYf=NULL;
        }
    temp_uVMCRYf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uVMCRYf;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int kKAEXlO=0; kKAEXlO < result.pipelineStageCreationFeedbackCount; kKAEXlO++){
            [&]() {
result.pPipelineStageCreationFeedbacks[kKAEXlO]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][kKAEXlO]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ulVZjIg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RawFzbB=json({});
    
        if (name.pNext==NULL){
            return_RawFzbB["null"]=true;
            return return_RawFzbB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_tEpdOle=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_tEpdOle["null"]=true;
            return return_tEpdOle;
        }
        return_tEpdOle=[&]() {
    json return_hyqdzDD=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_tEpdOle;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_VMhWrti=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_WtkZwyx=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_WtkZwyx["null"]=true;
            return return_WtkZwyx;
        }
        
        return_WtkZwyx["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_DGwSOBZ=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_WtkZwyx["members"][std::to_string(i)].push_back(temp);
        }
        return return_WtkZwyx;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ECqawFA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ECqawFA=NULL;
        }
    temp_ECqawFA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ECqawFA;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int nEHAzwi=0; nEHAzwi < result.pipelineStageCreationFeedbackCount; nEHAzwi++){
            [&]() {
result.pPipelineStageCreationFeedbacks[nEHAzwi]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][nEHAzwi]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EGWielI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PdwHcsy=json({});
    
        if (name.pNext==NULL){
            return_PdwHcsy["null"]=true;
            return return_PdwHcsy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrier"]=[&]() {
    json return_YRTpnfk=json({});
    return_YRTpnfk=[&]() {
    json return_YFYpycZ=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_YRTpnfk;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ygNuZiS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_krpVWxy=json({});
    
        if (name.pNext==NULL){
            return_krpVWxy["null"]=true;
            return return_krpVWxy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_dDchntR=json({});
    return_dDchntR=[&]() {
    json return_hQiGqgN=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_dDchntR;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EfPQZbq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MBYZbSP=json({});
    
        if (name.pNext==NULL){
            return_MBYZbSP["null"]=true;
            return return_MBYZbSP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_VfQGeVx=json({});
    return_VfQGeVx=[&]() {
    json return_eTvXLBj=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_VfQGeVx;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jakCWFn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_acVLlID=json({});
    
        if (name.pNext==NULL){
            return_acVLlID["null"]=true;
            return return_acVLlID;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_DDVYbAp=json({});
    return_DDVYbAp=[&]() {
    json return_oZMqrrm=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_DDVYbAp;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_ZKvGyNy=json({});
    return_ZKvGyNy=[&]() {
    json return_aqlCmZO=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_ZKvGyNy;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SaCwAEj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NLRovch=json({});
    
        if (name.pNext==NULL){
            return_NLRovch["null"]=true;
            return return_NLRovch;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_orWwUGF=json({});
    return_orWwUGF=[&]() {
    json return_DNfnZyd=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_orWwUGF;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSMLKHi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iszpBvI=json({});
    
        if (name.pNext==NULL){
            return_iszpBvI["null"]=true;
            return return_iszpBvI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["unit"]=[&]() {
    json return_zCWcnkc=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_jEPWVHx=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_tPksmAf=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_kUwMrto=json({});
    
        return_kUwMrto["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_pRtVbKj=json({});
    return serialize_uint8_t(name.uuid[i]);}();
            return_kUwMrto["members"][std::to_string(i)].push_back(temp);
        }
        return return_kUwMrto;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int FDpCljS=0; FDpCljS < VK_UUID_SIZE; FDpCljS++){
            [&]() {
result.uuid[FDpCljS]=deserialize_uint8_t(name["members"]["uuid"]["members"][FDpCljS]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_stFpFAn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tUDPIjt=json({});
    
        if (name.pNext==NULL){
            return_tUDPIjt["null"]=true;
            return return_tUDPIjt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XmgqhVS=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_xNzayzV=json({});
    
        return_xNzayzV["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_qthxnoq=json({});
    return serialize_char(name.name[i]);}();
            return_xNzayzV["members"][std::to_string(i)].push_back(temp);
        }
        return return_xNzayzV;
        }();
result["members"]["category"]=[&]() {
    json return_tggAddH=json({});
    
        return_tggAddH["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_wgakzBR=json({});
    return serialize_char(name.category[i]);}();
            return_tggAddH["members"][std::to_string(i)].push_back(temp);
        }
        return return_tggAddH;
        }();
result["members"]["description"]=[&]() {
    json return_wIffKOD=json({});
    
        return_wIffKOD["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_PcFpKMH=json({});
    return serialize_char(name.description[i]);}();
            return_wIffKOD["members"][std::to_string(i)].push_back(temp);
        }
        return return_wIffKOD;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int jrWtvsy=0; jrWtvsy < VK_MAX_DESCRIPTION_SIZE; jrWtvsy++){
            [&]() {
result.name[jrWtvsy]=deserialize_char(name["members"]["name"]["members"][jrWtvsy]);}();;
        }
        }();
[&]() {

        for (int BgOASKt=0; BgOASKt < VK_MAX_DESCRIPTION_SIZE; BgOASKt++){
            [&]() {
result.category[BgOASKt]=deserialize_char(name["members"]["category"]["members"][BgOASKt]);}();;
        }
        }();
[&]() {

        for (int lbxQewp=0; lbxQewp < VK_MAX_DESCRIPTION_SIZE; lbxQewp++){
            [&]() {
result.description[lbxQewp]=deserialize_char(name["members"]["description"]["members"][lbxQewp]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XOfRgGO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lUXxzdv=json({});
    
        if (name.pNext==NULL){
            return_lUXxzdv["null"]=true;
            return return_lUXxzdv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_WgUlbLR=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_CcpPNed=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_RJHmhcf=json({});
    
        if (name.pCounterIndices==NULL){
            return_RJHmhcf["null"]=true;
            return return_RJHmhcf;
        }
        
        return_RJHmhcf["members"]={};
        for(int i=0; i < name.counterIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_PLCALec=json({});
    return serialize_uint32_t(name.pCounterIndices[i]);}();
            return_RJHmhcf["members"][std::to_string(i)].push_back(temp);
        }
        return return_RJHmhcf;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kXqfNfU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kXqfNfU=NULL;
        }
    temp_kXqfNfU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kXqfNfU;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_yhjPbGJ;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_yhjPbGJ=NULL;
        }
    temp_yhjPbGJ=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int QpaDJmL=0; QpaDJmL < result.counterIndexCount; QpaDJmL++){
            [&]() {
temp_yhjPbGJ[QpaDJmL]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][QpaDJmL]);}();;
        }
        }();result.pCounterIndices=temp_yhjPbGJ;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_vKzuAKg=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_YmaRqde=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_SPDLjqE=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_MQbdBkg=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_VLnCewl=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_wlfonEM=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RYfbkca=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aPUGMXR=json({});
    
        if (name.pNext==NULL){
            return_aPUGMXR["null"]=true;
            return return_aPUGMXR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fJmXgQM=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_hAcPDni=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pWSZKVk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pWSZKVk=NULL;
        }
    temp_pWSZKVk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pWSZKVk;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UqhVxpX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KEoYFGN=json({});
    
        if (name.pNext==NULL){
            return_KEoYFGN["null"]=true;
            return return_KEoYFGN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["counterPassIndex"]=[&]() {
    json return_bMYoasV=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_emzJQcx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_emzJQcx=NULL;
        }
    temp_emzJQcx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_emzJQcx;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kXVAjjP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XOaxdTm=json({});
    
        if (name.pNext==NULL){
            return_XOaxdTm["null"]=true;
            return return_XOaxdTm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mqhhoFi=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NZEeMQd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NZEeMQd=NULL;
        }
    temp_NZEeMQd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NZEeMQd;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ggWkAQk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WsbmyJj=json({});
    
        if (name.pNext==NULL){
            return_WsbmyJj["null"]=true;
            return return_WsbmyJj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_DdBgFwg=json({});
    return_DdBgFwg=[&]() {
    json return_feZyQZz=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_DdBgFwg;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HLvIQEJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aVyEAyb=json({});
    
        if (name.pNext==NULL){
            return_aVyEAyb["null"]=true;
            return return_aVyEAyb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hQsFOIk=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_MUPvFVE=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wUZHGIq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wUZHGIq=NULL;
        }
    temp_wUZHGIq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wUZHGIq;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qRIHhaz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SEuqDuz=json({});
    
        if (name.pNext==NULL){
            return_SEuqDuz["null"]=true;
            return return_SEuqDuz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_QbYCPbk=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_jWUxoqB=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_vUogqzf=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_sPxEIaL=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BNzLCVl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MhDesTP=json({});
    
        if (name.pNext==NULL){
            return_MhDesTP["null"]=true;
            return return_MhDesTP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_FwswOjZ=json({});
    return_FwswOjZ=[&]() {
    json return_LsXjHWt=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_FwswOjZ;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_tsPvcDi=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_TBWUpOS=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_lEIubpV=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_IfboelM=json({});
    return_IfboelM=[&]() {
    json return_XjoJotr=json({});
    return serialize_uint32_t(name.valueBool);}();return return_IfboelM;}();
result["members"]["valueString"]=[&]() {
    json return_gpWVZPb=json({});
    
        if (name.valueString==NULL){
            return_gpWVZPb["null"]=true;
            return return_gpWVZPb;
        }
        return serialize_char_p(name.valueString);
}();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_JNtrtBR;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_JNtrtBR=NULL;
        }
    temp_JNtrtBR=deserialize_char_p(name["members"]["valueString"]);
}();result.valueString=temp_JNtrtBR;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_nHQejhc=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_ZWsajby=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_leFnCaa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yCMvleA=json({});
    
        if (name.pNext==NULL){
            return_yCMvleA["null"]=true;
            return return_yCMvleA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pUserData"]=[&]() {
    json return_JGKGsng=json({});
    
        if (name.pUserData==NULL){
            return_JGKGsng["null"]=true;
            return return_JGKGsng;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mQfBnvt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mQfBnvt=NULL;
        }
    temp_mQfBnvt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mQfBnvt;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxpFvma=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_frhmffB=json({});
    
        if (name.pNext==NULL){
            return_frhmffB["null"]=true;
            return return_frhmffB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_YrkAHat=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZzEGQLh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZzEGQLh=NULL;
        }
    temp_ZzEGQLh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZzEGQLh;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RUgBDuh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QHZnfJD=json({});
    
        if (name.pNext==NULL){
            return_QHZnfJD["null"]=true;
            return return_QHZnfJD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_oJgroNn=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fvAdoZj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fvAdoZj=NULL;
        }
    temp_fvAdoZj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fvAdoZj;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ovsWRBS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cnIjbJl=json({});
    
        if (name.pNext==NULL){
            return_cnIjbJl["null"]=true;
            return return_cnIjbJl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_DNqjAdB=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fWpLURI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fWpLURI=NULL;
        }
    temp_fWpLURI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fWpLURI;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OVOSUKK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BwHcZuG=json({});
    
        if (name.pNext==NULL){
            return_BwHcZuG["null"]=true;
            return return_BwHcZuG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_qOdWYaN=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cXjOBpw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cXjOBpw=NULL;
        }
    temp_cXjOBpw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cXjOBpw;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NCmOqLy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hrcDdeO=json({});
    
        if (name.pNext==NULL){
            return_hrcDdeO["null"]=true;
            return return_hrcDdeO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_BVzkYxB=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_SKflsrT=json({});
    return_SKflsrT=[&]() {
    json return_LWPYnnb=json({});
    return serialize_uint32_t(name.enable);}();return return_SKflsrT;}();
result["members"]["parameter"]=[&]() {
    json return_ecGMFZs=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KiBMBXc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KiBMBXc=NULL;
        }
    temp_KiBMBXc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KiBMBXc;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EcfcVMB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MWZWkbj=json({});
    
        if (name.pNext==NULL){
            return_MWZWkbj["null"]=true;
            return return_MWZWkbj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_dlOQVIX=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mkOaBRs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mkOaBRs=NULL;
        }
    temp_mkOaBRs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mkOaBRs;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zDmnrhW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AntyLIo=json({});
    
        if (name.pNext==NULL){
            return_AntyLIo["null"]=true;
            return return_AntyLIo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_jjXnYxs=json({});
    return_jjXnYxs=[&]() {
    json return_wQNPPBt=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_jjXnYxs;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_xibPBGH=json({});
    return_xibPBGH=[&]() {
    json return_yjOkIGH=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_xibPBGH;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KtqduRZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXAMAQB=json({});
    
        if (name.pNext==NULL){
            return_QXAMAQB["null"]=true;
            return return_QXAMAQB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_HuTsXpV=json({});
    return_HuTsXpV=[&]() {
    json return_vzovaqZ=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_HuTsXpV;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aJadPmW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ISjsOhp=json({});
    
        if (name.pNext==NULL){
            return_ISjsOhp["null"]=true;
            return return_ISjsOhp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMCount"]=[&]() {
    json return_HMlDouh=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_uqHklGp=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wNOvPWZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_myAPIaf=json({});
    
        if (name.pNext==NULL){
            return_myAPIaf["null"]=true;
            return return_myAPIaf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_ooNpQtL=json({});
    return_ooNpQtL=[&]() {
    json return_uCCmtAn=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_ooNpQtL;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZxEFOlX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NTlEKXz=json({});
    
        if (name.pNext==NULL){
            return_NTlEKXz["null"]=true;
            return return_NTlEKXz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_JrNMUnK=json({});
    return_JrNMUnK=[&]() {
    json return_XFJZNbY=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_JrNMUnK;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_jZdhcEn=json({});
    return_jZdhcEn=[&]() {
    json return_biqrkkq=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_jZdhcEn;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_uwuKlOZ=json({});
    return_uwuKlOZ=[&]() {
    json return_gKmvczZ=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_uwuKlOZ;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HvAKppp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NQDCxNC=json({});
    
        if (name.pNext==NULL){
            return_NQDCxNC["null"]=true;
            return return_NQDCxNC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_ZxFDvfY=json({});
    return_ZxFDvfY=[&]() {
    json return_tqgHdRA=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_ZxFDvfY;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hhMLfxH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GUKoUEg=json({});
    
        if (name.pNext==NULL){
            return_GUKoUEg["null"]=true;
            return return_GUKoUEg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_NcJxLZY=json({});
    return_NcJxLZY=[&]() {
    json return_AYbxhDT=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_NcJxLZY;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MFVZClW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GHPwdXa=json({});
    
        if (name.pNext==NULL){
            return_GHPwdXa["null"]=true;
            return return_GHPwdXa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_ZaRTLUY=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gIXlPzc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fdcBZep=json({});
    
        if (name.pNext==NULL){
            return_fdcBZep["null"]=true;
            return return_fdcBZep;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_qpXVClz=json({});
    return_qpXVClz=[&]() {
    json return_CVtqpTl=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_qpXVClz;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_yiBYEuC=json({});
    return_yiBYEuC=[&]() {
    json return_PwsuHrM=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_yiBYEuC;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UAYloEr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ASzccdT=json({});
    
        if (name.pNext==NULL){
            return_ASzccdT["null"]=true;
            return return_ASzccdT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_yqHTZwa=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CEdJooz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mryIJio=json({});
    
        if (name.pNext==NULL){
            return_mryIJio["null"]=true;
            return return_mryIJio;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_yfOwijP=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_gKqChox=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yblKVtS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QNxuRPw=json({});
    
        if (name.pNext==NULL){
            return_QNxuRPw["null"]=true;
            return return_QNxuRPw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_PanKplh=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_bnbkUGl=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_egZPPtq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iUrJBpm=json({});
    
        if (name.pNext==NULL){
            return_iUrJBpm["null"]=true;
            return return_iUrJBpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_Etavpve=json({});
    return_Etavpve=[&]() {
    json return_SjXkgtq=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_Etavpve;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YQQPpBl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uIXlENy=json({});
    
        if (name.pNext==NULL){
            return_uIXlENy["null"]=true;
            return return_uIXlENy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_dDHfPIv=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DrcNftN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DrcNftN=NULL;
        }
    temp_DrcNftN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DrcNftN;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZEUCqSF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TknYQvX=json({});
    
        if (name.pNext==NULL){
            return_TknYQvX["null"]=true;
            return return_TknYQvX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_FXMHtaY=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ezzCSnP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ezzCSnP=NULL;
        }
    temp_ezzCSnP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ezzCSnP;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TQdzbbs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_orOguzK=json({});
    
        if (name.pNext==NULL){
            return_orOguzK["null"]=true;
            return return_orOguzK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stages"]=[&]() {
    json return_PApReam=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_zXqsRWO=json({});
    
        return_zXqsRWO["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_UzVRjAU=json({});
    return serialize_char(name.name[i]);}();
            return_zXqsRWO["members"][std::to_string(i)].push_back(temp);
        }
        return return_zXqsRWO;
        }();
result["members"]["description"]=[&]() {
    json return_eVGnDGz=json({});
    
        return_eVGnDGz["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_IdPxtSi=json({});
    return serialize_char(name.description[i]);}();
            return_eVGnDGz["members"][std::to_string(i)].push_back(temp);
        }
        return return_eVGnDGz;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_VnjJALT=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int NRQlfgs=0; NRQlfgs < VK_MAX_DESCRIPTION_SIZE; NRQlfgs++){
            [&]() {
result.name[NRQlfgs]=deserialize_char(name["members"]["name"]["members"][NRQlfgs]);}();;
        }
        }();
[&]() {

        for (int qMdRUOm=0; qMdRUOm < VK_MAX_DESCRIPTION_SIZE; qMdRUOm++){
            [&]() {
result.description[qMdRUOm]=deserialize_char(name["members"]["description"]["members"][qMdRUOm]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tiHbXzz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zsUWyfT=json({});
    
        if (name.pNext==NULL){
            return_zsUWyfT["null"]=true;
            return return_zsUWyfT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_YvEVGLP=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_KouElkt=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xbArysN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xbArysN=NULL;
        }
    temp_xbArysN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xbArysN;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_mANKdHS=json({});
    return_mANKdHS=[&]() {
    json return_iJJMNoI=json({});
    return serialize_uint32_t(name.b32);}();return return_mANKdHS;}();
result["members"]["i64"]=[&]() {
    json return_fclzYXF=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_rJGopft=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_flcMMto=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lHGbsIJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kERipBG=json({});
    
        if (name.pNext==NULL){
            return_kERipBG["null"]=true;
            return return_kERipBG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_TkJtZLT=json({});
    
        return_TkJtZLT["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LMjBfep=json({});
    return serialize_char(name.name[i]);}();
            return_TkJtZLT["members"][std::to_string(i)].push_back(temp);
        }
        return return_TkJtZLT;
        }();
result["members"]["description"]=[&]() {
    json return_RbiDAny=json({});
    
        return_RbiDAny["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_umzGnSw=json({});
    return serialize_char(name.description[i]);}();
            return_RbiDAny["members"][std::to_string(i)].push_back(temp);
        }
        return return_RbiDAny;
        }();
result["members"]["format"]=[&]() {
    json return_jxAnmlG=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_bzUZLON=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int oiYmULU=0; oiYmULU < VK_MAX_DESCRIPTION_SIZE; oiYmULU++){
            [&]() {
result.name[oiYmULU]=deserialize_char(name["members"]["name"]["members"][oiYmULU]);}();;
        }
        }();
[&]() {

        for (int ULYaavy=0; ULYaavy < VK_MAX_DESCRIPTION_SIZE; ULYaavy++){
            [&]() {
result.description[ULYaavy]=deserialize_char(name["members"]["description"]["members"][ULYaavy]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oDxyrBA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Gzyvxeb=json({});
    
        if (name.pNext==NULL){
            return_Gzyvxeb["null"]=true;
            return return_Gzyvxeb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_nngavGT=json({});
    
        return_nngavGT["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kZEDWAy=json({});
    return serialize_char(name.name[i]);}();
            return_nngavGT["members"][std::to_string(i)].push_back(temp);
        }
        return return_nngavGT;
        }();
result["members"]["description"]=[&]() {
    json return_XHLsbgH=json({});
    
        return_XHLsbgH["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_EWhVowV=json({});
    return serialize_char(name.description[i]);}();
            return_XHLsbgH["members"][std::to_string(i)].push_back(temp);
        }
        return return_XHLsbgH;
        }();
result["members"]["isText"]=[&]() {
    json return_XMmZcQe=json({});
    return_XMmZcQe=[&]() {
    json return_kEzRbqb=json({});
    return serialize_uint32_t(name.isText);}();return return_XMmZcQe;}();
result["members"]["dataSize"]=[&]() {
    json return_reDmIMa=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_HOdywtk=json({});
    
        if (name.pData==NULL){
            return_HOdywtk["null"]=true;
            return return_HOdywtk;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wgSevNp=0; wgSevNp < VK_MAX_DESCRIPTION_SIZE; wgSevNp++){
            [&]() {
result.name[wgSevNp]=deserialize_char(name["members"]["name"]["members"][wgSevNp]);}();;
        }
        }();
[&]() {

        for (int BJLEhcR=0; BJLEhcR < VK_MAX_DESCRIPTION_SIZE; BJLEhcR++){
            [&]() {
result.description[BJLEhcR]=deserialize_char(name["members"]["description"]["members"][BJLEhcR]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        }
    result.pData=deserialize_void_p(name["members"]["pData"]);
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nsnYhca=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CZDElHI=json({});
    
        if (name.pNext==NULL){
            return_CZDElHI["null"]=true;
            return return_CZDElHI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_jiGPfeW=json({});
    return_jiGPfeW=[&]() {
    json return_MfYrtXk=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_jiGPfeW;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YDwJvqt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XipRGsz=json({});
    
        if (name.pNext==NULL){
            return_XipRGsz["null"]=true;
            return return_XipRGsz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_LczqtIc=json({});
    return_LczqtIc=[&]() {
    json return_gQHVgzf=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_LczqtIc;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Xostnmf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GAkIZDR=json({});
    
        if (name.pNext==NULL){
            return_GAkIZDR["null"]=true;
            return return_GAkIZDR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_otDkhfM=json({});
    return_otDkhfM=[&]() {
    json return_bJyeYZj=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_otDkhfM;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bdLlgQs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uCvCuQg=json({});
    
        if (name.pNext==NULL){
            return_uCvCuQg["null"]=true;
            return return_uCvCuQg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_xpvvvze=json({});
    return_xpvvvze=[&]() {
    json return_POFyFnp=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_xpvvvze;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_YjDFhgy=json({});
    return_YjDFhgy=[&]() {
    json return_WxVUKpc=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_YjDFhgy;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_MncTyEH=json({});
    return_MncTyEH=[&]() {
    json return_McFtphD=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_MncTyEH;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_scihtGy=json({});
    return_scihtGy=[&]() {
    json return_bpoPDgm=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_scihtGy;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YjaxpZy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IiWYOid=json({});
    
        if (name.pNext==NULL){
            return_IiWYOid["null"]=true;
            return return_IiWYOid;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_bPJtZwj=json({});
    return_bPJtZwj=[&]() {
    json return_ASdIhSe=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_bPJtZwj;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_XTSYKzb=json({});
    return_XTSYKzb=[&]() {
    json return_saheXRC=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_XTSYKzb;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_UElnMTc=json({});
    return_UElnMTc=[&]() {
    json return_FMPbxwY=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_UElnMTc;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_fwBWASy=json({});
    return_fwBWASy=[&]() {
    json return_RxAcvAQ=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_fwBWASy;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qLvyVGs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZkOxIce=json({});
    
        if (name.pNext==NULL){
            return_ZkOxIce["null"]=true;
            return return_ZkOxIce;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_kGrgFQi=json({});
    return_kGrgFQi=[&]() {
    json return_IDsWgIo=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_kGrgFQi;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_NWHIlOG=json({});
    return_NWHIlOG=[&]() {
    json return_EbtaHqU=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_NWHIlOG;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iITZKIG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UtcuhFH=json({});
    
        if (name.pNext==NULL){
            return_UtcuhFH["null"]=true;
            return return_UtcuhFH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_WruuTVd=json({});
    return_WruuTVd=[&]() {
    json return_rUiCkqn=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_WruuTVd;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_IQJhkgc=json({});
    return_IQJhkgc=[&]() {
    json return_qRDEHLG=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_IQJhkgc;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XFyDaUI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uIdCAKC=json({});
    
        if (name.pNext==NULL){
            return_uIdCAKC["null"]=true;
            return return_uIdCAKC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_SFHaOvo=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_GOjSDcf=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_BYgrLTh=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_dvyVKqT=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VyGnwMC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OfqiXeg=json({});
    
        if (name.pNext==NULL){
            return_OfqiXeg["null"]=true;
            return return_OfqiXeg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_iWOQOZW=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_JDpOssT=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_zbLrYtQ=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_yKUJASf=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wHfYIMW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xclxdaA=json({});
    
        if (name.pNext==NULL){
            return_xclxdaA["null"]=true;
            return return_xclxdaA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_sombYbK=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kaxAVpQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UeVarAW=json({});
    
        if (name.pNext==NULL){
            return_UeVarAW["null"]=true;
            return return_UeVarAW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_ZiETZOI=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fhBbuUq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PrFMSVy=json({});
    
        if (name.pNext==NULL){
            return_PrFMSVy["null"]=true;
            return return_PrFMSVy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_JeZlwbc=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lvalRYg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yKPaZLs=json({});
    
        if (name.pNext==NULL){
            return_yKPaZLs["null"]=true;
            return return_yKPaZLs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_OkEAFpt=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_ruMViqd=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hTEzIyn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JhwlZeU=json({});
    
        if (name.pNext==NULL){
            return_JhwlZeU["null"]=true;
            return return_JhwlZeU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_ZTStLvu=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_khaTUuF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kTxWvHZ=json({});
    
        if (name.pNext==NULL){
            return_kTxWvHZ["null"]=true;
            return return_kTxWvHZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_TLMsVEB=json({});
    
        return_TLMsVEB["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_JtdQzuS=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[i]);}();
            return_TLMsVEB["members"][std::to_string(i)].push_back(temp);
        }
        return return_TLMsVEB;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_UPDhnWp=json({});
    
        return_UPDhnWp["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_lLjFovq=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[i]);}();
            return_UPDhnWp["members"][std::to_string(i)].push_back(temp);
        }
        return return_UPDhnWp;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_GKxXIWv=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_PGMCPqv=json({});
    return_PGMCPqv=[&]() {
    json return_OPRFhTj=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_PGMCPqv;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int vDUAaJW=0; vDUAaJW < 3; vDUAaJW++){
            [&]() {
result.maxWorkGroupCount[vDUAaJW]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][vDUAaJW]);}();;
        }
        }();
[&]() {

        for (int qaLhbcG=0; qaLhbcG < 3; qaLhbcG++){
            [&]() {
result.maxWorkGroupSize[qaLhbcG]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][qaLhbcG]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kScnnVc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mVZFIex=json({});
    
        if (name.pNext==NULL){
            return_mVZFIex["null"]=true;
            return return_mVZFIex;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_nsBULYX=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HfNozjx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HfNozjx=NULL;
        }
    temp_HfNozjx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HfNozjx;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xrlmKbl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wQxuyug=json({});
    
        if (name.pNext==NULL){
            return_wQxuyug["null"]=true;
            return return_wQxuyug;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_ldACoFd=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TpoGAJS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TpoGAJS=NULL;
        }
    temp_TpoGAJS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TpoGAJS;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ErfIUYS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GgRNSdQ=json({});
    
        if (name.pNext==NULL){
            return_GgRNSdQ["null"]=true;
            return return_GgRNSdQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_fDbgmlj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EyiYUJd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EyiYUJd=NULL;
        }
    temp_EyiYUJd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EyiYUJd;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AAoRCIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ybTYKOy=json({});
    
        if (name.pNext==NULL){
            return_ybTYKOy["null"]=true;
            return return_ybTYKOy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_bzJmiLs=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZtJqVfH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZtJqVfH=NULL;
        }
    temp_ZtJqVfH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZtJqVfH;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hsuWrjv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YvzdAif=json({});
    
        if (name.pNext==NULL){
            return_YvzdAif["null"]=true;
            return return_YvzdAif;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rectangularLines"]=[&]() {
    json return_iRPfBDj=json({});
    return_iRPfBDj=[&]() {
    json return_vmgRSKk=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_iRPfBDj;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_eGVyTNn=json({});
    return_eGVyTNn=[&]() {
    json return_RUqcyqC=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_eGVyTNn;}();
result["members"]["smoothLines"]=[&]() {
    json return_iDWRtLE=json({});
    return_iDWRtLE=[&]() {
    json return_eFNhOtd=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_iDWRtLE;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_IioDhNr=json({});
    return_IioDhNr=[&]() {
    json return_ZUSBkCv=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_IioDhNr;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_NNOTAZX=json({});
    return_NNOTAZX=[&]() {
    json return_BRAiRKQ=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_NNOTAZX;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_FWxsuUq=json({});
    return_FWxsuUq=[&]() {
    json return_cjOhghv=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_FWxsuUq;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OqSjmKi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZwjNtcS=json({});
    
        if (name.pNext==NULL){
            return_ZwjNtcS["null"]=true;
            return return_ZwjNtcS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_IWkbgVX=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GgokHhT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPuNwNU=json({});
    
        if (name.pNext==NULL){
            return_FPuNwNU["null"]=true;
            return return_FPuNwNU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_yrkrLiJ=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_fxSzdVx=json({});
    return_fxSzdVx=[&]() {
    json return_HqHzYEm=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_fxSzdVx;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_lVJXdMB=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_iKBvcBs=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fCrZXkJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fCrZXkJ=NULL;
        }
    temp_fCrZXkJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fCrZXkJ;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BKeIzdP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pAaSDFt=json({});
    
        if (name.pNext==NULL){
            return_pAaSDFt["null"]=true;
            return return_pAaSDFt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_WmlWJku=json({});
    return_WmlWJku=[&]() {
    json return_nYyKFlS=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_WmlWJku;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ERkmIDp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tKaFVlc=json({});
    
        if (name.pNext==NULL){
            return_tKaFVlc["null"]=true;
            return return_tKaFVlc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_rNVgflk=json({});
    return_rNVgflk=[&]() {
    json return_FdJyDCO=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_rNVgflk;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GcSOjnE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lsQrqLc=json({});
    
        if (name.pNext==NULL){
            return_lsQrqLc["null"]=true;
            return return_lsQrqLc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_NPqZjTg=json({});
    return_NPqZjTg=[&]() {
    json return_dZpODzN=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_NPqZjTg;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_osyEdcu=json({});
    return_osyEdcu=[&]() {
    json return_vepYKbG=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_osyEdcu;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_CzmMHaJ=json({});
    return_CzmMHaJ=[&]() {
    json return_lLQuRsW=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_CzmMHaJ;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_ULJBkZm=json({});
    return_ULJBkZm=[&]() {
    json return_sLqeVeZ=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_ULJBkZm;}();
result["members"]["multiview"]=[&]() {
    json return_uOFnJNL=json({});
    return_uOFnJNL=[&]() {
    json return_lDLiOeP=json({});
    return serialize_uint32_t(name.multiview);}();return return_uOFnJNL;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_lPrvzFv=json({});
    return_lPrvzFv=[&]() {
    json return_ZEOlGnr=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_lPrvzFv;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_BHmDyuS=json({});
    return_BHmDyuS=[&]() {
    json return_QgbKXcL=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_BHmDyuS;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_xXRWUYf=json({});
    return_xXRWUYf=[&]() {
    json return_UvJqMhY=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_xXRWUYf;}();
result["members"]["variablePointers"]=[&]() {
    json return_AGVZEXP=json({});
    return_AGVZEXP=[&]() {
    json return_ZhQqCNm=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_AGVZEXP;}();
result["members"]["protectedMemory"]=[&]() {
    json return_eeaysnR=json({});
    return_eeaysnR=[&]() {
    json return_SpLvozl=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_eeaysnR;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_CXjuSSs=json({});
    return_CXjuSSs=[&]() {
    json return_zzhZcLQ=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_CXjuSSs;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_AbKVzoT=json({});
    return_AbKVzoT=[&]() {
    json return_BBNYvqZ=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_AbKVzoT;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jJCpDoo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WJUIfYu=json({});
    
        if (name.pNext==NULL){
            return_WJUIfYu["null"]=true;
            return return_WJUIfYu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_RLsMRov=json({});
    
        return_RLsMRov["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uDvXVlV=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_RLsMRov["members"][std::to_string(i)].push_back(temp);
        }
        return return_RLsMRov;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_TnrNcAV=json({});
    
        return_TnrNcAV["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HprArHU=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_TnrNcAV["members"][std::to_string(i)].push_back(temp);
        }
        return return_TnrNcAV;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_keHHarK=json({});
    
        return_keHHarK["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_fyQYTgX=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_keHHarK["members"][std::to_string(i)].push_back(temp);
        }
        return return_keHHarK;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_QbzhvxO=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_WpDTylo=json({});
    return_WpDTylo=[&]() {
    json return_rIVKOmZ=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_WpDTylo;}();
result["members"]["subgroupSize"]=[&]() {
    json return_hMeuLjK=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_oEQeYfo=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_IRkUXPl=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_wdERhiH=json({});
    return_wdERhiH=[&]() {
    json return_BWgOkFn=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_wdERhiH;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_vmJwFIP=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_xMWFCsg=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_eVwsZAb=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_hOebkNv=json({});
    return_hOebkNv=[&]() {
    json return_DArcwYE=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_hOebkNv;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_LcsyzbQ=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_vMgJSsp=json({});
    return_vMgJSsp=[&]() {
    json return_opCgCsR=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_vMgJSsp;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int LgovCvv=0; LgovCvv < VK_UUID_SIZE; LgovCvv++){
            [&]() {
result.deviceUUID[LgovCvv]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][LgovCvv]);}();;
        }
        }();
[&]() {

        for (int QjEHqvy=0; QjEHqvy < VK_UUID_SIZE; QjEHqvy++){
            [&]() {
result.driverUUID[QjEHqvy]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][QjEHqvy]);}();;
        }
        }();
[&]() {

        for (int FYMyHJt=0; FYMyHJt < VK_LUID_SIZE; FYMyHJt++){
            [&]() {
result.deviceLUID[FYMyHJt]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][FYMyHJt]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tLzLBTR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TeqOtbK=json({});
    
        if (name.pNext==NULL){
            return_TeqOtbK["null"]=true;
            return return_TeqOtbK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_aXwGSIp=json({});
    return_aXwGSIp=[&]() {
    json return_pIRFUOS=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_aXwGSIp;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_bhZxAfa=json({});
    return_bhZxAfa=[&]() {
    json return_wmDJgFY=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_bhZxAfa;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_TJZjBNr=json({});
    return_TJZjBNr=[&]() {
    json return_jRcqCII=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_TJZjBNr;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_CIrojsx=json({});
    return_CIrojsx=[&]() {
    json return_rObgTZH=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_CIrojsx;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_xsNeEjp=json({});
    return_xsNeEjp=[&]() {
    json return_TvWwMuv=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_xsNeEjp;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_EAJdEwa=json({});
    return_EAJdEwa=[&]() {
    json return_gBTYilX=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_EAJdEwa;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_gqKRQjX=json({});
    return_gqKRQjX=[&]() {
    json return_ksdZKRF=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_gqKRQjX;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_VPmVtSl=json({});
    return_VPmVtSl=[&]() {
    json return_fugOUZT=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_VPmVtSl;}();
result["members"]["shaderInt8"]=[&]() {
    json return_DXYeFUb=json({});
    return_DXYeFUb=[&]() {
    json return_ayRScQP=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_DXYeFUb;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_UxTfgLp=json({});
    return_UxTfgLp=[&]() {
    json return_fwUPIiO=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_UxTfgLp;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_QWduzfQ=json({});
    return_QWduzfQ=[&]() {
    json return_KTaWSrQ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_QWduzfQ;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_GXgWbKV=json({});
    return_GXgWbKV=[&]() {
    json return_tVXfhAa=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_GXgWbKV;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_urYdiie=json({});
    return_urYdiie=[&]() {
    json return_pSpvhUF=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_urYdiie;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_GzmyEWh=json({});
    return_GzmyEWh=[&]() {
    json return_cGzFotG=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_GzmyEWh;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_MAcUSfQ=json({});
    return_MAcUSfQ=[&]() {
    json return_SZSjYUS=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_MAcUSfQ;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_JgnjYnN=json({});
    return_JgnjYnN=[&]() {
    json return_DnsIadr=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_JgnjYnN;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_jFVyQJB=json({});
    return_jFVyQJB=[&]() {
    json return_rDhRXCp=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_jFVyQJB;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_sYeXkGA=json({});
    return_sYeXkGA=[&]() {
    json return_gtsAQBT=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_sYeXkGA;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_rBqffLj=json({});
    return_rBqffLj=[&]() {
    json return_pHuvYxU=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_rBqffLj;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_AxAfgUv=json({});
    return_AxAfgUv=[&]() {
    json return_dXaqCZe=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_AxAfgUv;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_qKSSkKL=json({});
    return_qKSSkKL=[&]() {
    json return_cGoPzdQ=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_qKSSkKL;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_TDtWbgu=json({});
    return_TDtWbgu=[&]() {
    json return_VnneVrc=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_TDtWbgu;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_RUOXMjs=json({});
    return_RUOXMjs=[&]() {
    json return_BwktjpK=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_RUOXMjs;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_PAcVITh=json({});
    return_PAcVITh=[&]() {
    json return_GNycYGz=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_PAcVITh;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_VqSpifW=json({});
    return_VqSpifW=[&]() {
    json return_BSIyJmI=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_VqSpifW;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_JjmAcaB=json({});
    return_JjmAcaB=[&]() {
    json return_mlPbnom=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_JjmAcaB;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_CBclXMI=json({});
    return_CBclXMI=[&]() {
    json return_AyYBCna=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_CBclXMI;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_lUNxlqx=json({});
    return_lUNxlqx=[&]() {
    json return_cBDgcQv=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_lUNxlqx;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_CrJQDnm=json({});
    return_CrJQDnm=[&]() {
    json return_tKAFhcR=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_CrJQDnm;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_EXhPybS=json({});
    return_EXhPybS=[&]() {
    json return_ssZTNVU=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_EXhPybS;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_drQWBdN=json({});
    return_drQWBdN=[&]() {
    json return_QgSJimU=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_drQWBdN;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_VPgrGhb=json({});
    return_VPgrGhb=[&]() {
    json return_vNhUocF=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_VPgrGhb;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_UmrdSPW=json({});
    return_UmrdSPW=[&]() {
    json return_InEQGWo=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_UmrdSPW;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_untoJOS=json({});
    return_untoJOS=[&]() {
    json return_puOpqTC=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_untoJOS;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_DTjZPCR=json({});
    return_DTjZPCR=[&]() {
    json return_YpyqxxC=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_DTjZPCR;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_UBIAtPd=json({});
    return_UBIAtPd=[&]() {
    json return_gmcrLhd=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_UBIAtPd;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_rJkidSM=json({});
    return_rJkidSM=[&]() {
    json return_yRLXdDf=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_rJkidSM;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_IJjTJdM=json({});
    return_IJjTJdM=[&]() {
    json return_VZfQJwb=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_IJjTJdM;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_ZwBOZYJ=json({});
    return_ZwBOZYJ=[&]() {
    json return_CgOnEET=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_ZwBOZYJ;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_aTWdMNR=json({});
    return_aTWdMNR=[&]() {
    json return_zvGEYzK=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_aTWdMNR;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_mTgzTYm=json({});
    return_mTgzTYm=[&]() {
    json return_gEuesut=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_mTgzTYm;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_OOZvfCc=json({});
    return_OOZvfCc=[&]() {
    json return_QFwgdMI=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_OOZvfCc;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_UVuFHPV=json({});
    return_UVuFHPV=[&]() {
    json return_XSPJdfD=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_UVuFHPV;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_EzJSVQB=json({});
    return_EzJSVQB=[&]() {
    json return_CeRkMOA=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_EzJSVQB;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_dFJCXLp=json({});
    return_dFJCXLp=[&]() {
    json return_vSnLJEl=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_dFJCXLp;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_vlvqgjR=json({});
    return_vlvqgjR=[&]() {
    json return_iGClWSj=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_vlvqgjR;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_roCzcwP=json({});
    return_roCzcwP=[&]() {
    json return_iFwSRbp=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_roCzcwP;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FWonNRp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JtxCPmS=json({});
    
        if (name.pNext==NULL){
            return_JtxCPmS["null"]=true;
            return return_JtxCPmS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_scpQZLb=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_HlzxJup=json({});
    
        return_HlzxJup["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LVxcOgX=json({});
    return serialize_char(name.driverName[i]);}();
            return_HlzxJup["members"][std::to_string(i)].push_back(temp);
        }
        return return_HlzxJup;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_GmxJRbJ=json({});
    
        return_GmxJRbJ["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aLeXcVG=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_GmxJRbJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_GmxJRbJ;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_wwuukVF=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_sTTVjhl=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_jNAUTyR=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_iYqEHql=json({});
    return_iYqEHql=[&]() {
    json return_blATiAn=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_iYqEHql;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_wQJtKYe=json({});
    return_wQJtKYe=[&]() {
    json return_SHxfdOL=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_wQJtKYe;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_IHDCysp=json({});
    return_IHDCysp=[&]() {
    json return_ihwOfwt=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_IHDCysp;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_fxlIRBS=json({});
    return_fxlIRBS=[&]() {
    json return_DmwuQkp=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_fxlIRBS;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_WXkuBnJ=json({});
    return_WXkuBnJ=[&]() {
    json return_xCOQNVh=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_WXkuBnJ;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_cgWGNJV=json({});
    return_cgWGNJV=[&]() {
    json return_WkRddAX=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_cgWGNJV;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_trHVHvf=json({});
    return_trHVHvf=[&]() {
    json return_iFtNcCJ=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_trHVHvf;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_lGZHOEJ=json({});
    return_lGZHOEJ=[&]() {
    json return_EWpLhJb=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_lGZHOEJ;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_KOAqVAg=json({});
    return_KOAqVAg=[&]() {
    json return_MgZxkMU=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_KOAqVAg;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_snAkFpd=json({});
    return_snAkFpd=[&]() {
    json return_exzpdot=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_snAkFpd;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_mpocXSN=json({});
    return_mpocXSN=[&]() {
    json return_QMWtmeQ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_mpocXSN;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_RhATqtj=json({});
    return_RhATqtj=[&]() {
    json return_eddNbXn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_RhATqtj;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_jJHsFBs=json({});
    return_jJHsFBs=[&]() {
    json return_vENvPQP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_jJHsFBs;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_LlrFpOB=json({});
    return_LlrFpOB=[&]() {
    json return_QWCQcce=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_LlrFpOB;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_RpNZAoF=json({});
    return_RpNZAoF=[&]() {
    json return_msmCMEQ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_RpNZAoF;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_WDbPiXr=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_KPOsCyh=json({});
    return_KPOsCyh=[&]() {
    json return_UpJblin=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_KPOsCyh;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_ozVyyde=json({});
    return_ozVyyde=[&]() {
    json return_ZDYEdGm=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_ozVyyde;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_IDRBMKX=json({});
    return_IDRBMKX=[&]() {
    json return_WqpMEqt=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_IDRBMKX;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_Wkcptms=json({});
    return_Wkcptms=[&]() {
    json return_gnMNljI=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_Wkcptms;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_forPMcS=json({});
    return_forPMcS=[&]() {
    json return_bMDPCuF=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_forPMcS;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_ghSQYAB=json({});
    return_ghSQYAB=[&]() {
    json return_cEGrJWJ=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_ghSQYAB;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_cAQKoCe=json({});
    return_cAQKoCe=[&]() {
    json return_WafJKLL=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_cAQKoCe;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_chRwfwb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_TGhKbmX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_DtsvpPn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_QojspnO=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_aOEgGdh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_jRphtTY=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_gDgHBVC=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_OMNZKiR=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_gLnzbaG=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_EnLfcsh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_pLZpcjB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_eTIKsuP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_RKWLkOH=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_VqlDDwy=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_jJruvDn=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_LoRqoKV=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_rIefviR=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_atfQQDs=json({});
    return_atfQQDs=[&]() {
    json return_CcgiZJY=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_atfQQDs;}();
result["members"]["independentResolve"]=[&]() {
    json return_YKmkzSZ=json({});
    return_YKmkzSZ=[&]() {
    json return_ASbJHwI=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_YKmkzSZ;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_PbPCATW=json({});
    return_PbPCATW=[&]() {
    json return_LEELywX=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_PbPCATW;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_tIRMTqb=json({});
    return_tIRMTqb=[&]() {
    json return_izgSuWk=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_tIRMTqb;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_VaMgrIG=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_OBMNeTW=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int vhkMRwz=0; vhkMRwz < VK_MAX_DRIVER_NAME_SIZE; vhkMRwz++){
            [&]() {
result.driverName[vhkMRwz]=deserialize_char(name["members"]["driverName"]["members"][vhkMRwz]);}();;
        }
        }();
[&]() {

        for (int wdEaWeL=0; wdEaWeL < VK_MAX_DRIVER_INFO_SIZE; wdEaWeL++){
            [&]() {
result.driverInfo[wdEaWeL]=deserialize_char(name["members"]["driverInfo"]["members"][wdEaWeL]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rLawJnu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fTOMZdN=json({});
    
        if (name.pNext==NULL){
            return_fTOMZdN["null"]=true;
            return return_fTOMZdN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_psLyAhn=json({});
    return_psLyAhn=[&]() {
    json return_BYqxIDr=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_psLyAhn;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_cQpkwsv=json({});
    return_cQpkwsv=[&]() {
    json return_clZlmAx=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_cQpkwsv;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_uErpaEC=json({});
    return_uErpaEC=[&]() {
    json return_bOSqVWr=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_uErpaEC;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_rnmwsMD=json({});
    return_rnmwsMD=[&]() {
    json return_MPAqMJj=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_rnmwsMD;}();
result["members"]["privateData"]=[&]() {
    json return_NoqnvZM=json({});
    return_NoqnvZM=[&]() {
    json return_TLOZXMs=json({});
    return serialize_uint32_t(name.privateData);}();return return_NoqnvZM;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_bHyliaP=json({});
    return_bHyliaP=[&]() {
    json return_miQqDAs=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_bHyliaP;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_zmNxQYd=json({});
    return_zmNxQYd=[&]() {
    json return_WCZHwQX=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_zmNxQYd;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_BFLIKEn=json({});
    return_BFLIKEn=[&]() {
    json return_yzzwzrU=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_BFLIKEn;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_XumGzla=json({});
    return_XumGzla=[&]() {
    json return_aTnlYyZ=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_XumGzla;}();
result["members"]["synchronization2"]=[&]() {
    json return_bPQKbWW=json({});
    return_bPQKbWW=[&]() {
    json return_wqXzRGc=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_bPQKbWW;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_mWtVPGo=json({});
    return_mWtVPGo=[&]() {
    json return_ZeggNpe=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_mWtVPGo;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_vXPKKmg=json({});
    return_vXPKKmg=[&]() {
    json return_EoETtEr=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_vXPKKmg;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_iOkRcOX=json({});
    return_iOkRcOX=[&]() {
    json return_INSsDGn=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_iOkRcOX;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_Cbkfutr=json({});
    return_Cbkfutr=[&]() {
    json return_CIZfDwJ=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_Cbkfutr;}();
result["members"]["maintenance4"]=[&]() {
    json return_oLPugHW=json({});
    return_oLPugHW=[&]() {
    json return_NgEeCsL=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_oLPugHW;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FPaioRj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bIkupmy=json({});
    
        if (name.pNext==NULL){
            return_bIkupmy["null"]=true;
            return return_bIkupmy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_zxSFpcd=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_hHaMHxu=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_Pjfxfio=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_jaShUuh=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_djFFpWU=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_IpHcjNN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_yZaeiUs=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_UFdsObl=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_EqKCSRb=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_BMDaFPn=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_BBOZaPB=json({});
    return_BBOZaPB=[&]() {
    json return_WcjOgfK=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_BBOZaPB;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_vnQvUSO=json({});
    return_vnQvUSO=[&]() {
    json return_MBoiGEc=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_vnQvUSO;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_sIoRSEF=json({});
    return_sIoRSEF=[&]() {
    json return_tLxyuSO=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_sIoRSEF;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_GGrVohP=json({});
    return_GGrVohP=[&]() {
    json return_gyiYKTm=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_GGrVohP;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_ApInchX=json({});
    return_ApInchX=[&]() {
    json return_FSgOdqj=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_ApInchX;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_wzNGxGV=json({});
    return_wzNGxGV=[&]() {
    json return_iUpqoai=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_wzNGxGV;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_mKWQpsU=json({});
    return_mKWQpsU=[&]() {
    json return_kPejpiu=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_mKWQpsU;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_KNhsAnj=json({});
    return_KNhsAnj=[&]() {
    json return_MceXLjD=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_KNhsAnj;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_prRBqYa=json({});
    return_prRBqYa=[&]() {
    json return_cOUPgke=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_prRBqYa;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_jFamNZb=json({});
    return_jFamNZb=[&]() {
    json return_xzuBXJg=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_jFamNZb;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_RryIPUX=json({});
    return_RryIPUX=[&]() {
    json return_xndwzRf=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_RryIPUX;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_StYYThS=json({});
    return_StYYThS=[&]() {
    json return_gAtNLSY=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_StYYThS;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_AkPLUEM=json({});
    return_AkPLUEM=[&]() {
    json return_eGoqLJY=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_AkPLUEM;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_WMXkWQx=json({});
    return_WMXkWQx=[&]() {
    json return_rhRcGUT=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_WMXkWQx;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_PSxikQD=json({});
    return_PSxikQD=[&]() {
    json return_UWEZZLN=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_PSxikQD;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_PevUjyg=json({});
    return_PevUjyg=[&]() {
    json return_igzHrKM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_PevUjyg;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_bfNZfbg=json({});
    return_bfNZfbg=[&]() {
    json return_nVlQSMV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_bfNZfbg;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_jiUhFfX=json({});
    return_jiUhFfX=[&]() {
    json return_xYXQBCp=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_jiUhFfX;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_gbuKEUS=json({});
    return_gbuKEUS=[&]() {
    json return_ypolTFO=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_gbuKEUS;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_OIZhchZ=json({});
    return_OIZhchZ=[&]() {
    json return_mKBERhG=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_OIZhchZ;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_jZXroLy=json({});
    return_jZXroLy=[&]() {
    json return_TKGVjUL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_jZXroLy;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_EmWcBuR=json({});
    return_EmWcBuR=[&]() {
    json return_lGeMIXg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_EmWcBuR;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_ZyrSCeM=json({});
    return_ZyrSCeM=[&]() {
    json return_sgQhavr=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_ZyrSCeM;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_UhoXksm=json({});
    return_UhoXksm=[&]() {
    json return_rqXSKUR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_UhoXksm;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_tjOlXvn=json({});
    return_tjOlXvn=[&]() {
    json return_jkOlQtP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_tjOlXvn;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_srARsER=json({});
    return_srARsER=[&]() {
    json return_oQnWzAQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_srARsER;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_PlSFuCw=json({});
    return_PlSFuCw=[&]() {
    json return_EKhURbZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_PlSFuCw;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_UvWYYvb=json({});
    return_UvWYYvb=[&]() {
    json return_ntmUpXV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_UvWYYvb;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_NxKcwwb=json({});
    return_NxKcwwb=[&]() {
    json return_tiFDSqN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_NxKcwwb;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_lZZiKQh=json({});
    return_lZZiKQh=[&]() {
    json return_GzslxEU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_lZZiKQh;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_jMrylQh=json({});
    return_jMrylQh=[&]() {
    json return_XSdgGOV=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_jMrylQh;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_aQdjSec=json({});
    return_aQdjSec=[&]() {
    json return_VsGZvcY=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_aQdjSec;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_zoLhUuw=json({});
    return_zoLhUuw=[&]() {
    json return_ffLfCai=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_zoLhUuw;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_rphcatQ=json({});
    return_rphcatQ=[&]() {
    json return_TjxYXiU=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_rphcatQ;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_vhZvfGn=json({});
    return_vhZvfGn=[&]() {
    json return_WGAIiBI=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_vhZvfGn;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BLnsNkA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cRDYLGV=json({});
    
        if (name.pNext==NULL){
            return_cRDYLGV["null"]=true;
            return return_cRDYLGV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_LFwrdPN=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BrUqnKg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BrUqnKg=NULL;
        }
    temp_BrUqnKg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BrUqnKg;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wQXnqKB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_akhIdGy=json({});
    
        if (name.pNext==NULL){
            return_akhIdGy["null"]=true;
            return return_akhIdGy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_dRVDMoI=json({});
    return_dRVDMoI=[&]() {
    json return_aEvXKta=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_dRVDMoI;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AWQmzZP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zrNedcD=json({});
    
        if (name.pNext==NULL){
            return_zrNedcD["null"]=true;
            return return_zrNedcD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_vtulOBX=json({});
    
        return_vtulOBX["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ABcVipl=json({});
    return serialize_char(name.name[i]);}();
            return_vtulOBX["members"][std::to_string(i)].push_back(temp);
        }
        return return_vtulOBX;
        }();
result["members"]["version"]=[&]() {
    json return_DzfFmBd=json({});
    
        return_DzfFmBd["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FlopOeX=json({});
    return serialize_char(name.version[i]);}();
            return_DzfFmBd["members"][std::to_string(i)].push_back(temp);
        }
        return return_DzfFmBd;
        }();
result["members"]["purposes"]=[&]() {
    json return_NufUHel=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_KKiabNx=json({});
    
        return_KKiabNx["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_KXAmsRt=json({});
    return serialize_char(name.description[i]);}();
            return_KKiabNx["members"][std::to_string(i)].push_back(temp);
        }
        return return_KKiabNx;
        }();
result["members"]["layer"]=[&]() {
    json return_SctYeZl=json({});
    
        return_SctYeZl["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_hEJZGGR=json({});
    return serialize_char(name.layer[i]);}();
            return_SctYeZl["members"][std::to_string(i)].push_back(temp);
        }
        return return_SctYeZl;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int ztAVeyS=0; ztAVeyS < VK_MAX_EXTENSION_NAME_SIZE; ztAVeyS++){
            [&]() {
result.name[ztAVeyS]=deserialize_char(name["members"]["name"]["members"][ztAVeyS]);}();;
        }
        }();
[&]() {

        for (int TIAfuZc=0; TIAfuZc < VK_MAX_EXTENSION_NAME_SIZE; TIAfuZc++){
            [&]() {
result.version[TIAfuZc]=deserialize_char(name["members"]["version"]["members"][TIAfuZc]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int bicsQum=0; bicsQum < VK_MAX_DESCRIPTION_SIZE; bicsQum++){
            [&]() {
result.description[bicsQum]=deserialize_char(name["members"]["description"]["members"][bicsQum]);}();;
        }
        }();
[&]() {

        for (int gowbHim=0; gowbHim < VK_MAX_EXTENSION_NAME_SIZE; gowbHim++){
            [&]() {
result.layer[gowbHim]=deserialize_char(name["members"]["layer"]["members"][gowbHim]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fCHhuxb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GusfikY=json({});
    
        if (name.pNext==NULL){
            return_GusfikY["null"]=true;
            return return_GusfikY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_wCiUPbE=json({});
    
        return_wCiUPbE["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_GECWdmf=json({});
    return serialize_char(name.name[i]);}();
            return_wCiUPbE["members"][std::to_string(i)].push_back(temp);
        }
        return return_wCiUPbE;
        }();
result["members"]["version"]=[&]() {
    json return_ulJlABv=json({});
    
        return_ulJlABv["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RlcyKjW=json({});
    return serialize_char(name.version[i]);}();
            return_ulJlABv["members"][std::to_string(i)].push_back(temp);
        }
        return return_ulJlABv;
        }();
result["members"]["purposes"]=[&]() {
    json return_riUBfUP=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_DKfRIdU=json({});
    
        return_DKfRIdU["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_IvJSYhG=json({});
    return serialize_char(name.description[i]);}();
            return_DKfRIdU["members"][std::to_string(i)].push_back(temp);
        }
        return return_DKfRIdU;
        }();
result["members"]["layer"]=[&]() {
    json return_igINJhA=json({});
    
        return_igINJhA["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_iTTwlkA=json({});
    return serialize_char(name.layer[i]);}();
            return_igINJhA["members"][std::to_string(i)].push_back(temp);
        }
        return return_igINJhA;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int IAkvSjG=0; IAkvSjG < VK_MAX_EXTENSION_NAME_SIZE; IAkvSjG++){
            [&]() {
result.name[IAkvSjG]=deserialize_char(name["members"]["name"]["members"][IAkvSjG]);}();;
        }
        }();
[&]() {

        for (int acpwrrp=0; acpwrrp < VK_MAX_EXTENSION_NAME_SIZE; acpwrrp++){
            [&]() {
result.version[acpwrrp]=deserialize_char(name["members"]["version"]["members"][acpwrrp]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int OpfVLtZ=0; OpfVLtZ < VK_MAX_DESCRIPTION_SIZE; OpfVLtZ++){
            [&]() {
result.description[OpfVLtZ]=deserialize_char(name["members"]["description"]["members"][OpfVLtZ]);}();;
        }
        }();
[&]() {

        for (int EtULrFg=0; EtULrFg < VK_MAX_EXTENSION_NAME_SIZE; EtULrFg++){
            [&]() {
result.layer[EtULrFg]=deserialize_char(name["members"]["layer"]["members"][EtULrFg]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TMrmVfI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QZymVpe=json({});
    
        if (name.pNext==NULL){
            return_QZymVpe["null"]=true;
            return return_QZymVpe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColor"]=[&]() {
    json return_fDrDtuT=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_RrjwKyp=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZgCqRZw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZgCqRZw=NULL;
        }
    temp_ZgCqRZw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZgCqRZw;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lDkHZmt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IaZBpyz=json({});
    
        if (name.pNext==NULL){
            return_IaZBpyz["null"]=true;
            return return_IaZBpyz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_hyQCOtr=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WtCFgPs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iygdoxP=json({});
    
        if (name.pNext==NULL){
            return_iygdoxP["null"]=true;
            return return_iygdoxP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColors"]=[&]() {
    json return_pLoxbUX=json({});
    return_pLoxbUX=[&]() {
    json return_zoWnqOH=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_pLoxbUX;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_xYPYOky=json({});
    return_xYPYOky=[&]() {
    json return_qarSgss=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_xYPYOky;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ICbDpNI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YxBJvCP=json({});
    
        if (name.pNext==NULL){
            return_YxBJvCP["null"]=true;
            return return_YxBJvCP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["components"]=[&]() {
    json return_YmOVLZI=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_JilBWOm=json({});
    return_JilBWOm=[&]() {
    json return_uqwfqdh=json({});
    return serialize_uint32_t(name.srgb);}();return return_JilBWOm;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ygZBhRU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ygZBhRU=NULL;
        }
    temp_ygZBhRU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ygZBhRU;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_usVlbbT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KfGhtbl=json({});
    
        if (name.pNext==NULL){
            return_KfGhtbl["null"]=true;
            return return_KfGhtbl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_aApQerV=json({});
    return_aApQerV=[&]() {
    json return_XNzAhgv=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_aApQerV;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_QwyQUSX=json({});
    return_QwyQUSX=[&]() {
    json return_dlTOzBv=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_QwyQUSX;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_wGdRUJU=json({});
    return_wGdRUJU=[&]() {
    json return_rUZLpEz=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_wGdRUJU;}();
result["members"]["hostAddress"]=[&]() {
    json return_JDnihkB=json({});
    
        if (name.hostAddress==NULL){
            return_JDnihkB["null"]=true;
            return return_JDnihkB;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        }
    result.hostAddress=deserialize_void_p(name["members"]["hostAddress"]);
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_nJAbaPa=json({});
    return_nJAbaPa=[&]() {
    json return_YtyroUX=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_nJAbaPa;}();
result["members"]["hostAddress"]=[&]() {
    json return_tJBnleI=json({});
    
        if (name.hostAddress==NULL){
            return_tJBnleI["null"]=true;
            return return_tJBnleI;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_uwQiPPc;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_uwQiPPc=NULL;
        }
    temp_uwQiPPc=deserialize_void_p(name["members"]["hostAddress"]);
}();result.hostAddress=temp_uwQiPPc;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DbuwDmW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wkFHFxk=json({});
    
        if (name.pNext==NULL){
            return_wkFHFxk["null"]=true;
            return return_wkFHFxk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexFormat"]=[&]() {
    json return_ZLymnUB=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_nQbEmXJ=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_PRvYWzY=json({});
    return_PRvYWzY=[&]() {
    json return_cbBSVPC=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_PRvYWzY;}();
result["members"]["maxVertex"]=[&]() {
    json return_npsQcuT=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_YnnUIvT=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_fxJZprf=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_nMDfLQn=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RsclhJV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RsclhJV=NULL;
        }
    temp_RsclhJV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RsclhJV;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WmsgFLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NRZJsak=json({});
    
        if (name.pNext==NULL){
            return_NRZJsak["null"]=true;
            return return_NRZJsak;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["data"]=[&]() {
    json return_fwZpFoG=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_oCvrzPp=json({});
    return_oCvrzPp=[&]() {
    json return_OPLkUXB=json({});
    return serialize_uint64_t(name.stride);}();return return_oCvrzPp;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rEpCIZz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rEpCIZz=NULL;
        }
    temp_rEpCIZz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rEpCIZz;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_clRkgEl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ovHYMPZ=json({});
    
        if (name.pNext==NULL){
            return_ovHYMPZ["null"]=true;
            return return_ovHYMPZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_nGsvAkX=json({});
    return_nGsvAkX=[&]() {
    json return_vDJRUhn=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_nGsvAkX;}();
result["members"]["data"]=[&]() {
    json return_IiXBWcO=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cZnjDMQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cZnjDMQ=NULL;
        }
    temp_cZnjDMQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cZnjDMQ;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_qFIftWe=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_CKJBzSS=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_ooetbvK=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RBAcjuV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hdSIvqJ=json({});
    
        if (name.pNext==NULL){
            return_hdSIvqJ["null"]=true;
            return return_hdSIvqJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_wwLYpVD=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_aOFlHXR=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_iAhrJPF=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PBnVpUd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PBnVpUd=NULL;
        }
    temp_PBnVpUd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PBnVpUd;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZHsnuWx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jirSHlG=json({});
    
        if (name.pNext==NULL){
            return_jirSHlG["null"]=true;
            return return_jirSHlG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_nmNhgOX=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_UuuYXBt=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_aHBasTj=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_RKgWIoE=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_NkurruA=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_VuJfacN=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_MNdzVcz=json({});
    
        if (name.pGeometries==NULL){
            return_MNdzVcz["null"]=true;
            return return_MNdzVcz;
        }
        
        return_MNdzVcz["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_wYetxYy=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[i]);}();
            return_MNdzVcz["members"][std::to_string(i)].push_back(temp);
        }
        return return_MNdzVcz;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_ndlqrEy=json({});
    
        if (name.ppGeometries==NULL){
            return_ndlqrEy["null"]=true;
            return return_ndlqrEy;
        }
        
        return_ndlqrEy["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_DXKxgZb=json({});
    
        if (name.ppGeometries[i]==NULL){
            return_DXKxgZb["null"]=true;
            return return_DXKxgZb;
        }
        
        return_DXKxgZb["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_uGVPqNS=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[i][i]);}();
            return_DXKxgZb["members"][std::to_string(i)].push_back(temp);
        }
        return return_DXKxgZb;
        }();
            return_ndlqrEy["members"][std::to_string(i)].push_back(temp);
        }
        return return_ndlqrEy;
        }();
result["members"]["scratchData"]=[&]() {
    json return_bSgwaJT=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cmjomZT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cmjomZT=NULL;
        }
    temp_cmjomZT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cmjomZT;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_FDLNZhT;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_FDLNZhT=NULL;
        }
    temp_FDLNZhT=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int soTWIbh=0; soTWIbh < result.geometryCount; soTWIbh++){
            [&]() {
temp_FDLNZhT[soTWIbh]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][soTWIbh]);}();;
        }
        }();result.pGeometries=temp_FDLNZhT;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_dvxIqZd;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_dvxIqZd=NULL;
        }
    temp_dvxIqZd=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int EZuhHyk=0; EZuhHyk < result.geometryCount; EZuhHyk++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][EZuhHyk].contains("null")){
        temp_dvxIqZd[EZuhHyk]=NULL;
        }
    temp_dvxIqZd[EZuhHyk]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int VShmaiK=0; VShmaiK < 1; VShmaiK++){
            [&]() {
temp_dvxIqZd[EZuhHyk][VShmaiK]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][EZuhHyk]["members"][VShmaiK]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_dvxIqZd;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_SygdrFw=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_UTCLECU=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_WuVEeXF=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_vnHFntq=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BkRKIJm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oZfSYvu=json({});
    
        if (name.pNext==NULL){
            return_oZfSYvu["null"]=true;
            return return_oZfSYvu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_fuBjUPH=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_VpCXjIH=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_tDNuxZv=json({});
    return_tDNuxZv=[&]() {
    json return_YxkClKI=json({});
    return serialize_uint64_t(name.offset);}();return return_tDNuxZv;}();
result["members"]["size"]=[&]() {
    json return_IsMXVed=json({});
    return_IsMXVed=[&]() {
    json return_HNYzVBm=json({});
    return serialize_uint64_t(name.size);}();return return_IsMXVed;}();
result["members"]["type"]=[&]() {
    json return_HlCCJOG=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_IUyQdmT=json({});
    return_IUyQdmT=[&]() {
    json return_IrNKwah=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_IUyQdmT;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dRHEpmY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dRHEpmY=NULL;
        }
    temp_dRHEpmY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dRHEpmY;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_HXiUiDu=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_cAgaLWw=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_aOLwjRd=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_JaxUtCs=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_CYalmLs=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_MNMavKC=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_sGDAmsk=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_GHxbwfM=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_WFcgfud=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_KvlmLlE=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_jiIxpMv=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_ZQoAamv=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_hyOzBCk=json({});
    
        return_hyOzBCk["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_oQEDMMt=json({});
    
        return_oQEDMMt["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_QMsQnTM=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_oQEDMMt["members"][std::to_string(i)].push_back(temp);
        }
        return return_oQEDMMt;
        }();
            return_hyOzBCk["members"][std::to_string(i)].push_back(temp);
        }
        return return_hyOzBCk;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int SxrPTfy=0; SxrPTfy < 3; SxrPTfy++){
            [&]() {

        for (int LVrGwyM=0; LVrGwyM < 4; LVrGwyM++){
            [&]() {
result.matrix[SxrPTfy][LVrGwyM]=deserialize_float(name["members"]["matrix"]["members"][SxrPTfy]["members"][LVrGwyM]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_xCKtBZw=json({});
    
        return_xCKtBZw["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_pyoaZui=json({});
    
        return_pyoaZui["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_NLxLghB=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_pyoaZui["members"][std::to_string(i)].push_back(temp);
        }
        return return_pyoaZui;
        }();
            return_xCKtBZw["members"][std::to_string(i)].push_back(temp);
        }
        return return_xCKtBZw;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int jsyyRyy=0; jsyyRyy < 3; jsyyRyy++){
            [&]() {

        for (int nqtfsix=0; nqtfsix < 4; nqtfsix++){
            [&]() {
result.matrix[jsyyRyy][nqtfsix]=deserialize_float(name["members"]["matrix"]["members"][jsyyRyy]["members"][nqtfsix]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_SSxmokU=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_DNXiMlN=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_VBKFeYZ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_pdsxPxV=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_dmlgRdm=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_TMYAhWc=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_sSXirdb=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_JblqQVc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_DcSjYqp=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_uZoNYHn=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_lzWpFUk=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_zqhrblN=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NmYBjFP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_roFNAbn=json({});
    
        if (name.pNext==NULL){
            return_roFNAbn["null"]=true;
            return return_roFNAbn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_jHFtTQd=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IaCLWvb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IaCLWvb=NULL;
        }
    temp_IaCLWvb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IaCLWvb;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LBCuHxo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_csvBJuD=json({});
    
        if (name.pNext==NULL){
            return_csvBJuD["null"]=true;
            return return_csvBJuD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_KfpAqqT=json({});
    
        if (name.pVersionData==NULL){
            return_KfpAqqT["null"]=true;
            return return_KfpAqqT;
        }
        
        return_KfpAqqT["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NwrFnuY=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_KfpAqqT["members"][std::to_string(i)].push_back(temp);
        }
        return return_KfpAqqT;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zVovWzI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zVovWzI=NULL;
        }
    temp_zVovWzI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zVovWzI;}();
[&]() {
uint8_t* temp_lBfavQw;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_lBfavQw=NULL;
        }
    temp_lBfavQw=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int pbskVVu=0; pbskVVu < 2*VK_UUID_SIZE; pbskVVu++){
            [&]() {
temp_lBfavQw[pbskVVu]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][pbskVVu]);}();;
        }
        }();result.pVersionData=temp_lBfavQw;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WteFhNP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UynYyET=json({});
    
        if (name.pNext==NULL){
            return_UynYyET["null"]=true;
            return return_UynYyET;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_EGOFZOQ=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_xVYUvDm=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_eqaIkgo=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SBbTWin;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SBbTWin=NULL;
        }
    temp_SBbTWin=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SBbTWin;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uJbhZpY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NhEvHTq=json({});
    
        if (name.pNext==NULL){
            return_NhEvHTq["null"]=true;
            return return_NhEvHTq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_BCDsQwY=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_POIfkBJ=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_gfrmIAh=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_roPFpGn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_roPFpGn=NULL;
        }
    temp_roPFpGn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_roPFpGn;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nvnyqah=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CCbtJvk=json({});
    
        if (name.pNext==NULL){
            return_CCbtJvk["null"]=true;
            return return_CCbtJvk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_pCeZeQN=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_BJXJQdl=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_HkcCNGk=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DXPHYCT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DXPHYCT=NULL;
        }
    temp_DXPHYCT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DXPHYCT;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tQTxAGa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_stsAqtP=json({});
    
        if (name.pNext==NULL){
            return_stsAqtP["null"]=true;
            return return_stsAqtP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_VSDpnHU=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_YDPZQIQ=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DLFWWGh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DLFWWGh=NULL;
        }
    temp_DLFWWGh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DLFWWGh;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KoPOLLT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VmpwXbo=json({});
    
        if (name.pNext==NULL){
            return_VmpwXbo["null"]=true;
            return return_VmpwXbo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["libraryCount"]=[&]() {
    json return_pajmJPI=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_KunfBmY=json({});
    
        if (name.pLibraries==NULL){
            return_KunfBmY["null"]=true;
            return return_KunfBmY;
        }
        
        return_KunfBmY["members"]={};
        for(int i=0; i < name.libraryCount; i++){
            json temp;
            temp=[&]() {
    json return_xvPrgWG=json({});
    return serialize_VkPipeline(name.pLibraries[i]);}();
            return_KunfBmY["members"][std::to_string(i)].push_back(temp);
        }
        return return_KunfBmY;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hhzsiAT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hhzsiAT=NULL;
        }
    temp_hhzsiAT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hhzsiAT;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_YdUJiim;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_YdUJiim=NULL;
        }
    temp_YdUJiim=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int zHmzInP=0; zHmzInP < result.libraryCount; zHmzInP++){
            [&]() {
temp_YdUJiim[zHmzInP]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][zHmzInP]);}();;
        }
        }();result.pLibraries=temp_YdUJiim;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oAmzpwT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aatOSfd=json({});
    
        if (name.pNext==NULL){
            return_aatOSfd["null"]=true;
            return return_aatOSfd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_VHMSUkG=json({});
    return_VHMSUkG=[&]() {
    json return_ZQqggzO=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_VHMSUkG;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cIZUIIs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLRyFCP=json({});
    
        if (name.pNext==NULL){
            return_kLRyFCP["null"]=true;
            return return_kLRyFCP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_EvRCGYi=json({});
    return_EvRCGYi=[&]() {
    json return_ETxSMRw=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_EvRCGYi;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_oLiOisC=json({});
    return_oLiOisC=[&]() {
    json return_AjsruXc=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_oLiOisC;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_SqoCqgr=json({});
    return_SqoCqgr=[&]() {
    json return_MwwofsR=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_SqoCqgr;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JarIuRy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DcqXMjK=json({});
    
        if (name.pNext==NULL){
            return_DcqXMjK["null"]=true;
            return return_DcqXMjK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_AkSahJV=json({});
    return_AkSahJV=[&]() {
    json return_PmBPRhw=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_AkSahJV;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_lAFOWcU=json({});
    return_lAFOWcU=[&]() {
    json return_VvkQfVo=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_lAFOWcU;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_dSNEBas=json({});
    return_dSNEBas=[&]() {
    json return_WzOCHQR=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_dSNEBas;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_ZkxnnCX=json({});
    return_ZkxnnCX=[&]() {
    json return_wlUjwzk=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_ZkxnnCX;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_AsJMPQi=json({});
    return_AsJMPQi=[&]() {
    json return_ImPIVmR=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_AsJMPQi;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_rzstUlf=json({});
    return_rzstUlf=[&]() {
    json return_SUgBQND=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_rzstUlf;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_UOceSxH=json({});
    return_UOceSxH=[&]() {
    json return_fQCfONu=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_UOceSxH;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_WtNvUzh=json({});
    return_WtNvUzh=[&]() {
    json return_SYHcZSp=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_WtNvUzh;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_JyzxYhW=json({});
    return_JyzxYhW=[&]() {
    json return_BrOwywu=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_JyzxYhW;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_RBgcVub=json({});
    return_RBgcVub=[&]() {
    json return_tbTyZFp=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_RBgcVub;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_xxAqGQe=json({});
    return_xxAqGQe=[&]() {
    json return_uZhkVtt=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_xxAqGQe;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_jhUYKMG=json({});
    return_jhUYKMG=[&]() {
    json return_qKIeLUS=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_jhUYKMG;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_XYhuTGs=json({});
    return_XYhuTGs=[&]() {
    json return_kcFurXl=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_XYhuTGs;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_tPIfHlr=json({});
    return_tPIfHlr=[&]() {
    json return_fKcpeXf=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_tPIfHlr;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_gcoFSJo=json({});
    return_gcoFSJo=[&]() {
    json return_TkacOjE=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_gcoFSJo;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_nZnykkD=json({});
    return_nZnykkD=[&]() {
    json return_mAtUFno=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_nZnykkD;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_KaZJNEf=json({});
    return_KaZJNEf=[&]() {
    json return_zBMGWUp=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_KaZJNEf;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_HoOBYJd=json({});
    return_HoOBYJd=[&]() {
    json return_CIiDcQx=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_HoOBYJd;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_YqFRfzU=json({});
    return_YqFRfzU=[&]() {
    json return_ltkLWlX=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_YqFRfzU;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_UButzdV=json({});
    return_UButzdV=[&]() {
    json return_NlpCvvd=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_UButzdV;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_CkCaNDp=json({});
    return_CkCaNDp=[&]() {
    json return_lLTRRLx=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_CkCaNDp;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_TLucoUO=json({});
    return_TLucoUO=[&]() {
    json return_drFzxzc=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_TLucoUO;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_xfvMQCq=json({});
    return_xfvMQCq=[&]() {
    json return_gvmIfOF=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_xfvMQCq;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_uuSEmJc=json({});
    return_uuSEmJc=[&]() {
    json return_dmmkgBM=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_uuSEmJc;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_uJlOqeG=json({});
    return_uJlOqeG=[&]() {
    json return_Cjaqjsa=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_uJlOqeG;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_uUZsFWL=json({});
    return_uUZsFWL=[&]() {
    json return_YLmkmMm=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_uUZsFWL;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_rbottXl=json({});
    return_rbottXl=[&]() {
    json return_RgGDnHK=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_rbottXl;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_sNhvLIA=json({});
    return_sNhvLIA=[&]() {
    json return_CKZHDpN=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_sNhvLIA;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_iGQUodw=json({});
    return_iGQUodw=[&]() {
    json return_HNSvVys=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_iGQUodw;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_SlOSBMh=json({});
    return_SlOSBMh=[&]() {
    json return_ireEfON=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_SlOSBMh;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_VKwEUBp=json({});
    return_VKwEUBp=[&]() {
    json return_bHYRiAv=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_VKwEUBp;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bEfpNYs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UkuDGiL=json({});
    
        if (name.pNext==NULL){
            return_UkuDGiL["null"]=true;
            return return_UkuDGiL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_WAgoEXy=json({});
    return_WAgoEXy=[&]() {
    json return_jmQzLjN=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_WAgoEXy;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_aHqQINE=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_sUxekLt=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_TVyRGnC=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_WBJcjwq=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_KamOSdE=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_DYmCCkt=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_BSQctbP=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_HgokXxj=json({});
    return_HgokXxj=[&]() {
    json return_kzDaOjr=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_HgokXxj;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_ORGDmnQ=json({});
    return_ORGDmnQ=[&]() {
    json return_xtZJLJG=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_ORGDmnQ;}();
result["members"]["blendOverlap"]=[&]() {
    json return_BMvDcei=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_xZKGwzE=json({});
    return_xZKGwzE=[&]() {
    json return_oDlgstK=json({});
    return serialize_uint32_t(name.clampResults);}();return return_xZKGwzE;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nAbWJIL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WmbWVxC=json({});
    
        if (name.pNext==NULL){
            return_WmbWVxC["null"]=true;
            return return_WmbWVxC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_eBkqNdc=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_coXfOCM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GAdewiI=json({});
    
        if (name.pNext==NULL){
            return_GAdewiI["null"]=true;
            return return_GAdewiI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_WwBgjlf=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DgpuYSE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DgpuYSE=NULL;
        }
    temp_DgpuYSE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DgpuYSE;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FoPNsak=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vilCAas=json({});
    
        if (name.pNext==NULL){
            return_vilCAas["null"]=true;
            return return_vilCAas;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_dfonRen=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_BeUwmIc=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zLzvgwl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VdWxZQY=json({});
    
        if (name.pNext==NULL){
            return_VdWxZQY["null"]=true;
            return return_VdWxZQY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_ypNKJXH=json({});
    return_ypNKJXH=[&]() {
    json return_rlCvEHR=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_ypNKJXH;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yHrcnqo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RitYYsk=json({});
    
        if (name.pNext==NULL){
            return_RitYYsk["null"]=true;
            return return_RitYYsk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xXFOpIT=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ddkYbcT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ddkYbcT=NULL;
        }
    temp_ddkYbcT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ddkYbcT;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VTGqhSL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pcMgmxk=json({});
    
        if (name.pNext==NULL){
            return_pcMgmxk["null"]=true;
            return return_pcMgmxk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_TzbhMEp=json({});
    return_TzbhMEp=[&]() {
    json return_RpgtzLL=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_TzbhMEp;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Axjckdr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TUhADuj=json({});
    
        if (name.pNext==NULL){
            return_TUhADuj["null"]=true;
            return return_TUhADuj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_JsdZMrj=json({});
    return_JsdZMrj=[&]() {
    json return_QkhKlNc=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_JsdZMrj;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IMieELF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xgQeRJt=json({});
    
        if (name.pNext==NULL){
            return_xgQeRJt["null"]=true;
            return return_xgQeRJt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_yPOiGEQ=json({});
    return_yPOiGEQ=[&]() {
    json return_rSZguub=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_yPOiGEQ;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yCqfpZZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qflWlTG=json({});
    
        if (name.pNext==NULL){
            return_qflWlTG["null"]=true;
            return return_qflWlTG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_NTaRthM=json({});
    return_NTaRthM=[&]() {
    json return_yXfUNBF=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_NTaRthM;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_gtWXvjn=json({});
    return_gtWXvjn=[&]() {
    json return_GRWDKNR=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_gtWXvjn;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_xKtRnFU=json({});
    return_xKtRnFU=[&]() {
    json return_LGVGLCv=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_xKtRnFU;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yxIBysh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YCFElSE=json({});
    
        if (name.pNext==NULL){
            return_YCFElSE["null"]=true;
            return return_YCFElSE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_jsXnTNw=json({});
    return_jsXnTNw=[&]() {
    json return_gmEHbfl=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_jsXnTNw;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_OOPdgTO=json({});
    return_OOPdgTO=[&]() {
    json return_SygONrv=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_OOPdgTO;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZEyhoyE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MOMxTsY=json({});
    
        if (name.pNext==NULL){
            return_MOMxTsY["null"]=true;
            return return_MOMxTsY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_UPpAIpC=json({});
    return_UPpAIpC=[&]() {
    json return_EEflFeA=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_UPpAIpC;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aWXnOrF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wnyMmtN=json({});
    
        if (name.pNext==NULL){
            return_wnyMmtN["null"]=true;
            return return_wnyMmtN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_VzSLMDr=json({});
    return_VzSLMDr=[&]() {
    json return_ccyaLOO=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_VzSLMDr;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mfvIWiy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SequPnb=json({});
    
        if (name.pNext==NULL){
            return_SequPnb["null"]=true;
            return return_SequPnb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_DtQpeah=json({});
    return_DtQpeah=[&]() {
    json return_wxsGkjg=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_DtQpeah;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_iRhyPql=json({});
    return_iRhyPql=[&]() {
    json return_XnzyocM=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_iRhyPql;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_XtHhkRN=json({});
    return_XtHhkRN=[&]() {
    json return_aHmscEc=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_XtHhkRN;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_NTgBDNG=json({});
    return_NTgBDNG=[&]() {
    json return_udTmHxu=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_NTgBDNG;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_odHQlrS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HBHIRru=json({});
    
        if (name.pNext==NULL){
            return_HBHIRru["null"]=true;
            return return_HBHIRru;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_LABAFYa=json({});
    return_LABAFYa=[&]() {
    json return_exTMkLC=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_LABAFYa;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_ubGfdnB=json({});
    return_ubGfdnB=[&]() {
    json return_COxsatD=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_ubGfdnB;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VXFoAPJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ESmqYnE=json({});
    
        if (name.pNext==NULL){
            return_ESmqYnE["null"]=true;
            return return_ESmqYnE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassShading"]=[&]() {
    json return_qDGJlDG=json({});
    return_qDGJlDG=[&]() {
    json return_qSGOwAs=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_qDGJlDG;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HJeOXmx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oRmJpCg=json({});
    
        if (name.pNext==NULL){
            return_oRmJpCg["null"]=true;
            return return_oRmJpCg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["clustercullingShader"]=[&]() {
    json return_czVJWIs=json({});
    return_czVJWIs=[&]() {
    json return_PStbOju=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_czVJWIs;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_NquYrpm=json({});
    return_NquYrpm=[&]() {
    json return_McmPBCK=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_NquYrpm;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SuxsSoU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TvmeWro=json({});
    
        if (name.pNext==NULL){
            return_TvmeWro["null"]=true;
            return return_TvmeWro;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_rUirmbU=json({});
    return_rUirmbU=[&]() {
    json return_Lfdxvut=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_rUirmbU;}();
result["members"]["dstOffset"]=[&]() {
    json return_dwqKARh=json({});
    return_dwqKARh=[&]() {
    json return_AKyGkqR=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_dwqKARh;}();
result["members"]["size"]=[&]() {
    json return_EQNVGPY=json({});
    return_EQNVGPY=[&]() {
    json return_qVxGHUw=json({});
    return serialize_uint64_t(name.size);}();return return_EQNVGPY;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JLOnwAy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JLOnwAy=NULL;
        }
    temp_JLOnwAy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JLOnwAy;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wTsJuyb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MfPFMUb=json({});
    
        if (name.pNext==NULL){
            return_MfPFMUb["null"]=true;
            return return_MfPFMUb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_DxbEcfQ=json({});
    return_DxbEcfQ=[&]() {
    json return_LRlBXwz=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_DxbEcfQ;}();
result["members"]["dstOffset"]=[&]() {
    json return_snGHMdY=json({});
    return_snGHMdY=[&]() {
    json return_WJQwZNq=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_snGHMdY;}();
result["members"]["size"]=[&]() {
    json return_XDIVklE=json({});
    return_XDIVklE=[&]() {
    json return_oNkwiUh=json({});
    return serialize_uint64_t(name.size);}();return return_XDIVklE;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FQNcAGw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FQNcAGw=NULL;
        }
    temp_FQNcAGw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FQNcAGw;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TlKUwPm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nRjulSa=json({});
    
        if (name.pNext==NULL){
            return_nRjulSa["null"]=true;
            return return_nRjulSa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_pUgtJsH=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_TdjhiQZ=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_mmQEATq=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_eIdYEEq=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_XDbCmbG=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jFqZhTe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jFqZhTe=NULL;
        }
    temp_jFqZhTe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jFqZhTe;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uqrLEkS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oyFVLFw=json({});
    
        if (name.pNext==NULL){
            return_oyFVLFw["null"]=true;
            return return_oyFVLFw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_OVBCIVr=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_pKefmTd=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_DXzkLga=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_KuyZexb=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_BOfHgty=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xzQMcbh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xzQMcbh=NULL;
        }
    temp_xzQMcbh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xzQMcbh;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IbjmSRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yerrrMs=json({});
    
        if (name.pNext==NULL){
            return_yerrrMs["null"]=true;
            return return_yerrrMs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_lcxyQze=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_QBWcYWj=json({});
    
        return_QBWcYWj["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_mjaghRF=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_QBWcYWj["members"][std::to_string(i)].push_back(temp);
        }
        return return_QBWcYWj;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_oYZeeRW=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_wTwyZWL=json({});
    
        return_wTwyZWL["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_zHcYrJj=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_wTwyZWL["members"][std::to_string(i)].push_back(temp);
        }
        return return_wTwyZWL;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eVxDTxi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eVxDTxi=NULL;
        }
    temp_eVxDTxi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eVxDTxi;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int nZgheJg=0; nZgheJg < 2; nZgheJg++){
            [&]() {
result.srcOffsets[nZgheJg]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][nZgheJg]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int nImXumZ=0; nImXumZ < 2; nImXumZ++){
            [&]() {
result.dstOffsets[nImXumZ]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][nImXumZ]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YDvDPbd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EbpwDCn=json({});
    
        if (name.pNext==NULL){
            return_EbpwDCn["null"]=true;
            return return_EbpwDCn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_KMoBSLy=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_BRsDGIX=json({});
    
        return_BRsDGIX["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_pMLxDbF=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_BRsDGIX["members"][std::to_string(i)].push_back(temp);
        }
        return return_BRsDGIX;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_JgzVVPg=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_UTyDoIw=json({});
    
        return_UTyDoIw["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_FXOzvnA=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_UTyDoIw["members"][std::to_string(i)].push_back(temp);
        }
        return return_UTyDoIw;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ERJLPiP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ERJLPiP=NULL;
        }
    temp_ERJLPiP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ERJLPiP;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int yeDzsxY=0; yeDzsxY < 2; yeDzsxY++){
            [&]() {
result.srcOffsets[yeDzsxY]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][yeDzsxY]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int NKFiKoz=0; NKFiKoz < 2; NKFiKoz++){
            [&]() {
result.dstOffsets[NKFiKoz]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][NKFiKoz]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NAUfajM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GeaHqhh=json({});
    
        if (name.pNext==NULL){
            return_GeaHqhh["null"]=true;
            return return_GeaHqhh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_cbFHSqT=json({});
    return_cbFHSqT=[&]() {
    json return_lrXDpyo=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_cbFHSqT;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_NzWFzzI=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_zSBCvcE=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_gVDrljt=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_yNfejIg=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_mrYOLlJ=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MjUDzws;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MjUDzws=NULL;
        }
    temp_MjUDzws=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MjUDzws;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DRXmpeQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rRWkKLz=json({});
    
        if (name.pNext==NULL){
            return_rRWkKLz["null"]=true;
            return return_rRWkKLz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_YGeQZhV=json({});
    return_YGeQZhV=[&]() {
    json return_DUEuWkQ=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_YGeQZhV;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_efUZFYr=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_oIMNlaS=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_QnmKCbH=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_dcjAbyD=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WmAyotg=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SamEMLT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SamEMLT=NULL;
        }
    temp_SamEMLT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SamEMLT;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TmLntxN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yHOXVBT=json({});
    
        if (name.pNext==NULL){
            return_yHOXVBT["null"]=true;
            return return_yHOXVBT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_IXVWfnt=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_ZObxEIa=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_MdnAqUH=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_jxCdNQN=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_JIkvrjS=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FIaDUvn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FIaDUvn=NULL;
        }
    temp_FIaDUvn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FIaDUvn;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JenTPDg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QMwlIXE=json({});
    
        if (name.pNext==NULL){
            return_QMwlIXE["null"]=true;
            return return_QMwlIXE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_lOjNhig=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_wUshgjR=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_QeWpMSo=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_sKowvSD=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_pNPJUHj=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EtDpWZv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EtDpWZv=NULL;
        }
    temp_EtDpWZv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EtDpWZv;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QoCzasK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HcZEFEN=json({});
    
        if (name.pNext==NULL){
            return_HcZEFEN["null"]=true;
            return return_HcZEFEN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_aiSIWXn=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_bAOrrKP=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_BsZAWCa=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ETdNHVp=json({});
    
        if (name.pRegions==NULL){
            return_ETdNHVp["null"]=true;
            return return_ETdNHVp;
        }
        
        return_ETdNHVp["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_rPWDMqW=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_ETdNHVp["members"][std::to_string(i)].push_back(temp);
        }
        return return_ETdNHVp;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oojjfgC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oojjfgC=NULL;
        }
    temp_oojjfgC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oojjfgC;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_NZdUskI;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_NZdUskI=NULL;
        }
    temp_NZdUskI=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int YimNOOk=0; YimNOOk < result.regionCount; YimNOOk++){
            [&]() {
temp_NZdUskI[YimNOOk]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][YimNOOk]);}();;
        }
        }();result.pRegions=temp_NZdUskI;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uiPLDsz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOGlWgc=json({});
    
        if (name.pNext==NULL){
            return_uOGlWgc["null"]=true;
            return return_uOGlWgc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_luSOWmD=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_WNoKCVt=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_kSswGmf=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ThHMngb=json({});
    
        if (name.pRegions==NULL){
            return_ThHMngb["null"]=true;
            return return_ThHMngb;
        }
        
        return_ThHMngb["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_lDDBpyH=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_ThHMngb["members"][std::to_string(i)].push_back(temp);
        }
        return return_ThHMngb;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oGvJWEW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oGvJWEW=NULL;
        }
    temp_oGvJWEW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oGvJWEW;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_fMmWrJm;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fMmWrJm=NULL;
        }
    temp_fMmWrJm=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int feEluHl=0; feEluHl < result.regionCount; feEluHl++){
            [&]() {
temp_fMmWrJm[feEluHl]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][feEluHl]);}();;
        }
        }();result.pRegions=temp_fMmWrJm;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JDQBOLi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TRRnGjf=json({});
    
        if (name.pNext==NULL){
            return_TRRnGjf["null"]=true;
            return return_TRRnGjf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_srPHhju=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_nGxXplb=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_pplvHnh=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_GONJcRh=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_fkLxsdz=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_MFszmPb=json({});
    
        if (name.pRegions==NULL){
            return_MFszmPb["null"]=true;
            return return_MFszmPb;
        }
        
        return_MFszmPb["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_UXhNKWV=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_MFszmPb["members"][std::to_string(i)].push_back(temp);
        }
        return return_MFszmPb;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JTXSzuR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JTXSzuR=NULL;
        }
    temp_JTXSzuR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JTXSzuR;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_quiIsEr;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_quiIsEr=NULL;
        }
    temp_quiIsEr=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int BXHixBk=0; BXHixBk < result.regionCount; BXHixBk++){
            [&]() {
temp_quiIsEr[BXHixBk]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][BXHixBk]);}();;
        }
        }();result.pRegions=temp_quiIsEr;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UHzepSd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WAwgfuX=json({});
    
        if (name.pNext==NULL){
            return_WAwgfuX["null"]=true;
            return return_WAwgfuX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_pBjLFHD=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_gtNJfeR=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_CowhBiT=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_ftVWsfg=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_WxPPqIT=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_aviZThk=json({});
    
        if (name.pRegions==NULL){
            return_aviZThk["null"]=true;
            return return_aviZThk;
        }
        
        return_aviZThk["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_MvfiMos=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_aviZThk["members"][std::to_string(i)].push_back(temp);
        }
        return return_aviZThk;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NqLPFVJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NqLPFVJ=NULL;
        }
    temp_NqLPFVJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NqLPFVJ;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_OMQdULQ;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_OMQdULQ=NULL;
        }
    temp_OMQdULQ=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int ewPqaIe=0; ewPqaIe < result.regionCount; ewPqaIe++){
            [&]() {
temp_OMQdULQ[ewPqaIe]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][ewPqaIe]);}();;
        }
        }();result.pRegions=temp_OMQdULQ;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tfrZrsm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oJeMARZ=json({});
    
        if (name.pNext==NULL){
            return_oJeMARZ["null"]=true;
            return return_oJeMARZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_PwBOxUI=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_hVXRXml=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_EXShZcs=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_AaqnXbJ=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_xkeOcqJ=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_hurhzrh=json({});
    
        if (name.pRegions==NULL){
            return_hurhzrh["null"]=true;
            return return_hurhzrh;
        }
        
        return_hurhzrh["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_OQmtycP=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_hurhzrh["members"][std::to_string(i)].push_back(temp);
        }
        return return_hurhzrh;
        }();
result["members"]["filter"]=[&]() {
    json return_qammRkH=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TQXKOKY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TQXKOKY=NULL;
        }
    temp_TQXKOKY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TQXKOKY;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_RacoXMI;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_RacoXMI=NULL;
        }
    temp_RacoXMI=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int ahuzbsc=0; ahuzbsc < result.regionCount; ahuzbsc++){
            [&]() {
temp_RacoXMI[ahuzbsc]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][ahuzbsc]);}();;
        }
        }();result.pRegions=temp_RacoXMI;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iEgjCFR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hnkeZhR=json({});
    
        if (name.pNext==NULL){
            return_hnkeZhR["null"]=true;
            return return_hnkeZhR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_COQWJKh=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_paBFmSy=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_DKBXcra=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_rfiYPmi=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_CGvMjJJ=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_AkbHkRj=json({});
    
        if (name.pRegions==NULL){
            return_AkbHkRj["null"]=true;
            return return_AkbHkRj;
        }
        
        return_AkbHkRj["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_wFmXsGM=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_AkbHkRj["members"][std::to_string(i)].push_back(temp);
        }
        return return_AkbHkRj;
        }();
result["members"]["filter"]=[&]() {
    json return_nhTSAhj=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JLmpYvq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JLmpYvq=NULL;
        }
    temp_JLmpYvq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JLmpYvq;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_vQaLWJh;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_vQaLWJh=NULL;
        }
    temp_vQaLWJh=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int JWkJtoP=0; JWkJtoP < result.regionCount; JWkJtoP++){
            [&]() {
temp_vQaLWJh[JWkJtoP]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][JWkJtoP]);}();;
        }
        }();result.pRegions=temp_vQaLWJh;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vutzfOu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zihRPXc=json({});
    
        if (name.pNext==NULL){
            return_zihRPXc["null"]=true;
            return return_zihRPXc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_EXLvvJv=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_GRrujiz=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_OecWOIx=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mSuegtT=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_knjfdDi=json({});
    
        if (name.pRegions==NULL){
            return_knjfdDi["null"]=true;
            return return_knjfdDi;
        }
        
        return_knjfdDi["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_WDBxdIo=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_knjfdDi["members"][std::to_string(i)].push_back(temp);
        }
        return return_knjfdDi;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CgHxyag;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CgHxyag=NULL;
        }
    temp_CgHxyag=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CgHxyag;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_gZEbhzo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_gZEbhzo=NULL;
        }
    temp_gZEbhzo=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int kFGjESG=0; kFGjESG < result.regionCount; kFGjESG++){
            [&]() {
temp_gZEbhzo[kFGjESG]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][kFGjESG]);}();;
        }
        }();result.pRegions=temp_gZEbhzo;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LIEayej=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gAEpQIN=json({});
    
        if (name.pNext==NULL){
            return_gAEpQIN["null"]=true;
            return return_gAEpQIN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_ltcWrpA=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_PKxVgEC=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_bRoxgJv=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_CQOTNUR=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_tGzRXcP=json({});
    
        if (name.pRegions==NULL){
            return_tGzRXcP["null"]=true;
            return return_tGzRXcP;
        }
        
        return_tGzRXcP["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_bprnqOt=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_tGzRXcP["members"][std::to_string(i)].push_back(temp);
        }
        return return_tGzRXcP;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZzkPxQW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZzkPxQW=NULL;
        }
    temp_ZzkPxQW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZzkPxQW;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_fxFOvKG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fxFOvKG=NULL;
        }
    temp_fxFOvKG=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int rdGTLIz=0; rdGTLIz < result.regionCount; rdGTLIz++){
            [&]() {
temp_fxFOvKG[rdGTLIz]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][rdGTLIz]);}();;
        }
        }();result.pRegions=temp_fxFOvKG;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bWXPmvQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EgOaJWC=json({});
    
        if (name.pNext==NULL){
            return_EgOaJWC["null"]=true;
            return return_EgOaJWC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_IJDHOOJ=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_aOYYUxa=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_zMHEVyM=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_HAUGxUd=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_tsQOEri=json({});
    
        if (name.pRegions==NULL){
            return_tsQOEri["null"]=true;
            return return_tsQOEri;
        }
        
        return_tsQOEri["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_FRwVFEU=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_tsQOEri["members"][std::to_string(i)].push_back(temp);
        }
        return return_tsQOEri;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dsJrrvX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dsJrrvX=NULL;
        }
    temp_dsJrrvX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dsJrrvX;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_dVPRCOK;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_dVPRCOK=NULL;
        }
    temp_dVPRCOK=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int tutevcE=0; tutevcE < result.regionCount; tutevcE++){
            [&]() {
temp_dVPRCOK[tutevcE]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][tutevcE]);}();;
        }
        }();result.pRegions=temp_dVPRCOK;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DNmIkfU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vNQValn=json({});
    
        if (name.pNext==NULL){
            return_vNQValn["null"]=true;
            return return_vNQValn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_zUtkrcf=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_AwZMiIL=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_rgtCpaG=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_oyknJRh=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_pXOJDMg=json({});
    
        if (name.pRegions==NULL){
            return_pXOJDMg["null"]=true;
            return return_pXOJDMg;
        }
        
        return_pXOJDMg["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_pWtshht=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_pXOJDMg["members"][std::to_string(i)].push_back(temp);
        }
        return return_pXOJDMg;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AGQBRgF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AGQBRgF=NULL;
        }
    temp_AGQBRgF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AGQBRgF;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_YZNbaEo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_YZNbaEo=NULL;
        }
    temp_YZNbaEo=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int aKPsBHV=0; aKPsBHV < result.regionCount; aKPsBHV++){
            [&]() {
temp_YZNbaEo[aKPsBHV]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][aKPsBHV]);}();;
        }
        }();result.pRegions=temp_YZNbaEo;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bMzuXGJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CXytNzB=json({});
    
        if (name.pNext==NULL){
            return_CXytNzB["null"]=true;
            return return_CXytNzB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_csqBulg=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_OooCHho=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_AdPDWim=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_GfhyhxH=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_mjcrCDF=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_tfUPTNQ=json({});
    
        if (name.pRegions==NULL){
            return_tfUPTNQ["null"]=true;
            return return_tfUPTNQ;
        }
        
        return_tfUPTNQ["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_gBxkxzx=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_tfUPTNQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_tfUPTNQ;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oXeoWHe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oXeoWHe=NULL;
        }
    temp_oXeoWHe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oXeoWHe;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_MNyrUUk;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_MNyrUUk=NULL;
        }
    temp_MNyrUUk=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int gzjSGws=0; gzjSGws < result.regionCount; gzjSGws++){
            [&]() {
temp_MNyrUUk[gzjSGws]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][gzjSGws]);}();;
        }
        }();result.pRegions=temp_MNyrUUk;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XumAERw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QCkSYHU=json({});
    
        if (name.pNext==NULL){
            return_QCkSYHU["null"]=true;
            return return_QCkSYHU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_tVCGMhe=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_FJjquiv=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_rjkHRbk=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_uLaBuTa=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_yiuyrFF=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_CnPcChf=json({});
    
        if (name.pRegions==NULL){
            return_CnPcChf["null"]=true;
            return return_CnPcChf;
        }
        
        return_CnPcChf["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_xoSxxXX=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_CnPcChf["members"][std::to_string(i)].push_back(temp);
        }
        return return_CnPcChf;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vRAqkhw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vRAqkhw=NULL;
        }
    temp_vRAqkhw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vRAqkhw;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_zUMRaWC;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_zUMRaWC=NULL;
        }
    temp_zUMRaWC=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int hwuhZOf=0; hwuhZOf < result.regionCount; hwuhZOf++){
            [&]() {
temp_zUMRaWC[hwuhZOf]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][hwuhZOf]);}();;
        }
        }();result.pRegions=temp_zUMRaWC;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hDUbzwB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nqVWCzq=json({});
    
        if (name.pNext==NULL){
            return_nqVWCzq["null"]=true;
            return return_nqVWCzq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_FzQnFDK=json({});
    return_FzQnFDK=[&]() {
    json return_hATmnrV=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_FzQnFDK;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_nzbUmMw=json({});
    return_nzbUmMw=[&]() {
    json return_YxCMhMC=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_nzbUmMw;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lpaxsor=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKWjzHT=json({});
    
        if (name.pNext==NULL){
            return_xKWjzHT["null"]=true;
            return return_xKWjzHT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_DgwlaKY=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_DgwlaKY["null"]=true;
            return return_DgwlaKY;
        }
        return_DgwlaKY=[&]() {
    json return_gHPHEMC=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_DgwlaKY;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_gUcdBsI=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ucNgQqv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ucNgQqv=NULL;
        }
    temp_ucNgQqv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ucNgQqv;}();
[&]() {
VkAttachmentReference2* temp_XAgeEYL;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_XAgeEYL=NULL;
        }
    [&]() {
*(temp_XAgeEYL)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_XAgeEYL;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CXaoTJu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rZOdaEo=json({});
    
        if (name.pNext==NULL){
            return_rZOdaEo["null"]=true;
            return return_rZOdaEo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentSize"]=[&]() {
    json return_mEKZLDw=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_GETNwWR=json({});
    
        return_GETNwWR["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_HQXJsbP=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_GETNwWR["members"][std::to_string(i)].push_back(temp);
        }
        return return_GETNwWR;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YrPCxjC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YrPCxjC=NULL;
        }
    temp_YrPCxjC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YrPCxjC;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int GBPkcyz=0; GBPkcyz < 2; GBPkcyz++){
            [&]() {
result.combinerOps[GBPkcyz]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][GBPkcyz]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gvdnFnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MHkKdfd=json({});
    
        if (name.pNext==NULL){
            return_MHkKdfd["null"]=true;
            return return_MHkKdfd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_uicKgTx=json({});
    return_uicKgTx=[&]() {
    json return_HwAMwPq=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_uicKgTx;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_vRvPPAk=json({});
    return_vRvPPAk=[&]() {
    json return_fpPPvIz=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_vRvPPAk;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_SeDrBDf=json({});
    return_SeDrBDf=[&]() {
    json return_YkTVqWo=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_SeDrBDf;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YlCogwI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bIMUqbI=json({});
    
        if (name.pNext==NULL){
            return_bIMUqbI["null"]=true;
            return return_bIMUqbI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_EJCXjlh=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_MXBEYJG=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_FoCzHkV=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_dZkTlkl=json({});
    return_dZkTlkl=[&]() {
    json return_PfLsmnW=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_dZkTlkl;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_gOhKpmC=json({});
    return_gOhKpmC=[&]() {
    json return_lbANbUi=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_gOhKpmC;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_gYxZCRJ=json({});
    return_gYxZCRJ=[&]() {
    json return_QquutRV=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_gYxZCRJ;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_JTslxNI=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_GKsOQTW=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_IJzTzEx=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_BRjBCHl=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_yYhtqql=json({});
    return_yYhtqql=[&]() {
    json return_hOBBmnU=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_yYhtqql;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_ZUsXxiC=json({});
    return_ZUsXxiC=[&]() {
    json return_zqUfeWG=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_ZUsXxiC;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_vXrXyCZ=json({});
    return_vXrXyCZ=[&]() {
    json return_XNjFTjf=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_vXrXyCZ;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_QuBBGLU=json({});
    return_QuBBGLU=[&]() {
    json return_NiVPTok=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_QuBBGLU;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_zXVPZpT=json({});
    return_zXVPZpT=[&]() {
    json return_axtBUoy=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_zXVPZpT;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_qcCigmU=json({});
    return_qcCigmU=[&]() {
    json return_mkFrflC=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_qcCigmU;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_YTIoRGo=json({});
    return_YTIoRGo=[&]() {
    json return_qoqqhWR=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_YTIoRGo;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZWePCPp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RvSOdbV=json({});
    
        if (name.pNext==NULL){
            return_RvSOdbV["null"]=true;
            return return_RvSOdbV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleCounts"]=[&]() {
    json return_MuOuveh=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_cGefzSo=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TosjenM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YwcEEGo=json({});
    
        if (name.pNext==NULL){
            return_YwcEEGo["null"]=true;
            return return_YwcEEGo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_knNkQnt=json({});
    return_knNkQnt=[&]() {
    json return_UNYFksv=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_knNkQnt;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MpupSvS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NvShrXr=json({});
    
        if (name.pNext==NULL){
            return_NvShrXr["null"]=true;
            return return_NvShrXr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_DJQFotP=json({});
    return_DJQFotP=[&]() {
    json return_LHCDdBT=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_DJQFotP;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xHvxFNA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JXPKhwS=json({});
    
        if (name.pNext==NULL){
            return_JXPKhwS["null"]=true;
            return return_JXPKhwS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_pXXtlmJ=json({});
    return_pXXtlmJ=[&]() {
    json return_frwMyLL=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_pXXtlmJ;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_rHWsQLq=json({});
    return_rHWsQLq=[&]() {
    json return_VCnIfYP=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_rHWsQLq;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_QSKIPDs=json({});
    return_QSKIPDs=[&]() {
    json return_knqWwrB=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_QSKIPDs;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ekLqvmT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uSlVLLD=json({});
    
        if (name.pNext==NULL){
            return_uSlVLLD["null"]=true;
            return return_uSlVLLD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_SaHzNeA=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EZsaWSq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ocACWHM=json({});
    
        if (name.pNext==NULL){
            return_ocACWHM["null"]=true;
            return return_ocACWHM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateType"]=[&]() {
    json return_YIjxTIc=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_eJXJwwg=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_YchtGky=json({});
    
        return_YchtGky["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_efKwjWX=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_YchtGky["members"][std::to_string(i)].push_back(temp);
        }
        return return_YchtGky;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JLuWrfn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JLuWrfn=NULL;
        }
    temp_JLuWrfn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JLuWrfn;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int acaxrXi=0; acaxrXi < 2; acaxrXi++){
            [&]() {
result.combinerOps[acaxrXi]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][acaxrXi]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eptxWDh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qwaqiGv=json({});
    
        if (name.pNext==NULL){
            return_qwaqiGv["null"]=true;
            return return_qwaqiGv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_iEfrOTd=json({});
    return_iEfrOTd=[&]() {
    json return_TinCTeQ=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_iEfrOTd;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_mriXmwE=json({});
    return_mriXmwE=[&]() {
    json return_NqhKwlM=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_mriXmwE;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_AWaOGrd=json({});
    return_AWaOGrd=[&]() {
    json return_PfjZmds=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_AWaOGrd;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UJfvwum;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UJfvwum=NULL;
        }
    temp_UJfvwum=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UJfvwum;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sbEtJrY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OkfAzcf=json({});
    
        if (name.pNext==NULL){
            return_OkfAzcf["null"]=true;
            return return_OkfAzcf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_kybhxzR=json({});
    return_kybhxzR=[&]() {
    json return_rLDMuPs=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_kybhxzR;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_YPEGedD=json({});
    return_YPEGedD=[&]() {
    json return_wgeKzyV=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_YPEGedD;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WCcGnOL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ygLQILn=json({});
    
        if (name.pNext==NULL){
            return_ygLQILn["null"]=true;
            return return_ygLQILn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_SbnwNhj=json({});
    return_SbnwNhj=[&]() {
    json return_yPwaMlO=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_SbnwNhj;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uMJPByA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NICjokH=json({});
    
        if (name.pNext==NULL){
            return_NICjokH["null"]=true;
            return return_NICjokH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_oijSKwi=json({});
    return_oijSKwi=[&]() {
    json return_VOkZvkA=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_oijSKwi;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rIynStE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KektcDA=json({});
    
        if (name.pNext==NULL){
            return_KektcDA["null"]=true;
            return return_KektcDA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_qwFTweT=json({});
    return_qwFTweT=[&]() {
    json return_gddlSmQ=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_qwFTweT;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sXJZyXf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CbMHAZf=json({});
    
        if (name.pNext==NULL){
            return_CbMHAZf["null"]=true;
            return return_CbMHAZf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_DZHvljh=json({});
    return_DZHvljh=[&]() {
    json return_UiFkQCS=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_DZHvljh;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_dOwrNBa=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_TXKFUWv=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_TXKFUWv["null"]=true;
            return return_TXKFUWv;
        }
        
        return_TXKFUWv["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_zHPUDpx=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_TXKFUWv["members"][std::to_string(i)].push_back(temp);
        }
        return return_TXKFUWv;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_gnYwYRZ;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_gnYwYRZ=NULL;
        }
    temp_gnYwYRZ=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int wnuXwNj=0; wnuXwNj < result.descriptorTypeCount; wnuXwNj++){
            [&]() {
temp_gnYwYRZ[wnuXwNj]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][wnuXwNj]);}();;
        }
        }();result.pDescriptorTypes=temp_gnYwYRZ;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_drBbNcV=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_xubxjYP=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_xubxjYP["null"]=true;
            return return_xubxjYP;
        }
        
        return_xubxjYP["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_OXHXbqM=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_xubxjYP["members"][std::to_string(i)].push_back(temp);
        }
        return return_xubxjYP;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_OrnDmOw;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_OrnDmOw=NULL;
        }
    temp_OrnDmOw=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int dBQidHu=0; dBQidHu < result.descriptorTypeCount; dBQidHu++){
            [&]() {
temp_OrnDmOw[dBQidHu]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][dBQidHu]);}();;
        }
        }();result.pDescriptorTypes=temp_OrnDmOw;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fwhKMnA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CxYjqaD=json({});
    
        if (name.pNext==NULL){
            return_CxYjqaD["null"]=true;
            return return_CxYjqaD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_deOXRTW=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_fVKxKRz=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_fVKxKRz["null"]=true;
            return return_fVKxKRz;
        }
        
        return_fVKxKRz["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_HgnaWdf=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_fVKxKRz["members"][std::to_string(i)].push_back(temp);
        }
        return return_fVKxKRz;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pfIWWOL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pfIWWOL=NULL;
        }
    temp_pfIWWOL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pfIWWOL;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_lACqBhL;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_lACqBhL=NULL;
        }
    temp_lACqBhL=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int QqblVON=0; QqblVON < result.mutableDescriptorTypeListCount; QqblVON++){
            [&]() {
temp_lACqBhL[QqblVON]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][QqblVON]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_lACqBhL;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EfqmObA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EtUwgup=json({});
    
        if (name.pNext==NULL){
            return_EtUwgup["null"]=true;
            return return_EtUwgup;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_ZNHmyhH=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_kaOzhLU=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_kaOzhLU["null"]=true;
            return return_kaOzhLU;
        }
        
        return_kaOzhLU["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_tgQAWiM=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_kaOzhLU["members"][std::to_string(i)].push_back(temp);
        }
        return return_kaOzhLU;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iyTEkXc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iyTEkXc=NULL;
        }
    temp_iyTEkXc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iyTEkXc;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_FPLUkDa;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_FPLUkDa=NULL;
        }
    temp_FPLUkDa=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int YsiViyy=0; YsiViyy < result.mutableDescriptorTypeListCount; YsiViyy++){
            [&]() {
temp_FPLUkDa[YsiViyy]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][YsiViyy]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_FPLUkDa;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_myhoZFB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDDLiqF=json({});
    
        if (name.pNext==NULL){
            return_cDDLiqF["null"]=true;
            return return_cDDLiqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipControl"]=[&]() {
    json return_zyalnMA=json({});
    return_zyalnMA=[&]() {
    json return_jgyQwep=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_zyalnMA;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cHrfIuC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VVYospA=json({});
    
        if (name.pNext==NULL){
            return_VVYospA["null"]=true;
            return return_VVYospA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_aYqbjGz=json({});
    return_aYqbjGz=[&]() {
    json return_iISSvjn=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_aYqbjGz;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NTNqcbw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NTNqcbw=NULL;
        }
    temp_NTNqcbw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NTNqcbw;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lRvrRJg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SgIqeGK=json({});
    
        if (name.pNext==NULL){
            return_SgIqeGK["null"]=true;
            return return_SgIqeGK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_swMnGmh=json({});
    return_swMnGmh=[&]() {
    json return_KBFdIZV=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_swMnGmh;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LXSosDv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kbfxWXB=json({});
    
        if (name.pNext==NULL){
            return_kbfxWXB["null"]=true;
            return return_kbfxWXB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_vFcuHIL=json({});
    return_vFcuHIL=[&]() {
    json return_eQSSDin=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_vFcuHIL;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vlzopvD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jlSxXld=json({});
    
        if (name.pNext==NULL){
            return_jlSxXld["null"]=true;
            return return_jlSxXld;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["binding"]=[&]() {
    json return_kNvZKOu=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_DVPtftS=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_VVqvcJc=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_FHceGXx=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EPXFIAH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eFplfhU=json({});
    
        if (name.pNext==NULL){
            return_eFplfhU["null"]=true;
            return return_eFplfhU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["location"]=[&]() {
    json return_RvyiQKW=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_MEKvmMG=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_sPkPCjZ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_qTSbYZy=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FZgXUwF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WRFcMyx=json({});
    
        if (name.pNext==NULL){
            return_WRFcMyx["null"]=true;
            return return_WRFcMyx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_UmAQypV=json({});
    return_UmAQypV=[&]() {
    json return_GhdkCAI=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_UmAQypV;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bZTFbrf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XxbeTVo=json({});
    
        if (name.pNext==NULL){
            return_XxbeTVo["null"]=true;
            return return_XxbeTVo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_hjGDTol=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_OcMivTm=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_OcMivTm["null"]=true;
            return return_OcMivTm;
        }
        
        return_OcMivTm["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_aQYdUQW=json({});
    return_aQYdUQW=[&]() {
    json return_opRhoEQ=json({});
    return serialize_uint32_t(name.pColorWriteEnables[i]);}();return return_aQYdUQW;}();
            return_OcMivTm["members"][std::to_string(i)].push_back(temp);
        }
        return return_OcMivTm;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qjWTnzx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qjWTnzx=NULL;
        }
    temp_qjWTnzx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qjWTnzx;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_tOYrYxY;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_tOYrYxY=NULL;
        }
    temp_tOYrYxY=(VkBool32*)malloc(result.attachmentCount*sizeof(VkBool32));
        for (int zMrZERL=0; zMrZERL < result.attachmentCount; zMrZERL++){
            [&]() {
[&]() {
temp_tOYrYxY[zMrZERL]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][zMrZERL]);}();}();;
        }
        }();result.pColorWriteEnables=temp_tOYrYxY;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sRRTfTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_isKwbBn=json({});
    
        if (name.pNext==NULL){
            return_isKwbBn["null"]=true;
            return return_isKwbBn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_qKPMuxl=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_pZcyoXk=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_uGTabwq=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_WkdGVqh=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WvlqsuT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WvlqsuT=NULL;
        }
    temp_WvlqsuT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WvlqsuT;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pNLDLSF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ocZOxLR=json({});
    
        if (name.pNext==NULL){
            return_ocZOxLR["null"]=true;
            return return_ocZOxLR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_hCsxNUy=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_bcKVRKz=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_dOWWnbP=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_rtDzoRH=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HyUYYsf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HyUYYsf=NULL;
        }
    temp_HyUYYsf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HyUYYsf;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zludxgv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sJFvLQZ=json({});
    
        if (name.pNext==NULL){
            return_sJFvLQZ["null"]=true;
            return return_sJFvLQZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_VgirBFi=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_TUsNzHk=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_GnrwQfc=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_VofXBpn=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_wdJlAeE=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_GtFhEiW=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_OBbYmVv=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_sOXLodm=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_JAFrCeo=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_NcPhnSO=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BOClorz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BOClorz=NULL;
        }
    temp_BOClorz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BOClorz;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uUNMHww=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aiJiLaS=json({});
    
        if (name.pNext==NULL){
            return_aiJiLaS["null"]=true;
            return return_aiJiLaS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_KOzEegW=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_AcOwQFu=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_FhgPFFH=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_BoFFmiX=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_uGdYMoZ=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_XwWoSkg=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_nFNyuTm=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_RTPxdnq=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_LQOMrtV=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_bmZxjnV=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rPfEIFX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rPfEIFX=NULL;
        }
    temp_rPfEIFX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rPfEIFX;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sfuTvLW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FzNENXr=json({});
    
        if (name.pNext==NULL){
            return_FzNENXr["null"]=true;
            return return_FzNENXr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_dLyvyuS=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_uFWlLzR=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_RbzWSGG=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_DEBizja=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_YostGNt=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_HQkRTtx=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_YwBjoQZ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_NHjIgFl=json({});
    return_NHjIgFl=[&]() {
    json return_JZGBnHz=json({});
    return serialize_uint64_t(name.offset);}();return return_NHjIgFl;}();
result["members"]["size"]=[&]() {
    json return_moXdgly=json({});
    return_moXdgly=[&]() {
    json return_mSukFRo=json({});
    return serialize_uint64_t(name.size);}();return return_moXdgly;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TqRfwYf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TqRfwYf=NULL;
        }
    temp_TqRfwYf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TqRfwYf;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZgbDaRh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_huFZLUf=json({});
    
        if (name.pNext==NULL){
            return_huFZLUf["null"]=true;
            return return_huFZLUf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_LCqSIbt=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_zAPerWp=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_NprpUYC=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_wtMYqOC=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_VANoqNs=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_DjbpZyc=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_yzzgInx=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_jrMPmKC=json({});
    return_jrMPmKC=[&]() {
    json return_MmjzEnt=json({});
    return serialize_uint64_t(name.offset);}();return return_jrMPmKC;}();
result["members"]["size"]=[&]() {
    json return_uEbIgIf=json({});
    return_uEbIgIf=[&]() {
    json return_ZGLCXcA=json({});
    return serialize_uint64_t(name.size);}();return return_uEbIgIf;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pLxeYAz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pLxeYAz=NULL;
        }
    temp_pLxeYAz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pLxeYAz;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cmmmQSl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eYMyDvb=json({});
    
        if (name.pNext==NULL){
            return_eYMyDvb["null"]=true;
            return return_eYMyDvb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_IVJBUcD=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_PooPeIm=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_TOOcvwI=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_TOOcvwI["null"]=true;
            return return_TOOcvwI;
        }
        
        return_TOOcvwI["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_tjRTMly=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_TOOcvwI["members"][std::to_string(i)].push_back(temp);
        }
        return return_TOOcvwI;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_QsdtyXZ=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_jwTAiCh=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_jwTAiCh["null"]=true;
            return return_jwTAiCh;
        }
        
        return_jwTAiCh["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_RmfmMsZ=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_jwTAiCh["members"][std::to_string(i)].push_back(temp);
        }
        return return_jwTAiCh;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_BqLSXco=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_JPMQVVs=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_JPMQVVs["null"]=true;
            return return_JPMQVVs;
        }
        
        return_JPMQVVs["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_SRiPlpE=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_JPMQVVs["members"][std::to_string(i)].push_back(temp);
        }
        return return_JPMQVVs;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GjaahFm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GjaahFm=NULL;
        }
    temp_GjaahFm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GjaahFm;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_WqrXxCN;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_WqrXxCN=NULL;
        }
    temp_WqrXxCN=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int pwxshFT=0; pwxshFT < result.memoryBarrierCount; pwxshFT++){
            [&]() {
temp_WqrXxCN[pwxshFT]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][pwxshFT]);}();;
        }
        }();result.pMemoryBarriers=temp_WqrXxCN;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_GWFvRQN;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_GWFvRQN=NULL;
        }
    temp_GWFvRQN=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int WkAaZdN=0; WkAaZdN < result.bufferMemoryBarrierCount; WkAaZdN++){
            [&]() {
temp_GWFvRQN[WkAaZdN]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][WkAaZdN]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_GWFvRQN;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_qwuREga;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_qwuREga=NULL;
        }
    temp_qwuREga=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int qKWhcVQ=0; qKWhcVQ < result.imageMemoryBarrierCount; qKWhcVQ++){
            [&]() {
temp_qwuREga[qKWhcVQ]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][qKWhcVQ]);}();;
        }
        }();result.pImageMemoryBarriers=temp_qwuREga;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdeOEXS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gxYJyrs=json({});
    
        if (name.pNext==NULL){
            return_gxYJyrs["null"]=true;
            return return_gxYJyrs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_BmvfvUT=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_TCayZZS=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_cJkOipF=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_cJkOipF["null"]=true;
            return return_cJkOipF;
        }
        
        return_cJkOipF["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_BseaSSO=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_cJkOipF["members"][std::to_string(i)].push_back(temp);
        }
        return return_cJkOipF;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_esJqVVX=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_wDXMTFZ=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_wDXMTFZ["null"]=true;
            return return_wDXMTFZ;
        }
        
        return_wDXMTFZ["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_WulSkwj=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_wDXMTFZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_wDXMTFZ;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_Gilhovr=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_tDXsfTN=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_tDXsfTN["null"]=true;
            return return_tDXsfTN;
        }
        
        return_tDXsfTN["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_aMgirSU=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_tDXsfTN["members"][std::to_string(i)].push_back(temp);
        }
        return return_tDXsfTN;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zvxuvHs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zvxuvHs=NULL;
        }
    temp_zvxuvHs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zvxuvHs;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_SdRRTex;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_SdRRTex=NULL;
        }
    temp_SdRRTex=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int TTgsktG=0; TTgsktG < result.memoryBarrierCount; TTgsktG++){
            [&]() {
temp_SdRRTex[TTgsktG]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][TTgsktG]);}();;
        }
        }();result.pMemoryBarriers=temp_SdRRTex;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_YrGCuvb;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_YrGCuvb=NULL;
        }
    temp_YrGCuvb=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int zITDvAn=0; zITDvAn < result.bufferMemoryBarrierCount; zITDvAn++){
            [&]() {
temp_YrGCuvb[zITDvAn]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][zITDvAn]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_YrGCuvb;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_QkRdTYk;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_QkRdTYk=NULL;
        }
    temp_QkRdTYk=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int dEgbTzo=0; dEgbTzo < result.imageMemoryBarrierCount; dEgbTzo++){
            [&]() {
temp_QkRdTYk[dEgbTzo]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][dEgbTzo]);}();;
        }
        }();result.pImageMemoryBarriers=temp_QkRdTYk;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_myAFbIZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BupnKxo=json({});
    
        if (name.pNext==NULL){
            return_BupnKxo["null"]=true;
            return return_BupnKxo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_BArPXbl=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_CLdndgt=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_PDooNLu=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_rjioLIx=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xGaXYDf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xGaXYDf=NULL;
        }
    temp_xGaXYDf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xGaXYDf;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vGqmyAk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uwLDpfa=json({});
    
        if (name.pNext==NULL){
            return_uwLDpfa["null"]=true;
            return return_uwLDpfa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_wuiKZmV=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_gwwWnBD=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_fZzhSzU=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_WrvDNQK=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BUVtRVQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BUVtRVQ=NULL;
        }
    temp_BUVtRVQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BUVtRVQ;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AXJLNyd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xuokQSX=json({});
    
        if (name.pNext==NULL){
            return_xuokQSX["null"]=true;
            return return_xuokQSX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_EQGOixb=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_HAvAFob=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pyAGlum;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pyAGlum=NULL;
        }
    temp_pyAGlum=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pyAGlum;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LKUDniG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wfEvMYR=json({});
    
        if (name.pNext==NULL){
            return_wfEvMYR["null"]=true;
            return return_wfEvMYR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_AVmoQrJ=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_NBiHFRG=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vXPrRPV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vXPrRPV=NULL;
        }
    temp_vXPrRPV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vXPrRPV;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aUwKxuY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YhanpCZ=json({});
    
        if (name.pNext==NULL){
            return_YhanpCZ["null"]=true;
            return return_YhanpCZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AkKuzgu=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_HSxGomL=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_TFKdYvp=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_TFKdYvp["null"]=true;
            return return_TFKdYvp;
        }
        
        return_TFKdYvp["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_olKlLrl=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_TFKdYvp["members"][std::to_string(i)].push_back(temp);
        }
        return return_TFKdYvp;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_LOPGyxS=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_HEXdlJR=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_HEXdlJR["null"]=true;
            return return_HEXdlJR;
        }
        
        return_HEXdlJR["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_nBCXSCM=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_HEXdlJR["members"][std::to_string(i)].push_back(temp);
        }
        return return_HEXdlJR;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_AlEhXMg=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_XCIDPTd=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_XCIDPTd["null"]=true;
            return return_XCIDPTd;
        }
        
        return_XCIDPTd["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_tZecQPs=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_XCIDPTd["members"][std::to_string(i)].push_back(temp);
        }
        return return_XCIDPTd;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IfpjXqh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IfpjXqh=NULL;
        }
    temp_IfpjXqh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IfpjXqh;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_dwPdwCN;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_dwPdwCN=NULL;
        }
    temp_dwPdwCN=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int OSWfWqe=0; OSWfWqe < result.waitSemaphoreInfoCount; OSWfWqe++){
            [&]() {
temp_dwPdwCN[OSWfWqe]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][OSWfWqe]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_dwPdwCN;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_BcuZDHs;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_BcuZDHs=NULL;
        }
    temp_BcuZDHs=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int jOmMaNw=0; jOmMaNw < result.commandBufferInfoCount; jOmMaNw++){
            [&]() {
temp_BcuZDHs[jOmMaNw]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][jOmMaNw]);}();;
        }
        }();result.pCommandBufferInfos=temp_BcuZDHs;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_fenPotl;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_fenPotl=NULL;
        }
    temp_fenPotl=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int NrTacFs=0; NrTacFs < result.signalSemaphoreInfoCount; NrTacFs++){
            [&]() {
temp_fenPotl[NrTacFs]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][NrTacFs]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_fenPotl;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NVbelEl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HZVRSSf=json({});
    
        if (name.pNext==NULL){
            return_HZVRSSf["null"]=true;
            return return_HZVRSSf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RpQMPvh=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_keWMpJd=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_Aoacxel=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_Aoacxel["null"]=true;
            return return_Aoacxel;
        }
        
        return_Aoacxel["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_GEcyecJ=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_Aoacxel["members"][std::to_string(i)].push_back(temp);
        }
        return return_Aoacxel;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_TajNIWz=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_hlUwtRh=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_hlUwtRh["null"]=true;
            return return_hlUwtRh;
        }
        
        return_hlUwtRh["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_gbAWmcU=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_hlUwtRh["members"][std::to_string(i)].push_back(temp);
        }
        return return_hlUwtRh;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_yxOaIZz=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_tAzLnpP=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_tAzLnpP["null"]=true;
            return return_tAzLnpP;
        }
        
        return_tAzLnpP["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_JswXUIa=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_tAzLnpP["members"][std::to_string(i)].push_back(temp);
        }
        return return_tAzLnpP;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_knCEoLJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_knCEoLJ=NULL;
        }
    temp_knCEoLJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_knCEoLJ;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_QNhYGLF;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_QNhYGLF=NULL;
        }
    temp_QNhYGLF=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int nHmlVEW=0; nHmlVEW < result.waitSemaphoreInfoCount; nHmlVEW++){
            [&]() {
temp_QNhYGLF[nHmlVEW]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][nHmlVEW]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_QNhYGLF;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_pqSMsqv;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_pqSMsqv=NULL;
        }
    temp_pqSMsqv=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int SIlOJlB=0; SIlOJlB < result.commandBufferInfoCount; SIlOJlB++){
            [&]() {
temp_pqSMsqv[SIlOJlB]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][SIlOJlB]);}();;
        }
        }();result.pCommandBufferInfos=temp_pqSMsqv;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_OFdVEKQ;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_OFdVEKQ=NULL;
        }
    temp_OFdVEKQ=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int LzuJVGu=0; LzuJVGu < result.signalSemaphoreInfoCount; LzuJVGu++){
            [&]() {
temp_OFdVEKQ[LzuJVGu]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][LzuJVGu]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_OFdVEKQ;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WVNiDCG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WVgnMAF=json({});
    
        if (name.pNext==NULL){
            return_WVgnMAF["null"]=true;
            return return_WVgnMAF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_ZwwUIKw=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cKHLyxp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hBSiadK=json({});
    
        if (name.pNext==NULL){
            return_hBSiadK["null"]=true;
            return return_hBSiadK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_YGdPbfh=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_eXVYZVP=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_eXVYZVP["null"]=true;
            return return_eXVYZVP;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NDalLYR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JjROtur=json({});
    
        if (name.pNext==NULL){
            return_JjROtur["null"]=true;
            return return_JjROtur;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_iQSKteg=json({});
    return_iQSKteg=[&]() {
    json return_bLOzrlc=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_iQSKteg;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pgGsQvx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hdJLsBY=json({});
    
        if (name.pNext==NULL){
            return_hdJLsBY["null"]=true;
            return return_hdJLsBY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_tqBCgwr=json({});
    return_tqBCgwr=[&]() {
    json return_NQYQvgo=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_tqBCgwr;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WqzAdJE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dWrEQqh=json({});
    
        if (name.pNext==NULL){
            return_dWrEQqh["null"]=true;
            return return_dWrEQqh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostImageCopy"]=[&]() {
    json return_axjxgzf=json({});
    return_axjxgzf=[&]() {
    json return_HQJOZON=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_axjxgzf;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rdFPGRZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ndhOJbR=json({});
    
        if (name.pNext==NULL){
            return_ndhOJbR["null"]=true;
            return return_ndhOJbR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_hcqxAch=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_XTfywbf=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_XTfywbf["null"]=true;
            return return_XTfywbf;
        }
        
        return_XTfywbf["members"]={};
        for(int i=0; i < name.copySrcLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_iZwDNlC=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[i]);}();
            return_XTfywbf["members"][std::to_string(i)].push_back(temp);
        }
        return return_XTfywbf;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_qnEEyye=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_QZFLSFJ=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_QZFLSFJ["null"]=true;
            return return_QZFLSFJ;
        }
        
        return_QZFLSFJ["members"]={};
        for(int i=0; i < name.copyDstLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_DeFpiok=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[i]);}();
            return_QZFLSFJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_QZFLSFJ;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_CjeIADh=json({});
    
        return_CjeIADh["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_BAsNSwy=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[i]);}();
            return_CjeIADh["members"][std::to_string(i)].push_back(temp);
        }
        return return_CjeIADh;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_mQVUdNE=json({});
    return_mQVUdNE=[&]() {
    json return_pWteKEy=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_mQVUdNE;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int hjWnuAB=0; hjWnuAB < result.copySrcLayoutCount; hjWnuAB++){
            [&]() {
result.pCopySrcLayouts[hjWnuAB]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][hjWnuAB]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int uNaSPha=0; uNaSPha < result.copyDstLayoutCount; uNaSPha++){
            [&]() {
result.pCopyDstLayouts[uNaSPha]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][uNaSPha]);}();;
        }
        }();
[&]() {

        for (int ZetdWPf=0; ZetdWPf < VK_UUID_SIZE; ZetdWPf++){
            [&]() {
result.optimalTilingLayoutUUID[ZetdWPf]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][ZetdWPf]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Sfputxu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lILJyhp=json({});
    
        if (name.pNext==NULL){
            return_lILJyhp["null"]=true;
            return return_lILJyhp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_ohGuZdO=json({});
    
        if (name.pHostPointer==NULL){
            return_ohGuZdO["null"]=true;
            return return_ohGuZdO;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_Jheqfoj=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_RHCFuEw=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_lJUnWvV=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_NdqWoEL=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_lngeUdT=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KVvmHEk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KVvmHEk=NULL;
        }
    temp_KVvmHEk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KVvmHEk;}();
[&]() {
void* temp_NaJBkJc;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_NaJBkJc=NULL;
        }
    temp_NaJBkJc=deserialize_void_p(name["members"]["pHostPointer"]);
}();result.pHostPointer=temp_NaJBkJc;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_keNElnW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_khWPqLV=json({});
    
        if (name.pNext==NULL){
            return_khWPqLV["null"]=true;
            return return_khWPqLV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_bMcOkVQ=json({});
    
        if (name.pHostPointer==NULL){
            return_bMcOkVQ["null"]=true;
            return return_bMcOkVQ;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_BuGMrll=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_lyjMfaj=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_cuecjwa=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_DHLFIgv=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_khhMAby=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QfrxsjK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QfrxsjK=NULL;
        }
    temp_QfrxsjK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QfrxsjK;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XLBKNZq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dehszrk=json({});
    
        if (name.pNext==NULL){
            return_dehszrk["null"]=true;
            return return_dehszrk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xdwNNNf=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_rWtGDUT=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_BFocqJb=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_BVdwFcq=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_NhCGYCT=json({});
    
        if (name.pRegions==NULL){
            return_NhCGYCT["null"]=true;
            return return_NhCGYCT;
        }
        
        return_NhCGYCT["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_cHSKthW=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[i]);}();
            return_NhCGYCT["members"][std::to_string(i)].push_back(temp);
        }
        return return_NhCGYCT;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yDyOPJm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yDyOPJm=NULL;
        }
    temp_yDyOPJm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yDyOPJm;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_fjhRcIg;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_fjhRcIg=NULL;
        }
    temp_fjhRcIg=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int iXnEczo=0; iXnEczo < result.regionCount; iXnEczo++){
            [&]() {
temp_fjhRcIg[iXnEczo]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][iXnEczo]);}();;
        }
        }();result.pRegions=temp_fjhRcIg;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nKWQiRJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bHhHMfp=json({});
    
        if (name.pNext==NULL){
            return_bHhHMfp["null"]=true;
            return return_bHhHMfp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NwroNFX=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_wrJUqMJ=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_AXmdeSy=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_aHsYWQY=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_cXeIRTc=json({});
    
        if (name.pRegions==NULL){
            return_cXeIRTc["null"]=true;
            return return_cXeIRTc;
        }
        
        return_cXeIRTc["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_HhehTge=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[i]);}();
            return_cXeIRTc["members"][std::to_string(i)].push_back(temp);
        }
        return return_cXeIRTc;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uZpFmNl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uZpFmNl=NULL;
        }
    temp_uZpFmNl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uZpFmNl;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_yRwkIQt;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_yRwkIQt=NULL;
        }
    temp_yRwkIQt=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int lxHBcjt=0; lxHBcjt < result.regionCount; lxHBcjt++){
            [&]() {
temp_yRwkIQt[lxHBcjt]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][lxHBcjt]);}();;
        }
        }();result.pRegions=temp_yRwkIQt;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bxGwYXu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YKJrkpX=json({});
    
        if (name.pNext==NULL){
            return_YKJrkpX["null"]=true;
            return return_YKJrkpX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OiQnMfz=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_MUnraxc=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_pJmOkQZ=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_wuIqPvF=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_pfkXNsa=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_fOCSbyq=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RCxvepn=json({});
    
        if (name.pRegions==NULL){
            return_RCxvepn["null"]=true;
            return return_RCxvepn;
        }
        
        return_RCxvepn["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_VLaVDlE=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_RCxvepn["members"][std::to_string(i)].push_back(temp);
        }
        return return_RCxvepn;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fFSVBms;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fFSVBms=NULL;
        }
    temp_fFSVBms=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fFSVBms;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_CJFzTbU;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_CJFzTbU=NULL;
        }
    temp_CJFzTbU=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int zQySIPz=0; zQySIPz < result.regionCount; zQySIPz++){
            [&]() {
temp_CJFzTbU[zQySIPz]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][zQySIPz]);}();;
        }
        }();result.pRegions=temp_CJFzTbU;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KLAmKnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ElNrQPo=json({});
    
        if (name.pNext==NULL){
            return_ElNrQPo["null"]=true;
            return return_ElNrQPo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_PUAAvBe=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_ljozfdv=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_dyGShhc=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_XDtBeMo=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iOpQneR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iOpQneR=NULL;
        }
    temp_iOpQneR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iOpQneR;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iOlrcUv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rRdxVhb=json({});
    
        if (name.pNext==NULL){
            return_rRdxVhb["null"]=true;
            return return_rRdxVhb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["size"]=[&]() {
    json return_OTIufqR=json({});
    return_OTIufqR=[&]() {
    json return_ngbinmD=json({});
    return serialize_uint64_t(name.size);}();return return_OTIufqR;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_epaZKuz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kgqSKEF=json({});
    
        if (name.pNext==NULL){
            return_kgqSKEF["null"]=true;
            return return_kgqSKEF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_bCYCBbO=json({});
    return_bCYCBbO=[&]() {
    json return_SMMvuFV=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_bCYCBbO;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_UQZHGcc=json({});
    return_UQZHGcc=[&]() {
    json return_NUtaVtf=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_UQZHGcc;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LlUrzYk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gnbsroh=json({});
    
        if (name.pNext==NULL){
            return_gnbsroh["null"]=true;
            return return_gnbsroh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_OlqEChO=json({});
    return_OlqEChO=[&]() {
    json return_xJJJgEK=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_OlqEChO;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_UwqLLyy=json({});
    return_UwqLLyy=[&]() {
    json return_STSnhki=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_UwqLLyy;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_chgprvh=json({});
    return_chgprvh=[&]() {
    json return_mALFfHO=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_chgprvh;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ExUmeUH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UMkbRRs=json({});
    
        if (name.pNext==NULL){
            return_UMkbRRs["null"]=true;
            return return_UMkbRRs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["legacyDithering"]=[&]() {
    json return_LIENdVa=json({});
    return_LIENdVa=[&]() {
    json return_ndFQjfR=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_LIENdVa;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bHzmNAP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NoVIePc=json({});
    
        if (name.pNext==NULL){
            return_NoVIePc["null"]=true;
            return return_NoVIePc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_LvKWdlW=json({});
    return_LvKWdlW=[&]() {
    json return_NhBGdcv=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_LvKWdlW;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Nicnllg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EiOFObW=json({});
    
        if (name.pNext==NULL){
            return_EiOFObW["null"]=true;
            return return_EiOFObW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimal"]=[&]() {
    json return_GMaQPXo=json({});
    return_GMaQPXo=[&]() {
    json return_jOEAFvQ=json({});
    return serialize_uint32_t(name.optimal);}();return return_GMaQPXo;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lJYrHyZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qApNwiy=json({});
    
        if (name.pNext==NULL){
            return_qApNwiy["null"]=true;
            return return_qApNwiy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_siMdWPo=json({});
    return_siMdWPo=[&]() {
    json return_sfdqkFu=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_siMdWPo;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_ikLQxMZ=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fUGqKbj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fUGqKbj=NULL;
        }
    temp_fUGqKbj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fUGqKbj;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KODGuvU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HavHvFI=json({});
    
        if (name.pNext==NULL){
            return_HavHvFI["null"]=true;
            return return_HavHvFI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_FxLnQWL=json({});
    return_FxLnQWL=[&]() {
    json return_VIcctTu=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_FxLnQWL;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cyACKJX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GFpiyuH=json({});
    
        if (name.pNext==NULL){
            return_GFpiyuH["null"]=true;
            return return_GFpiyuH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_yJskzKE=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AGvtmmc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oRktvzj=json({});
    
        if (name.pNext==NULL){
            return_oRktvzj["null"]=true;
            return return_oRktvzj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_HVVoRVr=json({});
    return_HVVoRVr=[&]() {
    json return_fHZpETv=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_HVVoRVr;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nFIqZst=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CJKcalH=json({});
    
        if (name.pNext==NULL){
            return_CJKcalH["null"]=true;
            return return_CJKcalH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["profileCount"]=[&]() {
    json return_NmeAIJL=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_RxyPhFP=json({});
    
        if (name.pProfiles==NULL){
            return_RxyPhFP["null"]=true;
            return return_RxyPhFP;
        }
        
        return_RxyPhFP["members"]={};
        for(int i=0; i < name.profileCount; i++){
            json temp;
            temp=[&]() {
    json return_TDOzQPB=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[i]);}();
            return_RxyPhFP["members"][std::to_string(i)].push_back(temp);
        }
        return return_RxyPhFP;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ArPIsyk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ArPIsyk=NULL;
        }
    temp_ArPIsyk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ArPIsyk;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_MuikUZv;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_MuikUZv=NULL;
        }
    temp_MuikUZv=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int JdSlUIa=0; JdSlUIa < result.profileCount; JdSlUIa++){
            [&]() {
temp_MuikUZv[JdSlUIa]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][JdSlUIa]);}();;
        }
        }();result.pProfiles=temp_MuikUZv;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YqJDxRM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qtSLjky=json({});
    
        if (name.pNext==NULL){
            return_qtSLjky["null"]=true;
            return return_qtSLjky;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageUsage"]=[&]() {
    json return_BXYTumE=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xmUzplA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xmUzplA=NULL;
        }
    temp_xmUzplA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xmUzplA;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mMEXNTt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BiQqTSQ=json({});
    
        if (name.pNext==NULL){
            return_BiQqTSQ["null"]=true;
            return return_BiQqTSQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_HuqtbVT=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_TFzEORp=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_pepSbAp=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_LcuwtmI=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_VTTqEYP=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_IdaLxPt=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fAdLeSf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DmeSUee=json({});
    
        if (name.pNext==NULL){
            return_DmeSUee["null"]=true;
            return return_DmeSUee;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_uGkTAgG=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_zOGnZqG=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_KZHWFgj=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_cuYJgtS=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HOlkJBs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HOlkJBs=NULL;
        }
    temp_HOlkJBs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HOlkJBs;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TeFpNAU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kCWTTSB=json({});
    
        if (name.pNext==NULL){
            return_kCWTTSB["null"]=true;
            return return_kCWTTSB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EaxratK=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_NLPDZZY=json({});
    return_NLPDZZY=[&]() {
    json return_PwsZLbr=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_NLPDZZY;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_hYVKJrD=json({});
    return_hYVKJrD=[&]() {
    json return_IxsHQNu=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_hYVKJrD;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_DmhtwjR=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_mPPZqlU=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_ATvBfhf=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_DpnNUIc=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_unJcXhx=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_lZEZLyh=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JdzYvZa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RpFTadQ=json({});
    
        if (name.pNext==NULL){
            return_RpFTadQ["null"]=true;
            return return_RpFTadQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_SGbGtzT=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_waSaRPt=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxyEhWv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PKboWlp=json({});
    
        if (name.pNext==NULL){
            return_PKboWlp["null"]=true;
            return return_PKboWlp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_xofWije=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_lbHsJje=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_qVclrBx=json({});
    return_qVclrBx=[&]() {
    json return_IvZFeNC=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_qVclrBx;}();
result["members"]["memorySize"]=[&]() {
    json return_wkqxabg=json({});
    return_wkqxabg=[&]() {
    json return_AJAKIgF=json({});
    return serialize_uint64_t(name.memorySize);}();return return_wkqxabg;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cCHTMcv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cCHTMcv=NULL;
        }
    temp_cCHTMcv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cCHTMcv;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UYnqkrz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oWoRqAj=json({});
    
        if (name.pNext==NULL){
            return_oWoRqAj["null"]=true;
            return return_oWoRqAj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["codedOffset"]=[&]() {
    json return_jwQKTMY=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_LWcVRHh=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_bECmYrZ=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_mrtLrIv=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QDZPPpp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QDZPPpp=NULL;
        }
    temp_QDZPPpp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QDZPPpp;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qoxwBlp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JFlGcIg=json({});
    
        if (name.pNext==NULL){
            return_JFlGcIg["null"]=true;
            return return_JFlGcIg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["slotIndex"]=[&]() {
    json return_sorDtzK=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_QTSjIwu=json({});
    
        if (name.pPictureResource==NULL){
            return_QTSjIwu["null"]=true;
            return return_QTSjIwu;
        }
        return_QTSjIwu=[&]() {
    json return_uillWIO=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_QTSjIwu;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jrVWPZB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jrVWPZB=NULL;
        }
    temp_jrVWPZB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jrVWPZB;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_PIVMJeM;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_PIVMJeM=NULL;
        }
    [&]() {
*(temp_PIVMJeM)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_PIVMJeM;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LJEzete=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tWcBBIb=json({});
    
        if (name.pNext==NULL){
            return_tWcBBIb["null"]=true;
            return return_tWcBBIb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uqFWodX=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lhjVxPq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rZoowne=json({});
    
        if (name.pNext==NULL){
            return_rZoowne["null"]=true;
            return return_rZoowne;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoUsageHints"]=[&]() {
    json return_SVmfxMN=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pePZKPq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pePZKPq=NULL;
        }
    temp_pePZKPq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pePZKPq;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xOmYgBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_inSjQFS=json({});
    
        if (name.pNext==NULL){
            return_inSjQFS["null"]=true;
            return return_inSjQFS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xrnNKFW=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_THmdIiH=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_eyEZhWn=json({});
    return_eyEZhWn=[&]() {
    json return_NiTHoVo=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_eyEZhWn;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_AvHlOvo=json({});
    return_AvHlOvo=[&]() {
    json return_hpuZoqf=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_AvHlOvo;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_uSnoAoD=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_XfzOZod=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_XfzOZod["null"]=true;
            return return_XfzOZod;
        }
        return_XfzOZod=[&]() {
    json return_CXrOgVH=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_XfzOZod;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_JkodFnP=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_WFEMaPc=json({});
    
        if (name.pReferenceSlots==NULL){
            return_WFEMaPc["null"]=true;
            return return_WFEMaPc;
        }
        
        return_WFEMaPc["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_hakbgUv=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_WFEMaPc["members"][std::to_string(i)].push_back(temp);
        }
        return return_WFEMaPc;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HJNXIjZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HJNXIjZ=NULL;
        }
    temp_HJNXIjZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HJNXIjZ;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_MUVdHKM;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_MUVdHKM=NULL;
        }
    [&]() {
*(temp_MUVdHKM)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_MUVdHKM;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_eDUQrnC;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_eDUQrnC=NULL;
        }
    temp_eDUQrnC=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int wrTrjpF=0; wrTrjpF < result.referenceSlotCount; wrTrjpF++){
            [&]() {
temp_eDUQrnC[wrTrjpF]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][wrTrjpF]);}();;
        }
        }();result.pReferenceSlots=temp_eDUQrnC;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZRHEveA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_itzoEde=json({});
    
        if (name.pNext==NULL){
            return_itzoEde["null"]=true;
            return return_itzoEde;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_NlANthA=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_mwLQLjq=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTjctji;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTjctji=NULL;
        }
    temp_tTjctji=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tTjctji;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rpotbUi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lNuvROJ=json({});
    
        if (name.pNext==NULL){
            return_lNuvROJ["null"]=true;
            return return_lNuvROJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_LahyYnt=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_bzXXyXh=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_egYDoUX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kBCSRCI=json({});
    
        if (name.pNext==NULL){
            return_kBCSRCI["null"]=true;
            return return_kBCSRCI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_ZAbtTJf=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_mFGawoN=json({});
    
        if (name.pStdSPSs==NULL){
            return_mFGawoN["null"]=true;
            return return_mFGawoN;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_FOcpYQe=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_QAIsoSk=json({});
    
        if (name.pStdPPSs==NULL){
            return_QAIsoSk["null"]=true;
            return return_QAIsoSk;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jiMHxBf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jiMHxBf=NULL;
        }
    temp_jiMHxBf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jiMHxBf;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_ahkIpMS;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_ahkIpMS=NULL;
        }
    temp_ahkIpMS=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_ahkIpMS;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_oJtBdVr;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_oJtBdVr=NULL;
        }
    temp_oJtBdVr=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_oJtBdVr;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GelIwVk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zVCxRWv=json({});
    
        if (name.pNext==NULL){
            return_zVCxRWv["null"]=true;
            return return_zVCxRWv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_ByrAcaj=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_hbiYriS=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_sTlvxRB=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_sTlvxRB["null"]=true;
            return return_sTlvxRB;
        }
        return_sTlvxRB=[&]() {
    json return_EozwBbO=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_sTlvxRB;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DHyaYLd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DHyaYLd=NULL;
        }
    temp_DHyaYLd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DHyaYLd;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_uUJZICv;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_uUJZICv=NULL;
        }
    [&]() {
*(temp_uUJZICv)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_uUJZICv;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cpUeyHT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TSEqSph=json({});
    
        if (name.pNext==NULL){
            return_TSEqSph["null"]=true;
            return return_TSEqSph;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_nKEWQoL=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_nKEWQoL["null"]=true;
            return return_nKEWQoL;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_eYlmcei=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_TdMrvhD=json({});
    
        if (name.pSliceOffsets==NULL){
            return_TdMrvhD["null"]=true;
            return return_TdMrvhD;
        }
        
        return_TdMrvhD["members"]={};
        for(int i=0; i < name.sliceCount; i++){
            json temp;
            temp=[&]() {
    json return_IKbUGIU=json({});
    return serialize_uint32_t(name.pSliceOffsets[i]);}();
            return_TdMrvhD["members"][std::to_string(i)].push_back(temp);
        }
        return return_TdMrvhD;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eoePsjf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eoePsjf=NULL;
        }
    temp_eoePsjf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eoePsjf;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_aoPEHvH;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_aoPEHvH=NULL;
        }
    temp_aoPEHvH=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_aoPEHvH;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_dYqmQQm;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_dYqmQQm=NULL;
        }
    temp_dYqmQQm=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int KwlwKmC=0; KwlwKmC < result.sliceCount; KwlwKmC++){
            [&]() {
temp_dYqmQQm[KwlwKmC]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][KwlwKmC]);}();;
        }
        }();result.pSliceOffsets=temp_dYqmQQm;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lmvQqBw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kccfyrt=json({});
    
        if (name.pNext==NULL){
            return_kccfyrt["null"]=true;
            return return_kccfyrt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_DNHhKli=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_DNHhKli["null"]=true;
            return return_DNHhKli;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rAxhJxd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rAxhJxd=NULL;
        }
    temp_rAxhJxd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rAxhJxd;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_STiDmgY;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_STiDmgY=NULL;
        }
    temp_STiDmgY=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_STiDmgY;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tRvLIfo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pYCzWCy=json({});
    
        if (name.pNext==NULL){
            return_pYCzWCy["null"]=true;
            return return_pYCzWCy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_fGGseLh=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YdghcsA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YdghcsA=NULL;
        }
    temp_YdghcsA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YdghcsA;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nvdajqS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EHjfphL=json({});
    
        if (name.pNext==NULL){
            return_EHjfphL["null"]=true;
            return return_EHjfphL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_swhFErL=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RTlDBMR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XGGmgXi=json({});
    
        if (name.pNext==NULL){
            return_XGGmgXi["null"]=true;
            return return_XGGmgXi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdVPSCount"]=[&]() {
    json return_JtnbDpU=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_IVFLgNx=json({});
    
        if (name.pStdVPSs==NULL){
            return_IVFLgNx["null"]=true;
            return return_IVFLgNx;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_Dmlvflo=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_cgqdFQi=json({});
    
        if (name.pStdSPSs==NULL){
            return_cgqdFQi["null"]=true;
            return return_cgqdFQi;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_gvaiNkB=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_iRzeiHm=json({});
    
        if (name.pStdPPSs==NULL){
            return_iRzeiHm["null"]=true;
            return return_iRzeiHm;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eCnniBu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eCnniBu=NULL;
        }
    temp_eCnniBu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eCnniBu;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_zSVCoII;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_zSVCoII=NULL;
        }
    temp_zSVCoII=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_zSVCoII;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_RuPlPDJ;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_RuPlPDJ=NULL;
        }
    temp_RuPlPDJ=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_RuPlPDJ;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_zDwdGje;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_zDwdGje=NULL;
        }
    temp_zDwdGje=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_zDwdGje;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oCXceTy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tguAJXm=json({});
    
        if (name.pNext==NULL){
            return_tguAJXm["null"]=true;
            return return_tguAJXm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_pIPfZWG=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_YQwtHVS=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_qAsPhKO=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_rwuTisR=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_rwuTisR["null"]=true;
            return return_rwuTisR;
        }
        return_rwuTisR=[&]() {
    json return_mAlFDHt=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_rwuTisR;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ohzWLwe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ohzWLwe=NULL;
        }
    temp_ohzWLwe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ohzWLwe;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_YwMdbIt;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_YwMdbIt=NULL;
        }
    [&]() {
*(temp_YwMdbIt)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_YwMdbIt;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hALRnDD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cydZCBi=json({});
    
        if (name.pNext==NULL){
            return_cydZCBi["null"]=true;
            return return_cydZCBi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_hYCwQou=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_hYCwQou["null"]=true;
            return return_hYCwQou;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_cdDDImj=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_wwsEYze=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_wwsEYze["null"]=true;
            return return_wwsEYze;
        }
        
        return_wwsEYze["members"]={};
        for(int i=0; i < name.sliceSegmentCount; i++){
            json temp;
            temp=[&]() {
    json return_sxUeqZO=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[i]);}();
            return_wwsEYze["members"][std::to_string(i)].push_back(temp);
        }
        return return_wwsEYze;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xBhBLxa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xBhBLxa=NULL;
        }
    temp_xBhBLxa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xBhBLxa;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_vAsoLhm;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_vAsoLhm=NULL;
        }
    temp_vAsoLhm=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_vAsoLhm;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_xiCFqYy;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_xiCFqYy=NULL;
        }
    temp_xiCFqYy=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int fcLPJzq=0; fcLPJzq < result.sliceSegmentCount; fcLPJzq++){
            [&]() {
temp_xiCFqYy[fcLPJzq]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][fcLPJzq]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_xiCFqYy;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MlUMUMu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KXwqFGN=json({});
    
        if (name.pNext==NULL){
            return_KXwqFGN["null"]=true;
            return return_KXwqFGN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_tYjlanA=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_tYjlanA["null"]=true;
            return return_tYjlanA;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wfrBdVI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wfrBdVI=NULL;
        }
    temp_wfrBdVI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wfrBdVI;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_ifgPzgl;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_ifgPzgl=NULL;
        }
    temp_ifgPzgl=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_ifgPzgl;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JzBRlJS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ByPIJAJ=json({});
    
        if (name.pNext==NULL){
            return_ByPIJAJ["null"]=true;
            return return_ByPIJAJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_KXtdvsO=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_onzLLAp=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_TYqLHZD=json({});
    
        if (name.pVideoProfile==NULL){
            return_TYqLHZD["null"]=true;
            return return_TYqLHZD;
        }
        return_TYqLHZD=[&]() {
    json return_VAAuauW=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_TYqLHZD;}();
result["members"]["pictureFormat"]=[&]() {
    json return_PlQGZrF=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_ymvOmnz=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_FMmrFxh=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_eoezxSj=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_CMJrFZI=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_ABVVDDf=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_ABVVDDf["null"]=true;
            return return_ABVVDDf;
        }
        return_ABVVDDf=[&]() {
    json return_kMuojXt=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_ABVVDDf;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_afndMlK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_afndMlK=NULL;
        }
    temp_afndMlK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_afndMlK;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_NfIYPwx;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_NfIYPwx=NULL;
        }
    [&]() {
*(temp_NfIYPwx)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_NfIYPwx;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_LyGSovb;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_LyGSovb=NULL;
        }
    [&]() {
*(temp_LyGSovb)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_LyGSovb;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OPRovPR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZGqjTIQ=json({});
    
        if (name.pNext==NULL){
            return_ZGqjTIQ["null"]=true;
            return return_ZGqjTIQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mDgNCKK=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_rrhnUnq=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_axnmycd=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hiciyGU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hiciyGU=NULL;
        }
    temp_hiciyGU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hiciyGU;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MnxuhwG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KAiBgeP=json({});
    
        if (name.pNext==NULL){
            return_KAiBgeP["null"]=true;
            return return_KAiBgeP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_HqVbkLe=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HXzEFeW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HXzEFeW=NULL;
        }
    temp_HXzEFeW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HXzEFeW;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JRvuuTK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DJyudhl=json({});
    
        if (name.pNext==NULL){
            return_DJyudhl["null"]=true;
            return return_DJyudhl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_amfGEXg=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_BhYFtNJ=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_sXuDyqP=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_Vygzywa=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_KBSczSH=json({});
    
        if (name.pReferenceSlots==NULL){
            return_KBSczSH["null"]=true;
            return return_KBSczSH;
        }
        
        return_KBSczSH["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_MZESmiG=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_KBSczSH["members"][std::to_string(i)].push_back(temp);
        }
        return return_KBSczSH;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KCaoPIL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KCaoPIL=NULL;
        }
    temp_KCaoPIL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KCaoPIL;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_oGzebjH;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_oGzebjH=NULL;
        }
    temp_oGzebjH=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int yzojdvb=0; yzojdvb < result.referenceSlotCount; yzojdvb++){
            [&]() {
temp_oGzebjH[yzojdvb]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][yzojdvb]);}();;
        }
        }();result.pReferenceSlots=temp_oGzebjH;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_psJutyY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mrEEJAt=json({});
    
        if (name.pNext==NULL){
            return_mrEEJAt["null"]=true;
            return return_mrEEJAt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_iBdDtco=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TRCcNUW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TRCcNUW=NULL;
        }
    temp_TRCcNUW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TRCcNUW;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_coMwoMq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMRGOCf=json({});
    
        if (name.pNext==NULL){
            return_HMRGOCf["null"]=true;
            return return_HMRGOCf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YboGQdJ=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_imgkHDG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_imgkHDG=NULL;
        }
    temp_imgkHDG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_imgkHDG;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZyHNMGA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OdTiIin=json({});
    
        if (name.pNext==NULL){
            return_OdTiIin["null"]=true;
            return return_OdTiIin;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_edNZUPq=json({});
    return_edNZUPq=[&]() {
    json return_kqOIwdz=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_edNZUPq;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CbGySjk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HPxsYTE=json({});
    
        if (name.pNext==NULL){
            return_HPxsYTE["null"]=true;
            return return_HPxsYTE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_helzyPC=json({});
    return_helzyPC=[&]() {
    json return_CRlvkMb=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_helzyPC;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_ASCmTYm=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_ujXoRim=json({});
    
        if (name.pViewportDepths==NULL){
            return_ujXoRim["null"]=true;
            return return_ujXoRim;
        }
        return_ujXoRim=[&]() {
    json return_VhJrVsm=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_ujXoRim;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ICkjtOE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ICkjtOE=NULL;
        }
    temp_ICkjtOE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ICkjtOE;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_xfKaHBn;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_xfKaHBn=NULL;
        }
    [&]() {
*(temp_xfKaHBn)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_xfKaHBn;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PswyKyb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MXXYgNq=json({});
    
        if (name.pNext==NULL){
            return_MXXYgNq["null"]=true;
            return return_MXXYgNq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_kjEtbRB=json({});
    return_kjEtbRB=[&]() {
    json return_ypixnGd=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_kjEtbRB;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vQnHHUs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xOzpjHX=json({});
    
        if (name.pNext==NULL){
            return_xOzpjHX["null"]=true;
            return return_xOzpjHX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_dDVspQd=json({});
    return_dDVspQd=[&]() {
    json return_zKTxtVV=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_dDVspQd;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_vVQKTJZ=json({});
    return_vVQKTJZ=[&]() {
    json return_LrKePAx=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_vVQKTJZ;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lYtdnCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aoOqPYz=json({});
    
        if (name.pNext==NULL){
            return_aoOqPYz["null"]=true;
            return return_aoOqPYz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_wLIWgld=json({});
    return_wLIWgld=[&]() {
    json return_sMwaUQa=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_wLIWgld;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_GCVBdHz=json({});
    return_GCVBdHz=[&]() {
    json return_zeDHszO=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_GCVBdHz;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tDuOxna=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DnzCCvv=json({});
    
        if (name.pNext==NULL){
            return_DnzCCvv["null"]=true;
            return return_DnzCCvv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_wmfFfui=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WmoELRt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WmoELRt=NULL;
        }
    temp_WmoELRt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WmoELRt;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QTZngIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lxvYEDe=json({});
    
        if (name.pNext==NULL){
            return_lxvYEDe["null"]=true;
            return return_lxvYEDe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_NUwAjzk=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_WQeFqAL=json({});
    
        if (name.pData==NULL){
            return_WQeFqAL["null"]=true;
            return return_WQeFqAL;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kOoLxzZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kOoLxzZ=NULL;
        }
    temp_kOoLxzZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kOoLxzZ;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_DUEMMgg;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_DUEMMgg=NULL;
        }
    temp_DUEMMgg=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_DUEMMgg;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IyZTeyy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XCdHLMr=json({});
    
        if (name.pNext==NULL){
            return_XCdHLMr["null"]=true;
            return return_XCdHLMr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["module"]=[&]() {
    json return_PRgEYLq=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_WfpTKHf=json({});
    
        if (name.pName==NULL){
            return_WfpTKHf["null"]=true;
            return return_WfpTKHf;
        }
        return serialize_char_p(name.pName);
}();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FEvEcxS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FEvEcxS=NULL;
        }
    temp_FEvEcxS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FEvEcxS;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_bEbGvTS;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_bEbGvTS=NULL;
        }
    temp_bEbGvTS=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_bEbGvTS;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIXXffk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nmKBUSj=json({});
    
        if (name.pNext==NULL){
            return_nmKBUSj["null"]=true;
            return return_nmKBUSj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["function"]=[&]() {
    json return_QyvigGR=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_pwWKgVX=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_rRkunof=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_XWDaodk=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_MBhnsqy=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_eufJtdD=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_DxlqGsi=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_veOAvfy=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_cSrpNEk=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_QYkPYDW=json({});
    
        if (name.pParams==NULL){
            return_QYkPYDW["null"]=true;
            return return_QYkPYDW;
        }
        
        return_QYkPYDW["members"]={};
        for(int i=0; i < name.paramCount; i++){
            json temp;
            temp=[&]() {
    json return_ZfOROBV=json({});
    
        if (name.pParams[i]==NULL){
            return_ZfOROBV["null"]=true;
            return return_ZfOROBV;
        }
        return serialize_void_p(name.pParams[i]);
}();
            return_QYkPYDW["members"][std::to_string(i)].push_back(temp);
        }
        return return_QYkPYDW;
        }();
result["members"]["extraCount"]=[&]() {
    json return_MyyfxqA=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_FlnAvEs=json({});
    
        if (name.pExtras==NULL){
            return_FlnAvEs["null"]=true;
            return return_FlnAvEs;
        }
        
        return_FlnAvEs["members"]={};
        for(int i=0; i < name.extraCount; i++){
            json temp;
            temp=[&]() {
    json return_IDSIoGO=json({});
    
        if (name.pExtras[i]==NULL){
            return_IDSIoGO["null"]=true;
            return return_IDSIoGO;
        }
        return serialize_void_p(name.pExtras[i]);
}();
            return_FlnAvEs["members"][std::to_string(i)].push_back(temp);
        }
        return return_FlnAvEs;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CczODUo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CczODUo=NULL;
        }
    temp_CczODUo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CczODUo;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_cZpvPFb;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_cZpvPFb=NULL;
        }
    temp_cZpvPFb=(void**)malloc(result.paramCount*sizeof(void*));
        for (int aHmLRBg=0; aHmLRBg < result.paramCount; aHmLRBg++){
            [&]() {

        if (name["members"]["pParams"]["members"][aHmLRBg].contains("null")){
        temp_cZpvPFb[aHmLRBg]=NULL;
        }
    temp_cZpvPFb[aHmLRBg]=deserialize_void_p(name["members"]["pParams"]["members"][aHmLRBg]);
}();;
        }
        }();result.pParams=temp_cZpvPFb;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_vKOYtzc;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_vKOYtzc=NULL;
        }
    temp_vKOYtzc=(void**)malloc(result.extraCount*sizeof(void*));
        for (int WqZClPh=0; WqZClPh < result.extraCount; WqZClPh++){
            [&]() {

        if (name["members"]["pExtras"]["members"][WqZClPh].contains("null")){
        temp_vKOYtzc[WqZClPh]=NULL;
        }
    temp_vKOYtzc[WqZClPh]=deserialize_void_p(name["members"]["pExtras"]["members"][WqZClPh]);
}();;
        }
        }();result.pExtras=temp_vKOYtzc;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gXTzrHa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CeEVnnh=json({});
    
        if (name.pNext==NULL){
            return_CeEVnnh["null"]=true;
            return return_CeEVnnh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_JmtPHHf=json({});
    return_JmtPHHf=[&]() {
    json return_NxDKCwW=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_JmtPHHf;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_vmNuRNX=json({});
    return_vmNuRNX=[&]() {
    json return_ziPYDuc=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_vmNuRNX;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_tmqUFmR=json({});
    return_tmqUFmR=[&]() {
    json return_zYQwtSt=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_tmqUFmR;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_wAECTkc=json({});
    return_wAECTkc=[&]() {
    json return_lEebUvy=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_wAECTkc;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WghQPVP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wPdOOnZ=json({});
    
        if (name.pNext==NULL){
            return_wPdOOnZ["null"]=true;
            return return_wPdOOnZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_byOaitV=json({});
    return_byOaitV=[&]() {
    json return_KnPbpRG=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_byOaitV;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_ZfOGVTD=json({});
    return_ZfOGVTD=[&]() {
    json return_jabQVqs=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_ZfOGVTD;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_mCypMIb=json({});
    return_mCypMIb=[&]() {
    json return_KjlCpLz=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_mCypMIb;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_NgyIGVJ=json({});
    return_NgyIGVJ=[&]() {
    json return_joiXtOy=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_NgyIGVJ;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_XGqTmJb=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_HuIzBbC=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_zydBIrQ=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_etZiMZz=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_mSitkMv=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_aZkvzeN=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_PtqLMvS=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_DVRcSPG=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_iDUltSu=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_crKuPRf=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_JsWiuik=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_HWCAIor=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_ZhFrwNE=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_qVUQzhl=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_xfWrvkc=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_EEyJQKI=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_myjHnFu=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_UBgCNsH=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_FBLMPRP=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_iCTfNnM=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_XlddqVN=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_ClUauvz=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_ACeUcRo=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_pDgHZEY=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_pnfgODP=json({});
    return_pnfgODP=[&]() {
    json return_hsdPZzS=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_pnfgODP;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_seeAqtL=json({});
    return_seeAqtL=[&]() {
    json return_YmMpakB=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_seeAqtL;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_pirvZFP=json({});
    return_pirvZFP=[&]() {
    json return_yIQAYlb=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_pirvZFP;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_FaptNUt=json({});
    return_FaptNUt=[&]() {
    json return_ZvaKueb=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_FaptNUt;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_HZUwHut=json({});
    return_HZUwHut=[&]() {
    json return_pgzeIcu=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_HZUwHut;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DGDSuUX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FwMJsIL=json({});
    
        if (name.pNext==NULL){
            return_FwMJsIL["null"]=true;
            return return_FwMJsIL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_IUdHKAo=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSBsdIs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wqqbkgc=json({});
    
        if (name.pNext==NULL){
            return_wqqbkgc["null"]=true;
            return return_wqqbkgc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_GgesPdb=json({});
    return_GgesPdb=[&]() {
    json return_AMopxRI=json({});
    return serialize_uint64_t(name.address);}();return return_GgesPdb;}();
result["members"]["range"]=[&]() {
    json return_dZOdvIk=json({});
    return_dZOdvIk=[&]() {
    json return_mrUbtDT=json({});
    return serialize_uint64_t(name.range);}();return return_dZOdvIk;}();
result["members"]["format"]=[&]() {
    json return_GacddAZ=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QebxCiE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fEgkkBG=json({});
    
        if (name.pNext==NULL){
            return_fEgkkBG["null"]=true;
            return return_fEgkkBG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_dwaYPkR=json({});
    return_dwaYPkR=[&]() {
    json return_JNpuxBq=json({});
    return serialize_uint64_t(name.address);}();return return_dwaYPkR;}();
result["members"]["usage"]=[&]() {
    json return_wIgmuZO=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_firtESV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YFQUvRK=json({});
    
        if (name.pNext==NULL){
            return_YFQUvRK["null"]=true;
            return return_YFQUvRK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_HBCmSYJ=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_Smrjwdd=json({});
    
        if (name.pSampler==NULL){
            return_Smrjwdd["null"]=true;
            return return_Smrjwdd;
        }
        return_Smrjwdd=[&]() {
    json return_xlSOSGO=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_Smrjwdd;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_gcCDbLU=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_gcCDbLU["null"]=true;
            return return_gcCDbLU;
        }
        return_gcCDbLU=[&]() {
    json return_hEOwzzp=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_gcCDbLU;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_iyxFcbm=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_iyxFcbm["null"]=true;
            return return_iyxFcbm;
        }
        return_iyxFcbm=[&]() {
    json return_PlYZCBF=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_iyxFcbm;}();
result["members"]["pSampledImage"]=[&]() {
    json return_tIqhHkJ=json({});
    
        if (name.pSampledImage==NULL){
            return_tIqhHkJ["null"]=true;
            return return_tIqhHkJ;
        }
        return_tIqhHkJ=[&]() {
    json return_RDOiAiM=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_tIqhHkJ;}();
result["members"]["pStorageImage"]=[&]() {
    json return_EfrAWDT=json({});
    
        if (name.pStorageImage==NULL){
            return_EfrAWDT["null"]=true;
            return return_EfrAWDT;
        }
        return_EfrAWDT=[&]() {
    json return_rWFsUDd=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_EfrAWDT;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_xktFpPn=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_xktFpPn["null"]=true;
            return return_xktFpPn;
        }
        return_xktFpPn=[&]() {
    json return_qaPEcFT=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_xktFpPn;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_GtLyWVm=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_GtLyWVm["null"]=true;
            return return_GtLyWVm;
        }
        return_GtLyWVm=[&]() {
    json return_aWwVrzS=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_GtLyWVm;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_CFYvmcb=json({});
    
        if (name.pUniformBuffer==NULL){
            return_CFYvmcb["null"]=true;
            return return_CFYvmcb;
        }
        return_CFYvmcb=[&]() {
    json return_bbNvheu=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_CFYvmcb;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_VpknWVz=json({});
    
        if (name.pStorageBuffer==NULL){
            return_VpknWVz["null"]=true;
            return return_VpknWVz;
        }
        return_VpknWVz=[&]() {
    json return_ZHtSXzc=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_VpknWVz;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_nsplubF=json({});
    return_nsplubF=[&]() {
    json return_fHYOnGi=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_nsplubF;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_xAPmTFH;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_xAPmTFH=NULL;
        }
    [&]() {
*(temp_xAPmTFH)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_xAPmTFH;}();
[&]() {
VkDescriptorImageInfo* temp_zCgYWIG;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_zCgYWIG=NULL;
        }
    [&]() {
*(temp_zCgYWIG)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_zCgYWIG;}();
[&]() {
VkDescriptorImageInfo* temp_iZbMiAV;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_iZbMiAV=NULL;
        }
    [&]() {
*(temp_iZbMiAV)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_iZbMiAV;}();
[&]() {
VkDescriptorImageInfo* temp_jxqmmhk;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_jxqmmhk=NULL;
        }
    [&]() {
*(temp_jxqmmhk)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_jxqmmhk;}();
[&]() {
VkDescriptorImageInfo* temp_HlzUDWK;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_HlzUDWK=NULL;
        }
    [&]() {
*(temp_HlzUDWK)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_HlzUDWK;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_VyVGdoP;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_VyVGdoP=NULL;
        }
    [&]() {
*(temp_VyVGdoP)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_VyVGdoP;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_QciOWJj;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_QciOWJj=NULL;
        }
    [&]() {
*(temp_QciOWJj)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_QciOWJj;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_YXgxHgR;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_YXgxHgR=NULL;
        }
    [&]() {
*(temp_YXgxHgR)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_YXgxHgR;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_yJnRYuI;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_yJnRYuI=NULL;
        }
    [&]() {
*(temp_yJnRYuI)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_yJnRYuI;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xjtZLsL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_svBiLeF=json({});
    
        if (name.pNext==NULL){
            return_svBiLeF["null"]=true;
            return return_svBiLeF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_HCBjEbW=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_btLCWah=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GgKVCgX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GgKVCgX=NULL;
        }
    temp_GgKVCgX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GgKVCgX;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GehDALj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_agEwdWw=json({});
    
        if (name.pNext==NULL){
            return_agEwdWw["null"]=true;
            return return_agEwdWw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_XVWQdFj=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gIzJPCm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gIzJPCm=NULL;
        }
    temp_gIzJPCm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gIzJPCm;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jOsvZbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WGWZGgc=json({});
    
        if (name.pNext==NULL){
            return_WGWZGgc["null"]=true;
            return return_WGWZGgc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_OwWmMzN=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kUoaAtp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kUoaAtp=NULL;
        }
    temp_kUoaAtp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kUoaAtp;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DaLMXZn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_evsEgBs=json({});
    
        if (name.pNext==NULL){
            return_evsEgBs["null"]=true;
            return return_evsEgBs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_QPNDRKE=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XOGvsNs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XOGvsNs=NULL;
        }
    temp_XOGvsNs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XOGvsNs;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lcKmfGL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vsdWirK=json({});
    
        if (name.pNext==NULL){
            return_vsdWirK["null"]=true;
            return return_vsdWirK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampler"]=[&]() {
    json return_npDRGoE=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_meHBoPP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_meHBoPP=NULL;
        }
    temp_meHBoPP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_meHBoPP;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fYyRjDG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OgpEpbs=json({});
    
        if (name.pNext==NULL){
            return_OgpEpbs["null"]=true;
            return return_OgpEpbs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_WeaZVDj=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_wsDCaXK=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fPWaCcI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fPWaCcI=NULL;
        }
    temp_fPWaCcI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fPWaCcI;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AqhSssf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jpYLNpI=json({});
    
        if (name.pNext==NULL){
            return_jpYLNpI["null"]=true;
            return return_jpYLNpI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_ewElMPi=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_ewElMPi["null"]=true;
            return return_ewElMPi;
        }
        return serialize_void_p(name.opaqueCaptureDescriptorData);
}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eYWqcOQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eYWqcOQ=NULL;
        }
    temp_eYWqcOQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eYWqcOQ;}();
[&]() {
void* temp_sDUCCHB;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_sDUCCHB=NULL;
        }
    temp_sDUCCHB=deserialize_void_p(name["members"]["opaqueCaptureDescriptorData"]);
}();result.opaqueCaptureDescriptorData=temp_sDUCCHB;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_igXIsuO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nJiqgGR=json({});
    
        if (name.pNext==NULL){
            return_nJiqgGR["null"]=true;
            return return_nJiqgGR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_zVbCatC=json({});
    return_zVbCatC=[&]() {
    json return_yVcdWDa=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_zVbCatC;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GJJXgGW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CxfoKKB=json({});
    
        if (name.pNext==NULL){
            return_CxfoKKB["null"]=true;
            return return_CxfoKKB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_GzxHnte=json({});
    return_GzxHnte=[&]() {
    json return_zHOyEiz=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_GzxHnte;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qZAyTiU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLNdjGy=json({});
    
        if (name.pNext==NULL){
            return_cLNdjGy["null"]=true;
            return return_cLNdjGy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_aDHrHOw=json({});
    return_aDHrHOw=[&]() {
    json return_JOUsdGb=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_aDHrHOw;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_dCjYucH=json({});
    return_dCjYucH=[&]() {
    json return_bruyAYk=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_dCjYucH;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_FGrYQvb=json({});
    return_FGrYQvb=[&]() {
    json return_DASWysH=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_FGrYQvb;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_rVSLQCt=json({});
    return_rVSLQCt=[&]() {
    json return_wQviLdQ=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_rVSLQCt;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_ICRBegl=json({});
    return_ICRBegl=[&]() {
    json return_wFFXHwI=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_ICRBegl;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_FhhHuzJ=json({});
    return_FhhHuzJ=[&]() {
    json return_tZnYnYU=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_FhhHuzJ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_oYyyUwr=json({});
    return_oYyyUwr=[&]() {
    json return_XfDInLm=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_oYyyUwr;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_MhmHuVc=json({});
    return_MhmHuVc=[&]() {
    json return_GWHNNVq=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_MhmHuVc;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_RiwSmoV=json({});
    return_RiwSmoV=[&]() {
    json return_cZCIUdS=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_RiwSmoV;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_Xvjipts=json({});
    return_Xvjipts=[&]() {
    json return_nwiJJHm=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_Xvjipts;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_wKvdxYG=json({});
    return_wKvdxYG=[&]() {
    json return_ZluzOlf=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_wKvdxYG;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_oYXgweS=json({});
    return_oYXgweS=[&]() {
    json return_rfzkeXG=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_oYXgweS;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_JBMPWLB=json({});
    return_JBMPWLB=[&]() {
    json return_UAypUYt=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_JBMPWLB;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_ZNuMjbQ=json({});
    return_ZNuMjbQ=[&]() {
    json return_FWbrDex=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_ZNuMjbQ;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_Becsyyn=json({});
    return_Becsyyn=[&]() {
    json return_WwjuxmL=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_Becsyyn;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_qKKkbTl=json({});
    return_qKKkbTl=[&]() {
    json return_OmgDdpS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_qKKkbTl;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_lSwJAlc=json({});
    return_lSwJAlc=[&]() {
    json return_htoRZIM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_lSwJAlc;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_dKjFxxQ=json({});
    return_dKjFxxQ=[&]() {
    json return_tdEIair=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_dKjFxxQ;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_AJqXKyP=json({});
    return_AJqXKyP=[&]() {
    json return_wtbgVea=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_AJqXKyP;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_hvBewks=json({});
    return_hvBewks=[&]() {
    json return_LtLBwic=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_hvBewks;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_PpEKgAL=json({});
    return_PpEKgAL=[&]() {
    json return_hUkCgvu=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_PpEKgAL;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_oBLtolf=json({});
    return_oBLtolf=[&]() {
    json return_mYLEzwX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_oBLtolf;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_ZGyoSPL=json({});
    return_ZGyoSPL=[&]() {
    json return_XeQRyMw=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_ZGyoSPL;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_MRxxGST=json({});
    return_MRxxGST=[&]() {
    json return_wRgrvVf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_MRxxGST;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_VUCZiVf=json({});
    return_VUCZiVf=[&]() {
    json return_UkJODyE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_VUCZiVf;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_IhJCNho=json({});
    return_IhJCNho=[&]() {
    json return_AtYkOIi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_IhJCNho;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_SvsErEa=json({});
    return_SvsErEa=[&]() {
    json return_brsEbem=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_SvsErEa;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_qICyBtz=json({});
    return_qICyBtz=[&]() {
    json return_KsCcueM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_qICyBtz;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_dulZzNK=json({});
    return_dulZzNK=[&]() {
    json return_GAErBMW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_dulZzNK;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_sEYlIiH=json({});
    return_sEYlIiH=[&]() {
    json return_WyhfcgX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_sEYlIiH;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ryCEdHK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YWMddKB=json({});
    
        if (name.pNext==NULL){
            return_YWMddKB["null"]=true;
            return return_YWMddKB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_UrQNUdv=json({});
    return_UrQNUdv=[&]() {
    json return_ddBmUyZ=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_UrQNUdv;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_rcCYjQD=json({});
    return_rcCYjQD=[&]() {
    json return_yikaxfi=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_rcCYjQD;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_KBajqoU=json({});
    return_KBajqoU=[&]() {
    json return_xsdItGB=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_KBajqoU;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_TtJmOYK=json({});
    return_TtJmOYK=[&]() {
    json return_YrOguyb=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_TtJmOYK;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_DreEcLc=json({});
    return_DreEcLc=[&]() {
    json return_HteBEIb=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_DreEcLc;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_WgkfzId=json({});
    return_WgkfzId=[&]() {
    json return_gEAAmgg=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_WgkfzId;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_ERzNlDi=json({});
    return_ERzNlDi=[&]() {
    json return_YBHPQcB=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_ERzNlDi;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_wcwVsgU=json({});
    return_wcwVsgU=[&]() {
    json return_PWXZrHh=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_wcwVsgU;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_TOROzwg=json({});
    return_TOROzwg=[&]() {
    json return_BlkqsRS=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_TOROzwg;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_lTHeISu=json({});
    return_lTHeISu=[&]() {
    json return_juUjEQz=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_lTHeISu;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_Byubyxx=json({});
    return_Byubyxx=[&]() {
    json return_qzcZWOE=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_Byubyxx;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_wQpREzK=json({});
    return_wQpREzK=[&]() {
    json return_SAaOzCg=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_wQpREzK;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_bZKhsWa=json({});
    return_bZKhsWa=[&]() {
    json return_AcvJGDB=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_bZKhsWa;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_tzKCmaD=json({});
    return_tzKCmaD=[&]() {
    json return_HTmknJN=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_tzKCmaD;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_wuFouEh=json({});
    return_wuFouEh=[&]() {
    json return_pLFktCy=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_wuFouEh;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_erQxiZN=json({});
    return_erQxiZN=[&]() {
    json return_NKMXDTY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_erQxiZN;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_gtQdUDu=json({});
    return_gtQdUDu=[&]() {
    json return_GCpjvKE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_gtQdUDu;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_ioqtRtO=json({});
    return_ioqtRtO=[&]() {
    json return_pgWBjFB=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_ioqtRtO;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_eSfMaOe=json({});
    return_eSfMaOe=[&]() {
    json return_SGyluYu=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_eSfMaOe;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_SZSqEzk=json({});
    return_SZSqEzk=[&]() {
    json return_WXCOQNc=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_SZSqEzk;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_EPPGyni=json({});
    return_EPPGyni=[&]() {
    json return_rLZvRVU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_EPPGyni;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_TopwVkM=json({});
    return_TopwVkM=[&]() {
    json return_eUVzzPq=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_TopwVkM;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_wzdSwGs=json({});
    return_wzdSwGs=[&]() {
    json return_FxhagVx=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_wzdSwGs;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_UmLNgDD=json({});
    return_UmLNgDD=[&]() {
    json return_myUpibi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_UmLNgDD;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_mEnQUTQ=json({});
    return_mEnQUTQ=[&]() {
    json return_iyxVxrS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_mEnQUTQ;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_YinzxYl=json({});
    return_YinzxYl=[&]() {
    json return_bYKOurZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_YinzxYl;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_lbsUQjT=json({});
    return_lbsUQjT=[&]() {
    json return_VDtkmha=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_lbsUQjT;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_iIibTep=json({});
    return_iIibTep=[&]() {
    json return_dhKyGBM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_iIibTep;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_INaPLdk=json({});
    return_INaPLdk=[&]() {
    json return_eKJVKbJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_INaPLdk;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_OmEksNX=json({});
    return_OmEksNX=[&]() {
    json return_ZUtDJpn=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_OmEksNX;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zDbMcKE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ortqaEP=json({});
    
        if (name.pNext==NULL){
            return_ortqaEP["null"]=true;
            return return_ortqaEP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hasPrimary"]=[&]() {
    json return_gHUVAFo=json({});
    return_gHUVAFo=[&]() {
    json return_uZyEEft=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_gHUVAFo;}();
result["members"]["hasRender"]=[&]() {
    json return_APRORko=json({});
    return_APRORko=[&]() {
    json return_lXoDzkI=json({});
    return serialize_uint32_t(name.hasRender);}();return return_APRORko;}();
result["members"]["primaryMajor"]=[&]() {
    json return_DMPAgxp=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_OXnskIr=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_EQYsVfl=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_qYgPbcT=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hutkZlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_acOUPTu=json({});
    
        if (name.pNext==NULL){
            return_acOUPTu["null"]=true;
            return return_acOUPTu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_eJhbBoI=json({});
    return_eJhbBoI=[&]() {
    json return_rqrFaFi=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_eJhbBoI;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tgOGEtP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AFBiHrC=json({});
    
        if (name.pNext==NULL){
            return_AFBiHrC["null"]=true;
            return return_AFBiHrC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_djsGMlz=json({});
    return_djsGMlz=[&]() {
    json return_XELBHqw=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_djsGMlz;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OTpSbdh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OdvVHPI=json({});
    
        if (name.pNext==NULL){
            return_OdvVHPI["null"]=true;
            return return_OdvVHPI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_meYrVze=json({});
    return_meYrVze=[&]() {
    json return_slYzAsN=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_meYrVze;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YhWEuZi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FMdLFkJ=json({});
    
        if (name.pNext==NULL){
            return_FMdLFkJ["null"]=true;
            return return_FMdLFkJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_zkJoZEw=json({});
    return_zkJoZEw=[&]() {
    json return_IXZAPyO=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_zkJoZEw;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_QKVONqf=json({});
    return_QKVONqf=[&]() {
    json return_sGXaLdN=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_QKVONqf;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VsLLYPC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JEkTuRt=json({});
    
        if (name.pNext==NULL){
            return_JEkTuRt["null"]=true;
            return return_JEkTuRt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_BGoVFVu=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IYBbaTR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IYBbaTR=NULL;
        }
    temp_IYBbaTR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IYBbaTR;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzdgsmY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EoEIbiG=json({});
    
        if (name.pNext==NULL){
            return_EoEIbiG["null"]=true;
            return return_EoEIbiG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInstances"]=[&]() {
    json return_abVemgk=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_qXEGyaV=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dqWquxY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dqWquxY=NULL;
        }
    temp_dqWquxY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dqWquxY;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_uoJuNFV=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_gcPMfrn=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_OedGYos=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_MmRvjZG=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_MZWpsnt=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_jQHXdMR=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_ZsaWPRz=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_ozsnDXh=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_RTfGrUM=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_zHKBlXg=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_sdrvnal=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_zhIoxVg=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_WZgfZhq=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_jVpLjEV=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_bjlUSMr=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_xxLUzfl=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_jcHBiBJ=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_BMTLHYi=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_ZtLNYOc=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_SIdrsoZ=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_KpYzEtK=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_YJsisJg=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_bLwYNzR=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_AKGudVG=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_RuymmgF=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_YRbArQm=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_qaKOPfz=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_atzGfse=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_yvSmwPw=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_unRotQA=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_bxdjLZH=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_YEJjiRi=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_fEEZXxy=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_PCBJISe=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_JjfTrJQ=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_SpKJmBv=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IcTeHJb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAVqWqE=json({});
    
        if (name.pNext==NULL){
            return_mAVqWqE["null"]=true;
            return return_mAVqWqE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_aecyuSK=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_GmjfxDo=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aDaCkOb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aDaCkOb=NULL;
        }
    temp_aDaCkOb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aDaCkOb;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WHFThOO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LMbgdqa=json({});
    
        if (name.pNext==NULL){
            return_LMbgdqa["null"]=true;
            return return_LMbgdqa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_JDtzmFL=json({});
    return_JDtzmFL=[&]() {
    json return_ByfYaZW=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_JDtzmFL;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mNXhKsR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yYDvjCO=json({});
    
        if (name.pNext==NULL){
            return_yYDvjCO["null"]=true;
            return return_yYDvjCO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_NtKvdky=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_Vvmtlrh=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_hHWYgKP=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MoYHjnk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DfrKybi=json({});
    
        if (name.pNext==NULL){
            return_DfrKybi["null"]=true;
            return return_DfrKybi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_HhoMHHT=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_dhsqhcl=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_AVVZsVp=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_msllgik=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cyFCtfb=json({});
    
        if (name.pNext==NULL){
            return_cyFCtfb["null"]=true;
            return return_cyFCtfb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_xqbBNxk=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_SQyaPIO=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_SQyaPIO["null"]=true;
            return return_SQyaPIO;
        }
        
        return_SQyaPIO["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_bTlZTMt=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[i]);}();
            return_SQyaPIO["members"][std::to_string(i)].push_back(temp);
        }
        return return_SQyaPIO;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int bCksgCR=0; bCksgCR < result.drmFormatModifierCount; bCksgCR++){
            [&]() {
result.pDrmFormatModifierProperties[bCksgCR]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][bCksgCR]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_NHoJoMC=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_pNDMDuq=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_aVpsyaT=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xsXhFgP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zrDhBjo=json({});
    
        if (name.pNext==NULL){
            return_zrDhBjo["null"]=true;
            return return_zrDhBjo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_iImwicJ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_kvewHmz=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_SSVDILO=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_SSVDILO["null"]=true;
            return return_SSVDILO;
        }
        
        return_SSVDILO["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_kfqHBsK=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_SSVDILO["members"][std::to_string(i)].push_back(temp);
        }
        return return_SSVDILO;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_vefSFpl=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_KsHOOIy=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EemvLfG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EemvLfG=NULL;
        }
    temp_EemvLfG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EemvLfG;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_mfxNILb;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_mfxNILb=NULL;
        }
    temp_mfxNILb=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int QMQYVDM=0; QMQYVDM < result.colorAttachmentCount; QMQYVDM++){
            [&]() {
temp_mfxNILb[QMQYVDM]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][QMQYVDM]);}();;
        }
        }();result.pColorAttachmentFormats=temp_mfxNILb;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oATEUPw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wWdgwvC=json({});
    
        if (name.pNext==NULL){
            return_wWdgwvC["null"]=true;
            return return_wWdgwvC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_cQIqaaF=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ogMmIcD=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_ESrcxNs=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_ESrcxNs["null"]=true;
            return return_ESrcxNs;
        }
        
        return_ESrcxNs["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ddEiBWE=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_ESrcxNs["members"][std::to_string(i)].push_back(temp);
        }
        return return_ESrcxNs;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_aNwvLKh=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_xWzHEPw=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_leAQdim;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_leAQdim=NULL;
        }
    temp_leAQdim=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_leAQdim;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_JnfsSby;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_JnfsSby=NULL;
        }
    temp_JnfsSby=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int syQXQpR=0; syQXQpR < result.colorAttachmentCount; syQXQpR++){
            [&]() {
temp_JnfsSby[syQXQpR]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][syQXQpR]);}();;
        }
        }();result.pColorAttachmentFormats=temp_JnfsSby;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TOZmOiw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WzxbhzI=json({});
    
        if (name.pNext==NULL){
            return_WzxbhzI["null"]=true;
            return return_WzxbhzI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zgdYRte=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_TgChRRl=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_dfraxeK=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_LUTfYNh=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_AmEZeup=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_VBiXFLD=json({});
    
        if (name.pColorAttachments==NULL){
            return_VBiXFLD["null"]=true;
            return return_VBiXFLD;
        }
        
        return_VBiXFLD["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_jKATvzp=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_VBiXFLD["members"][std::to_string(i)].push_back(temp);
        }
        return return_VBiXFLD;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_DVwlwpo=json({});
    
        if (name.pDepthAttachment==NULL){
            return_DVwlwpo["null"]=true;
            return return_DVwlwpo;
        }
        return_DVwlwpo=[&]() {
    json return_xkaazcu=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_DVwlwpo;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_HLfXAQI=json({});
    
        if (name.pStencilAttachment==NULL){
            return_HLfXAQI["null"]=true;
            return return_HLfXAQI;
        }
        return_HLfXAQI=[&]() {
    json return_GskkFxI=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_HLfXAQI;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NLgdKvx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NLgdKvx=NULL;
        }
    temp_NLgdKvx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NLgdKvx;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_NforlTt;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_NforlTt=NULL;
        }
    temp_NforlTt=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int XypDFNt=0; XypDFNt < result.colorAttachmentCount; XypDFNt++){
            [&]() {
temp_NforlTt[XypDFNt]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][XypDFNt]);}();;
        }
        }();result.pColorAttachments=temp_NforlTt;}();
[&]() {
VkRenderingAttachmentInfo* temp_gTFNDSC;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_gTFNDSC=NULL;
        }
    [&]() {
*(temp_gTFNDSC)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_gTFNDSC;}();
[&]() {
VkRenderingAttachmentInfo* temp_ppENEEC;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_ppENEEC=NULL;
        }
    [&]() {
*(temp_ppENEEC)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_ppENEEC;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IGzzEdX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PqlaJdI=json({});
    
        if (name.pNext==NULL){
            return_PqlaJdI["null"]=true;
            return return_PqlaJdI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MiSCtNi=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_xvzlHhy=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_zhQlVRf=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_FRpRPZp=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ELGcPGO=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_uWuKrOv=json({});
    
        if (name.pColorAttachments==NULL){
            return_uWuKrOv["null"]=true;
            return return_uWuKrOv;
        }
        
        return_uWuKrOv["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ZWCHELN=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_uWuKrOv["members"][std::to_string(i)].push_back(temp);
        }
        return return_uWuKrOv;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_fBMkjwf=json({});
    
        if (name.pDepthAttachment==NULL){
            return_fBMkjwf["null"]=true;
            return return_fBMkjwf;
        }
        return_fBMkjwf=[&]() {
    json return_VVBsQhh=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_fBMkjwf;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_SKXbjXx=json({});
    
        if (name.pStencilAttachment==NULL){
            return_SKXbjXx["null"]=true;
            return return_SKXbjXx;
        }
        return_SKXbjXx=[&]() {
    json return_aoWPQKX=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_SKXbjXx;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BNvrmvd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BNvrmvd=NULL;
        }
    temp_BNvrmvd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BNvrmvd;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_XPfPjEU;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_XPfPjEU=NULL;
        }
    temp_XPfPjEU=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int Jtgkqpx=0; Jtgkqpx < result.colorAttachmentCount; Jtgkqpx++){
            [&]() {
temp_XPfPjEU[Jtgkqpx]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][Jtgkqpx]);}();;
        }
        }();result.pColorAttachments=temp_XPfPjEU;}();
[&]() {
VkRenderingAttachmentInfo* temp_vMrPBcU;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_vMrPBcU=NULL;
        }
    [&]() {
*(temp_vMrPBcU)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_vMrPBcU;}();
[&]() {
VkRenderingAttachmentInfo* temp_YktSWMX;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_YktSWMX=NULL;
        }
    [&]() {
*(temp_YktSWMX)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_YktSWMX;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QAAjvju=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oPNktws=json({});
    
        if (name.pNext==NULL){
            return_oPNktws["null"]=true;
            return return_oPNktws;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_aDWuOnV=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_sfDTPJp=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_kbMgUyp=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_cnKnghI=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_BzdFcjk=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_DBoFPrS=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_TQIFFPK=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_RRSUMIk=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fdCjwrL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fdCjwrL=NULL;
        }
    temp_fdCjwrL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fdCjwrL;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hVUJEIk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JoGubaz=json({});
    
        if (name.pNext==NULL){
            return_JoGubaz["null"]=true;
            return return_JoGubaz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_ZQZrSoR=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_eItgfMU=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_jngPLwR=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_JBuEXJe=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_bnzropJ=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_WRSMQfn=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_MpVEShJ=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_fUcyQQZ=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iHsqVWT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iHsqVWT=NULL;
        }
    temp_iHsqVWT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iHsqVWT;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RbHqaUk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RrDSYpW=json({});
    
        if (name.pNext==NULL){
            return_RrDSYpW["null"]=true;
            return return_RrDSYpW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_eHTbmSf=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_DvLsCNV=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_rAUWgBk=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RztcXtf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RztcXtf=NULL;
        }
    temp_RztcXtf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RztcXtf;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HjnwVSc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iOSdYSc=json({});
    
        if (name.pNext==NULL){
            return_iOSdYSc["null"]=true;
            return return_iOSdYSc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_arRxdmN=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_yOKvmmJ=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xSLBsjh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xSLBsjh=NULL;
        }
    temp_xSLBsjh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xSLBsjh;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GMqXxpZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UaQSREl=json({});
    
        if (name.pNext==NULL){
            return_UaQSREl["null"]=true;
            return return_UaQSREl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_nESRaMI=json({});
    return_nESRaMI=[&]() {
    json return_ptoQZyr=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_nESRaMI;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dFOfqro=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ngpJubp=json({});
    
        if (name.pNext==NULL){
            return_ngpJubp["null"]=true;
            return return_ngpJubp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_LvdJpkI=json({});
    return_LvdJpkI=[&]() {
    json return_IPLLeyj=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_LvdJpkI;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dSrYltb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZRhnkbZ=json({});
    
        if (name.pNext==NULL){
            return_ZRhnkbZ["null"]=true;
            return return_ZRhnkbZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dIzRREW=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_TmopldD=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_AdiKtIo=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_FDDHwpJ=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_ScFuaSS=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_ScFuaSS["null"]=true;
            return return_ScFuaSS;
        }
        
        return_ScFuaSS["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_hPgjhUX=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_ScFuaSS["members"][std::to_string(i)].push_back(temp);
        }
        return return_ScFuaSS;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_WDzQGFf=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_HpyjwsD=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_YjEgqXD=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TQJOntJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TQJOntJ=NULL;
        }
    temp_TQJOntJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TQJOntJ;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_vuufuSW;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_vuufuSW=NULL;
        }
    temp_vuufuSW=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int SvmWseo=0; SvmWseo < result.colorAttachmentCount; SvmWseo++){
            [&]() {
temp_vuufuSW[SvmWseo]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][SvmWseo]);}();;
        }
        }();result.pColorAttachmentFormats=temp_vuufuSW;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BIcIIQt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wJXhFzX=json({});
    
        if (name.pNext==NULL){
            return_wJXhFzX["null"]=true;
            return return_wJXhFzX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ZMjtYzW=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_tJVoRIZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_XFKYdDj=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_VWNbKPh=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_advBdaA=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_advBdaA["null"]=true;
            return return_advBdaA;
        }
        
        return_advBdaA["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_nCbgRZw=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_advBdaA["members"][std::to_string(i)].push_back(temp);
        }
        return return_advBdaA;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_LSTAPil=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_qoNDKJl=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_cUaTIpP=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cdSjill;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cdSjill=NULL;
        }
    temp_cdSjill=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cdSjill;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_BmQUuQD;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_BmQUuQD=NULL;
        }
    temp_BmQUuQD=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int vzxAcuI=0; vzxAcuI < result.colorAttachmentCount; vzxAcuI++){
            [&]() {
temp_BmQUuQD[vzxAcuI]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][vzxAcuI]);}();;
        }
        }();result.pColorAttachmentFormats=temp_BmQUuQD;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQDSJLZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OvJzSXG=json({});
    
        if (name.pNext==NULL){
            return_OvJzSXG["null"]=true;
            return return_OvJzSXG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_WxGjgvX=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_vvZeGWS=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_vvZeGWS["null"]=true;
            return return_vvZeGWS;
        }
        
        return_vvZeGWS["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_fzZKrZC=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_vvZeGWS["members"][std::to_string(i)].push_back(temp);
        }
        return return_vvZeGWS;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_TcFtwHI=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sKGezRs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sKGezRs=NULL;
        }
    temp_sKGezRs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sKGezRs;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_jEyREGJ;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_jEyREGJ=NULL;
        }
    temp_jEyREGJ=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int ZUdssSV=0; ZUdssSV < result.colorAttachmentCount; ZUdssSV++){
            [&]() {
temp_jEyREGJ[ZUdssSV]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][ZUdssSV]);}();;
        }
        }();result.pColorAttachmentSamples=temp_jEyREGJ;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UtMLwnn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pdArnpk=json({});
    
        if (name.pNext==NULL){
            return_pdArnpk["null"]=true;
            return return_pdArnpk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_HSGpcZt=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_bENDIur=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_bENDIur["null"]=true;
            return return_bENDIur;
        }
        
        return_bENDIur["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_BeqJyPv=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_bENDIur["members"][std::to_string(i)].push_back(temp);
        }
        return return_bENDIur;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_gGEALEO=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PlXoZHq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PlXoZHq=NULL;
        }
    temp_PlXoZHq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PlXoZHq;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_wmwDKFD;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_wmwDKFD=NULL;
        }
    temp_wmwDKFD=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int GMcHdUh=0; GMcHdUh < result.colorAttachmentCount; GMcHdUh++){
            [&]() {
temp_wmwDKFD[GMcHdUh]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][GMcHdUh]);}();;
        }
        }();result.pColorAttachmentSamples=temp_wmwDKFD;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wbSNcQU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QTOXHRx=json({});
    
        if (name.pNext==NULL){
            return_QTOXHRx["null"]=true;
            return return_QTOXHRx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewAttributes"]=[&]() {
    json return_vLnGdqx=json({});
    return_vLnGdqx=[&]() {
    json return_YMbcPyQ=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_vLnGdqx;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_fAcXxXC=json({});
    return_fAcXxXC=[&]() {
    json return_fASvpes=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_fAcXxXC;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UoJflBZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UoJflBZ=NULL;
        }
    temp_UoJflBZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UoJflBZ;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_htubGcW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YSNhQIb=json({});
    
        if (name.pNext==NULL){
            return_YSNhQIb["null"]=true;
            return return_YSNhQIb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_hdaouqE=json({});
    return_hdaouqE=[&]() {
    json return_fVmusmK=json({});
    return serialize_uint32_t(name.minLod);}();return return_hdaouqE;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_noegRfm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DNrqVJV=json({});
    
        if (name.pNext==NULL){
            return_DNrqVJV["null"]=true;
            return return_DNrqVJV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_TCcHEKN=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IrTEYYC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IrTEYYC=NULL;
        }
    temp_IrTEYYC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IrTEYYC;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eNAVqOX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHwNuGo=json({});
    
        if (name.pNext==NULL){
            return_HHwNuGo["null"]=true;
            return return_HHwNuGo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_zDjdvuM=json({});
    return_zDjdvuM=[&]() {
    json return_yfnUpGZ=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_zDjdvuM;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_iNPkqMn=json({});
    return_iNPkqMn=[&]() {
    json return_osrJklP=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_iNPkqMn;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_sXPpSgf=json({});
    return_sXPpSgf=[&]() {
    json return_uePkukf=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_sXPpSgf;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kcBbKyy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WRlLUDC=json({});
    
        if (name.pNext==NULL){
            return_WRlLUDC["null"]=true;
            return return_WRlLUDC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_cQxfHWp=json({});
    return_cQxfHWp=[&]() {
    json return_OqRkzHF=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_cQxfHWp;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_zBzLShx=json({});
    return_zBzLShx=[&]() {
    json return_NITkGmz=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_zBzLShx;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_zYlNRNd=json({});
    return_zYlNRNd=[&]() {
    json return_TyAuRwF=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_zYlNRNd;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jbHRFDn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QfzPzpm=json({});
    
        if (name.pNext==NULL){
            return_QfzPzpm["null"]=true;
            return return_QfzPzpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_floBuIP=json({});
    return_floBuIP=[&]() {
    json return_fUmThzm=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_floBuIP;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HFyXeuo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_idmRPdO=json({});
    
        if (name.pNext==NULL){
            return_idmRPdO["null"]=true;
            return return_idmRPdO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_irRomHV=json({});
    return_irRomHV=[&]() {
    json return_grEldjK=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_irRomHV;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uurQPxB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OhUtREY=json({});
    
        if (name.pNext==NULL){
            return_OhUtREY["null"]=true;
            return return_OhUtREY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_VpAYXWy=json({});
    return_VpAYXWy=[&]() {
    json return_xzTXMca=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_VpAYXWy;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_YFZGbTn=json({});
    return_YFZGbTn=[&]() {
    json return_kuqjsFT=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_YFZGbTn;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AOoikcY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XyCYXgb=json({});
    
        if (name.pNext==NULL){
            return_XyCYXgb["null"]=true;
            return return_XyCYXgb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_smHStEF=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yQOXdJj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yQOXdJj=NULL;
        }
    temp_yQOXdJj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yQOXdJj;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fvJmceb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_twQUqcV=json({});
    
        if (name.pNext==NULL){
            return_twQUqcV["null"]=true;
            return return_twQUqcV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_TFOYdbq=json({});
    return_TFOYdbq=[&]() {
    json return_jbrzkSD=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_TFOYdbq;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xPWcHcc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NUOwXVi=json({});
    
        if (name.pNext==NULL){
            return_NUOwXVi["null"]=true;
            return return_NUOwXVi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_sYtHPwN=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_IjMlCoZ=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lbDeWDi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lbDeWDi=NULL;
        }
    temp_lbDeWDi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lbDeWDi;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OgAOsrI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fJDOsaS=json({});
    
        if (name.pNext==NULL){
            return_fJDOsaS["null"]=true;
            return return_fJDOsaS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorOffset"]=[&]() {
    json return_PeYPWPd=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_WHJKCTV=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZOUYOnh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZTXXEFX=json({});
    
        if (name.pNext==NULL){
            return_ZTXXEFX["null"]=true;
            return return_ZTXXEFX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_cKGgAwK=json({});
    return_cKGgAwK=[&]() {
    json return_AgFAWRm=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_cKGgAwK;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AMDUUCw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mTmWQkX=json({});
    
        if (name.pNext==NULL){
            return_mTmWQkX["null"]=true;
            return return_mTmWQkX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_SCBtTQR=json({});
    
        return_SCBtTQR["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZgemSFm=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[i]);}();
            return_SCBtTQR["members"][std::to_string(i)].push_back(temp);
        }
        return return_SCBtTQR;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int mgNKoVO=0; mgNKoVO < VK_UUID_SIZE; mgNKoVO++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[mgNKoVO]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][mgNKoVO]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ERBOdVh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SEXiBGV=json({});
    
        if (name.pNext==NULL){
            return_SEXiBGV["null"]=true;
            return return_SEXiBGV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_yDqAtbg=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_zWgbHap=json({});
    
        if (name.pIdentifier==NULL){
            return_zWgbHap["null"]=true;
            return return_zWgbHap;
        }
        
        return_zWgbHap["members"]={};
        for(int i=0; i < name.identifierSize; i++){
            json temp;
            temp=[&]() {
    json return_pzrdKfX=json({});
    return serialize_uint8_t(name.pIdentifier[i]);}();
            return_zWgbHap["members"][std::to_string(i)].push_back(temp);
        }
        return return_zWgbHap;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SfDNZsV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SfDNZsV=NULL;
        }
    temp_SfDNZsV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SfDNZsV;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_ewkFzAh;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_ewkFzAh=NULL;
        }
    temp_ewkFzAh=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int bjNYhdA=0; bjNYhdA < result.identifierSize; bjNYhdA++){
            [&]() {
temp_ewkFzAh[bjNYhdA]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][bjNYhdA]);}();;
        }
        }();result.pIdentifier=temp_ewkFzAh;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RFeqjkk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ubSgbfn=json({});
    
        if (name.pNext==NULL){
            return_ubSgbfn["null"]=true;
            return return_ubSgbfn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_FmBqCLA=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_ZtjhROD=json({});
    
        return_ZtjhROD["members"]={};
        for(int i=0; i < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; i++){
            json temp;
            temp=[&]() {
    json return_grehPWf=json({});
    return serialize_uint8_t(name.identifier[i]);}();
            return_ZtjhROD["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZtjhROD;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int kbXXyYj=0; kbXXyYj < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; kbXXyYj++){
            [&]() {
result.identifier[kbXXyYj]=deserialize_uint8_t(name["members"]["identifier"]["members"][kbXXyYj]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSTmAnr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ejPKaqF=json({});
    
        if (name.pNext==NULL){
            return_ejPKaqF["null"]=true;
            return return_ejPKaqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BlBiKMY=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_eJWMmBt=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_oUfzapR=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_oUfzapR["null"]=true;
            return return_oUfzapR;
        }
        
        return_oUfzapR["members"]={};
        for(int i=0; i < name.compressionControlPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_FgCZDES=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[i]);}();
            return_oUfzapR["members"][std::to_string(i)].push_back(temp);
        }
        return return_oUfzapR;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ztPPXbd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ztPPXbd=NULL;
        }
    temp_ztPPXbd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ztPPXbd;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int BtKNYYe=0; BtKNYYe < result.compressionControlPlaneCount; BtKNYYe++){
            [&]() {
result.pFixedRateFlags[BtKNYYe]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][BtKNYYe]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qStVdVU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EYBetNS=json({});
    
        if (name.pNext==NULL){
            return_EYBetNS["null"]=true;
            return return_EYBetNS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_pPFdgvJ=json({});
    return_pPFdgvJ=[&]() {
    json return_pGuBhHp=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_pPFdgvJ;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aYWTygm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xFeWGxO=json({});
    
        if (name.pNext==NULL){
            return_xFeWGxO["null"]=true;
            return return_xFeWGxO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_kyljppi=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_SvmkeVx=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WcYsHqU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HgOddbh=json({});
    
        if (name.pNext==NULL){
            return_HgOddbh["null"]=true;
            return return_HgOddbh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_SpwXCsJ=json({});
    return_SpwXCsJ=[&]() {
    json return_pJMoLRz=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_SpwXCsJ;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Zckjlpj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EfNIFZl=json({});
    
        if (name.pNext==NULL){
            return_EfNIFZl["null"]=true;
            return return_EfNIFZl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_cPyqQBW=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hmwlooY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RdTjfTS=json({});
    
        if (name.pNext==NULL){
            return_RdTjfTS["null"]=true;
            return return_RdTjfTS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_wnBXvgh=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qBqifaI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OnMLuTI=json({});
    
        if (name.pNext==NULL){
            return_OnMLuTI["null"]=true;
            return return_OnMLuTI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_KukIqGF=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LRcEVoX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cZlNJVc=json({});
    
        if (name.pNext==NULL){
            return_cZlNJVc["null"]=true;
            return return_cZlNJVc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_RqarYfG=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RahFzzs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AHZQeRE=json({});
    
        if (name.pNext==NULL){
            return_AHZQeRE["null"]=true;
            return return_AHZQeRE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disallowMerging"]=[&]() {
    json return_IKFWvXV=json({});
    return_IKFWvXV=[&]() {
    json return_okbVpKW=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_IKFWvXV;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rNFxbOr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rNFxbOr=NULL;
        }
    temp_rNFxbOr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rNFxbOr;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_FJxcoNq=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pqyJJsK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XKbInrD=json({});
    
        if (name.pNext==NULL){
            return_XKbInrD["null"]=true;
            return return_XKbInrD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_RILUdwM=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_RILUdwM["null"]=true;
            return return_RILUdwM;
        }
        return_RILUdwM=[&]() {
    json return_JGCTjMU=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_RILUdwM;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jnhnRUF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jnhnRUF=NULL;
        }
    temp_jnhnRUF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jnhnRUF;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        }
    [&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_EgelRmB=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_HSXMlUW=json({});
    
        return_HSXMlUW["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_AfLFdMJ=json({});
    return serialize_char(name.description[i]);}();
            return_HSXMlUW["members"][std::to_string(i)].push_back(temp);
        }
        return return_HSXMlUW;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_idzlIQO=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int NKlqKjw=0; NKlqKjw < VK_MAX_DESCRIPTION_SIZE; NKlqKjw++){
            [&]() {
result.description[NKlqKjw]=deserialize_char(name["members"]["description"]["members"][NKlqKjw]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OfsALFH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FkRUDkS=json({});
    
        if (name.pNext==NULL){
            return_FkRUDkS["null"]=true;
            return return_FkRUDkS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_vPBJxvJ=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_vPBJxvJ["null"]=true;
            return return_vPBJxvJ;
        }
        return_vPBJxvJ=[&]() {
    json return_OOoFKGz=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_vPBJxvJ;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tTsyKUr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tTsyKUr=NULL;
        }
    temp_tTsyKUr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tTsyKUr;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        }
    [&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MNHzPbr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zwWZLCP=json({});
    
        if (name.pNext==NULL){
            return_zwWZLCP["null"]=true;
            return return_zwWZLCP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_OwyIkbe=json({});
    return_OwyIkbe=[&]() {
    json return_LDbBfih=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_OwyIkbe;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ejbCEcl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KqFPIDT=json({});
    
        if (name.pNext==NULL){
            return_KqFPIDT["null"]=true;
            return return_KqFPIDT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_NYVOCli=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_qPfIuCy=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_LfcupKs=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_bbwnhYV=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_XzeGltw=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_UgPoaBS=json({});
    
        if (name.pUsageCounts==NULL){
            return_UgPoaBS["null"]=true;
            return return_UgPoaBS;
        }
        
        return_UgPoaBS["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_oXDjOJy=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_UgPoaBS["members"][std::to_string(i)].push_back(temp);
        }
        return return_UgPoaBS;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_MfHbarT=json({});
    
        if (name.ppUsageCounts==NULL){
            return_MfHbarT["null"]=true;
            return return_MfHbarT;
        }
        
        return_MfHbarT["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_pcqfIyX=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_pcqfIyX["null"]=true;
            return return_pcqfIyX;
        }
        
        return_pcqfIyX["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_rGHvvbp=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_pcqfIyX["members"][std::to_string(i)].push_back(temp);
        }
        return return_pcqfIyX;
        }();
            return_MfHbarT["members"][std::to_string(i)].push_back(temp);
        }
        return return_MfHbarT;
        }();
result["members"]["data"]=[&]() {
    json return_fQdUPNm=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_zWjgMnO=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_rYDYKnw=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_cdRnTxS=json({});
    return_cdRnTxS=[&]() {
    json return_BJVQXmZ=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_cdRnTxS;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ulJdIPM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ulJdIPM=NULL;
        }
    temp_ulJdIPM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ulJdIPM;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_hXEnORN;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_hXEnORN=NULL;
        }
    temp_hXEnORN=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int nhlqhHc=0; nhlqhHc < result.usageCountsCount; nhlqhHc++){
            [&]() {
temp_hXEnORN[nhlqhHc]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][nhlqhHc]);}();;
        }
        }();result.pUsageCounts=temp_hXEnORN;}();
[&]() {
VkMicromapUsageEXT** temp_TwrVlhY;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_TwrVlhY=NULL;
        }
    temp_TwrVlhY=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int FdPqDoT=0; FdPqDoT < result.usageCountsCount; FdPqDoT++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][FdPqDoT].contains("null")){
        temp_TwrVlhY[FdPqDoT]=NULL;
        }
    temp_TwrVlhY[FdPqDoT]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int OiYYbnD=0; OiYYbnD < 1; OiYYbnD++){
            [&]() {
temp_TwrVlhY[FdPqDoT][OiYYbnD]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][FdPqDoT]["members"][OiYYbnD]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_TwrVlhY;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OFqeBko=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bDWnEqo=json({});
    
        if (name.pNext==NULL){
            return_bDWnEqo["null"]=true;
            return return_bDWnEqo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_snMdXom=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_XsapoYe=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_UszgLEC=json({});
    return_UszgLEC=[&]() {
    json return_hiIACkC=json({});
    return serialize_uint64_t(name.offset);}();return return_UszgLEC;}();
result["members"]["size"]=[&]() {
    json return_evhZGJD=json({});
    return_evhZGJD=[&]() {
    json return_KXGplKu=json({});
    return serialize_uint64_t(name.size);}();return return_evhZGJD;}();
result["members"]["type"]=[&]() {
    json return_MtUVNhW=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_BGBctlc=json({});
    return_BGBctlc=[&]() {
    json return_YsWcOwE=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_BGBctlc;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cINUoxR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cINUoxR=NULL;
        }
    temp_cINUoxR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cINUoxR;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oQDMhDv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fMIgSQR=json({});
    
        if (name.pNext==NULL){
            return_fMIgSQR["null"]=true;
            return return_fMIgSQR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_OvOxPGA=json({});
    
        if (name.pVersionData==NULL){
            return_OvOxPGA["null"]=true;
            return return_OvOxPGA;
        }
        
        return_OvOxPGA["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_eZvDcFy=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_OvOxPGA["members"][std::to_string(i)].push_back(temp);
        }
        return return_OvOxPGA;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OMiSXcC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OMiSXcC=NULL;
        }
    temp_OMiSXcC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OMiSXcC;}();
[&]() {
uint8_t* temp_RlKIdca;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_RlKIdca=NULL;
        }
    temp_RlKIdca=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int BDwazUv=0; BDwazUv < 2*VK_UUID_SIZE; BDwazUv++){
            [&]() {
temp_RlKIdca[BDwazUv]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][BDwazUv]);}();;
        }
        }();result.pVersionData=temp_RlKIdca;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GaAGHoV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QjFwzVM=json({});
    
        if (name.pNext==NULL){
            return_QjFwzVM["null"]=true;
            return return_QjFwzVM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_yPvzREZ=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_pKvHrQs=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_MqTETEk=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rPXsZiR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rPXsZiR=NULL;
        }
    temp_rPXsZiR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rPXsZiR;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OzhpqzJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hFqbjaM=json({});
    
        if (name.pNext==NULL){
            return_hFqbjaM["null"]=true;
            return return_hFqbjaM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_iMvABXn=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_FCdagIU=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_nLhJZeJ=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hGdoUBV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hGdoUBV=NULL;
        }
    temp_hGdoUBV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hGdoUBV;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jMuIjtW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vjmvRqK=json({});
    
        if (name.pNext==NULL){
            return_vjmvRqK["null"]=true;
            return return_vjmvRqK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_CpBygRU=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_iMOfSki=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_ZzFDqTC=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WIaNAGN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WIaNAGN=NULL;
        }
    temp_WIaNAGN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WIaNAGN;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WvDKRDd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKuVhYD=json({});
    
        if (name.pNext==NULL){
            return_xKuVhYD["null"]=true;
            return return_xKuVhYD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromapSize"]=[&]() {
    json return_oAwXaLC=json({});
    return_oAwXaLC=[&]() {
    json return_ygAvJea=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_oAwXaLC;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_VPFmkWX=json({});
    return_VPFmkWX=[&]() {
    json return_WecnOko=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_VPFmkWX;}();
result["members"]["discardable"]=[&]() {
    json return_lURHykh=json({});
    return_lURHykh=[&]() {
    json return_TdqfWre=json({});
    return serialize_uint32_t(name.discardable);}();return return_lURHykh;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ynetHqZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ynetHqZ=NULL;
        }
    temp_ynetHqZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ynetHqZ;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_hKwagJH=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_iCBXHoQ=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_SiCBZAT=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_yFgbDzO=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_SnGQegE=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_mRyHQCF=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TGpsLCk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SbnBGvj=json({});
    
        if (name.pNext==NULL){
            return_SbnBGvj["null"]=true;
            return return_SbnBGvj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromap"]=[&]() {
    json return_lrGYmFo=json({});
    return_lrGYmFo=[&]() {
    json return_HySoHxv=json({});
    return serialize_uint32_t(name.micromap);}();return return_lrGYmFo;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_MdfDsrK=json({});
    return_MdfDsrK=[&]() {
    json return_szCLdfi=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_MdfDsrK;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_jQdVpyT=json({});
    return_jQdVpyT=[&]() {
    json return_JgANLgc=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_jQdVpyT;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BuXXAaa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kDqlVvK=json({});
    
        if (name.pNext==NULL){
            return_kDqlVvK["null"]=true;
            return return_kDqlVvK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_mjgPiSI=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_nvvcBzT=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TzpetxK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mEZyTDb=json({});
    
        if (name.pNext==NULL){
            return_mEZyTDb["null"]=true;
            return return_mEZyTDb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexType"]=[&]() {
    json return_Uwawepw=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_gbTraZC=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_gGCRoXS=json({});
    return_gGCRoXS=[&]() {
    json return_KVvtKXI=json({});
    return serialize_uint64_t(name.indexStride);}();return return_gGCRoXS;}();
result["members"]["baseTriangle"]=[&]() {
    json return_FrulIly=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_kdtRaIh=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_VWmYEpB=json({});
    
        if (name.pUsageCounts==NULL){
            return_VWmYEpB["null"]=true;
            return return_VWmYEpB;
        }
        
        return_VWmYEpB["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_NTzWKIy=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_VWmYEpB["members"][std::to_string(i)].push_back(temp);
        }
        return return_VWmYEpB;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_sGypDFR=json({});
    
        if (name.ppUsageCounts==NULL){
            return_sGypDFR["null"]=true;
            return return_sGypDFR;
        }
        
        return_sGypDFR["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_HPsuGin=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_HPsuGin["null"]=true;
            return return_HPsuGin;
        }
        
        return_HPsuGin["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_ZwHBQts=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_HPsuGin["members"][std::to_string(i)].push_back(temp);
        }
        return return_HPsuGin;
        }();
            return_sGypDFR["members"][std::to_string(i)].push_back(temp);
        }
        return return_sGypDFR;
        }();
result["members"]["micromap"]=[&]() {
    json return_AOdiGGI=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_QUOxnAq;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_QUOxnAq=NULL;
        }
    temp_QUOxnAq=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int OzaMAvQ=0; OzaMAvQ < result.usageCountsCount; OzaMAvQ++){
            [&]() {
temp_QUOxnAq[OzaMAvQ]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][OzaMAvQ]);}();;
        }
        }();result.pUsageCounts=temp_QUOxnAq;}();
[&]() {
VkMicromapUsageEXT** temp_wKpLWRp;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_wKpLWRp=NULL;
        }
    temp_wKpLWRp=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int seeTmcE=0; seeTmcE < result.usageCountsCount; seeTmcE++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][seeTmcE].contains("null")){
        temp_wKpLWRp[seeTmcE]=NULL;
        }
    temp_wKpLWRp[seeTmcE]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int ZiGbHHy=0; ZiGbHHy < 1; ZiGbHHy++){
            [&]() {
temp_wKpLWRp[seeTmcE][ZiGbHHy]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][seeTmcE]["members"][ZiGbHHy]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_wKpLWRp;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dBgwChc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CvTdPOz=json({});
    
        if (name.pNext==NULL){
            return_CvTdPOz["null"]=true;
            return return_CvTdPOz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_puKzCXz=json({});
    
        return_puKzCXz["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uYUWewz=json({});
    return serialize_uint8_t(name.pipelineIdentifier[i]);}();
            return_puKzCXz["members"][std::to_string(i)].push_back(temp);
        }
        return return_puKzCXz;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int lFaJCGo=0; lFaJCGo < VK_UUID_SIZE; lFaJCGo++){
            [&]() {
result.pipelineIdentifier[lFaJCGo]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][lFaJCGo]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dzrTpKV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DkqyWIt=json({});
    
        if (name.pNext==NULL){
            return_DkqyWIt["null"]=true;
            return return_DkqyWIt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_RRhgdmS=json({});
    return_RRhgdmS=[&]() {
    json return_NBcvoJq=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_RRhgdmS;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yUviRNt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FWhcqrl=json({});
    
        if (name.pNext==NULL){
            return_FWhcqrl["null"]=true;
            return return_FWhcqrl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_QeIvVkA=json({});
    return_QeIvVkA=[&]() {
    json return_vKJtfGx=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_QeIvVkA;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hxJlMaF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RRqrNNl=json({});
    
        if (name.pNext==NULL){
            return_RRqrNNl["null"]=true;
            return return_RRqrNNl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_PiaJVHb=json({});
    return_PiaJVHb=[&]() {
    json return_OIiEGvg=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_PiaJVHb;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dcnJMou;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dcnJMou=NULL;
        }
    temp_dcnJMou=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dcnJMou;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pulVCsv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sAaCKcy=json({});
    
        if (name.pNext==NULL){
            return_sAaCKcy["null"]=true;
            return return_sAaCKcy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_RKYqvHY=json({});
    return_RKYqvHY=[&]() {
    json return_BKTuMQE=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_RKYqvHY;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eemKAXg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uTLxivw=json({});
    
        if (name.pNext==NULL){
            return_uTLxivw["null"]=true;
            return return_uTLxivw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_ExGtJgs=json({});
    return_ExGtJgs=[&]() {
    json return_mLzBdvD=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_ExGtJgs;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nThDqBR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPrHQSv=json({});
    
        if (name.pNext==NULL){
            return_FPrHQSv["null"]=true;
            return return_FPrHQSv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffers"]=[&]() {
    json return_BQQWiDd=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_CeePASY=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_iQKIiKo=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_DeYrXjk=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SjkPCji;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SjkPCji=NULL;
        }
    temp_SjkPCji=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SjkPCji;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ScfRbba=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rgoIrAl=json({});
    
        if (name.pNext==NULL){
            return_rgoIrAl["null"]=true;
            return return_rgoIrAl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_eFWQGDC=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_ODMSfDT=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_UhnHbom=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_hnWjRDH=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iUhNAoQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nCgAIYh=json({});
    
        if (name.pNext==NULL){
            return_nCgAIYh["null"]=true;
            return return_nCgAIYh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCenter"]=[&]() {
    json return_hemTRvC=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_QNiQOrh=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_xixISpG=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WLOHdPE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WLOHdPE=NULL;
        }
    temp_WLOHdPE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WLOHdPE;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wRQpDRD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYIQnSq=json({});
    
        if (name.pNext==NULL){
            return_RYIQnSq["null"]=true;
            return return_RYIQnSq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_XFPaWFd=json({});
    return_XFPaWFd=[&]() {
    json return_WsrmyCW=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_XFPaWFd;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_ExDqgWU=json({});
    return_ExDqgWU=[&]() {
    json return_ctWvFbF=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_ExDqgWU;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_EZbhqXw=json({});
    return_EZbhqXw=[&]() {
    json return_EkFWFcy=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_EZbhqXw;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TjuzlaX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_olACwFN=json({});
    
        if (name.pNext==NULL){
            return_olACwFN["null"]=true;
            return return_olACwFN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_EwaPADj=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_pqVzEAN=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_cqShomX=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_gpYiURa=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UONTsAY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_haPNyPr=json({});
    
        if (name.pNext==NULL){
            return_haPNyPr["null"]=true;
            return return_haPNyPr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileProperties"]=[&]() {
    json return_eakODBq=json({});
    return_eakODBq=[&]() {
    json return_CDeyTrV=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_eakODBq;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jVYOSjf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XinqdOj=json({});
    
        if (name.pNext==NULL){
            return_XinqdOj["null"]=true;
            return return_XinqdOj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileSize"]=[&]() {
    json return_CxbLank=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_zSLjvQI=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_jOvuhED=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fTaWNHh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_shqPFBr=json({});
    
        if (name.pNext==NULL){
            return_shqPFBr["null"]=true;
            return return_shqPFBr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["amigoProfiling"]=[&]() {
    json return_bmvsOjf=json({});
    return_bmvsOjf=[&]() {
    json return_pwnhCGQ=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_bmvsOjf;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HMqdwog=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WOlGWHG=json({});
    
        if (name.pNext==NULL){
            return_WOlGWHG["null"]=true;
            return return_WOlGWHG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_SqCjqlY=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_IksTvMH=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NWcZZsj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NWcZZsj=NULL;
        }
    temp_NWcZZsj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NWcZZsj;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IYjhKdI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dzmkzcc=json({});
    
        if (name.pNext==NULL){
            return_dzmkzcc["null"]=true;
            return return_dzmkzcc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_jWqtfdX=json({});
    return_jWqtfdX=[&]() {
    json return_hdeafqp=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_jWqtfdX;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YprRzeJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BqkuTBI=json({});
    
        if (name.pNext==NULL){
            return_BqkuTBI["null"]=true;
            return return_BqkuTBI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_YSABSli=json({});
    return_YSABSli=[&]() {
    json return_dTgpsSo=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_YSABSli;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pEasiFb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ctLkAfe=json({});
    
        if (name.pNext==NULL){
            return_ctLkAfe["null"]=true;
            return return_ctLkAfe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_uQyoKpo=json({});
    return_uQyoKpo=[&]() {
    json return_vXETxqi=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_uQyoKpo;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GJpKmNk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_edbWtHV=json({});
    
        if (name.pNext==NULL){
            return_edbWtHV["null"]=true;
            return return_edbWtHV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zskPUcJ=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_rXPZAEE=json({});
    return_rXPZAEE=[&]() {
    json return_QAXCeqm=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_rXPZAEE;}();
result["members"]["size"]=[&]() {
    json return_JIrIYwe=json({});
    return_JIrIYwe=[&]() {
    json return_dxZqUCM=json({});
    return serialize_uint64_t(name.size);}();return return_JIrIYwe;}();
result["members"]["bindingType"]=[&]() {
    json return_xJLfqRl=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TLbKASz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ilTzoiW=json({});
    
        if (name.pNext==NULL){
            return_ilTzoiW["null"]=true;
            return return_ilTzoiW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opticalFlow"]=[&]() {
    json return_ulSzrnL=json({});
    return_ulSzrnL=[&]() {
    json return_osXxxOH=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_ulSzrnL;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gWmIpmf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DHIvALk=json({});
    
        if (name.pNext==NULL){
            return_DHIvALk["null"]=true;
            return return_DHIvALk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_qilxlem=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_JOyAgqG=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_lgrjoOF=json({});
    return_lgrjoOF=[&]() {
    json return_fVIdEYO=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_lgrjoOF;}();
result["members"]["costSupported"]=[&]() {
    json return_KqdwyTD=json({});
    return_KqdwyTD=[&]() {
    json return_jCUGjxV=json({});
    return serialize_uint32_t(name.costSupported);}();return return_KqdwyTD;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_pQXfQsk=json({});
    return_pQXfQsk=[&]() {
    json return_sDMKgwr=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_pQXfQsk;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_xccDRib=json({});
    return_xccDRib=[&]() {
    json return_xeiNDXK=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_xccDRib;}();
result["members"]["minWidth"]=[&]() {
    json return_rYqFuIi=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_URgGpzi=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_mwZnqKX=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_NoIwKED=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_ZroXjDg=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RGbfcOi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QXZbDIO=json({});
    
        if (name.pNext==NULL){
            return_QXZbDIO["null"]=true;
            return return_QXZbDIO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_JlXKBNe=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJNaxLr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJNaxLr=NULL;
        }
    temp_WJNaxLr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WJNaxLr;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUmANUh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rayCBfs=json({});
    
        if (name.pNext==NULL){
            return_rayCBfs["null"]=true;
            return return_rayCBfs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_hBhRvnb=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WLBjsUM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WLBjsUM=NULL;
        }
    temp_WLBjsUM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WLBjsUM;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SfWmqRa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OuEnPuW=json({});
    
        if (name.pNext==NULL){
            return_OuEnPuW["null"]=true;
            return return_OuEnPuW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["width"]=[&]() {
    json return_zFTRykl=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_bcPQBGf=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_smpqgKd=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_oMrdkpo=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_qzfpWKh=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_nFmWdvG=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_vwtpDoc=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_TLOMeXO=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_ZeyyATY=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NpazSjg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PrxNzXX=json({});
    
        if (name.pNext==NULL){
            return_PrxNzXX["null"]=true;
            return return_PrxNzXX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["id"]=[&]() {
    json return_nPQAQUX=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_SyUmRMx=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_qFZlvDw=json({});
    
        if (name.pPrivateData==NULL){
            return_qFZlvDw["null"]=true;
            return return_qFZlvDw;
        }
        return serialize_void_p(name.pPrivateData);
}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_BysYFRv;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_BysYFRv=NULL;
        }
    temp_BysYFRv=deserialize_void_p(name["members"]["pPrivateData"]);
}();result.pPrivateData=temp_BysYFRv;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uUYbzxK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_okxMiAq=json({});
    
        if (name.pNext==NULL){
            return_okxMiAq["null"]=true;
            return return_okxMiAq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YqcXmFa=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_mbSaIcL=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ezWtJUp=json({});
    
        if (name.pRegions==NULL){
            return_ezWtJUp["null"]=true;
            return return_ezWtJUp;
        }
        
        return_ezWtJUp["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_dAyBJnU=json({});
    return serialize_VkRect2D(name.pRegions[i]);}();
            return_ezWtJUp["members"][std::to_string(i)].push_back(temp);
        }
        return return_ezWtJUp;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_WvEstMb;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_WvEstMb=NULL;
        }
    temp_WvEstMb=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int UHUSbkk=0; UHUSbkk < result.regionCount; UHUSbkk++){
            [&]() {
temp_WvEstMb[UHUSbkk]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][UHUSbkk]);}();;
        }
        }();result.pRegions=temp_WvEstMb;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QGwjcDO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DKHYkfF=json({});
    
        if (name.pNext==NULL){
            return_DKHYkfF["null"]=true;
            return return_DKHYkfF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceFault"]=[&]() {
    json return_NEUQLzt=json({});
    return_NEUQLzt=[&]() {
    json return_kUhKNlG=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_NEUQLzt;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_vHYvaEa=json({});
    return_vHYvaEa=[&]() {
    json return_FnNAinm=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_vHYvaEa;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_UeUhFYB=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_STmnyUK=json({});
    return_STmnyUK=[&]() {
    json return_tQrTeeH=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_STmnyUK;}();
result["members"]["addressPrecision"]=[&]() {
    json return_fOUMQDw=json({});
    return_fOUMQDw=[&]() {
    json return_JSFkYCH=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_fOUMQDw;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_DQcxiIS=json({});
    
        return_DQcxiIS["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_XrGlPHO=json({});
    return serialize_char(name.description[i]);}();
            return_DQcxiIS["members"][std::to_string(i)].push_back(temp);
        }
        return return_DQcxiIS;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_blHrNRU=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_MyMUQux=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int lhslvBL=0; lhslvBL < VK_MAX_DESCRIPTION_SIZE; lhslvBL++){
            [&]() {
result.description[lhslvBL]=deserialize_char(name["members"]["description"]["members"][lhslvBL]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NbBSDKS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BLxWcAf=json({});
    
        if (name.pNext==NULL){
            return_BLxWcAf["null"]=true;
            return return_BLxWcAf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["addressInfoCount"]=[&]() {
    json return_FSpmMeH=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_EyhzsYk=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_lESqmnl=json({});
    return_lESqmnl=[&]() {
    json return_bzFGAVM=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_lESqmnl;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kZfKQnb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HFofvqC=json({});
    
        if (name.pNext==NULL){
            return_HFofvqC["null"]=true;
            return return_HFofvqC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["description"]=[&]() {
    json return_XAVwwpF=json({});
    
        return_XAVwwpF["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kfTyAXA=json({});
    return serialize_char(name.description[i]);}();
            return_XAVwwpF["members"][std::to_string(i)].push_back(temp);
        }
        return return_XAVwwpF;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_TkTQuIw=json({});
    
        if (name.pAddressInfos==NULL){
            return_TkTQuIw["null"]=true;
            return return_TkTQuIw;
        }
        return_TkTQuIw=[&]() {
    json return_XZlMgGC=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_TkTQuIw;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_UjKtjxo=json({});
    
        if (name.pVendorInfos==NULL){
            return_UjKtjxo["null"]=true;
            return return_UjKtjxo;
        }
        return_UjKtjxo=[&]() {
    json return_boJmGGw=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_UjKtjxo;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_RBnxFjN=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_RBnxFjN["null"]=true;
            return return_RBnxFjN;
        }
        return serialize_void_p(name.pVendorBinaryData);
}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int HGFLYgS=0; HGFLYgS < VK_MAX_DESCRIPTION_SIZE; HGFLYgS++){
            [&]() {
result.description[HGFLYgS]=deserialize_char(name["members"]["description"]["members"][HGFLYgS]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        }
    [&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        }
    [&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        }
    result.pVendorBinaryData=deserialize_void_p(name["members"]["pVendorBinaryData"]);
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_twVJSfm=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_fupmRpE=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_TLAIUxq=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_axLpQAW=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_RbURqiB=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_WTjdKqI=json({});
    
        return_WTjdKqI["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xMBGhdn=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_WTjdKqI["members"][std::to_string(i)].push_back(temp);
        }
        return return_WTjdKqI;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_MeKGmou=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_DNvtYEX=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_xqdHKsS=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_OxtCMDL=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_iOmVsCr=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int SXBVegl=0; SXBVegl < VK_UUID_SIZE; SXBVegl++){
            [&]() {
result.pipelineCacheUUID[SXBVegl]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][SXBVegl]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pWkneiE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jfzjMzs=json({});
    
        if (name.pNext==NULL){
            return_jfzjMzs["null"]=true;
            return return_jfzjMzs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_ygOGOUN=json({});
    return_ygOGOUN=[&]() {
    json return_XYsRcaO=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_ygOGOUN;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sQaTzbu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tpXLBSa=json({});
    
        if (name.pNext==NULL){
            return_tpXLBSa["null"]=true;
            return return_tpXLBSa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_EKwFcaM=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_WtFtFkj=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_PiVbpfw=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hVUDGnj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hVUDGnj=NULL;
        }
    temp_hVUDGnj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hVUDGnj;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ICbBAnq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZAeyMre=json({});
    
        if (name.pNext==NULL){
            return_ZAeyMre["null"]=true;
            return return_ZAeyMre;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_DmBwAPU=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_CAJpTvt=json({});
    return_CAJpTvt=[&]() {
    json return_OGCQxnC=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_CAJpTvt;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZMhFfLp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZMhFfLp=NULL;
        }
    temp_ZMhFfLp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZMhFfLp;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_UujdzjU=json({});
    return_UujdzjU=[&]() {
    json return_QojSlRc=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_UujdzjU;}();
result["members"]["dstAddress"]=[&]() {
    json return_AFjwYvJ=json({});
    return_AFjwYvJ=[&]() {
    json return_UDOTXpx=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_AFjwYvJ;}();
result["members"]["compressedSize"]=[&]() {
    json return_wSGTkmR=json({});
    return_wSGTkmR=[&]() {
    json return_rCtovMt=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_wSGTkmR;}();
result["members"]["decompressedSize"]=[&]() {
    json return_YIESOsv=json({});
    return_YIESOsv=[&]() {
    json return_yNvgaCa=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_YIESOsv;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_WTxdubm=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RrrPabR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KdgOIEC=json({});
    
        if (name.pNext==NULL){
            return_KdgOIEC["null"]=true;
            return return_KdgOIEC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_clDvOTq=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_rszBVJJ=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_FlYvjgy=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BNOQVbg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mWInDAg=json({});
    
        if (name.pNext==NULL){
            return_mWInDAg["null"]=true;
            return return_mWInDAg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_SVZVlrW=json({});
    return_SVZVlrW=[&]() {
    json return_WXbrFCk=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_SVZVlrW;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RTiOhoP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IUVTqGz=json({});
    
        if (name.pNext==NULL){
            return_IUVTqGz["null"]=true;
            return return_IUVTqGz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aHRBTKw=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_klxTKJB=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_NqIxOvJ=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_bHgzHim=json({});
    
        if (name.pImages==NULL){
            return_bHgzHim["null"]=true;
            return return_bHgzHim;
        }
        
        return_bHgzHim["members"]={};
        for(int i=0; i < name.imageCount; i++){
            json temp;
            temp=[&]() {
    json return_QbznJSy=json({});
    return serialize_VkImage(name.pImages[i]);}();
            return_bHgzHim["members"][std::to_string(i)].push_back(temp);
        }
        return return_bHgzHim;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_XTsgFYl=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_bHCXcQV=json({});
    
        if (name.pBuffers==NULL){
            return_bHCXcQV["null"]=true;
            return return_bHCXcQV;
        }
        
        return_bHCXcQV["members"]={};
        for(int i=0; i < name.bufferCount; i++){
            json temp;
            temp=[&]() {
    json return_EjUBbqN=json({});
    return serialize_VkBuffer(name.pBuffers[i]);}();
            return_bHCXcQV["members"][std::to_string(i)].push_back(temp);
        }
        return return_bHCXcQV;
        }();
result["members"]["tagName"]=[&]() {
    json return_ygANlDt=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_IooASTj=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_KKfubkj=json({});
    
        if (name.pTag==NULL){
            return_KKfubkj["null"]=true;
            return return_KKfubkj;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xtDgCfj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xtDgCfj=NULL;
        }
    temp_xtDgCfj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xtDgCfj;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_oYtamHm;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_oYtamHm=NULL;
        }
    temp_oYtamHm=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int vuncYWJ=0; vuncYWJ < result.imageCount; vuncYWJ++){
            [&]() {
temp_oYtamHm[vuncYWJ]=deserialize_VkImage(name["members"]["pImages"]["members"][vuncYWJ]);}();;
        }
        }();result.pImages=temp_oYtamHm;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_ItomrrS;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_ItomrrS=NULL;
        }
    temp_ItomrrS=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int onglLBe=0; onglLBe < result.bufferCount; onglLBe++){
            [&]() {
temp_ItomrrS[onglLBe]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][onglLBe]);}();;
        }
        }();result.pBuffers=temp_ItomrrS;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_YurAUdp;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_YurAUdp=NULL;
        }
    temp_YurAUdp=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_YurAUdp;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZDgrFmi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TQiZFmP=json({});
    
        if (name.pNext==NULL){
            return_TQiZFmP["null"]=true;
            return return_TQiZFmP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["frameBoundary"]=[&]() {
    json return_ugQagXo=json({});
    return_ugQagXo=[&]() {
    json return_xqxLfHi=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_ugQagXo;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yzKtkgH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UUzCPMn=json({});
    
        if (name.pNext==NULL){
            return_UUzCPMn["null"]=true;
            return return_UUzCPMn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_gNaFTnO=json({});
    return_gNaFTnO=[&]() {
    json return_NJRzFih=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_gNaFTnO;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RUmlHBc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hwKnEej=json({});
    
        if (name.pNext==NULL){
            return_hwKnEej["null"]=true;
            return return_hwKnEej;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMode"]=[&]() {
    json return_NAEyZIj=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XcmzfZI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sCXATon=json({});
    
        if (name.pNext==NULL){
            return_sCXATon["null"]=true;
            return return_sCXATon;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_yQkspvA=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_ByYzGUa=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_uuemMVc=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_BZgPSOJ=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_FRjFTMR=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gPSPvGR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zunCdgR=json({});
    
        if (name.pNext==NULL){
            return_zunCdgR["null"]=true;
            return return_zunCdgR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_EQmTfdh=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_tCqQYqR=json({});
    
        if (name.pPresentModes==NULL){
            return_tCqQYqR["null"]=true;
            return return_tCqQYqR;
        }
        
        return_tCqQYqR["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_GhJqIPb=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_tCqQYqR["members"][std::to_string(i)].push_back(temp);
        }
        return return_tCqQYqR;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int ZYUptcR=0; ZYUptcR < result.presentModeCount; ZYUptcR++){
            [&]() {
result.pPresentModes[ZYUptcR]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][ZYUptcR]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zwxICLE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ScocPEX=json({});
    
        if (name.pNext==NULL){
            return_ScocPEX["null"]=true;
            return return_ScocPEX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_ZvOTBXs=json({});
    return_ZvOTBXs=[&]() {
    json return_RByGcZe=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_ZvOTBXs;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UYzwgqr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mygbrls=json({});
    
        if (name.pNext==NULL){
            return_mygbrls["null"]=true;
            return return_mygbrls;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_PSHNICe=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_KicAHtM=json({});
    
        if (name.pFences==NULL){
            return_KicAHtM["null"]=true;
            return return_KicAHtM;
        }
        
        return_KicAHtM["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_EImRxwo=json({});
    return serialize_VkFence(name.pFences[i]);}();
            return_KicAHtM["members"][std::to_string(i)].push_back(temp);
        }
        return return_KicAHtM;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iTdRvEb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iTdRvEb=NULL;
        }
    temp_iTdRvEb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iTdRvEb;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_kamgwQW;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_kamgwQW=NULL;
        }
    temp_kamgwQW=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int TcqhFPa=0; TcqhFPa < result.swapchainCount; TcqhFPa++){
            [&]() {
temp_kamgwQW[TcqhFPa]=deserialize_VkFence(name["members"]["pFences"]["members"][TcqhFPa]);}();;
        }
        }();result.pFences=temp_kamgwQW;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qnBRdnU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LXJNjkR=json({});
    
        if (name.pNext==NULL){
            return_LXJNjkR["null"]=true;
            return return_LXJNjkR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_YmFjJKx=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_tdTmdse=json({});
    
        if (name.pPresentModes==NULL){
            return_tdTmdse["null"]=true;
            return return_tdTmdse;
        }
        
        return_tdTmdse["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_bHqbZeI=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_tdTmdse["members"][std::to_string(i)].push_back(temp);
        }
        return return_tdTmdse;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZzpptTz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZzpptTz=NULL;
        }
    temp_ZzpptTz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZzpptTz;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_eDICnHB;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_eDICnHB=NULL;
        }
    temp_eDICnHB=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int BctlPnZ=0; BctlPnZ < result.presentModeCount; BctlPnZ++){
            [&]() {
temp_eDICnHB[BctlPnZ]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][BctlPnZ]);}();;
        }
        }();result.pPresentModes=temp_eDICnHB;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dpqnNch=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CioHJoc=json({});
    
        if (name.pNext==NULL){
            return_CioHJoc["null"]=true;
            return return_CioHJoc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_zvZHbrD=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_SguuWrK=json({});
    
        if (name.pPresentModes==NULL){
            return_SguuWrK["null"]=true;
            return return_SguuWrK;
        }
        
        return_SguuWrK["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_mUpbpHW=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_SguuWrK["members"][std::to_string(i)].push_back(temp);
        }
        return return_SguuWrK;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aLQaajQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aLQaajQ=NULL;
        }
    temp_aLQaajQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aLQaajQ;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_ndJNflS;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_ndJNflS=NULL;
        }
    temp_ndJNflS=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int zjItgVH=0; zjItgVH < result.swapchainCount; zjItgVH++){
            [&]() {
temp_ndJNflS[zjItgVH]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][zjItgVH]);}();;
        }
        }();result.pPresentModes=temp_ndJNflS;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cvdwuON=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RHKLFyh=json({});
    
        if (name.pNext==NULL){
            return_RHKLFyh["null"]=true;
            return return_RHKLFyh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalingBehavior"]=[&]() {
    json return_unBAlyL=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_WwdwYjh=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_KQuBIpI=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yUdcHLx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yUdcHLx=NULL;
        }
    temp_yUdcHLx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yUdcHLx;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UzLXKbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RFaOJQO=json({});
    
        if (name.pNext==NULL){
            return_RFaOJQO["null"]=true;
            return return_RFaOJQO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_pIdIACI=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_ProSRsy=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_QxAxFwX=json({});
    
        if (name.pImageIndices==NULL){
            return_QxAxFwX["null"]=true;
            return return_QxAxFwX;
        }
        
        return_QxAxFwX["members"]={};
        for(int i=0; i < name.imageIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_qIsvZPD=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_QxAxFwX["members"][std::to_string(i)].push_back(temp);
        }
        return return_QxAxFwX;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aCdWXmL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aCdWXmL=NULL;
        }
    temp_aCdWXmL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aCdWXmL;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_AdBPJkR;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_AdBPJkR=NULL;
        }
    temp_AdBPJkR=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int EdBuLSx=0; EdBuLSx < result.imageIndexCount; EdBuLSx++){
            [&]() {
temp_AdBPJkR[EdBuLSx]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][EdBuLSx]);}();;
        }
        }();result.pImageIndices=temp_AdBPJkR;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CMCLaVQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SXXNcTI=json({});
    
        if (name.pNext==NULL){
            return_SXXNcTI["null"]=true;
            return return_SXXNcTI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasControl"]=[&]() {
    json return_cwdobhJ=json({});
    return_cwdobhJ=[&]() {
    json return_gMBYTBv=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_cwdobhJ;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_UHNdOhv=json({});
    return_UHNdOhv=[&]() {
    json return_DDZtkgp=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_UHNdOhv;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_yFgEmwM=json({});
    return_yFgEmwM=[&]() {
    json return_ZBuVBmE=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_yFgEmwM;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_xjMYhoZ=json({});
    return_xjMYhoZ=[&]() {
    json return_NzKsltu=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_xjMYhoZ;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PZHPUir=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XDnnqfg=json({});
    
        if (name.pNext==NULL){
            return_XDnnqfg["null"]=true;
            return return_XDnnqfg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_TqlFhdJ=json({});
    return_TqlFhdJ=[&]() {
    json return_cSVoFUj=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_TqlFhdJ;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Chrlqeo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JMElYas=json({});
    
        if (name.pNext==NULL){
            return_JMElYas["null"]=true;
            return return_JMElYas;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_zDVbzkQ=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kzXwEvO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OOIBTPL=json({});
    
        if (name.pNext==NULL){
            return_OOIBTPL["null"]=true;
            return return_OOIBTPL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_giGTBMD=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_gVvbzQi=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);
        #endif
        }();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zsFxAps=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JfaPyFA=json({});
    
        if (name.pNext==NULL){
            return_JfaPyFA["null"]=true;
            return return_JfaPyFA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_guyHwux=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_neCXrgE=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_qWIpzGM=json({});
    
        if (name.pDrivers==NULL){
            return_qWIpzGM["null"]=true;
            return return_qWIpzGM;
        }
        
        return_qWIpzGM["members"]={};
        for(int i=0; i < name.driverCount; i++){
            json temp;
            temp=[&]() {
    json return_Wqgqxyi=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[i]);}();
            return_qWIpzGM["members"][std::to_string(i)].push_back(temp);
        }
        return return_qWIpzGM;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_xgwEMLx;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_xgwEMLx=NULL;
        }
    temp_xgwEMLx=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int NMhhWLW=0; NMhhWLW < result.driverCount; NMhhWLW++){
            [&]() {
temp_xgwEMLx[NMhhWLW]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][NMhhWLW]);}();;
        }
        }();result.pDrivers=temp_xgwEMLx;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UIrIiYs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lHEVuiy=json({});
    
        if (name.pNext==NULL){
            return_lHEVuiy["null"]=true;
            return return_lHEVuiy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_RwqRkRu=json({});
    return_RwqRkRu=[&]() {
    json return_HuyKghB=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_RwqRkRu;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_titmETc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yROwsOX=json({});
    
        if (name.pNext==NULL){
            return_yROwsOX["null"]=true;
            return return_yROwsOX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_hxkIlkj=json({});
    return_hxkIlkj=[&]() {
    json return_mlhFdDy=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_hxkIlkj;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GTVaalp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lYZOJHA=json({});
    
        if (name.pNext==NULL){
            return_lYZOJHA["null"]=true;
            return return_lYZOJHA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_kURSmAS=json({});
    
        if (name.pCreateInfo==NULL){
            return_kURSmAS["null"]=true;
            return return_kURSmAS;
        }
        return_kURSmAS=[&]() {
    json return_GVAmobh=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_kURSmAS;}();
result["members"]["pSubresource"]=[&]() {
    json return_QCNWzfd=json({});
    
        if (name.pSubresource==NULL){
            return_QCNWzfd["null"]=true;
            return return_QCNWzfd;
        }
        return_QCNWzfd=[&]() {
    json return_QRiiEtD=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_QCNWzfd;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JnUYbcB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JnUYbcB=NULL;
        }
    temp_JnUYbcB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JnUYbcB;}();
[&]() {
VkImageCreateInfo* temp_Urrbfzf;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_Urrbfzf=NULL;
        }
    [&]() {
*(temp_Urrbfzf)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_Urrbfzf;}();
[&]() {
VkImageSubresource2KHR* temp_RWRrxWK;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_RWRrxWK=NULL;
        }
    [&]() {
*(temp_RWRrxWK)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_RWRrxWK;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RFDSHka=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bJGRKTF=json({});
    
        if (name.pNext==NULL){
            return_bJGRKTF["null"]=true;
            return return_bJGRKTF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pixelRate"]=[&]() {
    json return_SfkYmCr=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_ztTEeyo=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_XxuvFUi=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fbkOblN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IVPXABz=json({});
    
        if (name.pNext==NULL){
            return_IVPXABz["null"]=true;
            return return_IVPXABz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_bDRAoXV=json({});
    return_bDRAoXV=[&]() {
    json return_OUGulON=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_bDRAoXV;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VDRZHne=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SyJvgKf=json({});
    
        if (name.pNext==NULL){
            return_SyJvgKf["null"]=true;
            return return_SyJvgKf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_XOciJhi=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_brYFkjW=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_brYFkjW["null"]=true;
            return return_brYFkjW;
        }
        
        return_brYFkjW["members"]={};
        for(int i=0; i < name.perViewRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_woiTPXQ=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[i]);}();
            return_brYFkjW["members"][std::to_string(i)].push_back(temp);
        }
        return return_brYFkjW;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pyqXOZT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pyqXOZT=NULL;
        }
    temp_pyqXOZT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pyqXOZT;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_lsibNWT;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_lsibNWT=NULL;
        }
    temp_lsibNWT=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int ruAmpOE=0; ruAmpOE < result.perViewRenderAreaCount; ruAmpOE++){
            [&]() {
temp_lsibNWT[ruAmpOE]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][ruAmpOE]);}();;
        }
        }();result.pPerViewRenderAreas=temp_lsibNWT;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VKtPIZq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UajqtgW=json({});
    
        if (name.pNext==NULL){
            return_UajqtgW["null"]=true;
            return return_UajqtgW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_ySdWsmt=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_ySdWsmt["null"]=true;
            return return_ySdWsmt;
        }
        return serialize_void_p(name.pQueriedLowLatencyData);
}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sIetRPJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sIetRPJ=NULL;
        }
    temp_sIetRPJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sIetRPJ;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        }
    result.pQueriedLowLatencyData=deserialize_void_p(name["members"]["pQueriedLowLatencyData"]);
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SxaMobz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AOBbqjG=json({});
    
        if (name.pNext==NULL){
            return_AOBbqjG["null"]=true;
            return return_AOBbqjG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LyCWrUZ=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_NghldSV=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_kKBMpLl=json({});
    return_kKBMpLl=[&]() {
    json return_WPeCDJx=json({});
    return serialize_uint64_t(name.offset);}();return return_kKBMpLl;}();
result["members"]["size"]=[&]() {
    json return_INCqrun=json({});
    return_INCqrun=[&]() {
    json return_AqyjsZU=json({});
    return serialize_uint64_t(name.size);}();return return_INCqrun;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KiWJQCq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KiWJQCq=NULL;
        }
    temp_KiWJQCq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KiWJQCq;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BXiaeNe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tqLcQYS=json({});
    
        if (name.pNext==NULL){
            return_tqLcQYS["null"]=true;
            return return_tqLcQYS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MbFoloU=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_oUUOSjv=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TJfIUZH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TJfIUZH=NULL;
        }
    temp_TJfIUZH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TJfIUZH;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LyIiPxF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cUXKBBZ=json({});
    
        if (name.pNext==NULL){
            return_cUXKBBZ["null"]=true;
            return return_cUXKBBZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderObject"]=[&]() {
    json return_WGlGwcm=json({});
    return_WGlGwcm=[&]() {
    json return_RwdRgFk=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_WGlGwcm;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GlhUTAe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NcmbEtW=json({});
    
        if (name.pNext==NULL){
            return_NcmbEtW["null"]=true;
            return return_NcmbEtW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_grRcIYy=json({});
    
        return_grRcIYy["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_nbXjIRD=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[i]);}();
            return_grRcIYy["members"][std::to_string(i)].push_back(temp);
        }
        return return_grRcIYy;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_iVPJAXX=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wKtPdPL=0; wKtPdPL < VK_UUID_SIZE; wKtPdPL++){
            [&]() {
result.shaderBinaryUUID[wKtPdPL]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][wKtPdPL]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UOsRBxT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpnUWsY=json({});
    
        if (name.pNext==NULL){
            return_vpnUWsY["null"]=true;
            return return_vpnUWsY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_rjqxJnt=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_lotTCNF=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_KgOwdkN=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_QPzIDYZ=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_LhFomEQ=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_JrQywln=json({});
    
        if (name.pCode==NULL){
            return_JrQywln["null"]=true;
            return return_JrQywln;
        }
        return serialize_void_p(name.pCode);
}();
result["members"]["pName"]=[&]() {
    json return_jcUsxIO=json({});
    
        if (name.pName==NULL){
            return_jcUsxIO["null"]=true;
            return return_jcUsxIO;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["setLayoutCount"]=[&]() {
    json return_orbOGNC=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_MpaeVlk=json({});
    
        if (name.pSetLayouts==NULL){
            return_MpaeVlk["null"]=true;
            return return_MpaeVlk;
        }
        
        return_MpaeVlk["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_oVmeUiq=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_MpaeVlk["members"][std::to_string(i)].push_back(temp);
        }
        return return_MpaeVlk;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_naKIKrZ=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_AAfMQdQ=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_AAfMQdQ["null"]=true;
            return return_AAfMQdQ;
        }
        
        return_AAfMQdQ["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_aWfWThc=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_AAfMQdQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_AAfMQdQ;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_ttThYml=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_ttThYml["null"]=true;
            return return_ttThYml;
        }
        return_ttThYml=[&]() {
    json return_NwAtQBw=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_ttThYml;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dbtPAsF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dbtPAsF=NULL;
        }
    temp_dbtPAsF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dbtPAsF;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_SNHrXPw;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_SNHrXPw=NULL;
        }
    temp_SNHrXPw=deserialize_void_p(name["members"]["pCode"]);
}();result.pCode=temp_SNHrXPw;}();
[&]() {
char* temp_rCoAEyc;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_rCoAEyc=NULL;
        }
    temp_rCoAEyc=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_rCoAEyc;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_lPULlex;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_lPULlex=NULL;
        }
    temp_lPULlex=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int QeTPSov=0; QeTPSov < result.setLayoutCount; QeTPSov++){
            [&]() {
temp_lPULlex[QeTPSov]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][QeTPSov]);}();;
        }
        }();result.pSetLayouts=temp_lPULlex;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_tYOQMOV;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_tYOQMOV=NULL;
        }
    temp_tYOQMOV=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int okToSRT=0; okToSRT < result.pushConstantRangeCount; okToSRT++){
            [&]() {
temp_tYOQMOV[okToSRT]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][okToSRT]);}();;
        }
        }();result.pPushConstantRanges=temp_tYOQMOV;}();
[&]() {
VkSpecializationInfo* temp_aAjVgoq;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_aAjVgoq=NULL;
        }
    [&]() {
*(temp_aAjVgoq)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_aAjVgoq;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yNLSurH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oLLejYr=json({});
    
        if (name.pNext==NULL){
            return_oLLejYr["null"]=true;
            return return_oLLejYr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_rGwjyir=json({});
    return_rGwjyir=[&]() {
    json return_LhqUiEb=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_rGwjyir;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_EfZIlQm=json({});
    return_EfZIlQm=[&]() {
    json return_LkLTYew=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_EfZIlQm;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_DWzGFYa=json({});
    return_DWzGFYa=[&]() {
    json return_SfBriYW=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_DWzGFYa;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lEGfQjK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SRsjtpm=json({});
    
        if (name.pNext==NULL){
            return_SRsjtpm["null"]=true;
            return return_SRsjtpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_YdDjBGW=json({});
    return_YdDjBGW=[&]() {
    json return_fsXPHku=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_YdDjBGW;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_VlFpWcF=json({});
    return_VlFpWcF=[&]() {
    json return_KawLheO=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_VlFpWcF;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_VCsWGWd=json({});
    return_VCsWGWd=[&]() {
    json return_kODEWwY=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_VCsWGWd;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bBuVkTk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dCWMiLQ=json({});
    
        if (name.pNext==NULL){
            return_dCWMiLQ["null"]=true;
            return return_dCWMiLQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_DkFOqmO=json({});
    return_DkFOqmO=[&]() {
    json return_DXtzPnz=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_DkFOqmO;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_QthTgGG=json({});
    return_QthTgGG=[&]() {
    json return_UmZpStB=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_QthTgGG;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ShemkDy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BxWPtuI=json({});
    
        if (name.pNext==NULL){
            return_BxWPtuI["null"]=true;
            return return_BxWPtuI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_FekRhut=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_zuQHlAr=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_XQMBKEZ=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_chxluUU=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_kbOhZdC=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_ZPoihXe=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_jtSmPuF=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_PecReWt=json({});
    return_PecReWt=[&]() {
    json return_YysQGUJ=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_PecReWt;}();
result["members"]["scope"]=[&]() {
    json return_KPtuxwl=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TeVUCRM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zmFKcfq=json({});
    
        if (name.pNext==NULL){
            return_zmFKcfq["null"]=true;
            return return_zmFKcfq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_MQeIuQS=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RWCqsXa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bACdDIH=json({});
    
        if (name.pNext==NULL){
            return_bACdDIH["null"]=true;
            return return_bACdDIH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_FFjigsj=json({});
    return_FFjigsj=[&]() {
    json return_LzrNknE=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_FFjigsj;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZoFpZBY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZRbEWlt=json({});
    
        if (name.pNext==NULL){
            return_ZRbEWlt["null"]=true;
            return return_ZRbEWlt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_VFrbPCL=json({});
    return_VFrbPCL=[&]() {
    json return_gzEODUH=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_VFrbPCL;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JFrEJXO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZKOLZma=json({});
    
        if (name.pNext==NULL){
            return_ZKOLZma["null"]=true;
            return return_ZKOLZma;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enableYDegamma"]=[&]() {
    json return_MdejVRB=json({});
    return_MdejVRB=[&]() {
    json return_BVpoiXT=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_MdejVRB;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_yMaTYgB=json({});
    return_yMaTYgB=[&]() {
    json return_MMDNsCj=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_yMaTYgB;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XnXFwqB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gAIBhxd=json({});
    
        if (name.pNext==NULL){
            return_gAIBhxd["null"]=true;
            return return_gAIBhxd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_jxIZAUR=json({});
    return_jxIZAUR=[&]() {
    json return_ztRYkMK=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_jxIZAUR;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cKZhysK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NcpDeLi=json({});
    
        if (name.pNext==NULL){
            return_NcpDeLi["null"]=true;
            return return_NcpDeLi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_LDARdvw=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_egwZWVA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_egwZWVA=NULL;
        }
    temp_egwZWVA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_egwZWVA;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kNPjJhs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GfTnAWN=json({});
    
        if (name.pNext==NULL){
            return_GfTnAWN["null"]=true;
            return return_GfTnAWN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_GHiFzSB=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RhJoCWq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RhJoCWq=NULL;
        }
    temp_RhJoCWq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RhJoCWq;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nFYLyeA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oJueoXX=json({});
    
        if (name.pNext==NULL){
            return_oJueoXX["null"]=true;
            return return_oJueoXX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_ZFPaMmq=json({});
    return_ZFPaMmq=[&]() {
    json return_MTpYTnW=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_ZFPaMmq;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NNLQMcq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kqareln=json({});
    
        if (name.pNext==NULL){
            return_kqareln["null"]=true;
            return return_kqareln;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_rYbHHHl=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AkxyPdx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PKOdCKW=json({});
    
        if (name.pNext==NULL){
            return_PKOdCKW["null"]=true;
            return return_PKOdCKW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["windowExtent"]=[&]() {
    json return_FHamRKZ=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_FdgTYwb=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NfzcNnc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NfzcNnc=NULL;
        }
    temp_NfzcNnc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NfzcNnc;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TFFyRsV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LbkJvkZ=json({});
    
        if (name.pNext==NULL){
            return_LbkJvkZ["null"]=true;
            return return_LbkJvkZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_VsqvyMK=json({});
    return_VsqvyMK=[&]() {
    json return_haVhgun=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_VsqvyMK;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DjMYtOt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NXUeoJC=json({});
    
        if (name.pNext==NULL){
            return_NXUeoJC["null"]=true;
            return return_NXUeoJC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["underlyingAPI"]=[&]() {
    json return_YaauaHU=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_void_p(const void* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            void* deserialize_void_p(json name){
                return (void*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char_p(const char* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            char* deserialize_char_p(json name){
                return (char*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_PQmiXiA=json({});
    
        if (_struct->pUserData==NULL){
            return_PQmiXiA["null"]=true;
            return return_PQmiXiA;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_JFFIwQk=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_mWxUOTw=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_CTXjrxf=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_xcpuKxS=json({});
    
        if (pUserData==NULL){
            return_xcpuKxS["null"]=true;
            return return_xcpuKxS;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_KtZzZkX=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_ImGfUJB=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_osjakOJ=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_nMLeCqL=json({});
    
        if (_struct->pUserData==NULL){
            return_nMLeCqL["null"]=true;
            return return_nMLeCqL;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_eJatfeM=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_AIWKTFG=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_TiKHmvB=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_ESbkkKC=json({});
    
        if (pUserData==NULL){
            return_ESbkkKC["null"]=true;
            return return_ESbkkKC;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_MWUuidi=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_QzhmTIu=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_PlqgDPM=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_pnraNkY=json({});
    
        if (_struct->pUserData==NULL){
            return_pnraNkY["null"]=true;
            return return_pnraNkY;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pOriginal"]=[&]() {
    json return_OFddsDA=json({});
    
        if (pOriginal==NULL){
            return_OFddsDA["null"]=true;
            return return_OFddsDA;
        }
        return serialize_void_p(pOriginal);
}();
data["members"]["size"]=[&]() {
    json return_HBPyORs=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_wEXBJLT=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_SBuJkWS=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_mNqHEWK=json({});
    
        if (result_temp==NULL){
            return_mNqHEWK["null"]=true;
            return return_mNqHEWK;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_jiYxsBO=json({});
    
        if (pUserData==NULL){
            return_jiYxsBO["null"]=true;
            return return_jiYxsBO;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pOriginal"]=[&]() {
    json return_mJTohsm=json({});
    
        if (pOriginal==NULL){
            return_mJTohsm["null"]=true;
            return return_mJTohsm;
        }
        return serialize_void_p(pOriginal);
}();
result["params"]["size"]=[&]() {
    json return_nStJHmy=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_bCYAZyh=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_wLtZgYd=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_GkeuBSM=json({});
    
        if (_struct->pUserData==NULL){
            return_GkeuBSM["null"]=true;
            return return_GkeuBSM;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_WimZJMv=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_VSoTPIF=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_mMchyNy=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_aVdPWYw=json({});
    
        if (result_temp==NULL){
            return_aVdPWYw["null"]=true;
            return return_aVdPWYw;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_gVFibvD=json({});
    
        if (pUserData==NULL){
            return_gVFibvD["null"]=true;
            return return_gVFibvD;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_MuIMeJt=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_bLXrPse=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_qgNrGir=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_vfbMISO=json({});
    
        if (_struct->pUserData==NULL){
            return_vfbMISO["null"]=true;
            return return_vfbMISO;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pMemory"]=[&]() {
    json return_nCRAOjN=json({});
    
        if (pMemory==NULL){
            return_nCRAOjN["null"]=true;
            return return_nCRAOjN;
        }
        return serialize_void_p(pMemory);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_ZROjUMe=json({});
    
        if (pUserData==NULL){
            return_ZROjUMe["null"]=true;
            return return_ZROjUMe;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pMemory"]=[&]() {
    json return_VvRkyVs=json({});
    
        if (pMemory==NULL){
            return_VvRkyVs["null"]=true;
            return return_VvRkyVs;
        }
        return serialize_void_p(pMemory);
}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_sQIkZDa=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_GYVSRet=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_yAVRmXS=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_FSHrFnZ=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_DMtOxuU=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_qBRxygL=json({});
    
        if (pLayerPrefix==NULL){
            return_qBRxygL["null"]=true;
            return return_qBRxygL;
        }
        return serialize_char_p(pLayerPrefix);
}();
data["members"]["pMessage"]=[&]() {
    json return_rxqAzCm=json({});
    
        if (pMessage==NULL){
            return_rxqAzCm["null"]=true;
            return return_rxqAzCm;
        }
        return serialize_char_p(pMessage);
}();
data["members"]["pUserData"]=[&]() {
    json return_NlOoInz=json({});
    
        if (_struct->pUserData==NULL){
            return_NlOoInz["null"]=true;
            return return_NlOoInz;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_uqXsWKz;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_uqXsWKz=NULL;
        }
    temp_uqXsWKz=deserialize_char_p(data["members"]["pLayerPrefix"]);
}();pLayerPrefix=temp_uqXsWKz;}();
const char*                                 pMessage;
[&]() {
char* temp_EpSOSVv;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_EpSOSVv=NULL;
        }
    temp_EpSOSVv=deserialize_char_p(data["members"]["pMessage"]);
}();pMessage=temp_EpSOSVv;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_oUzZxoa=json({});
    return_oUzZxoa=[&]() {
    json return_FbPQDCV=json({});
    return serialize_uint32_t(result_temp);}();return return_oUzZxoa;}();
result["params"]["flags"]=[&]() {
    json return_WfqzLMj=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_KtuBbAw=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_fxRbeiN=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_HyPLMTa=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_EvzQpkW=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_MfqrDfy=json({});
    
        if (pLayerPrefix==NULL){
            return_MfqrDfy["null"]=true;
            return return_MfqrDfy;
        }
        return serialize_char_p(pLayerPrefix);
}();
result["params"]["pMessage"]=[&]() {
    json return_UGpAIpd=json({});
    
        if (pMessage==NULL){
            return_UGpAIpd["null"]=true;
            return return_UGpAIpd;
        }
        return serialize_char_p(pMessage);
}();
result["params"]["pUserData"]=[&]() {
    json return_FwPOGNq=json({});
    
        if (pUserData==NULL){
            return_FwPOGNq["null"]=true;
            return return_FwPOGNq;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_HopclrB=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_NhHLbYt=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_ghtKhhF=json({});
    
        if (pCallbackData==NULL){
            return_ghtKhhF["null"]=true;
            return return_ghtKhhF;
        }
        return_ghtKhhF=[&]() {
    json return_ldieMKX=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_ghtKhhF;}();
data["members"]["pUserData"]=[&]() {
    json return_sJMeNID=json({});
    
        if (_struct->pUserData==NULL){
            return_sJMeNID["null"]=true;
            return return_sJMeNID;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_VTMSvZy;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_VTMSvZy=NULL;
        }
    [&]() {
*(temp_VTMSvZy)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_VTMSvZy;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_cGzVSDk=json({});
    return_cGzVSDk=[&]() {
    json return_PUPZkSK=json({});
    return serialize_uint32_t(result_temp);}();return return_cGzVSDk;}();
result["params"]["messageSeverity"]=[&]() {
    json return_ZlOQvon=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_jMttEct=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_JnJumAf=json({});
    
        if (pCallbackData==NULL){
            return_JnJumAf["null"]=true;
            return return_JnJumAf;
        }
        return_JnJumAf=[&]() {
    json return_RyvrlMn=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_JnJumAf;}();
result["params"]["pUserData"]=[&]() {
    json return_VTLngzr=json({});
    
        if (pUserData==NULL){
            return_VTLngzr["null"]=true;
            return return_VTLngzr;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_uScvgBc=json({});
    
        if (pCallbackData==NULL){
            return_uScvgBc["null"]=true;
            return return_uScvgBc;
        }
        return_uScvgBc=[&]() {
    json return_pAxxKRG=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_uScvgBc;}();
data["members"]["pUserData"]=[&]() {
    json return_pKRDMGX=json({});
    
        if (_struct->pUserData==NULL){
            return_pKRDMGX["null"]=true;
            return return_pKRDMGX;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_SqFBxAE;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_SqFBxAE=NULL;
        }
    [&]() {
*(temp_SqFBxAE)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_SqFBxAE;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_wEKeXfJ=json({});
    
        if (pCallbackData==NULL){
            return_wEKeXfJ["null"]=true;
            return return_wEKeXfJ;
        }
        return_wEKeXfJ=[&]() {
    json return_PGLaghO=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_wEKeXfJ;}();
result["params"]["pUserData"]=[&]() {
    json return_nZkgjdk=json({});
    
        if (pUserData==NULL){
            return_nZkgjdk["null"]=true;
            return return_nZkgjdk;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
