
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>
#include <ThreadStruct.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_miYbkfP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TGfIBXk=json({});
    
        if (name.pNext==NULL){
            return_TGfIBXk["null"]=true;
            return return_TGfIBXk;
        }
        return_TGfIBXk=[&]() {
    json return_qbCePfU=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_TGfIBXk;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    [&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pauxKzj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HjyXvLC=json({});
    
        if (name.pNext==NULL){
            return_HjyXvLC["null"]=true;
            return return_HjyXvLC;
        }
        return_HjyXvLC=[&]() {
    json return_uznlSFF=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_HjyXvLC;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_vzOMiUI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vzOMiUI=NULL;
        }
    [&]() {
*(temp_vzOMiUI)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_vzOMiUI;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_WDdRpVf=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_FgGjwPe=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_WZeaggK=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_wJYreON=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_gbgUksQ=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_oaJfslR=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_bJDQSjJ=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_QUIOXcH=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_jFobOqH=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_EstkAKM=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_KOZUqDF=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_gpJVLrW=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_wLqfWxz=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_lzKnaQs=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_RjeVyGv=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_EWRbRJm=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_jOOWcLs=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_BlggTkK=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_xONlbPT=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_kftYxFU=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_KhEJiDJ=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_FZkziGL=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_MGuFUiU=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_kqQcmsB=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_clhXNwb=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_VAGKFUs=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_WHrlOlj=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_BdvzEbS=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_lsLYHNz=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_SSNHKzn=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_UcJAIfu=json({});
    
        return_UcJAIfu["members"]={};
        for(int i=0; i < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HlLgiie=json({});
    return serialize_char(name.deviceName[i]);}();
            return_UcJAIfu["members"][std::to_string(i)].push_back(temp);
        }
        return return_UcJAIfu;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_kAIuKnG=json({});
    
        return_kAIuKnG["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_zxuQMcF=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_kAIuKnG["members"][std::to_string(i)].push_back(temp);
        }
        return return_kAIuKnG;
        }();
result["members"]["limits"]=[&]() {
    json return_LPpNNkP=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_wGKiLhA=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int SinGuAT=0; SinGuAT < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; SinGuAT++){
            [&]() {
result.deviceName[SinGuAT]=deserialize_char(name["members"]["deviceName"]["members"][SinGuAT]);}();;
        }
        }();
[&]() {

        for (int pbfwpuU=0; pbfwpuU < VK_UUID_SIZE; pbfwpuU++){
            [&]() {
result.pipelineCacheUUID[pbfwpuU]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][pbfwpuU]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_tBkwRSx=json({});
    
        return_tBkwRSx["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LjkjKLl=json({});
    return serialize_char(name.extensionName[i]);}();
            return_tBkwRSx["members"][std::to_string(i)].push_back(temp);
        }
        return return_tBkwRSx;
        }();
result["members"]["specVersion"]=[&]() {
    json return_xcSVRNQ=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int UtxKzCk=0; UtxKzCk < VK_MAX_EXTENSION_NAME_SIZE; UtxKzCk++){
            [&]() {
result.extensionName[UtxKzCk]=deserialize_char(name["members"]["extensionName"]["members"][UtxKzCk]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_xlyXikM=json({});
    
        return_xlyXikM["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uwvhLNx=json({});
    return serialize_char(name.layerName[i]);}();
            return_xlyXikM["members"][std::to_string(i)].push_back(temp);
        }
        return return_xlyXikM;
        }();
result["members"]["specVersion"]=[&]() {
    json return_tqwGfMj=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_Vwchiac=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_rTjcFzo=json({});
    
        return_rTjcFzo["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_emFpGNm=json({});
    return serialize_char(name.description[i]);}();
            return_rTjcFzo["members"][std::to_string(i)].push_back(temp);
        }
        return return_rTjcFzo;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int jEakUUb=0; jEakUUb < VK_MAX_EXTENSION_NAME_SIZE; jEakUUb++){
            [&]() {
result.layerName[jEakUUb]=deserialize_char(name["members"]["layerName"]["members"][jEakUUb]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int UaKSmSL=0; UaKSmSL < VK_MAX_DESCRIPTION_SIZE; UaKSmSL++){
            [&]() {
result.description[UaKSmSL]=deserialize_char(name["members"]["description"]["members"][UaKSmSL]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XWXhgSt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hPokvRh=json({});
    
        if (name.pNext==NULL){
            return_hPokvRh["null"]=true;
            return return_hPokvRh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pApplicationName"]=[&]() {
    json return_emdNSzN=json({});
    
        if (name.pApplicationName==NULL){
            return_emdNSzN["null"]=true;
            return return_emdNSzN;
        }
        return serialize_char_p(name.pApplicationName);
}();
result["members"]["applicationVersion"]=[&]() {
    json return_ayGjhdY=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_llUVNgn=json({});
    
        if (name.pEngineName==NULL){
            return_llUVNgn["null"]=true;
            return return_llUVNgn;
        }
        return serialize_char_p(name.pEngineName);
}();
result["members"]["engineVersion"]=[&]() {
    json return_NNRfayN=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_cAGmpPA=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rIqnrjD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rIqnrjD=NULL;
        }
    temp_rIqnrjD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rIqnrjD;}();
[&]() {
char* temp_aoYguiz;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_aoYguiz=NULL;
        }
    temp_aoYguiz=deserialize_char_p(name["members"]["pApplicationName"]);
}();result.pApplicationName=temp_aoYguiz;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_oNYRVcn;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_oNYRVcn=NULL;
        }
    temp_oNYRVcn=deserialize_char_p(name["members"]["pEngineName"]);
}();result.pEngineName=temp_oNYRVcn;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_sDGRhcZ=json({});
    
        if (name.pUserData==NULL){
            return_sDGRhcZ["null"]=true;
            return return_sDGRhcZ;
        }
        return serialize_void_p(name.pUserData);
}();
result["members"]["pfnAllocation"]=[&]() {
    json return_DRgEdPY=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkAllocationFunction(name.pfnAllocation);
        #endif
        }();
result["members"]["pfnReallocation"]=[&]() {
    json return_uHNRIuO=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkReallocationFunction(name.pfnReallocation);
        #endif
        }();
result["members"]["pfnFree"]=[&]() {
    json return_qTAstHF=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkFreeFunction(name.pfnFree);
        #endif
        }();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_gPPDiqb=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);
        #endif
        }();
result["members"]["pfnInternalFree"]=[&]() {
    json return_bHqUAjI=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);
        #endif
        }();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rZjjnqJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SRWjsdY=json({});
    
        if (name.pNext==NULL){
            return_SRWjsdY["null"]=true;
            return return_SRWjsdY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_tWOLmrP=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_VEFVlxt=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_jTrmOlU=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_bzDXmxL=json({});
    
        if (name.pQueuePriorities==NULL){
            return_bzDXmxL["null"]=true;
            return return_bzDXmxL;
        }
        
        return_bzDXmxL["members"]={};
        for(int i=0; i < name.queueCount; i++){
            json temp;
            temp=[&]() {
    json return_SCTnEqF=json({});
    return serialize_float(name.pQueuePriorities[i]);}();
            return_bzDXmxL["members"][std::to_string(i)].push_back(temp);
        }
        return return_bzDXmxL;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CIlEilH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CIlEilH=NULL;
        }
    temp_CIlEilH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CIlEilH;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_LkEkCRW;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_LkEkCRW=NULL;
        }
    temp_LkEkCRW=(float*)malloc(result.queueCount*sizeof(float));
        for (int mGhPsIc=0; mGhPsIc < result.queueCount; mGhPsIc++){
            [&]() {
temp_LkEkCRW[mGhPsIc]=deserialize_float(name["members"]["pQueuePriorities"]["members"][mGhPsIc]);}();;
        }
        }();result.pQueuePriorities=temp_LkEkCRW;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VKieZVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RQZqaSY=json({});
    
        if (name.pNext==NULL){
            return_RQZqaSY["null"]=true;
            return return_RQZqaSY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PgCswkT=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_ZhLTzTQ=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_xaUXsgw=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_xaUXsgw["null"]=true;
            return return_xaUXsgw;
        }
        
        return_xaUXsgw["members"]={};
        for(int i=0; i < name.queueCreateInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_YAiJgJd=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[i]);}();
            return_xaUXsgw["members"][std::to_string(i)].push_back(temp);
        }
        return return_xaUXsgw;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_CdfkFxB=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_XRXlODT=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_XRXlODT["null"]=true;
            return return_XRXlODT;
        }
        
        return_XRXlODT["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_LwNdcxI=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_LwNdcxI["null"]=true;
            return return_LwNdcxI;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_XRXlODT["members"][std::to_string(i)].push_back(temp);
        }
        return return_XRXlODT;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_HgETYFu=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_hKUOVOB=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_hKUOVOB["null"]=true;
            return return_hKUOVOB;
        }
        
        return_hKUOVOB["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_pbEBzWF=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_pbEBzWF["null"]=true;
            return return_pbEBzWF;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_hKUOVOB["members"][std::to_string(i)].push_back(temp);
        }
        return return_hKUOVOB;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_rKwOhXz=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_rKwOhXz["null"]=true;
            return return_rKwOhXz;
        }
        return_rKwOhXz=[&]() {
    json return_kJmadXp=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_rKwOhXz;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TpCTQwo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TpCTQwo=NULL;
        }
    temp_TpCTQwo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TpCTQwo;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_uVMQEFG;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_uVMQEFG=NULL;
        }
    temp_uVMQEFG=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int jRFlkwQ=0; jRFlkwQ < result.queueCreateInfoCount; jRFlkwQ++){
            [&]() {
temp_uVMQEFG[jRFlkwQ]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][jRFlkwQ]);}();;
        }
        }();result.pQueueCreateInfos=temp_uVMQEFG;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_zDZHVai;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_zDZHVai=NULL;
        }
    temp_zDZHVai=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int JSmGFXx=0; JSmGFXx < result.enabledLayerCount; JSmGFXx++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][JSmGFXx].contains("null")){
        temp_zDZHVai[JSmGFXx]=NULL;
        }
    temp_zDZHVai[JSmGFXx]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][JSmGFXx]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_zDZHVai;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_YpVgSCB;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_YpVgSCB=NULL;
        }
    temp_YpVgSCB=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int IPWOttY=0; IPWOttY < result.enabledExtensionCount; IPWOttY++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][IPWOttY].contains("null")){
        temp_YpVgSCB[IPWOttY]=NULL;
        }
    temp_YpVgSCB[IPWOttY]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][IPWOttY]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_YpVgSCB;}();
[&]() {
VkPhysicalDeviceFeatures* temp_oCiFsaV;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_oCiFsaV=NULL;
        }
    [&]() {
*(temp_oCiFsaV)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_oCiFsaV;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XzmTcde=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UNyAhIG=json({});
    
        if (name.pNext==NULL){
            return_UNyAhIG["null"]=true;
            return return_UNyAhIG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IrJDfYz=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_ftcEytZ=json({});
    
        if (name.pApplicationInfo==NULL){
            return_ftcEytZ["null"]=true;
            return return_ftcEytZ;
        }
        return_ftcEytZ=[&]() {
    json return_JCLTCfo=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_ftcEytZ;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_uJgHUtK=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_dIjoKoe=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_dIjoKoe["null"]=true;
            return return_dIjoKoe;
        }
        
        return_dIjoKoe["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_VpOMCok=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_VpOMCok["null"]=true;
            return return_VpOMCok;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_dIjoKoe["members"][std::to_string(i)].push_back(temp);
        }
        return return_dIjoKoe;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_gDzwSAe=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_STglkYh=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_STglkYh["null"]=true;
            return return_STglkYh;
        }
        
        return_STglkYh["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_XJcmooh=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_XJcmooh["null"]=true;
            return return_XJcmooh;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_STglkYh["members"][std::to_string(i)].push_back(temp);
        }
        return return_STglkYh;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WWLOTyL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WWLOTyL=NULL;
        }
    temp_WWLOTyL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WWLOTyL;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_YVdtkMv;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_YVdtkMv=NULL;
        }
    [&]() {
*(temp_YVdtkMv)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_YVdtkMv;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_lslnEYu;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_lslnEYu=NULL;
        }
    temp_lslnEYu=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int jYfojxg=0; jYfojxg < result.enabledLayerCount; jYfojxg++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][jYfojxg].contains("null")){
        temp_lslnEYu[jYfojxg]=NULL;
        }
    temp_lslnEYu[jYfojxg]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][jYfojxg]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_lslnEYu;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_gqjRYAY;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_gqjRYAY=NULL;
        }
    temp_gqjRYAY=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int pjibZdd=0; pjibZdd < result.enabledExtensionCount; pjibZdd++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][pjibZdd].contains("null")){
        temp_gqjRYAY[pjibZdd]=NULL;
        }
    temp_gqjRYAY[pjibZdd]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][pjibZdd]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_gqjRYAY;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_bfZFYUo=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_AHKpwNC=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_UCEpAYJ=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_PdMphqX=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_NWgLObk=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_pTIoJHh=json({});
    
        return_pTIoJHh["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_TYPES; i++){
            json temp;
            temp=[&]() {
    json return_WkEhRhp=json({});
    return serialize_VkMemoryType(name.memoryTypes[i]);}();
            return_pTIoJHh["members"][std::to_string(i)].push_back(temp);
        }
        return return_pTIoJHh;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_iAdKWtK=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_jYLvuDS=json({});
    
        return_jYLvuDS["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_AqcEFcH=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[i]);}();
            return_jYLvuDS["members"][std::to_string(i)].push_back(temp);
        }
        return return_jYLvuDS;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int lhXoTpx=0; lhXoTpx < VK_MAX_MEMORY_TYPES; lhXoTpx++){
            [&]() {
result.memoryTypes[lhXoTpx]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][lhXoTpx]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int GhoJFKb=0; GhoJFKb < VK_MAX_MEMORY_HEAPS; GhoJFKb++){
            [&]() {
result.memoryHeaps[GhoJFKb]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][GhoJFKb]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hzOCRAu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JrGFopR=json({});
    
        if (name.pNext==NULL){
            return_JrGFopR["null"]=true;
            return return_JrGFopR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allocationSize"]=[&]() {
    json return_QvDjjjF=json({});
    return_QvDjjjF=[&]() {
    json return_aKmmuAk=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_QvDjjjF;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_KTzQgun=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RaiTBCp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RaiTBCp=NULL;
        }
    temp_RaiTBCp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RaiTBCp;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_gawtSvV=json({});
    return_gawtSvV=[&]() {
    json return_bFtlRZT=json({});
    return serialize_uint64_t(name.size);}();return return_gawtSvV;}();
result["members"]["alignment"]=[&]() {
    json return_KAbyHUs=json({});
    return_KAbyHUs=[&]() {
    json return_DfXIdHl=json({});
    return serialize_uint64_t(name.alignment);}();return return_KAbyHUs;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_oxNxOTs=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_Tfzcmpl=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_rvLlUcb=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_vTPHVRB=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_GjuOcKY=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_VqVQSHY=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_HoueUDH=json({});
    return_HoueUDH=[&]() {
    json return_whySsyb=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_HoueUDH;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_BuVJxJv=json({});
    return_BuVJxJv=[&]() {
    json return_wskgesr=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_BuVJxJv;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_cRBEEYu=json({});
    return_cRBEEYu=[&]() {
    json return_QvihQpz=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_cRBEEYu;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_QJolsYS=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_FANtRsV=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_ZyVInUo=json({});
    return_ZyVInUo=[&]() {
    json return_HDxnBuc=json({});
    return serialize_uint64_t(name.size);}();return return_ZyVInUo;}();
result["members"]["flags"]=[&]() {
    json return_dDxhVJF=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CHOyCvs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LeQJbOB=json({});
    
        if (name.pNext==NULL){
            return_LeQJbOB["null"]=true;
            return return_LeQJbOB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_atcEDFf=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_LmYAwUG=json({});
    return_LmYAwUG=[&]() {
    json return_IKhoQAA=json({});
    return serialize_uint64_t(name.offset);}();return return_LmYAwUG;}();
result["members"]["size"]=[&]() {
    json return_vlGUkRa=json({});
    return_vlGUkRa=[&]() {
    json return_GPMnieC=json({});
    return serialize_uint64_t(name.size);}();return return_vlGUkRa;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gvRvDhH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gvRvDhH=NULL;
        }
    temp_gvRvDhH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gvRvDhH;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_nZfFtBZ=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_cbUuhwE=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_NmaXBAP=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_woHUSlX=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_wPfMFms=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_BkgmbPz=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_otQUQgn=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_wsfwZPs=json({});
    return_wsfwZPs=[&]() {
    json return_oGElywI=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_wsfwZPs;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_TQLFkSi=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_KuFWglp=json({});
    return_KuFWglp=[&]() {
    json return_ffMzlKJ=json({});
    return serialize_uint64_t(name.offset);}();return return_KuFWglp;}();
result["members"]["range"]=[&]() {
    json return_LqmDaxw=json({});
    return_LqmDaxw=[&]() {
    json return_UOENmDX=json({});
    return serialize_uint64_t(name.range);}();return return_LqmDaxw;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_XxpIloU=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_MpJvBQY=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_bSRVBFW=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PrENDCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uYaocAc=json({});
    
        if (name.pNext==NULL){
            return_uYaocAc["null"]=true;
            return return_uYaocAc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dstSet"]=[&]() {
    json return_HMkvOPC=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_DjkqDhU=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_vtkTTqs=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_KDlsHNh=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_sqBKuWb=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_aCilVRK=json({});
    
        if (name.pImageInfo==NULL){
            return_aCilVRK["null"]=true;
            return return_aCilVRK;
        }
        
        return_aCilVRK["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_AQSjAXh=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[i]);}();
            return_aCilVRK["members"][std::to_string(i)].push_back(temp);
        }
        return return_aCilVRK;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_adNiPuD=json({});
    
        if (name.pBufferInfo==NULL){
            return_adNiPuD["null"]=true;
            return return_adNiPuD;
        }
        
        return_adNiPuD["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_SjUELWi=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[i]);}();
            return_adNiPuD["members"][std::to_string(i)].push_back(temp);
        }
        return return_adNiPuD;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_QocPmuw=json({});
    
        if (name.pTexelBufferView==NULL){
            return_QocPmuw["null"]=true;
            return return_QocPmuw;
        }
        
        return_QocPmuw["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_JxTSiPM=json({});
    return serialize_VkBufferView(name.pTexelBufferView[i]);}();
            return_QocPmuw["members"][std::to_string(i)].push_back(temp);
        }
        return return_QocPmuw;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_azWcCaD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_azWcCaD=NULL;
        }
    temp_azWcCaD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_azWcCaD;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_TCEPtkY;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_TCEPtkY=NULL;
        }
    temp_TCEPtkY=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int tdZJskd=0; tdZJskd < result.descriptorCount; tdZJskd++){
            [&]() {
temp_TCEPtkY[tdZJskd]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][tdZJskd]);}();;
        }
        }();result.pImageInfo=temp_TCEPtkY;}();
[&]() {
VkDescriptorBufferInfo* temp_DDdtiXn;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_DDdtiXn=NULL;
        }
    temp_DDdtiXn=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int kncAsfI=0; kncAsfI < result.descriptorCount; kncAsfI++){
            [&]() {
temp_DDdtiXn[kncAsfI]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][kncAsfI]);}();;
        }
        }();result.pBufferInfo=temp_DDdtiXn;}();
[&]() {
VkBufferView* temp_CKhWlKu;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_CKhWlKu=NULL;
        }
    temp_CKhWlKu=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int YbajNMS=0; YbajNMS < result.descriptorCount; YbajNMS++){
            [&]() {
temp_CKhWlKu[YbajNMS]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][YbajNMS]);}();;
        }
        }();result.pTexelBufferView=temp_CKhWlKu;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NaTFPlT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tVhaZTm=json({});
    
        if (name.pNext==NULL){
            return_tVhaZTm["null"]=true;
            return return_tVhaZTm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSet"]=[&]() {
    json return_IFKGtXH=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_OcxceIc=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_WODswuZ=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_IlsdoaW=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_iWhJNMI=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_pfYJnxG=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_ssxClVz=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XkpKsDY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XkpKsDY=NULL;
        }
    temp_XkpKsDY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XkpKsDY;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YfEcZnz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NVvHvZp=json({});
    
        if (name.pNext==NULL){
            return_NVvHvZp["null"]=true;
            return return_NVvHvZp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_vUCQThA=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JImqnuW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JImqnuW=NULL;
        }
    temp_JImqnuW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JImqnuW;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MvYVxum=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nevIERy=json({});
    
        if (name.pNext==NULL){
            return_nevIERy["null"]=true;
            return return_nevIERy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DWBtzbL=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_zozYQCa=json({});
    return_zozYQCa=[&]() {
    json return_fIfaRyP=json({});
    return serialize_uint64_t(name.size);}();return return_zozYQCa;}();
result["members"]["usage"]=[&]() {
    json return_bwSZSUf=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_oMhbgvH=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_dKCVmxx=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_MHNUHfC=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_MHNUHfC["null"]=true;
            return return_MHNUHfC;
        }
        
        return_MHNUHfC["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_NYgePIR=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_MHNUHfC["members"][std::to_string(i)].push_back(temp);
        }
        return return_MHNUHfC;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cbCwDnE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cbCwDnE=NULL;
        }
    temp_cbCwDnE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cbCwDnE;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_pGIqRfS;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_pGIqRfS=NULL;
        }
    temp_pGIqRfS=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int rWCpdXS=0; rWCpdXS < result.queueFamilyIndexCount; rWCpdXS++){
            [&]() {
temp_pGIqRfS[rWCpdXS]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][rWCpdXS]);}();;
        }
        }();result.pQueueFamilyIndices=temp_pGIqRfS;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MHDGXig=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GdkPDnG=json({});
    
        if (name.pNext==NULL){
            return_GdkPDnG["null"]=true;
            return return_GdkPDnG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DTifuvC=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_RkATJFc=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_NuFihXO=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_lkANdLv=json({});
    return_lkANdLv=[&]() {
    json return_sfXIclL=json({});
    return serialize_uint64_t(name.offset);}();return return_lkANdLv;}();
result["members"]["range"]=[&]() {
    json return_IPBZCzs=json({});
    return_IPBZCzs=[&]() {
    json return_GVdxOMa=json({});
    return serialize_uint64_t(name.range);}();return return_IPBZCzs;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OTVeOxF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OTVeOxF=NULL;
        }
    temp_OTVeOxF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OTVeOxF;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_UETXTxe=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_dyzdsZr=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_UjEhJRb=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_bMSyKgb=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_kOtTDlw=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_niNqGXT=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_YsHkNer=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_wcerlgW=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_hghuqcC=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_xHTNfdR=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_cwOtAxT=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_fcAeHkZ=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZGqCWnW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_crMheRi=json({});
    
        if (name.pNext==NULL){
            return_crMheRi["null"]=true;
            return return_crMheRi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_DubaFxP=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_VOxklfZ=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RyPRuLA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RyPRuLA=NULL;
        }
    temp_RyPRuLA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RyPRuLA;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kZiLpof=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WUfsXuk=json({});
    
        if (name.pNext==NULL){
            return_WUfsXuk["null"]=true;
            return return_WUfsXuk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_sZjgtTP=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_CpqxiZd=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_owOQPQV=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_DOepBpL=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_ClymlsQ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_LYGOorf=json({});
    return_LYGOorf=[&]() {
    json return_AKyFhiz=json({});
    return serialize_uint64_t(name.offset);}();return return_LYGOorf;}();
result["members"]["size"]=[&]() {
    json return_QEfHQpZ=json({});
    return_QEfHQpZ=[&]() {
    json return_ctdHEHI=json({});
    return serialize_uint64_t(name.size);}();return return_QEfHQpZ;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_phhLjRL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_phhLjRL=NULL;
        }
    temp_phhLjRL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_phhLjRL;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iapqKcq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kbWIYRO=json({});
    
        if (name.pNext==NULL){
            return_kbWIYRO["null"]=true;
            return return_kbWIYRO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_oIpAhKr=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_reXrasd=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_fQahCvv=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_diZUKYW=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_EbJuCDA=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_QCwEyTN=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_QgoDnyo=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_ljVVkmT=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ptuslko;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ptuslko=NULL;
        }
    temp_ptuslko=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ptuslko;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BABijDv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YFVgnIH=json({});
    
        if (name.pNext==NULL){
            return_YFVgnIH["null"]=true;
            return return_YFVgnIH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LHSUiFH=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_LShrcbg=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_lJTQvwR=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_zrHxrFB=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_nrdFXeM=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_jghMQwt=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_efbxaft=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_GZsCmGf=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_UrjgCVB=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_aSSxWWG=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_xkWqCiT=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_UGMWMUC=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_UGMWMUC["null"]=true;
            return return_UGMWMUC;
        }
        
        return_UGMWMUC["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_mbhUBps=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_UGMWMUC["members"][std::to_string(i)].push_back(temp);
        }
        return return_UGMWMUC;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_ZDOetGL=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LxPyIdr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LxPyIdr=NULL;
        }
    temp_LxPyIdr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LxPyIdr;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_mXDcoHH;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_mXDcoHH=NULL;
        }
    temp_mXDcoHH=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int wfUNRNE=0; wfUNRNE < result.queueFamilyIndexCount; wfUNRNE++){
            [&]() {
temp_mXDcoHH[wfUNRNE]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][wfUNRNE]);}();;
        }
        }();result.pQueueFamilyIndices=temp_mXDcoHH;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_DoGgteD=json({});
    return_DoGgteD=[&]() {
    json return_cryAMWN=json({});
    return serialize_uint64_t(name.offset);}();return return_DoGgteD;}();
result["members"]["size"]=[&]() {
    json return_ZIBZGCH=json({});
    return_ZIBZGCH=[&]() {
    json return_kjPVmpA=json({});
    return serialize_uint64_t(name.size);}();return return_ZIBZGCH;}();
result["members"]["rowPitch"]=[&]() {
    json return_lRWGuxV=json({});
    return_lRWGuxV=[&]() {
    json return_RQKPjLu=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_lRWGuxV;}();
result["members"]["arrayPitch"]=[&]() {
    json return_VSUOWeQ=json({});
    return_VSUOWeQ=[&]() {
    json return_GgvRJOh=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_VSUOWeQ;}();
result["members"]["depthPitch"]=[&]() {
    json return_ADlDfOg=json({});
    return_ADlDfOg=[&]() {
    json return_XbGYPvD=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_ADlDfOg;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FupOzeN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WAtqiPR=json({});
    
        if (name.pNext==NULL){
            return_WAtqiPR["null"]=true;
            return return_WAtqiPR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_KaNOGpx=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_EogtpVD=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_YJBhQLk=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_aHOthJn=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_JrEbvBK=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_cGmdLyS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cQkxyyJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cQkxyyJ=NULL;
        }
    temp_cQkxyyJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cQkxyyJ;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_krQUrge=json({});
    return_krQUrge=[&]() {
    json return_kFGsSZN=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_krQUrge;}();
result["members"]["dstOffset"]=[&]() {
    json return_MvMXUzJ=json({});
    return_MvMXUzJ=[&]() {
    json return_qUlWkpj=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_MvMXUzJ;}();
result["members"]["size"]=[&]() {
    json return_PhJGHbg=json({});
    return_PhJGHbg=[&]() {
    json return_BxJtXQE=json({});
    return serialize_uint64_t(name.size);}();return return_PhJGHbg;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_GveUKYz=json({});
    return_GveUKYz=[&]() {
    json return_fFwTJiG=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_GveUKYz;}();
result["members"]["size"]=[&]() {
    json return_zxWxHHu=json({});
    return_zxWxHHu=[&]() {
    json return_yfupJKQ=json({});
    return serialize_uint64_t(name.size);}();return return_zxWxHHu;}();
result["members"]["memory"]=[&]() {
    json return_HnQOrCK=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_AkxwCmh=json({});
    return_AkxwCmh=[&]() {
    json return_iebUvOQ=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_AkxwCmh;}();
result["members"]["flags"]=[&]() {
    json return_ftuwZuP=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_nWDUmCx=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_dCaVnXw=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_rKJwUTx=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_pnwtDmi=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_aAWyLBP=json({});
    return_aAWyLBP=[&]() {
    json return_yeGVlHC=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_aAWyLBP;}();
result["members"]["flags"]=[&]() {
    json return_Eqllixu=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_hJZEZNn=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_IkYfNDy=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_SOfUbQE=json({});
    
        if (name.pBinds==NULL){
            return_SOfUbQE["null"]=true;
            return return_SOfUbQE;
        }
        
        return_SOfUbQE["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_vRzsvaU=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_SOfUbQE["members"][std::to_string(i)].push_back(temp);
        }
        return return_SOfUbQE;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_KbfImsQ;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_KbfImsQ=NULL;
        }
    temp_KbfImsQ=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int lbOxLmf=0; lbOxLmf < result.bindCount; lbOxLmf++){
            [&]() {
temp_KbfImsQ[lbOxLmf]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][lbOxLmf]);}();;
        }
        }();result.pBinds=temp_KbfImsQ;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_JFDZePQ=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_AzvWBHV=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_IKHQzPF=json({});
    
        if (name.pBinds==NULL){
            return_IKHQzPF["null"]=true;
            return return_IKHQzPF;
        }
        
        return_IKHQzPF["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_fAZyyse=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_IKHQzPF["members"][std::to_string(i)].push_back(temp);
        }
        return return_IKHQzPF;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_yGDdInj;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_yGDdInj=NULL;
        }
    temp_yGDdInj=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int EqFQfXZ=0; EqFQfXZ < result.bindCount; EqFQfXZ++){
            [&]() {
temp_yGDdInj[EqFQfXZ]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][EqFQfXZ]);}();;
        }
        }();result.pBinds=temp_yGDdInj;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_WeiTRFG=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_CUdIiaO=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_wrkCpBK=json({});
    
        if (name.pBinds==NULL){
            return_wrkCpBK["null"]=true;
            return return_wrkCpBK;
        }
        
        return_wrkCpBK["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_HzFRiPl=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[i]);}();
            return_wrkCpBK["members"][std::to_string(i)].push_back(temp);
        }
        return return_wrkCpBK;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_mWbnjcl;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_mWbnjcl=NULL;
        }
    temp_mWbnjcl=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int NpEnFEH=0; NpEnFEH < result.bindCount; NpEnFEH++){
            [&]() {
temp_mWbnjcl[NpEnFEH]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][NpEnFEH]);}();;
        }
        }();result.pBinds=temp_mWbnjcl;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YbmhVjU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CbLzEPt=json({});
    
        if (name.pNext==NULL){
            return_CbLzEPt["null"]=true;
            return return_CbLzEPt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_keXjxFL=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_iOKtAXo=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_iOKtAXo["null"]=true;
            return return_iOKtAXo;
        }
        
        return_iOKtAXo["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_iHdmpXe=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_iOKtAXo["members"][std::to_string(i)].push_back(temp);
        }
        return return_iOKtAXo;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_CjsEmpV=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_GKWRJxx=json({});
    
        if (name.pBufferBinds==NULL){
            return_GKWRJxx["null"]=true;
            return return_GKWRJxx;
        }
        
        return_GKWRJxx["members"]={};
        for(int i=0; i < name.bufferBindCount; i++){
            json temp;
            temp=[&]() {
    json return_NorAfRg=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[i]);}();
            return_GKWRJxx["members"][std::to_string(i)].push_back(temp);
        }
        return return_GKWRJxx;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_CUEIyXm=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_VxqlbKG=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_VxqlbKG["null"]=true;
            return return_VxqlbKG;
        }
        
        return_VxqlbKG["members"]={};
        for(int i=0; i < name.imageOpaqueBindCount; i++){
            json temp;
            temp=[&]() {
    json return_XVvECBI=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[i]);}();
            return_VxqlbKG["members"][std::to_string(i)].push_back(temp);
        }
        return return_VxqlbKG;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_nPUcEdi=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_WwcPoBW=json({});
    
        if (name.pImageBinds==NULL){
            return_WwcPoBW["null"]=true;
            return return_WwcPoBW;
        }
        
        return_WwcPoBW["members"]={};
        for(int i=0; i < name.imageBindCount; i++){
            json temp;
            temp=[&]() {
    json return_gVDDKwk=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[i]);}();
            return_WwcPoBW["members"][std::to_string(i)].push_back(temp);
        }
        return return_WwcPoBW;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_jVPsndm=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_MogMIOQ=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_MogMIOQ["null"]=true;
            return return_MogMIOQ;
        }
        
        return_MogMIOQ["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_IVnKSKx=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_MogMIOQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_MogMIOQ;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iYpDXdn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iYpDXdn=NULL;
        }
    temp_iYpDXdn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iYpDXdn;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_RtpRDAZ;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_RtpRDAZ=NULL;
        }
    temp_RtpRDAZ=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int PZiUAUd=0; PZiUAUd < result.waitSemaphoreCount; PZiUAUd++){
            [&]() {
temp_RtpRDAZ[PZiUAUd]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][PZiUAUd]);}();;
        }
        }();result.pWaitSemaphores=temp_RtpRDAZ;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_VzHDIUo;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_VzHDIUo=NULL;
        }
    temp_VzHDIUo=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int bNeMDcS=0; bNeMDcS < result.bufferBindCount; bNeMDcS++){
            [&]() {
temp_VzHDIUo[bNeMDcS]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][bNeMDcS]);}();;
        }
        }();result.pBufferBinds=temp_VzHDIUo;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_DgxvSLs;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_DgxvSLs=NULL;
        }
    temp_DgxvSLs=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int ClcCmHx=0; ClcCmHx < result.imageOpaqueBindCount; ClcCmHx++){
            [&]() {
temp_DgxvSLs[ClcCmHx]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][ClcCmHx]);}();;
        }
        }();result.pImageOpaqueBinds=temp_DgxvSLs;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_jFlSShK;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_jFlSShK=NULL;
        }
    temp_jFlSShK=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int rPEDUbk=0; rPEDUbk < result.imageBindCount; rPEDUbk++){
            [&]() {
temp_jFlSShK[rPEDUbk]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][rPEDUbk]);}();;
        }
        }();result.pImageBinds=temp_jFlSShK;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_ixiZUod;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_ixiZUod=NULL;
        }
    temp_ixiZUod=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int uXiuiui=0; uXiuiui < result.signalSemaphoreCount; uXiuiui++){
            [&]() {
temp_ixiZUod[uXiuiui]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][uXiuiui]);}();;
        }
        }();result.pSignalSemaphores=temp_ixiZUod;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_TMKsVRq=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_WubebEc=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_CUWtjdi=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_wnNuFsW=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AnYgFic=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_AzaAOxg=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_IqCBkoS=json({});
    
        return_IqCBkoS["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_krwYgzg=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_IqCBkoS["members"][std::to_string(i)].push_back(temp);
        }
        return return_IqCBkoS;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_KtrhAzk=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_cMOYTFz=json({});
    
        return_cMOYTFz["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_vZVyiFL=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_cMOYTFz["members"][std::to_string(i)].push_back(temp);
        }
        return return_cMOYTFz;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int ryPAvIQ=0; ryPAvIQ < 2; ryPAvIQ++){
            [&]() {
result.srcOffsets[ryPAvIQ]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][ryPAvIQ]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int PnMPWbK=0; PnMPWbK < 2; PnMPWbK++){
            [&]() {
result.dstOffsets[PnMPWbK]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][PnMPWbK]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_TSEsjJn=json({});
    return_TSEsjJn=[&]() {
    json return_CGuOdlz=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_TSEsjJn;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_NWCuhAR=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_zjXAgXl=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_CXySQIv=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_qOhHztS=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_IewqteQ=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_AaafqHU=json({});
    return_AaafqHU=[&]() {
    json return_uszPrZM=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_AaafqHU;}();
result["members"]["dstAddress"]=[&]() {
    json return_QfjQoLb=json({});
    return_QfjQoLb=[&]() {
    json return_SoJyBwg=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_QfjQoLb;}();
result["members"]["size"]=[&]() {
    json return_rOyGNBa=json({});
    return_rOyGNBa=[&]() {
    json return_BUQZGoo=json({});
    return serialize_uint64_t(name.size);}();return return_rOyGNBa;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_eMMKPoz=json({});
    return_eMMKPoz=[&]() {
    json return_FzGvFpt=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_eMMKPoz;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_xmGVkNt=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_HkjsifY=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_ZcVTkxV=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_qYYIAuW=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_srBwMrA=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_TsFXDYo=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_KwmBzSW=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_nnPGRVm=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_tyxiRUG=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_WbznTOM=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ytqAgQN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GFNhSvB=json({});
    
        if (name.pNext==NULL){
            return_GFNhSvB["null"]=true;
            return return_GFNhSvB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_Easrmjb=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_oJqAntK=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_EqjmHKs=json({});
    
        if (name.pCode==NULL){
            return_EqjmHKs["null"]=true;
            return return_EqjmHKs;
        }
        
        return_EqjmHKs["members"]={};
        for(int i=0; i < name.codeSize / 4; i++){
            json temp;
            temp=[&]() {
    json return_bLMgUOu=json({});
    return serialize_uint32_t(name.pCode[i]);}();
            return_EqjmHKs["members"][std::to_string(i)].push_back(temp);
        }
        return return_EqjmHKs;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ejQqzpI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ejQqzpI=NULL;
        }
    temp_ejQqzpI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ejQqzpI;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_DDHVcSl;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_DDHVcSl=NULL;
        }
    temp_DDHVcSl=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int cdFnYsU=0; cdFnYsU < result.codeSize / 4; cdFnYsU++){
            [&]() {
temp_DDHVcSl[cdFnYsU]=deserialize_uint32_t(name["members"]["pCode"]["members"][cdFnYsU]);}();;
        }
        }();result.pCode=temp_DDHVcSl;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_gnIQXjN=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_jDtOVLT=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_BhSoNYA=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_uOWpHMr=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_VWhArVG=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_VWhArVG["null"]=true;
            return return_VWhArVG;
        }
        
        return_VWhArVG["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_LaeKCrF=json({});
    return serialize_VkSampler(name.pImmutableSamplers[i]);}();
            return_VWhArVG["members"][std::to_string(i)].push_back(temp);
        }
        return return_VWhArVG;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_wirRaAz;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_wirRaAz=NULL;
        }
    temp_wirRaAz=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int zsxVwYH=0; zsxVwYH < result.descriptorCount; zsxVwYH++){
            [&]() {
temp_wirRaAz[zsxVwYH]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][zsxVwYH]);}();;
        }
        }();result.pImmutableSamplers=temp_wirRaAz;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_abOwGgf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cNzspeS=json({});
    
        if (name.pNext==NULL){
            return_cNzspeS["null"]=true;
            return return_cNzspeS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JenEoIr=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_GEBOcws=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_Hctgyru=json({});
    
        if (name.pBindings==NULL){
            return_Hctgyru["null"]=true;
            return return_Hctgyru;
        }
        
        return_Hctgyru["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_ekkFkwt=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[i]);}();
            return_Hctgyru["members"][std::to_string(i)].push_back(temp);
        }
        return return_Hctgyru;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UyRQjCN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UyRQjCN=NULL;
        }
    temp_UyRQjCN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UyRQjCN;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_nytYLLl;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_nytYLLl=NULL;
        }
    temp_nytYLLl=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int vMwyYYD=0; vMwyYYD < result.bindingCount; vMwyYYD++){
            [&]() {
temp_nytYLLl[vMwyYYD]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][vMwyYYD]);}();;
        }
        }();result.pBindings=temp_nytYLLl;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_GnytYDo=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_IfiEHnA=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oAlGGcG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CaIDhIm=json({});
    
        if (name.pNext==NULL){
            return_CaIDhIm["null"]=true;
            return return_CaIDhIm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zjvrqaR=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_FcMwruM=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_cdaYAUU=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_ulneBgJ=json({});
    
        if (name.pPoolSizes==NULL){
            return_ulneBgJ["null"]=true;
            return return_ulneBgJ;
        }
        
        return_ulneBgJ["members"]={};
        for(int i=0; i < name.poolSizeCount; i++){
            json temp;
            temp=[&]() {
    json return_DrdFCvV=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[i]);}();
            return_ulneBgJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_ulneBgJ;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IJGZrcS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IJGZrcS=NULL;
        }
    temp_IJGZrcS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IJGZrcS;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_RndAifd;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_RndAifd=NULL;
        }
    temp_RndAifd=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int aHUGvKR=0; aHUGvKR < result.poolSizeCount; aHUGvKR++){
            [&]() {
temp_RndAifd[aHUGvKR]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][aHUGvKR]);}();;
        }
        }();result.pPoolSizes=temp_RndAifd;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xKVglsn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GDRKzyG=json({});
    
        if (name.pNext==NULL){
            return_GDRKzyG["null"]=true;
            return return_GDRKzyG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPool"]=[&]() {
    json return_UTQPpDR=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_EPHblQA=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_RpERFTV=json({});
    
        if (name.pSetLayouts==NULL){
            return_RpERFTV["null"]=true;
            return return_RpERFTV;
        }
        
        return_RpERFTV["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_pXNWaaX=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_RpERFTV["members"][std::to_string(i)].push_back(temp);
        }
        return return_RpERFTV;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dldnLOS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dldnLOS=NULL;
        }
    temp_dldnLOS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dldnLOS;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_zwxeTil;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_zwxeTil=NULL;
        }
    temp_zwxeTil=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int YmSbzDZ=0; YmSbzDZ < result.descriptorSetCount; YmSbzDZ++){
            [&]() {
temp_zwxeTil[YmSbzDZ]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][YmSbzDZ]);}();;
        }
        }();result.pSetLayouts=temp_zwxeTil;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_ykNwloR=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_XaTffgH=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_NDaqwDm=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_eLdwMUe=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_gramYYy=json({});
    
        if (name.pMapEntries==NULL){
            return_gramYYy["null"]=true;
            return return_gramYYy;
        }
        
        return_gramYYy["members"]={};
        for(int i=0; i < name.mapEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_QBmsGlB=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[i]);}();
            return_gramYYy["members"][std::to_string(i)].push_back(temp);
        }
        return return_gramYYy;
        }();
result["members"]["dataSize"]=[&]() {
    json return_tnLuPqE=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_QijthJF=json({});
    
        if (name.pData==NULL){
            return_QijthJF["null"]=true;
            return return_QijthJF;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_PzOTkwW;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_PzOTkwW=NULL;
        }
    temp_PzOTkwW=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int ReYUcXR=0; ReYUcXR < result.mapEntryCount; ReYUcXR++){
            [&]() {
temp_PzOTkwW[ReYUcXR]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][ReYUcXR]);}();;
        }
        }();result.pMapEntries=temp_PzOTkwW;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_QQhrsTB;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_QQhrsTB=NULL;
        }
    temp_QQhrsTB=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_QQhrsTB;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RRmlnum=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sPVMetf=json({});
    
        if (name.pNext==NULL){
            return_sPVMetf["null"]=true;
            return return_sPVMetf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dLbleKx=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_obFzGjR=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_AzMyUBH=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_kNkEXQu=json({});
    
        if (name.pName==NULL){
            return_kNkEXQu["null"]=true;
            return return_kNkEXQu;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pName"]=[&]() {
    json return_GmnjkZU=json({});
    
        if (name.pName==NULL){
            return_GmnjkZU["null"]=true;
            return return_GmnjkZU;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_zJadacd=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_zJadacd["null"]=true;
            return return_zJadacd;
        }
        return_zJadacd=[&]() {
    json return_pmOZsnv=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_zJadacd;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PSJIrkC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PSJIrkC=NULL;
        }
    temp_PSJIrkC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PSJIrkC;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_cpDYLqy;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_cpDYLqy=NULL;
        }
    temp_cpDYLqy=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_cpDYLqy;}();
[&]() {
char* temp_dcjvpwh;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_dcjvpwh=NULL;
        }
    temp_dcjvpwh=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_dcjvpwh;}();
[&]() {
VkSpecializationInfo* temp_sdAWVLI;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_sdAWVLI=NULL;
        }
    [&]() {
*(temp_sdAWVLI)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_sdAWVLI;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_opgFSvY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TpvSOta=json({});
    
        if (name.pNext==NULL){
            return_TpvSOta["null"]=true;
            return return_TpvSOta;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QnoOZjC=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_rxMbRee=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_JyioWKl=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_UviVENK=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_ByRIpqj=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vyJLODc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vyJLODc=NULL;
        }
    temp_vyJLODc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vyJLODc;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BmIzths=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DStKkrq=json({});
    
        if (name.pNext==NULL){
            return_DStKkrq["null"]=true;
            return return_DStKkrq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_LPHunUd=json({});
    return_LPHunUd=[&]() {
    json return_QgujAhq=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_LPHunUd;}();
result["members"]["size"]=[&]() {
    json return_ERiFurq=json({});
    return_ERiFurq=[&]() {
    json return_Gwzwlri=json({});
    return serialize_uint64_t(name.size);}();return return_ERiFurq;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_GXDaGMs=json({});
    return_GXDaGMs=[&]() {
    json return_gXcZZVl=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_GXDaGMs;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bZUJAfG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bZUJAfG=NULL;
        }
    temp_bZUJAfG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bZUJAfG;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nHQbTLE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wyxDGIE=json({});
    
        if (name.pNext==NULL){
            return_wyxDGIE["null"]=true;
            return return_wyxDGIE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YiIKETp=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bbKsiRz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bbKsiRz=NULL;
        }
    temp_bbKsiRz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bbKsiRz;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_VcfQlwG=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_LqFGHBg=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_WESSmnJ=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_pfFPSNa=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_pDuiIfb=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_ZvZLTdI=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_mvQwGWj=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NjLIdiW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYHFIjA=json({});
    
        if (name.pNext==NULL){
            return_vYHFIjA["null"]=true;
            return return_vYHFIjA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_Qtaaihv=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_XtPMOPy=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_PDVDeEn=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_PDVDeEn["null"]=true;
            return return_PDVDeEn;
        }
        
        return_PDVDeEn["members"]={};
        for(int i=0; i < name.vertexBindingDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_qDDGXRt=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[i]);}();
            return_PDVDeEn["members"][std::to_string(i)].push_back(temp);
        }
        return return_PDVDeEn;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_YlveqdJ=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_cLksPzI=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_cLksPzI["null"]=true;
            return return_cLksPzI;
        }
        
        return_cLksPzI["members"]={};
        for(int i=0; i < name.vertexAttributeDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_svqmgVn=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[i]);}();
            return_cLksPzI["members"][std::to_string(i)].push_back(temp);
        }
        return return_cLksPzI;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HyaIZgx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HyaIZgx=NULL;
        }
    temp_HyaIZgx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HyaIZgx;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_abkrGhy;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_abkrGhy=NULL;
        }
    temp_abkrGhy=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int mNKCdjJ=0; mNKCdjJ < result.vertexBindingDescriptionCount; mNKCdjJ++){
            [&]() {
temp_abkrGhy[mNKCdjJ]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][mNKCdjJ]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_abkrGhy;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_yTAKtHc;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_yTAKtHc=NULL;
        }
    temp_yTAKtHc=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int GnmccbS=0; GnmccbS < result.vertexAttributeDescriptionCount; GnmccbS++){
            [&]() {
temp_yTAKtHc[GnmccbS]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][GnmccbS]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_yTAKtHc;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uRcQZyn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TaydNis=json({});
    
        if (name.pNext==NULL){
            return_TaydNis["null"]=true;
            return return_TaydNis;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gffpNwm=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_CMYxONE=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_PySacaC=json({});
    return_PySacaC=[&]() {
    json return_Dtvrzvo=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_PySacaC;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SpNKIQY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SpNKIQY=NULL;
        }
    temp_SpNKIQY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SpNKIQY;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rqsxyad=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NVejsmX=json({});
    
        if (name.pNext==NULL){
            return_NVejsmX["null"]=true;
            return return_NVejsmX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_EbseKzn=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_zLIUkXI=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KZBfHci;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KZBfHci=NULL;
        }
    temp_KZBfHci=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KZBfHci;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CYvGcPc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eOcoXXF=json({});
    
        if (name.pNext==NULL){
            return_eOcoXXF["null"]=true;
            return return_eOcoXXF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_KmSEgwW=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_VgLAdQR=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_ZNQUpin=json({});
    
        if (name.pViewports==NULL){
            return_ZNQUpin["null"]=true;
            return return_ZNQUpin;
        }
        
        return_ZNQUpin["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_MBBbiXP=json({});
    return serialize_VkViewport(name.pViewports[i]);}();
            return_ZNQUpin["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZNQUpin;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_odjOSES=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_IGvjNOM=json({});
    
        if (name.pScissors==NULL){
            return_IGvjNOM["null"]=true;
            return return_IGvjNOM;
        }
        
        return_IGvjNOM["members"]={};
        for(int i=0; i < name.scissorCount; i++){
            json temp;
            temp=[&]() {
    json return_NTspkGj=json({});
    return serialize_VkRect2D(name.pScissors[i]);}();
            return_IGvjNOM["members"][std::to_string(i)].push_back(temp);
        }
        return return_IGvjNOM;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SjjmKVF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SjjmKVF=NULL;
        }
    temp_SjjmKVF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SjjmKVF;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_SjxVsxx;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_SjxVsxx=NULL;
        }
    temp_SjxVsxx=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int viKkryQ=0; viKkryQ < result.viewportCount; viKkryQ++){
            [&]() {
temp_SjxVsxx[viKkryQ]=deserialize_VkViewport(name["members"]["pViewports"]["members"][viKkryQ]);}();;
        }
        }();result.pViewports=temp_SjxVsxx;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_cMXgclR;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_cMXgclR=NULL;
        }
    temp_cMXgclR=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int AfumiUI=0; AfumiUI < result.scissorCount; AfumiUI++){
            [&]() {
temp_cMXgclR[AfumiUI]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][AfumiUI]);}();;
        }
        }();result.pScissors=temp_cMXgclR;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LjpbeGE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DQbRZwc=json({});
    
        if (name.pNext==NULL){
            return_DQbRZwc["null"]=true;
            return return_DQbRZwc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jRJbQHf=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_oKRVewz=json({});
    return_oKRVewz=[&]() {
    json return_ZKbISpF=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_oKRVewz;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_cZQgIjI=json({});
    return_cZQgIjI=[&]() {
    json return_wLGWwKp=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_cZQgIjI;}();
result["members"]["polygonMode"]=[&]() {
    json return_kcwSMYQ=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_QdeWhOO=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_wuLPAob=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_aEnCTqa=json({});
    return_aEnCTqa=[&]() {
    json return_hWcBkba=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_aEnCTqa;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_ZfAXEYV=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_xjQuWZg=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_iRjLSwY=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_YGfvQPj=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vUXDykA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vUXDykA=NULL;
        }
    temp_vUXDykA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vUXDykA;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hXlwzZv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VSouJyj=json({});
    
        if (name.pNext==NULL){
            return_VSouJyj["null"]=true;
            return return_VSouJyj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LXospWC=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_fjDGzmy=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_clIFGvN=json({});
    return_clIFGvN=[&]() {
    json return_JamHVZn=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_clIFGvN;}();
result["members"]["minSampleShading"]=[&]() {
    json return_PihYNLh=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_QDbaerI=json({});
    
        if (name.pSampleMask==NULL){
            return_QDbaerI["null"]=true;
            return return_QDbaerI;
        }
        
        return_QDbaerI["members"]={};
        for(int i=0; i < (name.rasterizationSamples + 31) / 32; i++){
            json temp;
            temp=[&]() {
    json return_ptJBEHP=json({});
    return_ptJBEHP=[&]() {
    json return_uHNSWUk=json({});
    return serialize_uint32_t(name.pSampleMask[i]);}();return return_ptJBEHP;}();
            return_QDbaerI["members"][std::to_string(i)].push_back(temp);
        }
        return return_QDbaerI;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_OEJOTtJ=json({});
    return_OEJOTtJ=[&]() {
    json return_ekyoyMM=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_OEJOTtJ;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_hzWsGSR=json({});
    return_hzWsGSR=[&]() {
    json return_yUHLzUn=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_hzWsGSR;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_POlaxFs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_POlaxFs=NULL;
        }
    temp_POlaxFs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_POlaxFs;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_rgaYKPZ;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_rgaYKPZ=NULL;
        }
    temp_rgaYKPZ=(VkSampleMask*)malloc((result.rasterizationSamples + 31) / 32*sizeof(VkSampleMask));
        for (int yfQmEJK=0; yfQmEJK < (result.rasterizationSamples + 31) / 32; yfQmEJK++){
            [&]() {
[&]() {
temp_rgaYKPZ[yfQmEJK]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][yfQmEJK]);}();}();;
        }
        }();result.pSampleMask=temp_rgaYKPZ;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_FkhCQpR=json({});
    return_FkhCQpR=[&]() {
    json return_sOhFATV=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_FkhCQpR;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_mbYEjmo=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_rOvNNof=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_pSMALSA=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_plgwucu=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_ArZNTBr=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_VOHvzDZ=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_eiQUCmt=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jzzYbac=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EskLcPG=json({});
    
        if (name.pNext==NULL){
            return_EskLcPG["null"]=true;
            return return_EskLcPG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FFHVJaN=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_GvxVIJV=json({});
    return_GvxVIJV=[&]() {
    json return_nXvtAwx=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_GvxVIJV;}();
result["members"]["logicOp"]=[&]() {
    json return_bTrOFnT=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_EMQAcBO=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_vojwPeK=json({});
    
        if (name.pAttachments==NULL){
            return_vojwPeK["null"]=true;
            return return_vojwPeK;
        }
        
        return_vojwPeK["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_BUKQhZE=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[i]);}();
            return_vojwPeK["members"][std::to_string(i)].push_back(temp);
        }
        return return_vojwPeK;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_nSbckxN=json({});
    
        return_nSbckxN["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_NRowHMp=json({});
    return serialize_float(name.blendConstants[i]);}();
            return_nSbckxN["members"][std::to_string(i)].push_back(temp);
        }
        return return_nSbckxN;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WjmzHtQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WjmzHtQ=NULL;
        }
    temp_WjmzHtQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WjmzHtQ;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_eRrxnGF;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_eRrxnGF=NULL;
        }
    temp_eRrxnGF=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int eGSJPMC=0; eGSJPMC < result.attachmentCount; eGSJPMC++){
            [&]() {
temp_eRrxnGF[eGSJPMC]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][eGSJPMC]);}();;
        }
        }();result.pAttachments=temp_eRrxnGF;}();
[&]() {

        for (int tAixzFk=0; tAixzFk < 4; tAixzFk++){
            [&]() {
result.blendConstants[tAixzFk]=deserialize_float(name["members"]["blendConstants"]["members"][tAixzFk]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GIoweDo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ilrOFMi=json({});
    
        if (name.pNext==NULL){
            return_ilrOFMi["null"]=true;
            return return_ilrOFMi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_odjpBYF=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_OTTnchu=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_pjDQMEw=json({});
    
        if (name.pDynamicStates==NULL){
            return_pjDQMEw["null"]=true;
            return return_pjDQMEw;
        }
        
        return_pjDQMEw["members"]={};
        for(int i=0; i < name.dynamicStateCount; i++){
            json temp;
            temp=[&]() {
    json return_YqRnIlp=json({});
    return serialize_VkDynamicState(name.pDynamicStates[i]);}();
            return_pjDQMEw["members"][std::to_string(i)].push_back(temp);
        }
        return return_pjDQMEw;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_URlHCDZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_URlHCDZ=NULL;
        }
    temp_URlHCDZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_URlHCDZ;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_fftbUXm;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_fftbUXm=NULL;
        }
    temp_fftbUXm=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int Pavjlhb=0; Pavjlhb < result.dynamicStateCount; Pavjlhb++){
            [&]() {
temp_fftbUXm[Pavjlhb]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][Pavjlhb]);}();;
        }
        }();result.pDynamicStates=temp_fftbUXm;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_BEcHPoi=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_GWuOrAM=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_HBIKnOp=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_VfPyvaZ=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_bepsORX=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_ufefRHe=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_QGzmupO=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DGdAztk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iNICEVt=json({});
    
        if (name.pNext==NULL){
            return_iNICEVt["null"]=true;
            return return_iNICEVt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HKVAUtx=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_cTNylSw=json({});
    return_cTNylSw=[&]() {
    json return_KDmvgoO=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_cTNylSw;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_mcaWsoi=json({});
    return_mcaWsoi=[&]() {
    json return_GxUDEBT=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_mcaWsoi;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_JlqAZnT=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_WfrVXKq=json({});
    return_WfrVXKq=[&]() {
    json return_YZtVGjf=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_WfrVXKq;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_SsqhvlR=json({});
    return_SsqhvlR=[&]() {
    json return_pZXBoIZ=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_SsqhvlR;}();
result["members"]["front"]=[&]() {
    json return_bfdMQUq=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_zNSCoJz=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_oyZNStF=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_IFAWgIF=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zfzQcpd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zfzQcpd=NULL;
        }
    temp_zfzQcpd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zfzQcpd;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jMNfYSq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dNDPyVZ=json({});
    
        if (name.pNext==NULL){
            return_dNDPyVZ["null"]=true;
            return return_dNDPyVZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YKZRgDk=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_KqEgsXf=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_TjtTADf=json({});
    
        if (name.pStages==NULL){
            return_TjtTADf["null"]=true;
            return return_TjtTADf;
        }
        
        return_TjtTADf["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_mLSzimY=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_TjtTADf["members"][std::to_string(i)].push_back(temp);
        }
        return return_TjtTADf;
        }();
result["members"]["pStages"]=[&]() {
    json return_HZhmntu=json({});
    
        if (name.pStages==NULL){
            return_HZhmntu["null"]=true;
            return return_HZhmntu;
        }
        
        return_HZhmntu["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_cevGysm=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_HZhmntu["members"][std::to_string(i)].push_back(temp);
        }
        return return_HZhmntu;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_OcSwidM=json({});
    
        if (name.pVertexInputState==NULL){
            return_OcSwidM["null"]=true;
            return return_OcSwidM;
        }
        return_OcSwidM=[&]() {
    json return_mMgAkkM=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_OcSwidM;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_DCNwXBX=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_DCNwXBX["null"]=true;
            return return_DCNwXBX;
        }
        return_DCNwXBX=[&]() {
    json return_bGTZqDq=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_DCNwXBX;}();
result["members"]["pTessellationState"]=[&]() {
    json return_FvzGUuN=json({});
    
        if (name.pTessellationState==NULL){
            return_FvzGUuN["null"]=true;
            return return_FvzGUuN;
        }
        return_FvzGUuN=[&]() {
    json return_iKSRDKt=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_FvzGUuN;}();
result["members"]["pViewportState"]=[&]() {
    json return_eJErgaP=json({});
    
        if (name.pViewportState==NULL){
            return_eJErgaP["null"]=true;
            return return_eJErgaP;
        }
        return_eJErgaP=[&]() {
    json return_tsyBAaz=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_eJErgaP;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_zweNaFI=json({});
    
        if (name.pRasterizationState==NULL){
            return_zweNaFI["null"]=true;
            return return_zweNaFI;
        }
        return_zweNaFI=[&]() {
    json return_YBfWwZZ=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_zweNaFI;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_efnHnLv=json({});
    
        if (name.pMultisampleState==NULL){
            return_efnHnLv["null"]=true;
            return return_efnHnLv;
        }
        return_efnHnLv=[&]() {
    json return_fEEwYZw=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_efnHnLv;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_tmYLuPn=json({});
    
        if (name.pDepthStencilState==NULL){
            return_tmYLuPn["null"]=true;
            return return_tmYLuPn;
        }
        return_tmYLuPn=[&]() {
    json return_PAiNeLe=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_tmYLuPn;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_wugeobp=json({});
    
        if (name.pColorBlendState==NULL){
            return_wugeobp["null"]=true;
            return return_wugeobp;
        }
        return_wugeobp=[&]() {
    json return_hkliVDC=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_wugeobp;}();
result["members"]["pDynamicState"]=[&]() {
    json return_JyYaSxW=json({});
    
        if (name.pDynamicState==NULL){
            return_JyYaSxW["null"]=true;
            return return_JyYaSxW;
        }
        return_JyYaSxW=[&]() {
    json return_vxplMGM=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_JyYaSxW;}();
result["members"]["layout"]=[&]() {
    json return_nfHydMD=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_zxKZIap=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_JprcbSm=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_HAjvcbX=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_AwJcLYt=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sWqhCXr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sWqhCXr=NULL;
        }
    temp_sWqhCXr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sWqhCXr;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_niGvvHy;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_niGvvHy=NULL;
        }
    temp_niGvvHy=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int yXAYYdR=0; yXAYYdR < result.stageCount; yXAYYdR++){
            [&]() {
temp_niGvvHy[yXAYYdR]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][yXAYYdR]);}();;
        }
        }();result.pStages=temp_niGvvHy;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_VFLCXwO;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_VFLCXwO=NULL;
        }
    temp_VFLCXwO=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int LWNhJWL=0; LWNhJWL < result.stageCount; LWNhJWL++){
            [&]() {
temp_VFLCXwO[LWNhJWL]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][LWNhJWL]);}();;
        }
        }();result.pStages=temp_VFLCXwO;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_GiSbGOb;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_GiSbGOb=NULL;
        }
    [&]() {
*(temp_GiSbGOb)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_GiSbGOb;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_uhIHgeD;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_uhIHgeD=NULL;
        }
    [&]() {
*(temp_uhIHgeD)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_uhIHgeD;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_rYRfRxF;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_rYRfRxF=NULL;
        }
    [&]() {
*(temp_rYRfRxF)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_rYRfRxF;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_uBqSpDS;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_uBqSpDS=NULL;
        }
    [&]() {
*(temp_uBqSpDS)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_uBqSpDS;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_RxhxdHr;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_RxhxdHr=NULL;
        }
    [&]() {
*(temp_RxhxdHr)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_RxhxdHr;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_VypsxoL;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_VypsxoL=NULL;
        }
    [&]() {
*(temp_VypsxoL)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_VypsxoL;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_UoLmreM;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_UoLmreM=NULL;
        }
    [&]() {
*(temp_UoLmreM)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_UoLmreM;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_HYLtIRg;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_HYLtIRg=NULL;
        }
    [&]() {
*(temp_HYLtIRg)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_HYLtIRg;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_OigtNXw;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_OigtNXw=NULL;
        }
    [&]() {
*(temp_OigtNXw)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_OigtNXw;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUhUwXs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YRBmARM=json({});
    
        if (name.pNext==NULL){
            return_YRBmARM["null"]=true;
            return return_YRBmARM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sSGVyps=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_oIgiISE=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_efArwxI=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_POnSWXY=json({});
    
        if (name.pInitialData==NULL){
            return_POnSWXY["null"]=true;
            return return_POnSWXY;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NhlOIUj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NhlOIUj=NULL;
        }
    temp_NhlOIUj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NhlOIUj;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_ELPXbhh;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_ELPXbhh=NULL;
        }
    temp_ELPXbhh=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_ELPXbhh;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_gRtzxWD=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_qQPEMQW=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_FRKAthJ=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_AljdsQs=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_WDYXxes=json({});
    
        return_WDYXxes["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_UovqMsj=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_WDYXxes["members"][std::to_string(i)].push_back(temp);
        }
        return return_WDYXxes;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int OoyAyJZ=0; OoyAyJZ < VK_UUID_SIZE; OoyAyJZ++){
            [&]() {
result.pipelineCacheUUID[OoyAyJZ]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][OoyAyJZ]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_daVePOh=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_UlVPGGM=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_NHujHcz=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zdiaNZS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_luarPBa=json({});
    
        if (name.pNext==NULL){
            return_luarPBa["null"]=true;
            return return_luarPBa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GVDopxk=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_NBXHcty=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_emppMke=json({});
    
        if (name.pSetLayouts==NULL){
            return_emppMke["null"]=true;
            return return_emppMke;
        }
        
        return_emppMke["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_rRIaEoG=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_emppMke["members"][std::to_string(i)].push_back(temp);
        }
        return return_emppMke;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_iUSrJqZ=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_IKGoRyv=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_IKGoRyv["null"]=true;
            return return_IKGoRyv;
        }
        
        return_IKGoRyv["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_UJJzCSJ=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_IKGoRyv["members"][std::to_string(i)].push_back(temp);
        }
        return return_IKGoRyv;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RUdxjkJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RUdxjkJ=NULL;
        }
    temp_RUdxjkJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RUdxjkJ;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_wDCzhDr;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_wDCzhDr=NULL;
        }
    temp_wDCzhDr=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int npkTxAF=0; npkTxAF < result.setLayoutCount; npkTxAF++){
            [&]() {
temp_wDCzhDr[npkTxAF]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][npkTxAF]);}();;
        }
        }();result.pSetLayouts=temp_wDCzhDr;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_LbdNksV;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_LbdNksV=NULL;
        }
    temp_LbdNksV=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int CIAfMgi=0; CIAfMgi < result.pushConstantRangeCount; CIAfMgi++){
            [&]() {
temp_LbdNksV[CIAfMgi]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][CIAfMgi]);}();;
        }
        }();result.pPushConstantRanges=temp_LbdNksV;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LHcyhEm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OrSaLvJ=json({});
    
        if (name.pNext==NULL){
            return_OrSaLvJ["null"]=true;
            return return_OrSaLvJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JZIJhaZ=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_OvwMttS=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_dOvsqvP=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_JYoxQLy=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_XzJufbd=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_MVGbkyZ=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_DKIDhZk=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_GopnHEa=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_bITKaoI=json({});
    return_bITKaoI=[&]() {
    json return_GPMSQmH=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_bITKaoI;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_uDylcqh=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_NfumJrs=json({});
    return_NfumJrs=[&]() {
    json return_wGoMGHT=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_NfumJrs;}();
result["members"]["compareOp"]=[&]() {
    json return_uoIYlDa=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_XxGjYDj=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_YqcUmfE=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_dFmJBxq=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_RYZivDG=json({});
    return_RYZivDG=[&]() {
    json return_wcjheKR=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_RYZivDG;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IlfqWDX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IlfqWDX=NULL;
        }
    temp_IlfqWDX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IlfqWDX;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IRZdlbv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VXyEkLP=json({});
    
        if (name.pNext==NULL){
            return_VXyEkLP["null"]=true;
            return return_VXyEkLP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PWIwcXn=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_SLeljwN=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eNdBCMI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eNdBCMI=NULL;
        }
    temp_eNdBCMI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eNdBCMI;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kvVqlvT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HsimrtU=json({});
    
        if (name.pNext==NULL){
            return_HsimrtU["null"]=true;
            return return_HsimrtU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandPool"]=[&]() {
    json return_YLrhSru=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_SqBApoY=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_mNOMLEn=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KtmZbRA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KtmZbRA=NULL;
        }
    temp_KtmZbRA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KtmZbRA;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KRGlobo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qOjTonc=json({});
    
        if (name.pNext==NULL){
            return_qOjTonc["null"]=true;
            return return_qOjTonc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_kWRRtyx=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_PKgICRw=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_OePjkUI=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_idTluAt=json({});
    return_idTluAt=[&]() {
    json return_BtHEaWk=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_idTluAt;}();
result["members"]["queryFlags"]=[&]() {
    json return_BDJUavx=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_DBPWogC=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZmWBSnf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZmWBSnf=NULL;
        }
    temp_ZmWBSnf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZmWBSnf;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hIOfPQw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NIGUHbo=json({});
    
        if (name.pNext==NULL){
            return_NIGUHbo["null"]=true;
            return return_NIGUHbo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LUALkOe=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_nMdCbPe=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_nMdCbPe["null"]=true;
            return return_nMdCbPe;
        }
        return_nMdCbPe=[&]() {
    json return_qnrSUfi=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_nMdCbPe;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rfOgqAD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rfOgqAD=NULL;
        }
    temp_rfOgqAD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rfOgqAD;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_pkykOmV;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_pkykOmV=NULL;
        }
    [&]() {
*(temp_pkykOmV)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_pkykOmV;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WwqgXIX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ilaKOgX=json({});
    
        if (name.pNext==NULL){
            return_ilaKOgX["null"]=true;
            return return_ilaKOgX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_fJdhWEP=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_YPBVKjH=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_uLctJSz=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_MqGsjNK=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_FglhFtu=json({});
    
        if (name.pClearValues==NULL){
            return_FglhFtu["null"]=true;
            return return_FglhFtu;
        }
        
        return_FglhFtu["members"]={};
        for(int i=0; i < name.clearValueCount; i++){
            json temp;
            temp=[&]() {
    json return_FdejhdK=json({});
    return serialize_VkClearValue(name.pClearValues[i]);}();
            return_FglhFtu["members"][std::to_string(i)].push_back(temp);
        }
        return return_FglhFtu;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TgOOPXy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TgOOPXy=NULL;
        }
    temp_TgOOPXy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TgOOPXy;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_jRLqtEB;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_jRLqtEB=NULL;
        }
    temp_jRLqtEB=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int WJXEXLT=0; WJXEXLT < result.clearValueCount; WJXEXLT++){
            [&]() {
temp_jRLqtEB[WJXEXLT]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][WJXEXLT]);}();;
        }
        }();result.pClearValues=temp_jRLqtEB;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_ouHzHZt=json({});
    
        return_ouHzHZt["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_zfqIQEe=json({});
    return serialize_float(name.float32[i]);}();
            return_ouHzHZt["members"][std::to_string(i)].push_back(temp);
        }
        return return_ouHzHZt;
        }();
result["members"]["int32"]=[&]() {
    json return_JhZpEcI=json({});
    
        return_JhZpEcI["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_LStuDEs=json({});
    return serialize_int32_t(name.int32[i]);}();
            return_JhZpEcI["members"][std::to_string(i)].push_back(temp);
        }
        return return_JhZpEcI;
        }();
result["members"]["uint32"]=[&]() {
    json return_tceQyBA=json({});
    
        return_tceQyBA["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_xzJRdJx=json({});
    return serialize_uint32_t(name.uint32[i]);}();
            return_tceQyBA["members"][std::to_string(i)].push_back(temp);
        }
        return return_tceQyBA;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int qbyzKgl=0; qbyzKgl < 4; qbyzKgl++){
            [&]() {
result.float32[qbyzKgl]=deserialize_float(name["members"]["float32"]["members"][qbyzKgl]);}();;
        }
        }();
[&]() {

        for (int tZkhxeh=0; tZkhxeh < 4; tZkhxeh++){
            [&]() {
result.int32[tZkhxeh]=deserialize_int32_t(name["members"]["int32"]["members"][tZkhxeh]);}();;
        }
        }();
[&]() {

        for (int xikvSxn=0; xikvSxn < 4; xikvSxn++){
            [&]() {
result.uint32[xikvSxn]=deserialize_uint32_t(name["members"]["uint32"]["members"][xikvSxn]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_WROAbBW=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_kwkxlDu=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_ceNUgPG=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_nuBKLYh=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_npryjmr=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_NWbuYtU=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_eOuBLZl=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_dzVIJBl=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_bdpcfWG=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_BqZjBGc=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_jVFmeVL=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_SKVrEKR=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_uHZMMLk=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_BKwpdWv=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_mQRSvCx=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_fXVzFaA=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_yZCobqN=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_ADqjUoc=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_TCSivzC=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_bGkltbx=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_gfIEpsx=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_BJrPrlc=json({});
    
        if (name.pInputAttachments==NULL){
            return_BJrPrlc["null"]=true;
            return return_BJrPrlc;
        }
        
        return_BJrPrlc["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_esHIJEQ=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[i]);}();
            return_BJrPrlc["members"][std::to_string(i)].push_back(temp);
        }
        return return_BJrPrlc;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_txqnNNj=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_AerJdPq=json({});
    
        if (name.pColorAttachments==NULL){
            return_AerJdPq["null"]=true;
            return return_AerJdPq;
        }
        
        return_AerJdPq["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_npueBic=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[i]);}();
            return_AerJdPq["members"][std::to_string(i)].push_back(temp);
        }
        return return_AerJdPq;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_hMdpAFW=json({});
    
        if (name.pResolveAttachments==NULL){
            return_hMdpAFW["null"]=true;
            return return_hMdpAFW;
        }
        
        return_hMdpAFW["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_phjziIu=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[i]);}();
            return_hMdpAFW["members"][std::to_string(i)].push_back(temp);
        }
        return return_hMdpAFW;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_TGXMySI=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_TGXMySI["null"]=true;
            return return_TGXMySI;
        }
        return_TGXMySI=[&]() {
    json return_EPAkXWi=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_TGXMySI;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_vbxGjIz=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_aVAQyBc=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_aVAQyBc["null"]=true;
            return return_aVAQyBc;
        }
        
        return_aVAQyBc["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_PJqLGiP=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_aVAQyBc["members"][std::to_string(i)].push_back(temp);
        }
        return return_aVAQyBc;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_miPLqor;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_miPLqor=NULL;
        }
    temp_miPLqor=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int jRGGoiz=0; jRGGoiz < result.inputAttachmentCount; jRGGoiz++){
            [&]() {
temp_miPLqor[jRGGoiz]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][jRGGoiz]);}();;
        }
        }();result.pInputAttachments=temp_miPLqor;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_IMGbdqt;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_IMGbdqt=NULL;
        }
    temp_IMGbdqt=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int ZvDdpUr=0; ZvDdpUr < result.colorAttachmentCount; ZvDdpUr++){
            [&]() {
temp_IMGbdqt[ZvDdpUr]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][ZvDdpUr]);}();;
        }
        }();result.pColorAttachments=temp_IMGbdqt;}();
[&]() {
VkAttachmentReference* temp_moaUvVk;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_moaUvVk=NULL;
        }
    temp_moaUvVk=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int kwmlNYK=0; kwmlNYK < result.colorAttachmentCount; kwmlNYK++){
            [&]() {
temp_moaUvVk[kwmlNYK]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][kwmlNYK]);}();;
        }
        }();result.pResolveAttachments=temp_moaUvVk;}();
[&]() {
VkAttachmentReference* temp_mTOgqRY;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_mTOgqRY=NULL;
        }
    [&]() {
*(temp_mTOgqRY)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_mTOgqRY;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_NBQHfpU;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_NBQHfpU=NULL;
        }
    temp_NBQHfpU=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int BAXZwhr=0; BAXZwhr < result.preserveAttachmentCount; BAXZwhr++){
            [&]() {
temp_NBQHfpU[BAXZwhr]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][BAXZwhr]);}();;
        }
        }();result.pPreserveAttachments=temp_NBQHfpU;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_sOALbrQ=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_FRZcPTn=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_jhrJsCw=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_PCqNHhq=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_VWEauJj=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_YgSdvLa=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_NgzWTrF=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iUPrJir=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nGBHdFy=json({});
    
        if (name.pNext==NULL){
            return_nGBHdFy["null"]=true;
            return return_nGBHdFy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vsYLinh=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_IfyvtuO=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_lrPTUWp=json({});
    
        if (name.pAttachments==NULL){
            return_lrPTUWp["null"]=true;
            return return_lrPTUWp;
        }
        
        return_lrPTUWp["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_RJEBnSk=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[i]);}();
            return_lrPTUWp["members"][std::to_string(i)].push_back(temp);
        }
        return return_lrPTUWp;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_LICxTHz=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_dzIspYF=json({});
    
        if (name.pSubpasses==NULL){
            return_dzIspYF["null"]=true;
            return return_dzIspYF;
        }
        
        return_dzIspYF["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_SzviGHy=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[i]);}();
            return_dzIspYF["members"][std::to_string(i)].push_back(temp);
        }
        return return_dzIspYF;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_hdELTOg=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_twBhyKJ=json({});
    
        if (name.pDependencies==NULL){
            return_twBhyKJ["null"]=true;
            return return_twBhyKJ;
        }
        
        return_twBhyKJ["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_BGcGnjT=json({});
    return serialize_VkSubpassDependency(name.pDependencies[i]);}();
            return_twBhyKJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_twBhyKJ;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RTZIblX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RTZIblX=NULL;
        }
    temp_RTZIblX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RTZIblX;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_mCHaPOU;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_mCHaPOU=NULL;
        }
    temp_mCHaPOU=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int xyaXfJp=0; xyaXfJp < result.attachmentCount; xyaXfJp++){
            [&]() {
temp_mCHaPOU[xyaXfJp]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][xyaXfJp]);}();;
        }
        }();result.pAttachments=temp_mCHaPOU;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_zqwBRoL;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_zqwBRoL=NULL;
        }
    temp_zqwBRoL=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int HgPyHWj=0; HgPyHWj < result.subpassCount; HgPyHWj++){
            [&]() {
temp_zqwBRoL[HgPyHWj]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][HgPyHWj]);}();;
        }
        }();result.pSubpasses=temp_zqwBRoL;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_HuQVRBG;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_HuQVRBG=NULL;
        }
    temp_HuQVRBG=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int xffYBhJ=0; xffYBhJ < result.dependencyCount; xffYBhJ++){
            [&]() {
temp_HuQVRBG[xffYBhJ]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][xffYBhJ]);}();;
        }
        }();result.pDependencies=temp_HuQVRBG;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vsUcWsW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QYGence=json({});
    
        if (name.pNext==NULL){
            return_QYGence["null"]=true;
            return return_QYGence;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yZYKNEN=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nIWffeX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nIWffeX=NULL;
        }
    temp_nIWffeX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nIWffeX;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wqTiuca=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OnBTHZX=json({});
    
        if (name.pNext==NULL){
            return_OnBTHZX["null"]=true;
            return return_OnBTHZX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xdNKdRT=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KTtnzWJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KTtnzWJ=NULL;
        }
    temp_KTtnzWJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KTtnzWJ;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_PYpjuRM=json({});
    return_PYpjuRM=[&]() {
    json return_kHoGeJe=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_PYpjuRM;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_SzYXSSq=json({});
    return_SzYXSSq=[&]() {
    json return_xmRRufP=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_SzYXSSq;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_zwYJGMS=json({});
    return_zwYJGMS=[&]() {
    json return_iSCdUcp=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_zwYJGMS;}();
result["members"]["independentBlend"]=[&]() {
    json return_OixmBZo=json({});
    return_OixmBZo=[&]() {
    json return_XPWdVIu=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_OixmBZo;}();
result["members"]["geometryShader"]=[&]() {
    json return_ZoNJnCa=json({});
    return_ZoNJnCa=[&]() {
    json return_QZtjcDg=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_ZoNJnCa;}();
result["members"]["tessellationShader"]=[&]() {
    json return_EeSlpEc=json({});
    return_EeSlpEc=[&]() {
    json return_CoEapaU=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_EeSlpEc;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_LTHxlAl=json({});
    return_LTHxlAl=[&]() {
    json return_tiqYUBB=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_LTHxlAl;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_bCgUeeR=json({});
    return_bCgUeeR=[&]() {
    json return_SlxMSpM=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_bCgUeeR;}();
result["members"]["logicOp"]=[&]() {
    json return_YqZjyQT=json({});
    return_YqZjyQT=[&]() {
    json return_cWkBGZO=json({});
    return serialize_uint32_t(name.logicOp);}();return return_YqZjyQT;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_JPlIuma=json({});
    return_JPlIuma=[&]() {
    json return_stEheAe=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_JPlIuma;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_CqKJsBa=json({});
    return_CqKJsBa=[&]() {
    json return_oIVVuYV=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_CqKJsBa;}();
result["members"]["depthClamp"]=[&]() {
    json return_aLHJUUS=json({});
    return_aLHJUUS=[&]() {
    json return_uaZSxgG=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_aLHJUUS;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_qsydwLs=json({});
    return_qsydwLs=[&]() {
    json return_nQNiyVx=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_qsydwLs;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_bKMxVGQ=json({});
    return_bKMxVGQ=[&]() {
    json return_ZWqpxtI=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_bKMxVGQ;}();
result["members"]["depthBounds"]=[&]() {
    json return_xGLpVnn=json({});
    return_xGLpVnn=[&]() {
    json return_OaXDubD=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_xGLpVnn;}();
result["members"]["wideLines"]=[&]() {
    json return_AgQwWjz=json({});
    return_AgQwWjz=[&]() {
    json return_woLeiSX=json({});
    return serialize_uint32_t(name.wideLines);}();return return_AgQwWjz;}();
result["members"]["largePoints"]=[&]() {
    json return_tHwMzcR=json({});
    return_tHwMzcR=[&]() {
    json return_TvMUlrB=json({});
    return serialize_uint32_t(name.largePoints);}();return return_tHwMzcR;}();
result["members"]["alphaToOne"]=[&]() {
    json return_eBXmYON=json({});
    return_eBXmYON=[&]() {
    json return_YkedQwy=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_eBXmYON;}();
result["members"]["multiViewport"]=[&]() {
    json return_Efqtmmu=json({});
    return_Efqtmmu=[&]() {
    json return_XqVlQLi=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_Efqtmmu;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_ZtNVHdn=json({});
    return_ZtNVHdn=[&]() {
    json return_FXGwvaV=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_ZtNVHdn;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_NvNbVst=json({});
    return_NvNbVst=[&]() {
    json return_WxPjXFO=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_NvNbVst;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_ancvOQG=json({});
    return_ancvOQG=[&]() {
    json return_VLaamDb=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_ancvOQG;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_TovtIbM=json({});
    return_TovtIbM=[&]() {
    json return_LkVekzx=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_TovtIbM;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_XjJFKIS=json({});
    return_XjJFKIS=[&]() {
    json return_ZylxYry=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_XjJFKIS;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_xwZVhQb=json({});
    return_xwZVhQb=[&]() {
    json return_EGtoSqV=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_xwZVhQb;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_VEjVblT=json({});
    return_VEjVblT=[&]() {
    json return_biMvEnk=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_VEjVblT;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_YzuYVEs=json({});
    return_YzuYVEs=[&]() {
    json return_dzehfje=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_YzuYVEs;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_AjnJiWZ=json({});
    return_AjnJiWZ=[&]() {
    json return_KBpJtmH=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_AjnJiWZ;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_ALlxQKg=json({});
    return_ALlxQKg=[&]() {
    json return_zFDoyNo=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_ALlxQKg;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_ZXLUocM=json({});
    return_ZXLUocM=[&]() {
    json return_voPuLvL=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_ZXLUocM;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_oPjTWZV=json({});
    return_oPjTWZV=[&]() {
    json return_gMSqeyd=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_oPjTWZV;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_vWGatbz=json({});
    return_vWGatbz=[&]() {
    json return_tszqMYU=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_vWGatbz;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_NAGWqVF=json({});
    return_NAGWqVF=[&]() {
    json return_GRlsMGd=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_NAGWqVF;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_Klxwwxl=json({});
    return_Klxwwxl=[&]() {
    json return_YjjYmHj=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_Klxwwxl;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_QTNNeQO=json({});
    return_QTNNeQO=[&]() {
    json return_rqCBxjv=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_QTNNeQO;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_uUfEGft=json({});
    return_uUfEGft=[&]() {
    json return_NtaRBKT=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_uUfEGft;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_vihblrh=json({});
    return_vihblrh=[&]() {
    json return_WvSfgAg=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_vihblrh;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_ZRKKYkJ=json({});
    return_ZRKKYkJ=[&]() {
    json return_ZSniyoV=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_ZRKKYkJ;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_kfENVRB=json({});
    return_kfENVRB=[&]() {
    json return_fAFsnPn=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_kfENVRB;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_GDLPrbl=json({});
    return_GDLPrbl=[&]() {
    json return_gZpCfqM=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_GDLPrbl;}();
result["members"]["shaderInt64"]=[&]() {
    json return_oXmzumC=json({});
    return_oXmzumC=[&]() {
    json return_MhZrFvm=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_oXmzumC;}();
result["members"]["shaderInt16"]=[&]() {
    json return_tZkBXXk=json({});
    return_tZkBXXk=[&]() {
    json return_xjImMQa=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_tZkBXXk;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_oOjrvwh=json({});
    return_oOjrvwh=[&]() {
    json return_GHWKmFI=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_oOjrvwh;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_hXnjosI=json({});
    return_hXnjosI=[&]() {
    json return_KvQenfL=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_hXnjosI;}();
result["members"]["sparseBinding"]=[&]() {
    json return_xDiBZeA=json({});
    return_xDiBZeA=[&]() {
    json return_QrHkvmp=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_xDiBZeA;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_niNrMLM=json({});
    return_niNrMLM=[&]() {
    json return_USmtgVY=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_niNrMLM;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_UAjGIhr=json({});
    return_UAjGIhr=[&]() {
    json return_WFfqiMG=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_UAjGIhr;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_cbKCfZG=json({});
    return_cbKCfZG=[&]() {
    json return_JrGIWey=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_cbKCfZG;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_FwOTAhZ=json({});
    return_FwOTAhZ=[&]() {
    json return_KToDojz=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_FwOTAhZ;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_mLnZyig=json({});
    return_mLnZyig=[&]() {
    json return_tzVYOdk=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_mLnZyig;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_neKyIiK=json({});
    return_neKyIiK=[&]() {
    json return_oiYnsxd=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_neKyIiK;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_rzPerBY=json({});
    return_rzPerBY=[&]() {
    json return_CTsyELw=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_rzPerBY;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_xWvgvvL=json({});
    return_xWvgvvL=[&]() {
    json return_lcLFfAt=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_xWvgvvL;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_eFPWtKV=json({});
    return_eFPWtKV=[&]() {
    json return_BioBVsO=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_eFPWtKV;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_WyWTZSH=json({});
    return_WyWTZSH=[&]() {
    json return_VohWEcW=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_WyWTZSH;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_aPhoPDm=json({});
    return_aPhoPDm=[&]() {
    json return_uFwPoMS=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_aPhoPDm;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_vymVNVD=json({});
    return_vymVNVD=[&]() {
    json return_KoaDgAD=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_vymVNVD;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_DfGnLpb=json({});
    return_DfGnLpb=[&]() {
    json return_XJQvlTl=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_DfGnLpb;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_MRqFViP=json({});
    return_MRqFViP=[&]() {
    json return_tmqIJek=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_MRqFViP;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_PdSOMfF=json({});
    return_PdSOMfF=[&]() {
    json return_rCoMFap=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_PdSOMfF;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_uhzplKz=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_xGWudKE=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_WqcPwNu=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_ZAhUKXq=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_tObwowd=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_fcqwnRh=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_XNOvjWc=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_Arusyoq=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_CoZvjhF=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_IJuflBb=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_XfFMCgd=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_WXQTkOM=json({});
    return_WXQTkOM=[&]() {
    json return_TshFQDj=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_WXQTkOM;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_NpwJkwr=json({});
    return_NpwJkwr=[&]() {
    json return_MQmlyhi=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_NpwJkwr;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_CWuTzCt=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_TUBvGYM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_FWLXtGb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_FHCyNaU=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_lmoKBOn=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_IqWrpgv=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_GBSElCa=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_JKohzDE=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_QoyZtTl=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_DWQCtZw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_YqqGSIA=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_MTBSrGa=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_pbQWvIM=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_ocQRTAM=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_RgPKHoS=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_MRfusYY=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_JaHTNsS=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_ArfNQwC=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_AtezpvJ=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_SxjzpjJ=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_aFHDboy=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_IopHnNs=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_OFCPkmI=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_TUpgwLC=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_MbzXzqe=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_qNQUNny=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_QOhUkLK=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_hGlhKOS=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_LrWIEOP=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_VgQkXqy=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_VQffxLN=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_TPwyPpq=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_HBYJzyw=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_xkOLSkn=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_AGywKrV=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_QesBswN=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_KBzGJUM=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_HiVbiRy=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_EykqhpV=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_FXOgqGn=json({});
    
        return_FXOgqGn["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_jnxBkkJ=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[i]);}();
            return_FXOgqGn["members"][std::to_string(i)].push_back(temp);
        }
        return return_FXOgqGn;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_rbWkhLc=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_UkEHtTK=json({});
    
        return_UkEHtTK["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_AMbFLOG=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[i]);}();
            return_UkEHtTK["members"][std::to_string(i)].push_back(temp);
        }
        return return_UkEHtTK;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_TVhzBho=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_VlLMaIh=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_yibWZeS=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_tKjujKH=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_nhnQTki=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_wZSAKMj=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_JjhkeFg=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_faZPWfI=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_TjlNbIB=json({});
    
        return_TjlNbIB["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_wHrsiMD=json({});
    return serialize_uint32_t(name.maxViewportDimensions[i]);}();
            return_TjlNbIB["members"][std::to_string(i)].push_back(temp);
        }
        return return_TjlNbIB;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_hQRjraj=json({});
    
        return_hQRjraj["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_YmFlPHJ=json({});
    return serialize_float(name.viewportBoundsRange[i]);}();
            return_hQRjraj["members"][std::to_string(i)].push_back(temp);
        }
        return return_hQRjraj;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_aDawjIj=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_yUlcYyn=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_PJYMyVh=json({});
    return_PJYMyVh=[&]() {
    json return_wVcJNse=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_PJYMyVh;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_EGufMjT=json({});
    return_EGufMjT=[&]() {
    json return_qOJFoVC=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_EGufMjT;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_uLUJlBS=json({});
    return_uLUJlBS=[&]() {
    json return_TxjoAyM=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_uLUJlBS;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_pGiWzeA=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_kikyVIo=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_OTbMYym=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_qWgvJpZ=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_quAHNeJ=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_uZyhaSL=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_xmjgorb=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_YTVntrZ=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_uUVnrqF=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_zbuDmUG=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_clbyhPK=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_BYcUlew=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_Ewtxayf=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_PyhoBIU=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_KNTfcTj=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_OHNACiN=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_kHrBLvC=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_HYLGNTI=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_TyhIVxu=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_ZxQBTDc=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_PejTREk=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_VXldoZs=json({});
    return_VXldoZs=[&]() {
    json return_QUNBYbh=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_VXldoZs;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_IOFBDXi=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_xMRLgJJ=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_DlmXDQI=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_qLeLYkb=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_vnXzSYG=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_YobAwBQ=json({});
    
        return_YobAwBQ["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_xfssfUw=json({});
    return serialize_float(name.pointSizeRange[i]);}();
            return_YobAwBQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_YobAwBQ;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_wHbjhmM=json({});
    
        return_wHbjhmM["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_mVwNTzD=json({});
    return serialize_float(name.lineWidthRange[i]);}();
            return_wHbjhmM["members"][std::to_string(i)].push_back(temp);
        }
        return return_wHbjhmM;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_vWdatrp=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_eCVGMKL=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_rklEKyh=json({});
    return_rklEKyh=[&]() {
    json return_HRRllVN=json({});
    return serialize_uint32_t(name.strictLines);}();return return_rklEKyh;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_ZIGXicY=json({});
    return_ZIGXicY=[&]() {
    json return_IOYxuQw=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_ZIGXicY;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_DPKAFEs=json({});
    return_DPKAFEs=[&]() {
    json return_TTpualO=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_DPKAFEs;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_yuBzrxL=json({});
    return_yuBzrxL=[&]() {
    json return_MtyTLUN=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_yuBzrxL;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_oPRODxC=json({});
    return_oPRODxC=[&]() {
    json return_SbJEyIn=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_oPRODxC;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int CAbKguW=0; CAbKguW < 3; CAbKguW++){
            [&]() {
result.maxComputeWorkGroupCount[CAbKguW]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][CAbKguW]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int mxWPnyR=0; mxWPnyR < 3; mxWPnyR++){
            [&]() {
result.maxComputeWorkGroupSize[mxWPnyR]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][mxWPnyR]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int tTYkrrv=0; tTYkrrv < 2; tTYkrrv++){
            [&]() {
result.maxViewportDimensions[tTYkrrv]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][tTYkrrv]);}();;
        }
        }();
[&]() {

        for (int JQdnzap=0; JQdnzap < 2; JQdnzap++){
            [&]() {
result.viewportBoundsRange[JQdnzap]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][JQdnzap]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int oOmlSgL=0; oOmlSgL < 2; oOmlSgL++){
            [&]() {
result.pointSizeRange[oOmlSgL]=deserialize_float(name["members"]["pointSizeRange"]["members"][oOmlSgL]);}();;
        }
        }();
[&]() {

        for (int ZQbKYoM=0; ZQbKYoM < 2; ZQbKYoM++){
            [&]() {
result.lineWidthRange[ZQbKYoM]=deserialize_float(name["members"]["lineWidthRange"]["members"][ZQbKYoM]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YSrzEKK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xWkUgpm=json({});
    
        if (name.pNext==NULL){
            return_xWkUgpm["null"]=true;
            return return_xWkUgpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BXjCqpK=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kbEhBnn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kbEhBnn=NULL;
        }
    temp_kbEhBnn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kbEhBnn;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rIMnLkk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IXgIBMj=json({});
    
        if (name.pNext==NULL){
            return_IXgIBMj["null"]=true;
            return return_IXgIBMj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_pNsDHba=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_gIsCSCR=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_weCmmqJ=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_ptxbvQG=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UxwZZSQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UxwZZSQ=NULL;
        }
    temp_UxwZZSQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UxwZZSQ;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NiyeRRj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XEHmmmZ=json({});
    
        if (name.pNext==NULL){
            return_XEHmmmZ["null"]=true;
            return return_XEHmmmZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uUYaDZa=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_RmmTBZy=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_QRroPAg=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_mTNYeNQ=json({});
    
        if (name.pAttachments==NULL){
            return_mTNYeNQ["null"]=true;
            return return_mTNYeNQ;
        }
        
        return_mTNYeNQ["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_LEQVhTx=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_mTNYeNQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_mTNYeNQ;
        }();
result["members"]["width"]=[&]() {
    json return_TVjIcGH=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_cOqLnaT=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_ygMCMJv=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YUDgaUs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YUDgaUs=NULL;
        }
    temp_YUDgaUs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YUDgaUs;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_gXGJYZa;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_gXGJYZa=NULL;
        }
    temp_gXGJYZa=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int LnAicuw=0; LnAicuw < result.attachmentCount; LnAicuw++){
            [&]() {
temp_gXGJYZa[LnAicuw]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][LnAicuw]);}();;
        }
        }();result.pAttachments=temp_gXGJYZa;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_AWzqafT=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_ddBBFhP=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_kaRyQdR=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_qtYfCop=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_arYybxg=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_DuWFftc=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_ahMgwQk=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_VvTkTFN=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_xZfZJAH=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_PvXsCvj=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_dtWywDi=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_DcXopVA=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_LJtajLf=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_PpStIAY=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_uhrIrzZ=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_iOOglXv=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_aOIqIYA=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PtZSwBg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bAqhTrc=json({});
    
        if (name.pNext==NULL){
            return_bAqhTrc["null"]=true;
            return return_bAqhTrc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_SqWKEWG=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_KEcLPru=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_KEcLPru["null"]=true;
            return return_KEcLPru;
        }
        
        return_KEcLPru["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_JmaNsZL=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_KEcLPru["members"][std::to_string(i)].push_back(temp);
        }
        return return_KEcLPru;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_FGriwaW=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_FGriwaW["null"]=true;
            return return_FGriwaW;
        }
        
        return_FGriwaW["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_XfkbwhI=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[i]);}();
            return_FGriwaW["members"][std::to_string(i)].push_back(temp);
        }
        return return_FGriwaW;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_AoBrcfJ=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_tRnbzWq=json({});
    
        if (name.pCommandBuffers==NULL){
            return_tRnbzWq["null"]=true;
            return return_tRnbzWq;
        }
        
        return_tRnbzWq["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_OqkfEKx=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[i]);}();
            return_tRnbzWq["members"][std::to_string(i)].push_back(temp);
        }
        return return_tRnbzWq;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_OpYJgKO=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_aIILzeF=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_aIILzeF["null"]=true;
            return return_aIILzeF;
        }
        
        return_aIILzeF["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_nFbAGVn=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_aIILzeF["members"][std::to_string(i)].push_back(temp);
        }
        return return_aIILzeF;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_celuYTH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_celuYTH=NULL;
        }
    temp_celuYTH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_celuYTH;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_fMDrMvl;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_fMDrMvl=NULL;
        }
    temp_fMDrMvl=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int qnzcWuu=0; qnzcWuu < result.waitSemaphoreCount; qnzcWuu++){
            [&]() {
temp_fMDrMvl[qnzcWuu]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][qnzcWuu]);}();;
        }
        }();result.pWaitSemaphores=temp_fMDrMvl;}();
[&]() {
VkPipelineStageFlags* temp_XiMUqZn;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_XiMUqZn=NULL;
        }
    temp_XiMUqZn=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int rveWMYN=0; rveWMYN < result.waitSemaphoreCount; rveWMYN++){
            [&]() {
temp_XiMUqZn[rveWMYN]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][rveWMYN]);}();;
        }
        }();result.pWaitDstStageMask=temp_XiMUqZn;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_ViScBHu;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_ViScBHu=NULL;
        }
    temp_ViScBHu=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int sZxAjrZ=0; sZxAjrZ < result.commandBufferCount; sZxAjrZ++){
            [&]() {
temp_ViScBHu[sZxAjrZ]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][sZxAjrZ]);}();;
        }
        }();result.pCommandBuffers=temp_ViScBHu;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_LdjZJSJ;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_LdjZJSJ=NULL;
        }
    temp_LdjZJSJ=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int SYgiSHQ=0; SYgiSHQ < result.signalSemaphoreCount; SYgiSHQ++){
            [&]() {
temp_LdjZJSJ[SYgiSHQ]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][SYgiSHQ]);}();;
        }
        }();result.pSignalSemaphores=temp_LdjZJSJ;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_AThHXHf=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_dYUHQqe=json({});
    
        if (name.displayName==NULL){
            return_dYUHQqe["null"]=true;
            return return_dYUHQqe;
        }
        return serialize_char_p(name.displayName);
}();
result["members"]["physicalDimensions"]=[&]() {
    json return_kZmzsEd=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_xOIhiwC=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_sDiBONx=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_vbULOGl=json({});
    return_vbULOGl=[&]() {
    json return_ZMYsbXD=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_vbULOGl;}();
result["members"]["persistentContent"]=[&]() {
    json return_SRDSOKu=json({});
    return_SRDSOKu=[&]() {
    json return_tSJTycQ=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_SRDSOKu;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_tendxvC;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_tendxvC=NULL;
        }
    temp_tendxvC=deserialize_char_p(name["members"]["displayName"]);
}();result.displayName=temp_tendxvC;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_fakmxRi=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_DllrogW=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_BuOsBSH=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_pmrIHee=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_THzfJnp=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_ztrgkSv=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GsIAyox=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wWqUndE=json({});
    
        if (name.pNext==NULL){
            return_wWqUndE["null"]=true;
            return return_wWqUndE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_QjZaqaG=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_yFZRwlj=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FPqBhTN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FPqBhTN=NULL;
        }
    temp_FPqBhTN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FPqBhTN;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_geMSitU=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_ZWwNxft=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_wNpuEbF=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_gWCutCW=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_TnztpJs=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_bajcsFq=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_jtPzkZY=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_LOFaNlB=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_BxBAuaW=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fhzzoxK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BwYfIRp=json({});
    
        if (name.pNext==NULL){
            return_BwYfIRp["null"]=true;
            return return_BwYfIRp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fCmFIny=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_DITeEis=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_cOoRBCA=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_XWJuFTT=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_WMsyORg=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_hERWteQ=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_zzamHdn=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_ueVirQn=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IlFKHJT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IlFKHJT=NULL;
        }
    temp_IlFKHJT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IlFKHJT;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dVWSrJS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lEhfZNE=json({});
    
        if (name.pNext==NULL){
            return_lEhfZNE["null"]=true;
            return return_lEhfZNE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcRect"]=[&]() {
    json return_QMibYZB=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_OQdHDep=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_UeOYTPm=json({});
    return_UeOYTPm=[&]() {
    json return_ebiSMvO=json({});
    return serialize_uint32_t(name.persistent);}();return return_UeOYTPm;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xdYLvhg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xdYLvhg=NULL;
        }
    temp_xdYLvhg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xdYLvhg;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_PSHGGqE=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_rFIBICf=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_NZOmMwK=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_iOXXyKA=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_sWoMkNL=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_cIcyYyY=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_AZYMfxb=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_uTRyVIr=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_SvXJJCT=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_wLDvdGI=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CnbkkAC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hmvUzUM=json({});
    
        if (name.pNext==NULL){
            return_hmvUzUM["null"]=true;
            return return_hmvUzUM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vAFNhVA=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_XywWFoY=json({});
    
        if (name.dpy==NULL){
            return_XywWFoY["null"]=true;
            return return_XywWFoY;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_SqgkdOI=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UykJKRz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UykJKRz=NULL;
        }
    temp_UykJKRz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UykJKRz;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eMiuOGz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HYiVaVY=json({});
    
        if (name.pNext==NULL){
            return_HYiVaVY["null"]=true;
            return return_HYiVaVY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_KqEmJzX=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_TjzEiAO=json({});
    
        if (name.connection==NULL){
            return_TjzEiAO["null"]=true;
            return return_TjzEiAO;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_Efkvlih=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hYLTvBG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hYLTvBG=NULL;
        }
    temp_hYLTvBG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hYLTvBG;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_kUZdoJS=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_BzCNQdZ=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IfykZLC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xJToeaE=json({});
    
        if (name.pNext==NULL){
            return_xJToeaE["null"]=true;
            return return_xJToeaE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HoYxaeV=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_NYkSghu=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_amvKUGg=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_ZUskNRT=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_trviORu=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_uGbgyJF=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_AGRtfRn=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_mRzOmEP=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_lNoobJZ=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_XEDRWdf=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_KPtEqef=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_KPtEqef["null"]=true;
            return return_KPtEqef;
        }
        
        return_KPtEqef["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_bUpogxv=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_KPtEqef["members"][std::to_string(i)].push_back(temp);
        }
        return return_KPtEqef;
        }();
result["members"]["preTransform"]=[&]() {
    json return_RwZFAxd=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_WHRLTOo=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_fZtGiPC=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_LAaDsrx=json({});
    return_LAaDsrx=[&]() {
    json return_HxhRQJj=json({});
    return serialize_uint32_t(name.clipped);}();return return_LAaDsrx;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_QYLemzr=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_IdJKnzp=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GkhAzOl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GkhAzOl=NULL;
        }
    temp_GkhAzOl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GkhAzOl;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_rnvIPQG;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_rnvIPQG=NULL;
        }
    temp_rnvIPQG=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int tijlNlw=0; tijlNlw < result.queueFamilyIndexCount; tijlNlw++){
            [&]() {
temp_rnvIPQG[tijlNlw]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][tijlNlw]);}();;
        }
        }();result.pQueueFamilyIndices=temp_rnvIPQG;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xrGgsbP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RhAmVOa=json({});
    
        if (name.pNext==NULL){
            return_RhAmVOa["null"]=true;
            return return_RhAmVOa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_DIJOiTA=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_OkteCtS=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_OkteCtS["null"]=true;
            return return_OkteCtS;
        }
        
        return_OkteCtS["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_YjUMdyC=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_OkteCtS["members"][std::to_string(i)].push_back(temp);
        }
        return return_OkteCtS;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_lmQOuJH=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_ZFFApOk=json({});
    
        if (name.pSwapchains==NULL){
            return_ZFFApOk["null"]=true;
            return return_ZFFApOk;
        }
        
        return_ZFFApOk["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_GbQLArA=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[i]);}();
            return_ZFFApOk["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZFFApOk;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_OPypmWF=json({});
    
        if (name.pImageIndices==NULL){
            return_OPypmWF["null"]=true;
            return return_OPypmWF;
        }
        
        return_OPypmWF["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_SWwKPfV=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_OPypmWF["members"][std::to_string(i)].push_back(temp);
        }
        return return_OPypmWF;
        }();
result["members"]["pResults"]=[&]() {
    json return_miLClkb=json({});
    
        if (name.pResults==NULL){
            return_miLClkb["null"]=true;
            return return_miLClkb;
        }
        
        return_miLClkb["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_TplDiCC=json({});
    return serialize_VkResult(name.pResults[i]);}();
            return_miLClkb["members"][std::to_string(i)].push_back(temp);
        }
        return return_miLClkb;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VRFfwkn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VRFfwkn=NULL;
        }
    temp_VRFfwkn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VRFfwkn;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_CLXTdQe;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_CLXTdQe=NULL;
        }
    temp_CLXTdQe=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int NHzaIku=0; NHzaIku < result.waitSemaphoreCount; NHzaIku++){
            [&]() {
temp_CLXTdQe[NHzaIku]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][NHzaIku]);}();;
        }
        }();result.pWaitSemaphores=temp_CLXTdQe;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_BIdAcKq;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_BIdAcKq=NULL;
        }
    temp_BIdAcKq=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int BvbIgLp=0; BvbIgLp < result.swapchainCount; BvbIgLp++){
            [&]() {
temp_BIdAcKq[BvbIgLp]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][BvbIgLp]);}();;
        }
        }();result.pSwapchains=temp_BIdAcKq;}();
[&]() {
uint32_t* temp_FsxObNT;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_FsxObNT=NULL;
        }
    temp_FsxObNT=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int MAStODf=0; MAStODf < result.swapchainCount; MAStODf++){
            [&]() {
temp_FsxObNT[MAStODf]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][MAStODf]);}();;
        }
        }();result.pImageIndices=temp_FsxObNT;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int hmdnLWq=0; hmdnLWq < result.swapchainCount; hmdnLWq++){
            [&]() {
result.pResults[hmdnLWq]=deserialize_VkResult(name["members"]["pResults"]["members"][hmdnLWq]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JqWMjzt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gFHeExP=json({});
    
        if (name.pNext==NULL){
            return_gFHeExP["null"]=true;
            return return_gFHeExP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vQUEJak=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_FAfEtpi=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_jDyfaYL=json({});
    
        if (name.pUserData==NULL){
            return_jDyfaYL["null"]=true;
            return return_jDyfaYL;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SaQttCt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SaQttCt=NULL;
        }
    temp_SaQttCt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SaQttCt;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QbQKjNj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ITxtYWp=json({});
    
        if (name.pNext==NULL){
            return_ITxtYWp["null"]=true;
            return return_ITxtYWp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_tytpOZn=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_kzIYfjc=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_kzIYfjc["null"]=true;
            return return_kzIYfjc;
        }
        
        return_kzIYfjc["members"]={};
        for(int i=0; i < name.disabledValidationCheckCount; i++){
            json temp;
            temp=[&]() {
    json return_aWQHltp=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[i]);}();
            return_kzIYfjc["members"][std::to_string(i)].push_back(temp);
        }
        return return_kzIYfjc;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GgSfQYX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GgSfQYX=NULL;
        }
    temp_GgSfQYX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GgSfQYX;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_LSFEnoi;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_LSFEnoi=NULL;
        }
    temp_LSFEnoi=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int usNUqcG=0; usNUqcG < result.disabledValidationCheckCount; usNUqcG++){
            [&]() {
temp_LSFEnoi[usNUqcG]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][usNUqcG]);}();;
        }
        }();result.pDisabledValidationChecks=temp_LSFEnoi;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UxkjWvO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CaOBivm=json({});
    
        if (name.pNext==NULL){
            return_CaOBivm["null"]=true;
            return return_CaOBivm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_gFcDrfM=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_STmrqdj=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_STmrqdj["null"]=true;
            return return_STmrqdj;
        }
        
        return_STmrqdj["members"]={};
        for(int i=0; i < name.enabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_LHcOoyc=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[i]);}();
            return_STmrqdj["members"][std::to_string(i)].push_back(temp);
        }
        return return_STmrqdj;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_TsCPHQY=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_JzNjOfT=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_JzNjOfT["null"]=true;
            return return_JzNjOfT;
        }
        
        return_JzNjOfT["members"]={};
        for(int i=0; i < name.disabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_cPiLTQW=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[i]);}();
            return_JzNjOfT["members"][std::to_string(i)].push_back(temp);
        }
        return return_JzNjOfT;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DIDdVFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DIDdVFM=NULL;
        }
    temp_DIDdVFM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DIDdVFM;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_LCnsMow;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_LCnsMow=NULL;
        }
    temp_LCnsMow=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int LfOoAKC=0; LfOoAKC < result.enabledValidationFeatureCount; LfOoAKC++){
            [&]() {
temp_LCnsMow[LfOoAKC]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][LfOoAKC]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_LCnsMow;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_uEkkiOQ;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_uEkkiOQ=NULL;
        }
    temp_uEkkiOQ=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int uDSeFVl=0; uDSeFVl < result.disabledValidationFeatureCount; uDSeFVl++){
            [&]() {
temp_uEkkiOQ[uDSeFVl]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][uDSeFVl]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_uEkkiOQ;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dKEPczu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IfkRDgI=json({});
    
        if (name.pNext==NULL){
            return_IfkRDgI["null"]=true;
            return return_IfkRDgI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_PKZPLGk=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YoletfP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YoletfP=NULL;
        }
    temp_YoletfP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YoletfP;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FzeICqB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CFXruHv=json({});
    
        if (name.pNext==NULL){
            return_CFXruHv["null"]=true;
            return return_CFXruHv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_KUxYKNl=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_nLCpjBT=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_LHKYfLJ=json({});
    
        if (name.pObjectName==NULL){
            return_LHKYfLJ["null"]=true;
            return return_LHKYfLJ;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eaEiZAc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eaEiZAc=NULL;
        }
    temp_eaEiZAc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eaEiZAc;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_ccjpEYM;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_ccjpEYM=NULL;
        }
    temp_ccjpEYM=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_ccjpEYM;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FZFqnNB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSbsDyu=json({});
    
        if (name.pNext==NULL){
            return_qSbsDyu["null"]=true;
            return return_qSbsDyu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_HZPJReo=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_eorTTkJ=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_NATkoIT=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_eulNkkN=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_bTvfNJQ=json({});
    
        if (name.pTag==NULL){
            return_bTvfNJQ["null"]=true;
            return return_bTvfNJQ;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kFjzlUi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kFjzlUi=NULL;
        }
    temp_kFjzlUi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kFjzlUi;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_uziiXqo;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_uziiXqo=NULL;
        }
    temp_uziiXqo=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_uziiXqo;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cMoPUww=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dnMkfwk=json({});
    
        if (name.pNext==NULL){
            return_dnMkfwk["null"]=true;
            return return_dnMkfwk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pMarkerName"]=[&]() {
    json return_fYLHisx=json({});
    
        if (name.pMarkerName==NULL){
            return_fYLHisx["null"]=true;
            return return_fYLHisx;
        }
        return serialize_char_p(name.pMarkerName);
}();
result["members"]["color"]=[&]() {
    json return_ouMDxsb=json({});
    
        return_ouMDxsb["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_ufqlxOg=json({});
    return serialize_float(name.color[i]);}();
            return_ouMDxsb["members"][std::to_string(i)].push_back(temp);
        }
        return return_ouMDxsb;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WcuCcEv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WcuCcEv=NULL;
        }
    temp_WcuCcEv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WcuCcEv;}();
[&]() {
char* temp_FPOcTnA;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_FPOcTnA=NULL;
        }
    temp_FPOcTnA=deserialize_char_p(name["members"]["pMarkerName"]);
}();result.pMarkerName=temp_FPOcTnA;}();
[&]() {

        for (int nbQkSYI=0; nbQkSYI < 4; nbQkSYI++){
            [&]() {
result.color[nbQkSYI]=deserialize_float(name["members"]["color"]["members"][nbQkSYI]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uzPwpHg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JkxeOad=json({});
    
        if (name.pNext==NULL){
            return_JkxeOad["null"]=true;
            return return_JkxeOad;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_fVBuIWU=json({});
    return_fVBuIWU=[&]() {
    json return_lUslxWb=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_fVBuIWU;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SmQUPcd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SmQUPcd=NULL;
        }
    temp_SmQUPcd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SmQUPcd;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TxRQUbw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TuzAyMd=json({});
    
        if (name.pNext==NULL){
            return_TuzAyMd["null"]=true;
            return return_TuzAyMd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_qljValC=json({});
    return_qljValC=[&]() {
    json return_LxGSmXD=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_qljValC;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lkIwPPL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lkIwPPL=NULL;
        }
    temp_lkIwPPL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lkIwPPL;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gdgtqHg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lhkpNLs=json({});
    
        if (name.pNext==NULL){
            return_lhkpNLs["null"]=true;
            return return_lhkpNLs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_QcbnVhW=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_VfWydci=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hLwKZKQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hLwKZKQ=NULL;
        }
    temp_hLwKZKQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hLwKZKQ;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_VpFCphs=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_sLzzBoC=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_LWLUEzq=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_eQkvAFO=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PijuShj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SfMpjML=json({});
    
        if (name.pNext==NULL){
            return_SfMpjML["null"]=true;
            return return_SfMpjML;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_GxLjRHP=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XMRcyuM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XMRcyuM=NULL;
        }
    temp_XMRcyuM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XMRcyuM;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nUnRnYD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BhLOThK=json({});
    
        if (name.pNext==NULL){
            return_BhLOThK["null"]=true;
            return return_BhLOThK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_uxqhvQA=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gmzrwXm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gmzrwXm=NULL;
        }
    temp_gmzrwXm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gmzrwXm;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FmiZOdZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NfsrNQM=json({});
    
        if (name.pNext==NULL){
            return_NfsrNQM["null"]=true;
            return return_NfsrNQM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_WVpyMIs=json({});
    return_WVpyMIs=[&]() {
    json return_TeBHrKz=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_WVpyMIs;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MnKqCUL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GKygLzF=json({});
    
        if (name.pNext==NULL){
            return_GKygLzF["null"]=true;
            return return_GKygLzF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_rqzrgRd=json({});
    return_rqzrgRd=[&]() {
    json return_uSfjIkH=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_rqzrgRd;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_FqYWfvM=json({});
    return_FqYWfvM=[&]() {
    json return_WDqxeLf=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_FqYWfvM;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_jikAbzy=json({});
    return_jikAbzy=[&]() {
    json return_bwxEVNG=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_jikAbzy;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wRArHES=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sEpDnYP=json({});
    
        if (name.pNext==NULL){
            return_sEpDnYP["null"]=true;
            return return_sEpDnYP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_BzJGMsH=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_daycEwf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_daycEwf=NULL;
        }
    temp_daycEwf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_daycEwf;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rLIOpFt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GGgXxBY=json({});
    
        if (name.pNext==NULL){
            return_GGgXxBY["null"]=true;
            return return_GGgXxBY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_phgWTek=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZHEpDgo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZHEpDgo=NULL;
        }
    temp_ZHEpDgo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZHEpDgo;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uSoIlSB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CLaPvmY=json({});
    
        if (name.pNext==NULL){
            return_CLaPvmY["null"]=true;
            return return_CLaPvmY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PzJVoxy=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qKumqfQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qKumqfQ=NULL;
        }
    temp_qKumqfQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qKumqfQ;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TmJuUzl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aITVWbx=json({});
    
        if (name.pNext==NULL){
            return_aITVWbx["null"]=true;
            return return_aITVWbx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JXGShFk=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KmhqMzi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KmhqMzi=NULL;
        }
    temp_KmhqMzi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KmhqMzi;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JhbAdPn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fYvkhuF=json({});
    
        if (name.pNext==NULL){
            return_fYvkhuF["null"]=true;
            return return_fYvkhuF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_ONzCnFK=json({});
    return_ONzCnFK=[&]() {
    json return_BDZODde=json({});
    return serialize_uint32_t(name.privateData);}();return return_ONzCnFK;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wOCsAus=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GlZqkFJ=json({});
    
        if (name.pNext==NULL){
            return_GlZqkFJ["null"]=true;
            return return_GlZqkFJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_iBusANC=json({});
    return_iBusANC=[&]() {
    json return_gSxgZHB=json({});
    return serialize_uint32_t(name.privateData);}();return return_iBusANC;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VemtYAn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VcMobJM=json({});
    
        if (name.pNext==NULL){
            return_VcMobJM["null"]=true;
            return return_VcMobJM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_KbKgxdq=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_DfFEtIo=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_dLPEpSR=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_ycbqdKw=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_XnqtmpJ=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_dJEhnVf=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_DcIgijB=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_NcJUqNh=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_bdfOqXH=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wMqwEks=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OxRoBAV=json({});
    
        if (name.pNext==NULL){
            return_OxRoBAV["null"]=true;
            return return_OxRoBAV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_YBgwRiQ=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MppfsIE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_agxPsga=json({});
    
        if (name.pNext==NULL){
            return_agxPsga["null"]=true;
            return return_agxPsga;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stageCount"]=[&]() {
    json return_zkCgKqz=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_veTNzGz=json({});
    
        if (name.pStages==NULL){
            return_veTNzGz["null"]=true;
            return return_veTNzGz;
        }
        
        return_veTNzGz["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_ruNZUTQ=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_veTNzGz["members"][std::to_string(i)].push_back(temp);
        }
        return return_veTNzGz;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_MCZzHXW=json({});
    
        if (name.pVertexInputState==NULL){
            return_MCZzHXW["null"]=true;
            return return_MCZzHXW;
        }
        return_MCZzHXW=[&]() {
    json return_ktKdRSV=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_MCZzHXW;}();
result["members"]["pTessellationState"]=[&]() {
    json return_qWOptuO=json({});
    
        if (name.pTessellationState==NULL){
            return_qWOptuO["null"]=true;
            return return_qWOptuO;
        }
        return_qWOptuO=[&]() {
    json return_SzhMuYQ=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_qWOptuO;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vSlsHYi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vSlsHYi=NULL;
        }
    temp_vSlsHYi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vSlsHYi;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_zpqStuJ;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_zpqStuJ=NULL;
        }
    temp_zpqStuJ=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int ewRofNB=0; ewRofNB < result.stageCount; ewRofNB++){
            [&]() {
temp_zpqStuJ[ewRofNB]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][ewRofNB]);}();;
        }
        }();result.pStages=temp_zpqStuJ;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_mlCsjlk;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_mlCsjlk=NULL;
        }
    [&]() {
*(temp_mlCsjlk)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_mlCsjlk;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_PudNmZm;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_PudNmZm=NULL;
        }
    [&]() {
*(temp_PudNmZm)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_PudNmZm;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JqIVVkg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qwZwcbT=json({});
    
        if (name.pNext==NULL){
            return_qwZwcbT["null"]=true;
            return return_qwZwcbT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["groupCount"]=[&]() {
    json return_YffAKGP=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_nhxDyGV=json({});
    
        if (name.pGroups==NULL){
            return_nhxDyGV["null"]=true;
            return return_nhxDyGV;
        }
        
        return_nhxDyGV["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_ZWQvyqO=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_nhxDyGV["members"][std::to_string(i)].push_back(temp);
        }
        return return_nhxDyGV;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_EfxIGfw=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_vLuhysv=json({});
    
        if (name.pPipelines==NULL){
            return_vLuhysv["null"]=true;
            return return_vLuhysv;
        }
        
        return_vLuhysv["members"]={};
        for(int i=0; i < name.pipelineCount; i++){
            json temp;
            temp=[&]() {
    json return_tzyKTrG=json({});
    return serialize_VkPipeline(name.pPipelines[i]);}();
            return_vLuhysv["members"][std::to_string(i)].push_back(temp);
        }
        return return_vLuhysv;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lySgECY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lySgECY=NULL;
        }
    temp_lySgECY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lySgECY;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_OWAHHRb;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_OWAHHRb=NULL;
        }
    temp_OWAHHRb=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int msozEqe=0; msozEqe < result.groupCount; msozEqe++){
            [&]() {
temp_OWAHHRb[msozEqe]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][msozEqe]);}();;
        }
        }();result.pGroups=temp_OWAHHRb;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_RdjmQoB;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_RdjmQoB=NULL;
        }
    temp_RdjmQoB=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int VeOshXf=0; VeOshXf < result.pipelineCount; VeOshXf++){
            [&]() {
temp_RdjmQoB[VeOshXf]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][VeOshXf]);}();;
        }
        }();result.pPipelines=temp_RdjmQoB;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_wpoGtrl=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_TfaaMdE=json({});
    return_TfaaMdE=[&]() {
    json return_WKbFAcK=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_TfaaMdE;}();
result["members"]["size"]=[&]() {
    json return_SwAlYxB=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_cvXXLXw=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_GVxIwzH=json({});
    return_GVxIwzH=[&]() {
    json return_oWBoCUD=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_GVxIwzH;}();
result["members"]["size"]=[&]() {
    json return_zFAKQcF=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_oQYnhYb=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_BqFGpBk=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_qUoBikC=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_ndiAWVD=json({});
    return_ndiAWVD=[&]() {
    json return_FaeXHeJ=json({});
    return serialize_uint64_t(name.offset);}();return return_ndiAWVD;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GayQmLi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KVIrIBZ=json({});
    
        if (name.pNext==NULL){
            return_KVIrIBZ["null"]=true;
            return return_KVIrIBZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tokenType"]=[&]() {
    json return_BHErQKm=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_YfDPOEQ=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_abObPHc=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_TgrxOCk=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_fzguldA=json({});
    return_fzguldA=[&]() {
    json return_eLegrdY=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_fzguldA;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_IovYZxf=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_xhikxgK=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_LzLjZDX=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_LGZJuCH=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_nTuCZYH=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_rygGFqQ=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_WiqczvF=json({});
    
        if (name.pIndexTypes==NULL){
            return_WiqczvF["null"]=true;
            return return_WiqczvF;
        }
        
        return_WiqczvF["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_AYjMEsj=json({});
    return serialize_VkIndexType(name.pIndexTypes[i]);}();
            return_WiqczvF["members"][std::to_string(i)].push_back(temp);
        }
        return return_WiqczvF;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_WMrnDfS=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_WMrnDfS["null"]=true;
            return return_WMrnDfS;
        }
        
        return_WMrnDfS["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_jxONsEC=json({});
    return serialize_uint32_t(name.pIndexTypeValues[i]);}();
            return_WMrnDfS["members"][std::to_string(i)].push_back(temp);
        }
        return return_WMrnDfS;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FepTnqg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FepTnqg=NULL;
        }
    temp_FepTnqg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FepTnqg;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_QRSmlCQ;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_QRSmlCQ=NULL;
        }
    temp_QRSmlCQ=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int uiqfbhR=0; uiqfbhR < result.indexTypeCount; uiqfbhR++){
            [&]() {
temp_QRSmlCQ[uiqfbhR]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][uiqfbhR]);}();;
        }
        }();result.pIndexTypes=temp_QRSmlCQ;}();
[&]() {
uint32_t* temp_wXFHWYK;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_wXFHWYK=NULL;
        }
    temp_wXFHWYK=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int djsBNPn=0; djsBNPn < result.indexTypeCount; djsBNPn++){
            [&]() {
temp_wXFHWYK[djsBNPn]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][djsBNPn]);}();;
        }
        }();result.pIndexTypeValues=temp_wXFHWYK;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FbprLpi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zmZiAZU=json({});
    
        if (name.pNext==NULL){
            return_zmZiAZU["null"]=true;
            return return_zmZiAZU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TchsvUG=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_SsLTMNX=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_JxniuNH=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_KIsXkoL=json({});
    
        if (name.pTokens==NULL){
            return_KIsXkoL["null"]=true;
            return return_KIsXkoL;
        }
        
        return_KIsXkoL["members"]={};
        for(int i=0; i < name.tokenCount; i++){
            json temp;
            temp=[&]() {
    json return_DXyAhXD=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[i]);}();
            return_KIsXkoL["members"][std::to_string(i)].push_back(temp);
        }
        return return_KIsXkoL;
        }();
result["members"]["streamCount"]=[&]() {
    json return_ykDBMkS=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_cLTEYyQ=json({});
    
        if (name.pStreamStrides==NULL){
            return_cLTEYyQ["null"]=true;
            return return_cLTEYyQ;
        }
        
        return_cLTEYyQ["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_wzpOEgW=json({});
    return serialize_uint32_t(name.pStreamStrides[i]);}();
            return_cLTEYyQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_cLTEYyQ;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YfwcVGK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YfwcVGK=NULL;
        }
    temp_YfwcVGK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YfwcVGK;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_fRcgGXd;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_fRcgGXd=NULL;
        }
    temp_fRcgGXd=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int KssPyQu=0; KssPyQu < result.tokenCount; KssPyQu++){
            [&]() {
temp_fRcgGXd[KssPyQu]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][KssPyQu]);}();;
        }
        }();result.pTokens=temp_fRcgGXd;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_tSwqWrE;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_tSwqWrE=NULL;
        }
    temp_tSwqWrE=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int SfVpjYl=0; SfVpjYl < result.streamCount; SfVpjYl++){
            [&]() {
temp_tSwqWrE[SfVpjYl]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][SfVpjYl]);}();;
        }
        }();result.pStreamStrides=temp_tSwqWrE;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eoEEeGA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNORJjX=json({});
    
        if (name.pNext==NULL){
            return_SNORJjX["null"]=true;
            return return_SNORJjX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_rYUauVc=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_nTBWftF=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_wDRazhd=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_uZiIZcc=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_wxCwpkP=json({});
    
        if (name.pStreams==NULL){
            return_wxCwpkP["null"]=true;
            return return_wxCwpkP;
        }
        
        return_wxCwpkP["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_NAdkVhS=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[i]);}();
            return_wxCwpkP["members"][std::to_string(i)].push_back(temp);
        }
        return return_wxCwpkP;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_ytDzuKc=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_xPpgTeu=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_gkdCIPS=json({});
    return_gkdCIPS=[&]() {
    json return_SoLKrTl=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_gkdCIPS;}();
result["members"]["preprocessSize"]=[&]() {
    json return_oEwfxXU=json({});
    return_oEwfxXU=[&]() {
    json return_kTKAPOv=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_oEwfxXU;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_lyhEcRj=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_fPlxQFR=json({});
    return_fPlxQFR=[&]() {
    json return_FrisESm=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_fPlxQFR;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_azSjxak=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_dLYcquM=json({});
    return_dLYcquM=[&]() {
    json return_QiwegNd=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_dLYcquM;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uBQLuSd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uBQLuSd=NULL;
        }
    temp_uBQLuSd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uBQLuSd;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_EoZEBHh;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_EoZEBHh=NULL;
        }
    temp_EoZEBHh=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int LEqnLMS=0; LEqnLMS < result.streamCount; LEqnLMS++){
            [&]() {
temp_EoZEBHh[LEqnLMS]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][LEqnLMS]);}();;
        }
        }();result.pStreams=temp_EoZEBHh;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aqACTEC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LsaPvam=json({});
    
        if (name.pNext==NULL){
            return_LsaPvam["null"]=true;
            return return_LsaPvam;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_towsuAz=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_fEVUgJc=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_GWBwiqN=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_UIoLGja=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GfBtRzq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GfBtRzq=NULL;
        }
    temp_GfBtRzq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GfBtRzq;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HYsiYyS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ECAfOBX=json({});
    
        if (name.pNext==NULL){
            return_ECAfOBX["null"]=true;
            return return_ECAfOBX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_GVWwrqa=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_OtKUgvb=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LYTsiKL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LYTsiKL=NULL;
        }
    temp_LYTsiKL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LYTsiKL;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_mHucGUx=json({});
    return_mHucGUx=[&]() {
    json return_ZXWmVZC=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_mHucGUx;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BNAwLfi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wdoodTV=json({});
    
        if (name.pNext==NULL){
            return_wdoodTV["null"]=true;
            return return_wdoodTV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_IwnqhBb=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fJQLatU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TqsAgPV=json({});
    
        if (name.pNext==NULL){
            return_TqsAgPV["null"]=true;
            return return_TqsAgPV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_TzCvqoH=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fNYoVLS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HaEOfsr=json({});
    
        if (name.pNext==NULL){
            return_HaEOfsr["null"]=true;
            return return_HaEOfsr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_RYTYVEp=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GewjPwH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RuIrpkc=json({});
    
        if (name.pNext==NULL){
            return_RuIrpkc["null"]=true;
            return return_RuIrpkc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_tyZKQbD=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nNfyUxZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VmpJyRq=json({});
    
        if (name.pNext==NULL){
            return_VmpJyRq["null"]=true;
            return return_VmpJyRq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_MclThed=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WTgcWWp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AOfpyXg=json({});
    
        if (name.pNext==NULL){
            return_AOfpyXg["null"]=true;
            return return_AOfpyXg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_ENwBDTn=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zKvydxY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KBJfxkG=json({});
    
        if (name.pNext==NULL){
            return_KBJfxkG["null"]=true;
            return return_KBJfxkG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_BKClLQz=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RRExuFc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eYJjaxo=json({});
    
        if (name.pNext==NULL){
            return_eYJjaxo["null"]=true;
            return return_eYJjaxo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_hxVcJkQ=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YThacCi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OaELmGU=json({});
    
        if (name.pNext==NULL){
            return_OaELmGU["null"]=true;
            return return_OaELmGU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_zSoqqAo=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_AyYhhKn=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_VEfpUAN=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_rruxEDA=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_wBZPLoJ=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iorRmqN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iorRmqN=NULL;
        }
    temp_iorRmqN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iorRmqN;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rMwQDLc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pYFdwPh=json({});
    
        if (name.pNext==NULL){
            return_pYFdwPh["null"]=true;
            return return_pYFdwPh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_xzSYRJh=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_vIGTJkC=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_SOVztRX=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_evkdlXB=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_gEySxTo=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hmSZnIi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hmSZnIi=NULL;
        }
    temp_hmSZnIi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hmSZnIi;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tmQleMF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jQnPVuc=json({});
    
        if (name.pNext==NULL){
            return_jQnPVuc["null"]=true;
            return return_jQnPVuc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_uzYgSgU=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WBUrhEI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fzcLXCR=json({});
    
        if (name.pNext==NULL){
            return_fzcLXCR["null"]=true;
            return return_fzcLXCR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_KFXxgnt=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xMeZCdp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UKRggZm=json({});
    
        if (name.pNext==NULL){
            return_UKRggZm["null"]=true;
            return return_UKRggZm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_UyWtZlM=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GiwQLOD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uKvUPcN=json({});
    
        if (name.pNext==NULL){
            return_uKvUPcN["null"]=true;
            return return_uKvUPcN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_avxWClK=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mXepimY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GNZDRKI=json({});
    
        if (name.pNext==NULL){
            return_GNZDRKI["null"]=true;
            return return_GNZDRKI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_mamjzXn=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fgiCpvC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xliZZSd=json({});
    
        if (name.pNext==NULL){
            return_xliZZSd["null"]=true;
            return return_xliZZSd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_PEaHtoP=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TWFFkXz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jToYufd=json({});
    
        if (name.pNext==NULL){
            return_jToYufd["null"]=true;
            return return_jToYufd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_gopLikG=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_VYWGqUY=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_AXgJbuQ=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_GDecies=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_QifTJmF=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KPJbDNg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KPJbDNg=NULL;
        }
    temp_KPJbDNg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KPJbDNg;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VFnMGyh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BrxvtCc=json({});
    
        if (name.pNext==NULL){
            return_BrxvtCc["null"]=true;
            return return_BrxvtCc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_kGIPCJm=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_QPNuDdJ=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_RjhPhMo=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_MAufmAj=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_mSWBxMa=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CRdveen;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CRdveen=NULL;
        }
    temp_CRdveen=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CRdveen;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zbWcPpG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yjGCQOn=json({});
    
        if (name.pNext==NULL){
            return_yjGCQOn["null"]=true;
            return return_yjGCQOn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_AAIMZau=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_pMxiWJT=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_MnxgMZe=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_NPrzcXp=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_JzzuDZX=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_pbvEJng=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_uSgqOhv=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_YKnBvwN=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_myeeECh=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hVJAIms=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LfyLyHU=json({});
    
        if (name.pNext==NULL){
            return_LfyLyHU["null"]=true;
            return return_LfyLyHU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_iLFwVGR=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_tsaTXcS=json({});
    
        return_tsaTXcS["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_muzQZrC=json({});
    return serialize_char(name.driverName[i]);}();
            return_tsaTXcS["members"][std::to_string(i)].push_back(temp);
        }
        return return_tsaTXcS;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_OvrRxwE=json({});
    
        return_OvrRxwE["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FBoUksd=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_OvrRxwE["members"][std::to_string(i)].push_back(temp);
        }
        return return_OvrRxwE;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_NJBvTlo=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int XzZqAaJ=0; XzZqAaJ < VK_MAX_DRIVER_NAME_SIZE; XzZqAaJ++){
            [&]() {
result.driverName[XzZqAaJ]=deserialize_char(name["members"]["driverName"]["members"][XzZqAaJ]);}();;
        }
        }();
[&]() {

        for (int qwanXip=0; qwanXip < VK_MAX_DRIVER_INFO_SIZE; qwanXip++){
            [&]() {
result.driverInfo[qwanXip]=deserialize_char(name["members"]["driverInfo"]["members"][qwanXip]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MpYIVgi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dqmTYax=json({});
    
        if (name.pNext==NULL){
            return_dqmTYax["null"]=true;
            return return_dqmTYax;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_ughDpsr=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_oWBMYXR=json({});
    
        return_oWBMYXR["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ChCdxCy=json({});
    return serialize_char(name.driverName[i]);}();
            return_oWBMYXR["members"][std::to_string(i)].push_back(temp);
        }
        return return_oWBMYXR;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_DLgfvfk=json({});
    
        return_DLgfvfk["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_AsVgVxT=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_DLgfvfk["members"][std::to_string(i)].push_back(temp);
        }
        return return_DLgfvfk;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_jTkyukf=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int QXYowuC=0; QXYowuC < VK_MAX_DRIVER_NAME_SIZE; QXYowuC++){
            [&]() {
result.driverName[QXYowuC]=deserialize_char(name["members"]["driverName"]["members"][QXYowuC]);}();;
        }
        }();
[&]() {

        for (int ofuUkBD=0; ofuUkBD < VK_MAX_DRIVER_INFO_SIZE; ofuUkBD++){
            [&]() {
result.driverInfo[ofuUkBD]=deserialize_char(name["members"]["driverInfo"]["members"][ofuUkBD]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CsVyXiX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ttLEGAC=json({});
    
        if (name.pNext==NULL){
            return_ttLEGAC["null"]=true;
            return return_ttLEGAC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_yKaeKJO=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BBstKhz=json({});
    
        if (name.pRegions==NULL){
            return_BBstKhz["null"]=true;
            return return_BBstKhz;
        }
        
        return_BBstKhz["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_dIXXalq=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[i]);}();
            return_BBstKhz["members"][std::to_string(i)].push_back(temp);
        }
        return return_BBstKhz;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CwfXwgM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CwfXwgM=NULL;
        }
    temp_CwfXwgM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CwfXwgM;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_BEMgpea;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_BEMgpea=NULL;
        }
    temp_BEMgpea=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int UmzhAgE=0; UmzhAgE < result.swapchainCount; UmzhAgE++){
            [&]() {
temp_BEMgpea[UmzhAgE]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][UmzhAgE]);}();;
        }
        }();result.pRegions=temp_BEMgpea;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_dnHHLbL=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_GNNplgq=json({});
    
        if (name.pRectangles==NULL){
            return_GNNplgq["null"]=true;
            return return_GNNplgq;
        }
        
        return_GNNplgq["members"]={};
        for(int i=0; i < name.rectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_MHFYTWE=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[i]);}();
            return_GNNplgq["members"][std::to_string(i)].push_back(temp);
        }
        return return_GNNplgq;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_CIAjvPy;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_CIAjvPy=NULL;
        }
    temp_CIAjvPy=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int VHRdtYI=0; VHRdtYI < result.rectangleCount; VHRdtYI++){
            [&]() {
temp_CIAjvPy[VHRdtYI]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][VHRdtYI]);}();;
        }
        }();result.pRectangles=temp_CIAjvPy;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_dAzxDXq=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_JeAJfHr=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_tqLOaPn=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hyZhmsy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XIKdUbQ=json({});
    
        if (name.pNext==NULL){
            return_XIKdUbQ["null"]=true;
            return return_XIKdUbQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_RRACupl=json({});
    return_RRACupl=[&]() {
    json return_zBAiJqt=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_RRACupl;}();
result["members"]["variablePointers"]=[&]() {
    json return_QAeMadv=json({});
    return_QAeMadv=[&]() {
    json return_zMsXnZY=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_QAeMadv;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jnQypAg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IOxxrIU=json({});
    
        if (name.pNext==NULL){
            return_IOxxrIU["null"]=true;
            return return_IOxxrIU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_XVOceyA=json({});
    return_XVOceyA=[&]() {
    json return_KGJPGuY=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_XVOceyA;}();
result["members"]["variablePointers"]=[&]() {
    json return_WkdjuzH=json({});
    return_WkdjuzH=[&]() {
    json return_PFSOMAN=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_WkdjuzH;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AruKrrY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zWTzdin=json({});
    
        if (name.pNext==NULL){
            return_zWTzdin["null"]=true;
            return return_zWTzdin;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_KRlXkcp=json({});
    return_KRlXkcp=[&]() {
    json return_PxUMnRB=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_KRlXkcp;}();
result["members"]["variablePointers"]=[&]() {
    json return_gspHrLF=json({});
    return_gspHrLF=[&]() {
    json return_BgORtuQ=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_gspHrLF;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xOnCnVj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YNdZkXr=json({});
    
        if (name.pNext==NULL){
            return_YNdZkXr["null"]=true;
            return return_YNdZkXr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_kHpPCUf=json({});
    return_kHpPCUf=[&]() {
    json return_ohDCEYO=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_kHpPCUf;}();
result["members"]["variablePointers"]=[&]() {
    json return_lVulBFU=json({});
    return_lVulBFU=[&]() {
    json return_olSpXki=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_lVulBFU;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_zOYxulc=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_SNHfjKi=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_rSEZUCN=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_jtmUnfG=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_VEqwMDB=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_oMWISuK=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rTSWfBC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DbUgHJA=json({});
    
        if (name.pNext==NULL){
            return_DbUgHJA["null"]=true;
            return return_DbUgHJA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_NVggbKL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QWqZicU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QWqZicU=NULL;
        }
    temp_QWqZicU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QWqZicU;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vCzrxBK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_smQtnOe=json({});
    
        if (name.pNext==NULL){
            return_smQtnOe["null"]=true;
            return return_smQtnOe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_uXXvZTL=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cxWxEZh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cxWxEZh=NULL;
        }
    temp_cxWxEZh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cxWxEZh;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XQQajqr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AaftYeo=json({});
    
        if (name.pNext==NULL){
            return_AaftYeo["null"]=true;
            return return_AaftYeo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_gxgKUKb=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_beijeJP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QftLLRb=json({});
    
        if (name.pNext==NULL){
            return_QftLLRb["null"]=true;
            return return_QftLLRb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_bZhIjrw=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SlroQWf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nAHCMCc=json({});
    
        if (name.pNext==NULL){
            return_nAHCMCc["null"]=true;
            return return_nAHCMCc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HwYBOlb=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_rByhjhl=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_HxfUFlR=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqmuEpC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqmuEpC=NULL;
        }
    temp_UqmuEpC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UqmuEpC;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qVrdWGy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YVxYAWj=json({});
    
        if (name.pNext==NULL){
            return_YVxYAWj["null"]=true;
            return return_YVxYAWj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sKbFDLT=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_DWTzgay=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_njHyfTl=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qogiyOB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qogiyOB=NULL;
        }
    temp_qogiyOB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qogiyOB;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GofRWgh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cWEWaEJ=json({});
    
        if (name.pNext==NULL){
            return_cWEWaEJ["null"]=true;
            return return_cWEWaEJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_ZOHeQPf=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fVXnyqd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yAmEwEV=json({});
    
        if (name.pNext==NULL){
            return_yAmEwEV["null"]=true;
            return return_yAmEwEV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_TfXchbf=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_McGhwPt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgzTxFE=json({});
    
        if (name.pNext==NULL){
            return_TgzTxFE["null"]=true;
            return return_TgzTxFE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_OvGzhcJ=json({});
    
        return_OvGzhcJ["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lAGDDUz=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_OvGzhcJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_OvGzhcJ;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_faFfPyU=json({});
    
        return_faFfPyU["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_NEHJPHs=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_faFfPyU["members"][std::to_string(i)].push_back(temp);
        }
        return return_faFfPyU;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_pIFTXOP=json({});
    
        return_pIFTXOP["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lnXwhwE=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_pIFTXOP["members"][std::to_string(i)].push_back(temp);
        }
        return return_pIFTXOP;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_QJfYNGs=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_sPYoZKL=json({});
    return_sPYoZKL=[&]() {
    json return_YRKJWHf=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_sPYoZKL;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int HAZhLPk=0; HAZhLPk < VK_UUID_SIZE; HAZhLPk++){
            [&]() {
result.deviceUUID[HAZhLPk]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][HAZhLPk]);}();;
        }
        }();
[&]() {

        for (int YTxMzME=0; YTxMzME < VK_UUID_SIZE; YTxMzME++){
            [&]() {
result.driverUUID[YTxMzME]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][YTxMzME]);}();;
        }
        }();
[&]() {

        for (int AzrXhuH=0; AzrXhuH < VK_LUID_SIZE; AzrXhuH++){
            [&]() {
result.deviceLUID[AzrXhuH]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][AzrXhuH]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NDVOdnm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gWrDyus=json({});
    
        if (name.pNext==NULL){
            return_gWrDyus["null"]=true;
            return return_gWrDyus;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_WuDYVyR=json({});
    
        return_WuDYVyR["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RCBRTFP=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_WuDYVyR["members"][std::to_string(i)].push_back(temp);
        }
        return return_WuDYVyR;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_ebbAHPO=json({});
    
        return_ebbAHPO["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZyUPeTa=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_ebbAHPO["members"][std::to_string(i)].push_back(temp);
        }
        return return_ebbAHPO;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_AMtZjhu=json({});
    
        return_AMtZjhu["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_itcXHoC=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_AMtZjhu["members"][std::to_string(i)].push_back(temp);
        }
        return return_AMtZjhu;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_zoCvUZd=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_yGSIirv=json({});
    return_yGSIirv=[&]() {
    json return_azehkRs=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_yGSIirv;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int wbyqbja=0; wbyqbja < VK_UUID_SIZE; wbyqbja++){
            [&]() {
result.deviceUUID[wbyqbja]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][wbyqbja]);}();;
        }
        }();
[&]() {

        for (int lQZUwHc=0; lQZUwHc < VK_UUID_SIZE; lQZUwHc++){
            [&]() {
result.driverUUID[lQZUwHc]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][lQZUwHc]);}();;
        }
        }();
[&]() {

        for (int GFGQYtO=0; GFGQYtO < VK_LUID_SIZE; GFGQYtO++){
            [&]() {
result.deviceLUID[GFGQYtO]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][GFGQYtO]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tYRRGEk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_djAUFkH=json({});
    
        if (name.pNext==NULL){
            return_djAUFkH["null"]=true;
            return return_djAUFkH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_csGXHMA=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MUDNazG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MUDNazG=NULL;
        }
    temp_MUDNazG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MUDNazG;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OhNEPFB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TEQCKJQ=json({});
    
        if (name.pNext==NULL){
            return_TEQCKJQ["null"]=true;
            return return_TEQCKJQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_qoeTuzM=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mTsDnJc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mTsDnJc=NULL;
        }
    temp_mTsDnJc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mTsDnJc;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uOZmudy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SxhqBRI=json({});
    
        if (name.pNext==NULL){
            return_SxhqBRI["null"]=true;
            return return_SxhqBRI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_rrEfkut=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_krUkGoQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_krUkGoQ=NULL;
        }
    temp_krUkGoQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_krUkGoQ;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KWgjMwk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XkwSbwe=json({});
    
        if (name.pNext==NULL){
            return_XkwSbwe["null"]=true;
            return return_XkwSbwe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_IuDQKri=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hdMJjuR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hdMJjuR=NULL;
        }
    temp_hdMJjuR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hdMJjuR;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XapBOxx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_flRSwiS=json({});
    
        if (name.pNext==NULL){
            return_flRSwiS["null"]=true;
            return return_flRSwiS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_YZVIXUc=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uRCjOGB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uRCjOGB=NULL;
        }
    temp_uRCjOGB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uRCjOGB;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uVGIAcF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cpJvrgK=json({});
    
        if (name.pNext==NULL){
            return_cpJvrgK["null"]=true;
            return return_cpJvrgK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_qgXGGfi=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gkXpqEF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gkXpqEF=NULL;
        }
    temp_gkXpqEF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gkXpqEF;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ArVNuAd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xbYfEgA=json({});
    
        if (name.pNext==NULL){
            return_xbYfEgA["null"]=true;
            return return_xbYfEgA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_mMlLSsG=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_TiOlqZL=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uSMkSTj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uSMkSTj=NULL;
        }
    temp_uSMkSTj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uSMkSTj;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qVKoWON=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AqsbjHk=json({});
    
        if (name.pNext==NULL){
            return_AqsbjHk["null"]=true;
            return return_AqsbjHk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_tqEKaMK=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_htylTVg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nYwkTFV=json({});
    
        if (name.pNext==NULL){
            return_nYwkTFV["null"]=true;
            return return_nYwkTFV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_TteStxr=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_BpCmEqw=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcLbyAS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcLbyAS=NULL;
        }
    temp_AcLbyAS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AcLbyAS;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Lhicvhq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LfwwMZm=json({});
    
        if (name.pNext==NULL){
            return_LfwwMZm["null"]=true;
            return return_LfwwMZm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_iFUoeFp=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dHHEuTQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dHHEuTQ=NULL;
        }
    temp_dHHEuTQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dHHEuTQ;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SsNVHTD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uwtSRck=json({});
    
        if (name.pNext==NULL){
            return_uwtSRck["null"]=true;
            return return_uwtSRck;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_bzkkeDP=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zINtkac;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zINtkac=NULL;
        }
    temp_zINtkac=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zINtkac;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DXRgFVn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sPTOaVu=json({});
    
        if (name.pNext==NULL){
            return_sPTOaVu["null"]=true;
            return return_sPTOaVu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_ZoQEQwE=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_anAlDiL=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_ckSjJsk=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aReVvgy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fsyvXuZ=json({});
    
        if (name.pNext==NULL){
            return_fsyvXuZ["null"]=true;
            return return_fsyvXuZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_RemtRNX=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_QRnRCfz=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_xQCDjFl=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zYBirHM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KPNXyFB=json({});
    
        if (name.pNext==NULL){
            return_KPNXyFB["null"]=true;
            return return_KPNXyFB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_OteuejW=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HOAYtsR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HOAYtsR=NULL;
        }
    temp_HOAYtsR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HOAYtsR;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EIJhaiA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ugZtomY=json({});
    
        if (name.pNext==NULL){
            return_ugZtomY["null"]=true;
            return return_ugZtomY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_BtPjPtH=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OrmuUeQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OrmuUeQ=NULL;
        }
    temp_OrmuUeQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OrmuUeQ;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QRBnDAj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HDdIblf=json({});
    
        if (name.pNext==NULL){
            return_HDdIblf["null"]=true;
            return return_HDdIblf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_WhIILYO=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_EArhKqq=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_ifLOQQE=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_kvaHPZz=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CHpfaIt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CHpfaIt=NULL;
        }
    temp_CHpfaIt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CHpfaIt;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BCJIEfJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RXEKqgM=json({});
    
        if (name.pNext==NULL){
            return_RXEKqgM["null"]=true;
            return return_RXEKqgM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_iOLvwgB=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_tGfWfEt=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CzPaHsu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CzPaHsu=NULL;
        }
    temp_CzPaHsu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CzPaHsu;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VQjUaUZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YANgEUD=json({});
    
        if (name.pNext==NULL){
            return_YANgEUD["null"]=true;
            return return_YANgEUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_JrglIDi=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_StzVbxP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_StzVbxP=NULL;
        }
    temp_StzVbxP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_StzVbxP;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gqYAguA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vQheWrw=json({});
    
        if (name.pNext==NULL){
            return_vQheWrw["null"]=true;
            return return_vQheWrw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_VMtujws=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sWvbFKz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sWvbFKz=NULL;
        }
    temp_sWvbFKz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sWvbFKz;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KksdSVK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SPDLqsc=json({});
    
        if (name.pNext==NULL){
            return_SPDLqsc["null"]=true;
            return return_SPDLqsc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_BNkCRWP=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_AAHcVnu=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_lkdHzyW=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cTJfJio=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DWtxQws=json({});
    
        if (name.pNext==NULL){
            return_DWtxQws["null"]=true;
            return return_DWtxQws;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_eRKcDgG=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_fuVcqny=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_MJnbHFj=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RXmJQXc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HoomMlV=json({});
    
        if (name.pNext==NULL){
            return_HoomMlV["null"]=true;
            return return_HoomMlV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_HAPCxWj=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pxyBMzU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pxyBMzU=NULL;
        }
    temp_pxyBMzU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pxyBMzU;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fHiEXOl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dxdFLQd=json({});
    
        if (name.pNext==NULL){
            return_dxdFLQd["null"]=true;
            return return_dxdFLQd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_tIyQNAe=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CXkYZAg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CXkYZAg=NULL;
        }
    temp_CXkYZAg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CXkYZAg;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lyjsNZV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TOsFqAj=json({});
    
        if (name.pNext==NULL){
            return_TOsFqAj["null"]=true;
            return return_TOsFqAj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_HMJXrAK=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_sLYuxrS=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_UmOfeeH=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_HRNsbpP=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_asUCHIQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_asUCHIQ=NULL;
        }
    temp_asUCHIQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_asUCHIQ;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fAuhZLV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qsHDLwB=json({});
    
        if (name.pNext==NULL){
            return_qsHDLwB["null"]=true;
            return return_qsHDLwB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_cPjqauq=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_kVFKbIs=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LlzyPWZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LlzyPWZ=NULL;
        }
    temp_LlzyPWZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LlzyPWZ;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LGmuRTQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_utEaqQU=json({});
    
        if (name.pNext==NULL){
            return_utEaqQU["null"]=true;
            return return_utEaqQU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_pZmMmpn=json({});
    return_pZmMmpn=[&]() {
    json return_EPwCkTQ=json({});
    return serialize_uint32_t(name.multiview);}();return return_pZmMmpn;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_zgoYxQN=json({});
    return_zgoYxQN=[&]() {
    json return_NIaSSSU=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_zgoYxQN;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_REkOqWt=json({});
    return_REkOqWt=[&]() {
    json return_FEQVxcl=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_REkOqWt;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AyvtJNv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wbcqGyP=json({});
    
        if (name.pNext==NULL){
            return_wbcqGyP["null"]=true;
            return return_wbcqGyP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_ZmoOJqQ=json({});
    return_ZmoOJqQ=[&]() {
    json return_XpPCPTL=json({});
    return serialize_uint32_t(name.multiview);}();return return_ZmoOJqQ;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_ABUDHjy=json({});
    return_ABUDHjy=[&]() {
    json return_XVhyRqW=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_ABUDHjy;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_mKlDIoo=json({});
    return_mKlDIoo=[&]() {
    json return_bNutnZO=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_mKlDIoo;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yaZxdvV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKWLjda=json({});
    
        if (name.pNext==NULL){
            return_xKWLjda["null"]=true;
            return return_xKWLjda;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_JNKcYlA=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_daSUTRM=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YUOeBUM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PUAAITq=json({});
    
        if (name.pNext==NULL){
            return_PUAAITq["null"]=true;
            return return_PUAAITq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_tQfHodV=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_mLCSphm=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qOZztXr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vjKXUrB=json({});
    
        if (name.pNext==NULL){
            return_vjKXUrB["null"]=true;
            return return_vjKXUrB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_KXHWQbe=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_aZGVXCh=json({});
    
        if (name.pViewMasks==NULL){
            return_aZGVXCh["null"]=true;
            return return_aZGVXCh;
        }
        
        return_aZGVXCh["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_lfcIQlu=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_aZGVXCh["members"][std::to_string(i)].push_back(temp);
        }
        return return_aZGVXCh;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_OTGICKQ=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_qPYwIEZ=json({});
    
        if (name.pViewOffsets==NULL){
            return_qPYwIEZ["null"]=true;
            return return_qPYwIEZ;
        }
        
        return_qPYwIEZ["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_kPdfrBv=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_qPYwIEZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_qPYwIEZ;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_ZQWzLiU=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_dJOKtpB=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_dJOKtpB["null"]=true;
            return return_dJOKtpB;
        }
        
        return_dJOKtpB["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_vDKQjGy=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_dJOKtpB["members"][std::to_string(i)].push_back(temp);
        }
        return return_dJOKtpB;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ltjAFdN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ltjAFdN=NULL;
        }
    temp_ltjAFdN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ltjAFdN;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_MvTwXeK;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_MvTwXeK=NULL;
        }
    temp_MvTwXeK=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int bjochvv=0; bjochvv < result.subpassCount; bjochvv++){
            [&]() {
temp_MvTwXeK[bjochvv]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][bjochvv]);}();;
        }
        }();result.pViewMasks=temp_MvTwXeK;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_pyNYLDI;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_pyNYLDI=NULL;
        }
    temp_pyNYLDI=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int eIEgSZn=0; eIEgSZn < result.dependencyCount; eIEgSZn++){
            [&]() {
temp_pyNYLDI[eIEgSZn]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][eIEgSZn]);}();;
        }
        }();result.pViewOffsets=temp_pyNYLDI;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_ahMQMyO;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_ahMQMyO=NULL;
        }
    temp_ahMQMyO=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int BudZbau=0; BudZbau < result.correlationMaskCount; BudZbau++){
            [&]() {
temp_ahMQMyO[BudZbau]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][BudZbau]);}();;
        }
        }();result.pCorrelationMasks=temp_ahMQMyO;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NlfaTlc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BskFgZv=json({});
    
        if (name.pNext==NULL){
            return_BskFgZv["null"]=true;
            return return_BskFgZv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_gkLQvCG=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_fpKUBQy=json({});
    
        if (name.pViewMasks==NULL){
            return_fpKUBQy["null"]=true;
            return return_fpKUBQy;
        }
        
        return_fpKUBQy["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_LaozGXA=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_fpKUBQy["members"][std::to_string(i)].push_back(temp);
        }
        return return_fpKUBQy;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_cqUisua=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_FErfGKc=json({});
    
        if (name.pViewOffsets==NULL){
            return_FErfGKc["null"]=true;
            return return_FErfGKc;
        }
        
        return_FErfGKc["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_KSDjVRx=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_FErfGKc["members"][std::to_string(i)].push_back(temp);
        }
        return return_FErfGKc;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_AvgXsJR=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_rIscOec=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_rIscOec["null"]=true;
            return return_rIscOec;
        }
        
        return_rIscOec["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_MJCHrWu=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_rIscOec["members"][std::to_string(i)].push_back(temp);
        }
        return return_rIscOec;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XLqWali;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XLqWali=NULL;
        }
    temp_XLqWali=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XLqWali;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_TldqdDD;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_TldqdDD=NULL;
        }
    temp_TldqdDD=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int LyyHnnu=0; LyyHnnu < result.subpassCount; LyyHnnu++){
            [&]() {
temp_TldqdDD[LyyHnnu]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][LyyHnnu]);}();;
        }
        }();result.pViewMasks=temp_TldqdDD;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_LMbNAjO;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_LMbNAjO=NULL;
        }
    temp_LMbNAjO=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int jBRyjBe=0; jBRyjBe < result.dependencyCount; jBRyjBe++){
            [&]() {
temp_LMbNAjO[jBRyjBe]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][jBRyjBe]);}();;
        }
        }();result.pViewOffsets=temp_LMbNAjO;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_nMGIVPC;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_nMGIVPC=NULL;
        }
    temp_nMGIVPC=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int nWKumKL=0; nWKumKL < result.correlationMaskCount; nWKumKL++){
            [&]() {
temp_nMGIVPC[nWKumKL]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][nWKumKL]);}();;
        }
        }();result.pCorrelationMasks=temp_nMGIVPC;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BayKMsW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PAWiPoZ=json({});
    
        if (name.pNext==NULL){
            return_PAWiPoZ["null"]=true;
            return return_PAWiPoZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImageCount"]=[&]() {
    json return_pmJNUPY=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_PwirYrM=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_rOdbtvj=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_tAqAFDr=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_CRjjmDs=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_fwdJMBB=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_qKmsjMY=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_lVULlWC=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_XxBIBHM=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_CUgtpwf=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_QGRerCf=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fUgBDlP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jbCDECS=json({});
    
        if (name.pNext==NULL){
            return_jbCDECS["null"]=true;
            return return_jbCDECS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["powerState"]=[&]() {
    json return_wAUIBSw=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JElfIsJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JElfIsJ=NULL;
        }
    temp_JElfIsJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JElfIsJ;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IHOlzHX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FfqwLWh=json({});
    
        if (name.pNext==NULL){
            return_FfqwLWh["null"]=true;
            return return_FfqwLWh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceEvent"]=[&]() {
    json return_kreOXfl=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gbKzXQY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gbKzXQY=NULL;
        }
    temp_gbKzXQY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gbKzXQY;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rmjULsq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LiaRdQc=json({});
    
        if (name.pNext==NULL){
            return_LiaRdQc["null"]=true;
            return return_LiaRdQc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayEvent"]=[&]() {
    json return_rWDaRIV=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oIkoeIc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oIkoeIc=NULL;
        }
    temp_oIkoeIc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oIkoeIc;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sDvnMTQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NrSqWPF=json({});
    
        if (name.pNext==NULL){
            return_NrSqWPF["null"]=true;
            return return_NrSqWPF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCounters"]=[&]() {
    json return_JTpVyAH=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EsiTQKp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EsiTQKp=NULL;
        }
    temp_EsiTQKp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EsiTQKp;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YVAaKVk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UXCoHLi=json({});
    
        if (name.pNext==NULL){
            return_UXCoHLi["null"]=true;
            return return_UXCoHLi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_WgRMUuB=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_NVgaopq=json({});
    
        return_NVgaopq["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_nmkvfZn=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_NVgaopq["members"][std::to_string(i)].push_back(temp);
        }
        return return_NVgaopq;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_tdooiti=json({});
    return_tdooiti=[&]() {
    json return_sBLpnvd=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_tdooiti;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int DRrdKYt=0; DRrdKYt < VK_MAX_DEVICE_GROUP_SIZE; DRrdKYt++){
            [&]() {
result.physicalDevices[DRrdKYt]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][DRrdKYt]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_swgRtKc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RkEjFAZ=json({});
    
        if (name.pNext==NULL){
            return_RkEjFAZ["null"]=true;
            return return_RkEjFAZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_tvbRDAS=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_bDhfzmn=json({});
    
        return_bDhfzmn["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QCCelHR=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_bDhfzmn["members"][std::to_string(i)].push_back(temp);
        }
        return return_bDhfzmn;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_NXWeoOG=json({});
    return_NXWeoOG=[&]() {
    json return_hNBHBaT=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_NXWeoOG;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int HsIjrQK=0; HsIjrQK < VK_MAX_DEVICE_GROUP_SIZE; HsIjrQK++){
            [&]() {
result.physicalDevices[HsIjrQK]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][HsIjrQK]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NnrYOdJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mfzFLjD=json({});
    
        if (name.pNext==NULL){
            return_mfzFLjD["null"]=true;
            return return_mfzFLjD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mYnjrAe=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_xmRnrdi=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lndZKJp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lndZKJp=NULL;
        }
    temp_lndZKJp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lndZKJp;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NeFMROp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QMvxRGW=json({});
    
        if (name.pNext==NULL){
            return_QMvxRGW["null"]=true;
            return return_QMvxRGW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_vDahUEP=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_IjBerTD=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JnqnUhs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JnqnUhs=NULL;
        }
    temp_JnqnUhs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JnqnUhs;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nWqrEBR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XqDxvqy=json({});
    
        if (name.pNext==NULL){
            return_XqDxvqy["null"]=true;
            return return_XqDxvqy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_XefpYXa=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_hDOTtQO=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_GZkvfRj=json({});
    return_GZkvfRj=[&]() {
    json return_IrJFrrC=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_GZkvfRj;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KWpDFgg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KWpDFgg=NULL;
        }
    temp_KWpDFgg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KWpDFgg;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HPrtfPR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fTsdNei=json({});
    
        if (name.pNext==NULL){
            return_fTsdNei["null"]=true;
            return return_fTsdNei;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_fFRVlKg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_hZnIaCb=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_PiEIdcd=json({});
    return_PiEIdcd=[&]() {
    json return_ZXXqJaG=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_PiEIdcd;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sHjusRh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sHjusRh=NULL;
        }
    temp_sHjusRh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sHjusRh;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_inARTlx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NUUWrhQ=json({});
    
        if (name.pNext==NULL){
            return_NUUWrhQ["null"]=true;
            return return_NUUWrhQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_BaiHXfr=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_qHXfrGW=json({});
    
        if (name.pDeviceIndices==NULL){
            return_qHXfrGW["null"]=true;
            return return_qHXfrGW;
        }
        
        return_qHXfrGW["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_htMdcmm=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_qHXfrGW["members"][std::to_string(i)].push_back(temp);
        }
        return return_qHXfrGW;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xvZNTVH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xvZNTVH=NULL;
        }
    temp_xvZNTVH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xvZNTVH;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_dDXNrdS;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_dDXNrdS=NULL;
        }
    temp_dDXNrdS=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int buYpvgg=0; buYpvgg < result.deviceIndexCount; buYpvgg++){
            [&]() {
temp_dDXNrdS[buYpvgg]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][buYpvgg]);}();;
        }
        }();result.pDeviceIndices=temp_dDXNrdS;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQZxDus=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JOmDKLp=json({});
    
        if (name.pNext==NULL){
            return_JOmDKLp["null"]=true;
            return return_JOmDKLp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_WKjIpap=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_UylCBuw=json({});
    
        if (name.pDeviceIndices==NULL){
            return_UylCBuw["null"]=true;
            return return_UylCBuw;
        }
        
        return_UylCBuw["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_skHrdaE=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_UylCBuw["members"][std::to_string(i)].push_back(temp);
        }
        return return_UylCBuw;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IhbtbRD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IhbtbRD=NULL;
        }
    temp_IhbtbRD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IhbtbRD;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_frXgmZW;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_frXgmZW=NULL;
        }
    temp_frXgmZW=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int SpcZufz=0; SpcZufz < result.deviceIndexCount; SpcZufz++){
            [&]() {
temp_frXgmZW[SpcZufz]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][SpcZufz]);}();;
        }
        }();result.pDeviceIndices=temp_frXgmZW;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AKIKCzm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mOIGdcT=json({});
    
        if (name.pNext==NULL){
            return_mOIGdcT["null"]=true;
            return return_mOIGdcT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_zvUMrEA=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_XVuxdiK=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_SMvltyC=json({});
    return_SMvltyC=[&]() {
    json return_ZRrEWjS=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_SMvltyC;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NySlpSi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NySlpSi=NULL;
        }
    temp_NySlpSi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NySlpSi;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ULtASSs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_plejqDL=json({});
    
        if (name.pNext==NULL){
            return_plejqDL["null"]=true;
            return return_plejqDL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_OISqSYZ=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_dmjieDT=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_tTLlEHf=json({});
    return_tTLlEHf=[&]() {
    json return_mZjZctV=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_tTLlEHf;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QvGWDAG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QvGWDAG=NULL;
        }
    temp_QvGWDAG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QvGWDAG;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iOkWbTs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KuOWDMr=json({});
    
        if (name.pNext==NULL){
            return_KuOWDMr["null"]=true;
            return return_KuOWDMr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_TxYVsET=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_SLSzzML=json({});
    
        if (name.pDeviceIndices==NULL){
            return_SLSzzML["null"]=true;
            return return_SLSzzML;
        }
        
        return_SLSzzML["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_GBwqwTu=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_SLSzzML["members"][std::to_string(i)].push_back(temp);
        }
        return return_SLSzzML;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_jTtBXVm=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_VMXIPiP=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_VMXIPiP["null"]=true;
            return return_VMXIPiP;
        }
        
        return_VMXIPiP["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_lczknsA=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_VMXIPiP["members"][std::to_string(i)].push_back(temp);
        }
        return return_VMXIPiP;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QGmBNaD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QGmBNaD=NULL;
        }
    temp_QGmBNaD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QGmBNaD;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_ZrPqoSU;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_ZrPqoSU=NULL;
        }
    temp_ZrPqoSU=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int SqtMtpD=0; SqtMtpD < result.deviceIndexCount; SqtMtpD++){
            [&]() {
temp_ZrPqoSU[SqtMtpD]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][SqtMtpD]);}();;
        }
        }();result.pDeviceIndices=temp_ZrPqoSU;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_EgGruzJ;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_EgGruzJ=NULL;
        }
    temp_EgGruzJ=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int Fazuudw=0; Fazuudw < result.splitInstanceBindRegionCount; Fazuudw++){
            [&]() {
temp_EgGruzJ[Fazuudw]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][Fazuudw]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_EgGruzJ;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uMLxePJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMnihHC=json({});
    
        if (name.pNext==NULL){
            return_PMnihHC["null"]=true;
            return return_PMnihHC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_QshDMKc=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_BwZtDpc=json({});
    
        if (name.pDeviceIndices==NULL){
            return_BwZtDpc["null"]=true;
            return return_BwZtDpc;
        }
        
        return_BwZtDpc["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_jzgcani=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_BwZtDpc["members"][std::to_string(i)].push_back(temp);
        }
        return return_BwZtDpc;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_galfuRJ=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_AEFolos=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_AEFolos["null"]=true;
            return return_AEFolos;
        }
        
        return_AEFolos["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_PtaGkaS=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_AEFolos["members"][std::to_string(i)].push_back(temp);
        }
        return return_AEFolos;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YGiHbHR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YGiHbHR=NULL;
        }
    temp_YGiHbHR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YGiHbHR;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_kvBqHjH;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_kvBqHjH=NULL;
        }
    temp_kvBqHjH=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int tVASmws=0; tVASmws < result.deviceIndexCount; tVASmws++){
            [&]() {
temp_kvBqHjH[tVASmws]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][tVASmws]);}();;
        }
        }();result.pDeviceIndices=temp_kvBqHjH;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_KUYRRWE;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_KUYRRWE=NULL;
        }
    temp_KUYRRWE=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int hEnyTsS=0; hEnyTsS < result.splitInstanceBindRegionCount; hEnyTsS++){
            [&]() {
temp_KUYRRWE[hEnyTsS]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][hEnyTsS]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_KUYRRWE;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_amoDcmP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nEfVYyu=json({});
    
        if (name.pNext==NULL){
            return_nEfVYyu["null"]=true;
            return return_nEfVYyu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_vhijcxt=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_swkJTuM=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_JAJBnlu=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_JAJBnlu["null"]=true;
            return return_JAJBnlu;
        }
        
        return_JAJBnlu["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_sNiBSxD=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_JAJBnlu["members"][std::to_string(i)].push_back(temp);
        }
        return return_JAJBnlu;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DmMayRX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DmMayRX=NULL;
        }
    temp_DmMayRX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DmMayRX;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_WUqeRDH;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_WUqeRDH=NULL;
        }
    temp_WUqeRDH=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int tmnuRXg=0; tmnuRXg < result.deviceRenderAreaCount; tmnuRXg++){
            [&]() {
temp_WUqeRDH[tmnuRXg]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][tmnuRXg]);}();;
        }
        }();result.pDeviceRenderAreas=temp_WUqeRDH;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_alnBeJr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LjvBxEV=json({});
    
        if (name.pNext==NULL){
            return_LjvBxEV["null"]=true;
            return return_LjvBxEV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_IDAIKdb=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_ISTdirH=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_GErHRAs=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_GErHRAs["null"]=true;
            return return_GErHRAs;
        }
        
        return_GErHRAs["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_KWghCmn=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_GErHRAs["members"][std::to_string(i)].push_back(temp);
        }
        return return_GErHRAs;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wKdkmSU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wKdkmSU=NULL;
        }
    temp_wKdkmSU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wKdkmSU;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_rvEcPqU;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_rvEcPqU=NULL;
        }
    temp_rvEcPqU=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int KnBBKbs=0; KnBBKbs < result.deviceRenderAreaCount; KnBBKbs++){
            [&]() {
temp_rvEcPqU[KnBBKbs]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][KnBBKbs]);}();;
        }
        }();result.pDeviceRenderAreas=temp_rvEcPqU;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rqnOEyz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PuLRYja=json({});
    
        if (name.pNext==NULL){
            return_PuLRYja["null"]=true;
            return return_PuLRYja;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_GjQGCwW=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fUSZmoi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fUSZmoi=NULL;
        }
    temp_fUSZmoi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fUSZmoi;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HpPwbLE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VKeefqD=json({});
    
        if (name.pNext==NULL){
            return_VKeefqD["null"]=true;
            return return_VKeefqD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_VxjWviW=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zlmMvie;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zlmMvie=NULL;
        }
    temp_zlmMvie=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zlmMvie;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bOYNkNv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QouNuLC=json({});
    
        if (name.pNext==NULL){
            return_QouNuLC["null"]=true;
            return return_QouNuLC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_EQArVax=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_mVrDyNJ=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_mVrDyNJ["null"]=true;
            return return_mVrDyNJ;
        }
        
        return_mVrDyNJ["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_JhCLATs=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_mVrDyNJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_mVrDyNJ;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_NSjhyUf=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_riwTRKr=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_riwTRKr["null"]=true;
            return return_riwTRKr;
        }
        
        return_riwTRKr["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_zThkRPY=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_riwTRKr["members"][std::to_string(i)].push_back(temp);
        }
        return return_riwTRKr;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_tvHjcKp=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_vNmxnOO=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_vNmxnOO["null"]=true;
            return return_vNmxnOO;
        }
        
        return_vNmxnOO["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_pRgWRLt=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_vNmxnOO["members"][std::to_string(i)].push_back(temp);
        }
        return return_vNmxnOO;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RrdzjZY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RrdzjZY=NULL;
        }
    temp_RrdzjZY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RrdzjZY;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_zInOAVX;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_zInOAVX=NULL;
        }
    temp_zInOAVX=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int IUKKRPK=0; IUKKRPK < result.waitSemaphoreCount; IUKKRPK++){
            [&]() {
temp_zInOAVX[IUKKRPK]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][IUKKRPK]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_zInOAVX;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_xsOorVq;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_xsOorVq=NULL;
        }
    temp_xsOorVq=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int NbPQbWb=0; NbPQbWb < result.commandBufferCount; NbPQbWb++){
            [&]() {
temp_xsOorVq[NbPQbWb]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][NbPQbWb]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_xsOorVq;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_tuhDZuq;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_tuhDZuq=NULL;
        }
    temp_tuhDZuq=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int JvTlgOr=0; JvTlgOr < result.signalSemaphoreCount; JvTlgOr++){
            [&]() {
temp_tuhDZuq[JvTlgOr]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][JvTlgOr]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_tuhDZuq;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xiogNyC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aKHubBd=json({});
    
        if (name.pNext==NULL){
            return_aKHubBd["null"]=true;
            return return_aKHubBd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_GdUaiEB=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_nBGCIWx=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_nBGCIWx["null"]=true;
            return return_nBGCIWx;
        }
        
        return_nBGCIWx["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_zKtHSqJ=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_nBGCIWx["members"][std::to_string(i)].push_back(temp);
        }
        return return_nBGCIWx;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_GiogVEu=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_enoWzuF=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_enoWzuF["null"]=true;
            return return_enoWzuF;
        }
        
        return_enoWzuF["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_FetaEvk=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_enoWzuF["members"][std::to_string(i)].push_back(temp);
        }
        return return_enoWzuF;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_yoFfUzi=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_cOpVTZH=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_cOpVTZH["null"]=true;
            return return_cOpVTZH;
        }
        
        return_cOpVTZH["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_KiYqUgC=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_cOpVTZH["members"][std::to_string(i)].push_back(temp);
        }
        return return_cOpVTZH;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OsEFCis;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OsEFCis=NULL;
        }
    temp_OsEFCis=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OsEFCis;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_WKXIMds;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_WKXIMds=NULL;
        }
    temp_WKXIMds=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int pPriRuV=0; pPriRuV < result.waitSemaphoreCount; pPriRuV++){
            [&]() {
temp_WKXIMds[pPriRuV]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][pPriRuV]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_WKXIMds;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_YfxNOZZ;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_YfxNOZZ=NULL;
        }
    temp_YfxNOZZ=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int avJTjci=0; avJTjci < result.commandBufferCount; avJTjci++){
            [&]() {
temp_YfxNOZZ[avJTjci]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][avJTjci]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_YfxNOZZ;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_UhEbLfz;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_UhEbLfz=NULL;
        }
    temp_UhEbLfz=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int cNSfWcQ=0; cNSfWcQ < result.signalSemaphoreCount; cNSfWcQ++){
            [&]() {
temp_UhEbLfz[cNSfWcQ]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][cNSfWcQ]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_UhEbLfz;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AIlstCL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KZCJGOc=json({});
    
        if (name.pNext==NULL){
            return_KZCJGOc["null"]=true;
            return return_KZCJGOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_sHTHkmE=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_nSWOACn=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YmOwjjp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YmOwjjp=NULL;
        }
    temp_YmOwjjp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YmOwjjp;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ACkTMCr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JmBNnHn=json({});
    
        if (name.pNext==NULL){
            return_JmBNnHn["null"]=true;
            return return_JmBNnHn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_HBpELHr=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_SvVpeNx=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FBSZyGl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FBSZyGl=NULL;
        }
    temp_FBSZyGl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FBSZyGl;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gsImJIT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UWPUvZp=json({});
    
        if (name.pNext==NULL){
            return_UWPUvZp["null"]=true;
            return return_UWPUvZp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMask"]=[&]() {
    json return_zyiCmVV=json({});
    
        return_zyiCmVV["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_OdxxiNI=json({});
    return serialize_uint32_t(name.presentMask[i]);}();
            return_zyiCmVV["members"][std::to_string(i)].push_back(temp);
        }
        return return_zyiCmVV;
        }();
result["members"]["modes"]=[&]() {
    json return_AklvnLY=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int VHpRIie=0; VHpRIie < VK_MAX_DEVICE_GROUP_SIZE; VHpRIie++){
            [&]() {
result.presentMask[VHpRIie]=deserialize_uint32_t(name["members"]["presentMask"]["members"][VHpRIie]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yYPaIqH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HsvYFlF=json({});
    
        if (name.pNext==NULL){
            return_HsvYFlF["null"]=true;
            return return_HsvYFlF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_apggGnS=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YhDdxpy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YhDdxpy=NULL;
        }
    temp_YhDdxpy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YhDdxpy;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bbFxMhK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_doNzGqX=json({});
    
        if (name.pNext==NULL){
            return_doNzGqX["null"]=true;
            return return_doNzGqX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_iQpwOmT=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_Rnmphwi=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hknFesK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hknFesK=NULL;
        }
    temp_hknFesK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hknFesK;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CXVOBFb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HMJZbyO=json({});
    
        if (name.pNext==NULL){
            return_HMJZbyO["null"]=true;
            return return_HMJZbyO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_LnwxFMD=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_nodsdsh=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_GCLglMp=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_qylwkOQ=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_XanjIcF=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MQGrGpb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MQGrGpb=NULL;
        }
    temp_MQGrGpb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MQGrGpb;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PLirGWT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KEmRVmw=json({});
    
        if (name.pNext==NULL){
            return_KEmRVmw["null"]=true;
            return return_KEmRVmw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_bNEjDkH=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_ZJxWdEI=json({});
    
        if (name.pDeviceMasks==NULL){
            return_ZJxWdEI["null"]=true;
            return return_ZJxWdEI;
        }
        
        return_ZJxWdEI["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_ALuNRrZ=json({});
    return serialize_uint32_t(name.pDeviceMasks[i]);}();
            return_ZJxWdEI["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZJxWdEI;
        }();
result["members"]["mode"]=[&]() {
    json return_qSoOuyO=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MadsmUj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MadsmUj=NULL;
        }
    temp_MadsmUj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MadsmUj;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_blGRwfS;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_blGRwfS=NULL;
        }
    temp_blGRwfS=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int ETltqZG=0; ETltqZG < result.swapchainCount; ETltqZG++){
            [&]() {
temp_blGRwfS[ETltqZG]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][ETltqZG]);}();;
        }
        }();result.pDeviceMasks=temp_blGRwfS;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xmFNdLg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gznQdWc=json({});
    
        if (name.pNext==NULL){
            return_gznQdWc["null"]=true;
            return return_gznQdWc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_WFyCIEY=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_hWmtFlm=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_hWmtFlm["null"]=true;
            return return_hWmtFlm;
        }
        
        return_hWmtFlm["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_oKDXwtY=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_hWmtFlm["members"][std::to_string(i)].push_back(temp);
        }
        return return_hWmtFlm;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bNPgToq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bNPgToq=NULL;
        }
    temp_bNPgToq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bNPgToq;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_kMVZBCH;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_kMVZBCH=NULL;
        }
    temp_kMVZBCH=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int gAspkVz=0; gAspkVz < result.physicalDeviceCount; gAspkVz++){
            [&]() {
temp_kMVZBCH[gAspkVz]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][gAspkVz]);}();;
        }
        }();result.pPhysicalDevices=temp_kMVZBCH;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PEGYcHl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBfFEZb=json({});
    
        if (name.pNext==NULL){
            return_cBfFEZb["null"]=true;
            return return_cBfFEZb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_IWMxNuw=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_bkSiZFk=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_bkSiZFk["null"]=true;
            return return_bkSiZFk;
        }
        
        return_bkSiZFk["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_ghuNuHY=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_bkSiZFk["members"][std::to_string(i)].push_back(temp);
        }
        return return_bkSiZFk;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZoYWjIa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZoYWjIa=NULL;
        }
    temp_ZoYWjIa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZoYWjIa;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_WDzUquo;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_WDzUquo=NULL;
        }
    temp_WDzUquo=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int Rsqxoga=0; Rsqxoga < result.physicalDeviceCount; Rsqxoga++){
            [&]() {
temp_WDzUquo[Rsqxoga]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][Rsqxoga]);}();;
        }
        }();result.pPhysicalDevices=temp_WDzUquo;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QRrJXIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WRxOrOK=json({});
    
        if (name.pNext==NULL){
            return_WRxOrOK["null"]=true;
            return return_WRxOrOK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["modes"]=[&]() {
    json return_KNrmrfe=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FHEEVaU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FHEEVaU=NULL;
        }
    temp_FHEEVaU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FHEEVaU;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_BhPJMzw=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_ubRVUMf=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_HClHqCp=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_yeSoBSE=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_cgCyCzO=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_GfpAUEP=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_uwvyyRr=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_fKybWgp=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_teLKZOw=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_MkhmZEr=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_AdUKLkM=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_LITErAo=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RUqYtZk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mhfNWru=json({});
    
        if (name.pNext==NULL){
            return_mhfNWru["null"]=true;
            return return_mhfNWru;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nSiGdmU=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_BmhbLjs=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_ABSrFPi=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_ABSrFPi["null"]=true;
            return return_ABSrFPi;
        }
        
        return_ABSrFPi["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_TINAgym=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_ABSrFPi["members"][std::to_string(i)].push_back(temp);
        }
        return return_ABSrFPi;
        }();
result["members"]["templateType"]=[&]() {
    json return_IvWcNFh=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_SYuGBBd=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_QjwZHFD=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_crPPewt=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_muzZGnp=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XRVMvhc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XRVMvhc=NULL;
        }
    temp_XRVMvhc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XRVMvhc;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_wFAyOWy;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_wFAyOWy=NULL;
        }
    temp_wFAyOWy=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int RBVKBsh=0; RBVKBsh < result.descriptorUpdateEntryCount; RBVKBsh++){
            [&]() {
temp_wFAyOWy[RBVKBsh]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][RBVKBsh]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_wFAyOWy;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DaTQNLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oMGsXWV=json({});
    
        if (name.pNext==NULL){
            return_oMGsXWV["null"]=true;
            return return_oMGsXWV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nHaJdqV=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_FmCGzfQ=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_OLUEEMh=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_OLUEEMh["null"]=true;
            return return_OLUEEMh;
        }
        
        return_OLUEEMh["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_vtpbMgl=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_OLUEEMh["members"][std::to_string(i)].push_back(temp);
        }
        return return_OLUEEMh;
        }();
result["members"]["templateType"]=[&]() {
    json return_BsPpUfr=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_gjxKnUu=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_KWYSXiI=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_jpRlnwD=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_qLCvAvZ=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BEexxdn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BEexxdn=NULL;
        }
    temp_BEexxdn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BEexxdn;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_LShTlvC;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_LShTlvC=NULL;
        }
    temp_LShTlvC=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int tcqKOis=0; tcqKOis < result.descriptorUpdateEntryCount; tcqKOis++){
            [&]() {
temp_LShTlvC[tcqKOis]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][tcqKOis]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_LShTlvC;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_tYsdKSJ=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_qsCiESY=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XGHTiQL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jzXtEiW=json({});
    
        if (name.pNext==NULL){
            return_jzXtEiW["null"]=true;
            return return_jzXtEiW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentId"]=[&]() {
    json return_bWgQIvV=json({});
    return_bWgQIvV=[&]() {
    json return_AYkVOeJ=json({});
    return serialize_uint32_t(name.presentId);}();return return_bWgQIvV;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oYrAtwJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TmqXGYo=json({});
    
        if (name.pNext==NULL){
            return_TmqXGYo["null"]=true;
            return return_TmqXGYo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_xTNhODC=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_lEODGiv=json({});
    
        if (name.pPresentIds==NULL){
            return_lEODGiv["null"]=true;
            return return_lEODGiv;
        }
        
        return_lEODGiv["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_OSkKkfC=json({});
    return serialize_uint64_t(name.pPresentIds[i]);}();
            return_lEODGiv["members"][std::to_string(i)].push_back(temp);
        }
        return return_lEODGiv;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sFEzYXH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sFEzYXH=NULL;
        }
    temp_sFEzYXH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sFEzYXH;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_ZcaMyUV;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_ZcaMyUV=NULL;
        }
    temp_ZcaMyUV=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int fASwYAQ=0; fASwYAQ < result.swapchainCount; fASwYAQ++){
            [&]() {
temp_ZcaMyUV[fASwYAQ]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][fASwYAQ]);}();;
        }
        }();result.pPresentIds=temp_ZcaMyUV;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qvqjpfz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BngOymS=json({});
    
        if (name.pNext==NULL){
            return_BngOymS["null"]=true;
            return return_BngOymS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentWait"]=[&]() {
    json return_xFWJSVu=json({});
    return_xFWJSVu=[&]() {
    json return_qrMglSw=json({});
    return serialize_uint32_t(name.presentWait);}();return return_xFWJSVu;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FOwENnB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nqTStJN=json({});
    
        if (name.pNext==NULL){
            return_nqTStJN["null"]=true;
            return return_nqTStJN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_sdfnpJG=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_IqsLOEl=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_MFKTfuF=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_JODuMbm=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_jgixNzh=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_wmEsgGB=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_laZGcGA=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_kEkhQIZ=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gFArGDg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gFArGDg=NULL;
        }
    temp_gFArGDg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gFArGDg;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SxprKob=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JtGSuzN=json({});
    
        if (name.pNext==NULL){
            return_JtGSuzN["null"]=true;
            return return_JtGSuzN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_sNfzJdy=json({});
    return_sNfzJdy=[&]() {
    json return_FbCecvv=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_sNfzJdy;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zTfahrv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TPBuXLK=json({});
    
        if (name.pNext==NULL){
            return_TPBuXLK["null"]=true;
            return return_TPBuXLK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_WzXVfKd=json({});
    return_WzXVfKd=[&]() {
    json return_ZhaORik=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_WzXVfKd;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mgrbSTC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mgrbSTC=NULL;
        }
    temp_mgrbSTC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mgrbSTC;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_FYpemmw=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_CWRlccr=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_GjMsANZ=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_dYysRSX=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_LObyiDd=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_nifMYNv=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ilXaRTF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LdGovRO=json({});
    
        if (name.pNext==NULL){
            return_LdGovRO["null"]=true;
            return return_LdGovRO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_hfOfKIi=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_zcwsGpC=json({});
    
        if (name.pTimes==NULL){
            return_zcwsGpC["null"]=true;
            return return_zcwsGpC;
        }
        
        return_zcwsGpC["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_glruOVc=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[i]);}();
            return_zcwsGpC["members"][std::to_string(i)].push_back(temp);
        }
        return return_zcwsGpC;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HdfPmdO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HdfPmdO=NULL;
        }
    temp_HdfPmdO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HdfPmdO;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_vUBcEsN;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_vUBcEsN=NULL;
        }
    temp_vUBcEsN=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int ikloQdK=0; ikloQdK < result.swapchainCount; ikloQdK++){
            [&]() {
temp_vUBcEsN[ikloQdK]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][ikloQdK]);}();;
        }
        }();result.pTimes=temp_vUBcEsN;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_sadKNek=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_sVYqMjQ=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_vPKgfUV=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_uuTAuwx=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPhQibr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OcfOWjq=json({});
    
        if (name.pNext==NULL){
            return_OcfOWjq["null"]=true;
            return return_OcfOWjq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_AGFiXnV=json({});
    return_AGFiXnV=[&]() {
    json return_qhvtVKm=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_AGFiXnV;}();
result["members"]["viewportCount"]=[&]() {
    json return_tNHRcPT=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_CJnpKSq=json({});
    
        if (name.pViewportWScalings==NULL){
            return_CJnpKSq["null"]=true;
            return return_CJnpKSq;
        }
        
        return_CJnpKSq["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_LTjZUEM=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[i]);}();
            return_CJnpKSq["members"][std::to_string(i)].push_back(temp);
        }
        return return_CJnpKSq;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_izdcFUY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_izdcFUY=NULL;
        }
    temp_izdcFUY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_izdcFUY;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_ikgOHit;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_ikgOHit=NULL;
        }
    temp_ikgOHit=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int IDxVcUF=0; IDxVcUF < result.viewportCount; IDxVcUF++){
            [&]() {
temp_ikgOHit[IDxVcUF]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][IDxVcUF]);}();;
        }
        }();result.pViewportWScalings=temp_ikgOHit;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_fRDEDHY=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_qVTHVnq=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_kBMZAfh=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_QJtdmFO=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sjCVKsj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNCnXnO=json({});
    
        if (name.pNext==NULL){
            return_SNCnXnO["null"]=true;
            return return_SNCnXnO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uzrTvTD=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_RwfSzLF=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_QlpzNMC=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_QlpzNMC["null"]=true;
            return return_QlpzNMC;
        }
        
        return_QlpzNMC["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_kdQmhau=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[i]);}();
            return_QlpzNMC["members"][std::to_string(i)].push_back(temp);
        }
        return return_QlpzNMC;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RtnOtwc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RtnOtwc=NULL;
        }
    temp_RtnOtwc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RtnOtwc;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_heRYSki;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_heRYSki=NULL;
        }
    temp_heRYSki=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int mSHkaCP=0; mSHkaCP < result.viewportCount; mSHkaCP++){
            [&]() {
temp_heRYSki[mSHkaCP]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][mSHkaCP]);}();;
        }
        }();result.pViewportSwizzles=temp_heRYSki;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ClIBKlH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UfZFExn=json({});
    
        if (name.pNext==NULL){
            return_UfZFExn["null"]=true;
            return return_UfZFExn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_JePQOgR=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XBngSyB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xdCmMUd=json({});
    
        if (name.pNext==NULL){
            return_xdCmMUd["null"]=true;
            return return_xdCmMUd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PCqpYTg=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_ovLTKas=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_mcuQozO=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_dkghrea=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_dkghrea["null"]=true;
            return return_dkghrea;
        }
        
        return_dkghrea["members"]={};
        for(int i=0; i < name.discardRectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_dnYQDVF=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[i]);}();
            return_dkghrea["members"][std::to_string(i)].push_back(temp);
        }
        return return_dkghrea;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IAUpyfH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IAUpyfH=NULL;
        }
    temp_IAUpyfH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IAUpyfH;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_oslfiuA;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_oslfiuA=NULL;
        }
    temp_oslfiuA=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int qymSQaQ=0; qymSQaQ < result.discardRectangleCount; qymSQaQ++){
            [&]() {
temp_oslfiuA[qymSQaQ]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][qymSQaQ]);}();;
        }
        }();result.pDiscardRectangles=temp_oslfiuA;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kDYfpMa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RrnFRvh=json({});
    
        if (name.pNext==NULL){
            return_RrnFRvh["null"]=true;
            return return_RrnFRvh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_MbhAQJA=json({});
    return_MbhAQJA=[&]() {
    json return_IxLokce=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_MbhAQJA;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_oRPtvcR=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_cYSZzRD=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_dDKbydh=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_kAZKnMU=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_yFsrchW=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_jufQBQp=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HupsuMZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bLZZYWf=json({});
    
        if (name.pNext==NULL){
            return_bLZZYWf["null"]=true;
            return return_bLZZYWf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_puoprSg=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_sphBKft=json({});
    
        if (name.pAspectReferences==NULL){
            return_sphBKft["null"]=true;
            return return_sphBKft;
        }
        
        return_sphBKft["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_uSYSYuE=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_sphBKft["members"][std::to_string(i)].push_back(temp);
        }
        return return_sphBKft;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tYUfVjg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tYUfVjg=NULL;
        }
    temp_tYUfVjg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tYUfVjg;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_fDBlDja;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_fDBlDja=NULL;
        }
    temp_fDBlDja=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int dBsfuFO=0; dBsfuFO < result.aspectReferenceCount; dBsfuFO++){
            [&]() {
temp_fDBlDja[dBsfuFO]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][dBsfuFO]);}();;
        }
        }();result.pAspectReferences=temp_fDBlDja;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dEqdTCK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CuuFwVB=json({});
    
        if (name.pNext==NULL){
            return_CuuFwVB["null"]=true;
            return return_CuuFwVB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_WBnTHRU=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_LCgTraF=json({});
    
        if (name.pAspectReferences==NULL){
            return_LCgTraF["null"]=true;
            return return_LCgTraF;
        }
        
        return_LCgTraF["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_zcxgORH=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_LCgTraF["members"][std::to_string(i)].push_back(temp);
        }
        return return_LCgTraF;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zrEGiSd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zrEGiSd=NULL;
        }
    temp_zrEGiSd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zrEGiSd;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_UjiZquw;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_UjiZquw=NULL;
        }
    temp_UjiZquw=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int pJmyjlo=0; pJmyjlo < result.aspectReferenceCount; pJmyjlo++){
            [&]() {
temp_UjiZquw[pJmyjlo]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][pJmyjlo]);}();;
        }
        }();result.pAspectReferences=temp_UjiZquw;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ScosxAQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wHKSozh=json({});
    
        if (name.pNext==NULL){
            return_wHKSozh["null"]=true;
            return return_wHKSozh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surface"]=[&]() {
    json return_TlEWZfd=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cBXYwSF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cBXYwSF=NULL;
        }
    temp_cBXYwSF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cBXYwSF;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pYRYuhj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VOrdaBB=json({});
    
        if (name.pNext==NULL){
            return_VOrdaBB["null"]=true;
            return return_VOrdaBB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_SQqIeVF=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TWUEWit=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ErHFPat=json({});
    
        if (name.pNext==NULL){
            return_ErHFPat["null"]=true;
            return return_ErHFPat;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceFormat"]=[&]() {
    json return_emsGGOE=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_STwDNuf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JKaQVfS=json({});
    
        if (name.pNext==NULL){
            return_JKaQVfS["null"]=true;
            return return_JKaQVfS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayProperties"]=[&]() {
    json return_HolxJAh=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fJdcEdB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AOmbMWq=json({});
    
        if (name.pNext==NULL){
            return_AOmbMWq["null"]=true;
            return return_AOmbMWq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_YOQRZtn=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mePdMJr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QJOgtGB=json({});
    
        if (name.pNext==NULL){
            return_QJOgtGB["null"]=true;
            return return_QJOgtGB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayModeProperties"]=[&]() {
    json return_JwtdjOp=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gyjGEBK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eRjxnfl=json({});
    
        if (name.pNext==NULL){
            return_eRjxnfl["null"]=true;
            return return_eRjxnfl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_RzUWglW=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_AfqMdmc=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kRJSbOA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kRJSbOA=NULL;
        }
    temp_kRJSbOA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kRJSbOA;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DfbqsWF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yRPaVBo=json({});
    
        if (name.pNext==NULL){
            return_yRPaVBo["null"]=true;
            return return_yRPaVBo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["capabilities"]=[&]() {
    json return_QUmohTQ=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VMEXPZM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EKFxPhS=json({});
    
        if (name.pNext==NULL){
            return_EKFxPhS["null"]=true;
            return return_EKFxPhS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_tzddFWM=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_STfxfPx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NfSOjOK=json({});
    
        if (name.pNext==NULL){
            return_NfSOjOK["null"]=true;
            return return_NfSOjOK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_jeEBPPe=json({});
    return_jeEBPPe=[&]() {
    json return_wdhlsNB=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_jeEBPPe;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_guFDNUE=json({});
    return_guFDNUE=[&]() {
    json return_JhGxOzt=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_guFDNUE;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_ocdvzGM=json({});
    return_ocdvzGM=[&]() {
    json return_iEENBmG=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_ocdvzGM;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_RUrWBjO=json({});
    return_RUrWBjO=[&]() {
    json return_nbBTqAK=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_RUrWBjO;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sZdsEms=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OoJnxBU=json({});
    
        if (name.pNext==NULL){
            return_OoJnxBU["null"]=true;
            return return_OoJnxBU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_hXsdhRm=json({});
    return_hXsdhRm=[&]() {
    json return_VmKAmXY=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_hXsdhRm;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_AzWCjtm=json({});
    return_AzWCjtm=[&]() {
    json return_XkjXTSZ=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_AzWCjtm;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_XTjWGdY=json({});
    return_XTjWGdY=[&]() {
    json return_MHINgPH=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_XTjWGdY;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_TXCNJZk=json({});
    return_TXCNJZk=[&]() {
    json return_ksSoYBU=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_TXCNJZk;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qQUjgmH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YbTviby=json({});
    
        if (name.pNext==NULL){
            return_YbTviby["null"]=true;
            return return_YbTviby;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSize"]=[&]() {
    json return_RKLIsql=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_MuvSkUW=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_kuCwobR=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_WdTMtpb=json({});
    return_WdTMtpb=[&]() {
    json return_QfKpRAk=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_WdTMtpb;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kVILNdO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SuAwtiV=json({});
    
        if (name.pNext==NULL){
            return_SuAwtiV["null"]=true;
            return return_SuAwtiV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_rIWsvfa=json({});
    return_rIWsvfa=[&]() {
    json return_aTfrdSr=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_rIWsvfa;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NNRblRN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EhyyHKS=json({});
    
        if (name.pNext==NULL){
            return_EhyyHKS["null"]=true;
            return return_EhyyHKS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_IPcHBii=json({});
    return_IPcHBii=[&]() {
    json return_eiOljwZ=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_IPcHBii;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pwguDFw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QTKrNHO=json({});
    
        if (name.pNext==NULL){
            return_QTKrNHO["null"]=true;
            return return_QTKrNHO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_OLcMXuF=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rbxZfRD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rbxZfRD=NULL;
        }
    temp_rbxZfRD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rbxZfRD;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_stwTGiS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yaQbaOE=json({});
    
        if (name.pNext==NULL){
            return_yaQbaOE["null"]=true;
            return return_yaQbaOE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_nyHjRNy=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ahfIUUP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ahfIUUP=NULL;
        }
    temp_ahfIUUP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ahfIUUP;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cQZxUra=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WBwYAzg=json({});
    
        if (name.pNext==NULL){
            return_WBwYAzg["null"]=true;
            return return_WBwYAzg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_UWzGTEL=json({});
    
        if (name.pCreateInfo==NULL){
            return_UWzGTEL["null"]=true;
            return return_UWzGTEL;
        }
        return_UWzGTEL=[&]() {
    json return_PabCwWG=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_UWzGTEL;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IkvCHRK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IkvCHRK=NULL;
        }
    temp_IkvCHRK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IkvCHRK;}();
[&]() {
VkBufferCreateInfo* temp_JvAarHk;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_JvAarHk=NULL;
        }
    [&]() {
*(temp_JvAarHk)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_JvAarHk;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLMcrOV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FpUkrkV=json({});
    
        if (name.pNext==NULL){
            return_FpUkrkV["null"]=true;
            return return_FpUkrkV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_GQjJBUT=json({});
    
        if (name.pCreateInfo==NULL){
            return_GQjJBUT["null"]=true;
            return return_GQjJBUT;
        }
        return_GQjJBUT=[&]() {
    json return_kleipMu=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_GQjJBUT;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UqVXkFP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UqVXkFP=NULL;
        }
    temp_UqVXkFP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UqVXkFP;}();
[&]() {
VkBufferCreateInfo* temp_vDRNQTe;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_vDRNQTe=NULL;
        }
    [&]() {
*(temp_vDRNQTe)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_vDRNQTe;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ftqMfxB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qrKLxcv=json({});
    
        if (name.pNext==NULL){
            return_qrKLxcv["null"]=true;
            return return_qrKLxcv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_LSjRkgc=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gLcrhJn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gLcrhJn=NULL;
        }
    temp_gLcrhJn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gLcrhJn;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cESOxKL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CQgbXIH=json({});
    
        if (name.pNext==NULL){
            return_CQgbXIH["null"]=true;
            return return_CQgbXIH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_qGOaAKd=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YvrscWK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YvrscWK=NULL;
        }
    temp_YvrscWK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YvrscWK;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wkOmILL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fgjyvUD=json({});
    
        if (name.pNext==NULL){
            return_fgjyvUD["null"]=true;
            return return_fgjyvUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_iuNCVXN=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DeiQHuJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DeiQHuJ=NULL;
        }
    temp_DeiQHuJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DeiQHuJ;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AJFeNtD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nfOzSCj=json({});
    
        if (name.pNext==NULL){
            return_nfOzSCj["null"]=true;
            return return_nfOzSCj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_mkYihwz=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_efmhzXp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_efmhzXp=NULL;
        }
    temp_efmhzXp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_efmhzXp;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DREjyIO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DFyHHzX=json({});
    
        if (name.pNext==NULL){
            return_DFyHHzX["null"]=true;
            return return_DFyHHzX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_anuPYmb=json({});
    
        if (name.pCreateInfo==NULL){
            return_anuPYmb["null"]=true;
            return return_anuPYmb;
        }
        return_anuPYmb=[&]() {
    json return_nEhgXre=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_anuPYmb;}();
result["members"]["planeAspect"]=[&]() {
    json return_QlOBcaQ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xOkOUeF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xOkOUeF=NULL;
        }
    temp_xOkOUeF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xOkOUeF;}();
[&]() {
VkImageCreateInfo* temp_mkuNYut;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_mkuNYut=NULL;
        }
    [&]() {
*(temp_mkuNYut)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_mkuNYut;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hwmDZBF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ugHbGvq=json({});
    
        if (name.pNext==NULL){
            return_ugHbGvq["null"]=true;
            return return_ugHbGvq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_rAQUZjC=json({});
    
        if (name.pCreateInfo==NULL){
            return_rAQUZjC["null"]=true;
            return return_rAQUZjC;
        }
        return_rAQUZjC=[&]() {
    json return_QOcwPku=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_rAQUZjC;}();
result["members"]["planeAspect"]=[&]() {
    json return_RSxyIPc=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sozrPNk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sozrPNk=NULL;
        }
    temp_sozrPNk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sozrPNk;}();
[&]() {
VkImageCreateInfo* temp_QZcbBeP;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_QZcbBeP=NULL;
        }
    [&]() {
*(temp_QZcbBeP)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_QZcbBeP;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EjnVaJm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NIVeikR=json({});
    
        if (name.pNext==NULL){
            return_NIVeikR["null"]=true;
            return return_NIVeikR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_ZULAoel=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QayJKkT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_McuteIk=json({});
    
        if (name.pNext==NULL){
            return_McuteIk["null"]=true;
            return return_McuteIk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_hpgrCAW=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_srAWoIj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xOwpjJU=json({});
    
        if (name.pNext==NULL){
            return_xOwpjJU["null"]=true;
            return return_xOwpjJU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_xDVnwEr=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tAAiubK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nKcSYTM=json({});
    
        if (name.pNext==NULL){
            return_nKcSYTM["null"]=true;
            return return_nKcSYTM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_pBjKRWf=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jmextwh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gHFphWj=json({});
    
        if (name.pNext==NULL){
            return_gHFphWj["null"]=true;
            return return_gHFphWj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_IcstVCl=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ayiZDwF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mMtEFbx=json({});
    
        if (name.pNext==NULL){
            return_mMtEFbx["null"]=true;
            return return_mMtEFbx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_IgvbsXR=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hVNaFhv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UhTiaio=json({});
    
        if (name.pNext==NULL){
            return_UhTiaio["null"]=true;
            return return_UhTiaio;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_fEgBQYI=json({});
    return_fEgBQYI=[&]() {
    json return_OlhzJxR=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_fEgBQYI;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_vYSfDHq=json({});
    return_vYSfDHq=[&]() {
    json return_gBrQdAN=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_vYSfDHq;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GjiFhku=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pIxxeeH=json({});
    
        if (name.pNext==NULL){
            return_pIxxeeH["null"]=true;
            return return_pIxxeeH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_UNQPJxH=json({});
    return_UNQPJxH=[&]() {
    json return_oUWcBQp=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_UNQPJxH;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_UqwuvZf=json({});
    return_UqwuvZf=[&]() {
    json return_blRGxvi=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_UqwuvZf;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WqMDtjx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bOEDFRm=json({});
    
        if (name.pNext==NULL){
            return_bOEDFRm["null"]=true;
            return return_bOEDFRm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_PEohMHE=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_RqdCoFn=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vwCHbdA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vwCHbdA=NULL;
        }
    temp_vwCHbdA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vwCHbdA;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qvmghrm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zSMMrNi=json({});
    
        if (name.pNext==NULL){
            return_zSMMrNi["null"]=true;
            return return_zSMMrNi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_bWccvjW=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_vyJjuRd=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_whlfZKT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_whlfZKT=NULL;
        }
    temp_whlfZKT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_whlfZKT;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gwTlBJh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_msJUbxc=json({});
    
        if (name.pNext==NULL){
            return_msJUbxc["null"]=true;
            return return_msJUbxc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_jrYpBRb=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xrujSit;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xrujSit=NULL;
        }
    temp_xrujSit=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xrujSit;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uwcKJEs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PRRwgIv=json({});
    
        if (name.pNext==NULL){
            return_PRRwgIv["null"]=true;
            return return_PRRwgIv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sliceOffset"]=[&]() {
    json return_SabEfhM=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_PoEVDMp=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YGRDuzz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YGRDuzz=NULL;
        }
    temp_YGRDuzz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YGRDuzz;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sHowKxH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HLtbtMj=json({});
    
        if (name.pNext==NULL){
            return_HLtbtMj["null"]=true;
            return return_HLtbtMj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_GNIcLrR=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LodvsQS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LodvsQS=NULL;
        }
    temp_LodvsQS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LodvsQS;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LcZhGcY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nyKlwLZ=json({});
    
        if (name.pNext==NULL){
            return_nyKlwLZ["null"]=true;
            return return_nyKlwLZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_wPKkMvV=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iAupSQI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iAupSQI=NULL;
        }
    temp_iAupSQI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iAupSQI;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dynFule=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SDoLxFx=json({});
    
        if (name.pNext==NULL){
            return_SDoLxFx["null"]=true;
            return return_SDoLxFx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_WfGKiQr=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wkAueRD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wkAueRD=NULL;
        }
    temp_wkAueRD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wkAueRD;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NCCUcBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BindDXp=json({});
    
        if (name.pNext==NULL){
            return_BindDXp["null"]=true;
            return return_BindDXp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_BYLuAkQ=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JjScqJO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JjScqJO=NULL;
        }
    temp_JjScqJO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JjScqJO;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fuSqgJk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lAgcnoA=json({});
    
        if (name.pNext==NULL){
            return_lAgcnoA["null"]=true;
            return return_lAgcnoA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_YaiXaPv=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CKqCdQB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CKqCdQB=NULL;
        }
    temp_CKqCdQB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CKqCdQB;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hDnXNsF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qwmqYtY=json({});
    
        if (name.pNext==NULL){
            return_qwmqYtY["null"]=true;
            return return_qwmqYtY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_jdsFfPE=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_gxPsWVq=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_fTkiULI=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_TsMsGuQ=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_ugyRmxM=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_syhsFFF=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_eLVahOw=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_JzxfBaV=json({});
    return_JzxfBaV=[&]() {
    json return_ZacKcpO=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_JzxfBaV;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yShhZcD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yShhZcD=NULL;
        }
    temp_yShhZcD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yShhZcD;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GWYlFEn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DtEEGAa=json({});
    
        if (name.pNext==NULL){
            return_DtEEGAa["null"]=true;
            return return_DtEEGAa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_JIviaOf=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_HujCznW=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_vcEYvmC=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_OOdODSs=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_ncoGBGT=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_aQXoUdR=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_eXcNmuJ=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_gyQMsTO=json({});
    return_gyQMsTO=[&]() {
    json return_dGHNbUs=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_gyQMsTO;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UWsPQZn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UWsPQZn=NULL;
        }
    temp_UWsPQZn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UWsPQZn;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zolmXxF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uhUkHSf=json({});
    
        if (name.pNext==NULL){
            return_uhUkHSf["null"]=true;
            return return_uhUkHSf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_PxFdyrV=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jKsOhoX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jKsOhoX=NULL;
        }
    temp_jKsOhoX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jKsOhoX;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GcGtJje=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_InqgeAq=json({});
    
        if (name.pNext==NULL){
            return_InqgeAq["null"]=true;
            return return_InqgeAq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_WTlWBma=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WbLgMYb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WbLgMYb=NULL;
        }
    temp_WbLgMYb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WbLgMYb;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EAEoQpC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oYGmcJq=json({});
    
        if (name.pNext==NULL){
            return_oYGmcJq["null"]=true;
            return return_oYGmcJq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_GDhbdeW=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YfTOPoR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YfTOPoR=NULL;
        }
    temp_YfTOPoR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YfTOPoR;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WfnuzvI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YKBYwZT=json({});
    
        if (name.pNext==NULL){
            return_YKBYwZT["null"]=true;
            return return_YKBYwZT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_qjQrvUI=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xYxwzMN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xYxwzMN=NULL;
        }
    temp_xYxwzMN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xYxwzMN;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AUoSZhN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GuzrClw=json({});
    
        if (name.pNext==NULL){
            return_GuzrClw["null"]=true;
            return return_GuzrClw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_ABHiquo=json({});
    return_ABHiquo=[&]() {
    json return_jDMtpvO=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_ABHiquo;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cblRvrT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nTQrJhr=json({});
    
        if (name.pNext==NULL){
            return_nTQrJhr["null"]=true;
            return return_nTQrJhr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_CXgUqFw=json({});
    return_CXgUqFw=[&]() {
    json return_YgclpYR=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_CXgUqFw;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ouOETZI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZmqcHgS=json({});
    
        if (name.pNext==NULL){
            return_ZmqcHgS["null"]=true;
            return return_ZmqcHgS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_SaQqyea=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mQGcNBq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZivdKxx=json({});
    
        if (name.pNext==NULL){
            return_ZivdKxx["null"]=true;
            return return_ZivdKxx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_PfHTwGx=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hCEjGqo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZSFwRXn=json({});
    
        if (name.pNext==NULL){
            return_ZSFwRXn["null"]=true;
            return return_ZSFwRXn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_zhFZRfa=json({});
    return_zhFZRfa=[&]() {
    json return_kxGVxAh=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_zhFZRfa;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jivyLJr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UputcwI=json({});
    
        if (name.pNext==NULL){
            return_UputcwI["null"]=true;
            return return_UputcwI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_PIJTDhJ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_ePUpeBq=json({});
    return_ePUpeBq=[&]() {
    json return_tqVXvVy=json({});
    return serialize_uint64_t(name.offset);}();return return_ePUpeBq;}();
result["members"]["flags"]=[&]() {
    json return_UEzCnzN=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UiuNOfs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UiuNOfs=NULL;
        }
    temp_UiuNOfs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UiuNOfs;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bhOrsBs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_djOeHvA=json({});
    
        if (name.pNext==NULL){
            return_djOeHvA["null"]=true;
            return return_djOeHvA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedSubmit"]=[&]() {
    json return_gTrbAwB=json({});
    return_gTrbAwB=[&]() {
    json return_hnsirtL=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_gTrbAwB;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NtWsPcH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NtWsPcH=NULL;
        }
    temp_NtWsPcH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NtWsPcH;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KDuujPI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qFEUkIi=json({});
    
        if (name.pNext==NULL){
            return_qFEUkIi["null"]=true;
            return return_qFEUkIi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedMemory"]=[&]() {
    json return_WAIbXNG=json({});
    return_WAIbXNG=[&]() {
    json return_AnbNeAb=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_WAIbXNG;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PQyGTwp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gRMOebs=json({});
    
        if (name.pNext==NULL){
            return_gRMOebs["null"]=true;
            return return_gRMOebs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedNoFault"]=[&]() {
    json return_lijJOuO=json({});
    return_lijJOuO=[&]() {
    json return_LIYsmJT=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_lijJOuO;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YyIevJO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yqupOEf=json({});
    
        if (name.pNext==NULL){
            return_yqupOEf["null"]=true;
            return return_yqupOEf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NBwXKzr=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_djdgAwh=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_eYaeuqk=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qDPyLnq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qDPyLnq=NULL;
        }
    temp_qDPyLnq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qDPyLnq;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FQQHDhP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nuXJcXe=json({});
    
        if (name.pNext==NULL){
            return_nuXJcXe["null"]=true;
            return return_nuXJcXe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cnGfofA=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_cKDimtS=json({});
    return_cKDimtS=[&]() {
    json return_ptiGGkB=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_cKDimtS;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_wgRwVjP=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NNjpogO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NNjpogO=NULL;
        }
    temp_NNjpogO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NNjpogO;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PmPHfZK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gIEdqHp=json({});
    
        if (name.pNext==NULL){
            return_gIEdqHp["null"]=true;
            return return_gIEdqHp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_iwlUDgU=json({});
    return_iwlUDgU=[&]() {
    json return_qcrScmT=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_iwlUDgU;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_xDuQous=json({});
    return_xDuQous=[&]() {
    json return_IMRkNDb=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_xDuQous;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iPOssog=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hmbMIvG=json({});
    
        if (name.pNext==NULL){
            return_hmbMIvG["null"]=true;
            return return_hmbMIvG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_KVggeGN=json({});
    return_KVggeGN=[&]() {
    json return_YMguFso=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_KVggeGN;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_rboyWMQ=json({});
    return_rboyWMQ=[&]() {
    json return_aFvJDUK=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_rboyWMQ;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_NQGnEVK=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_JSLtWcR=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wxridbx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wBKawzJ=json({});
    
        if (name.pNext==NULL){
            return_wBKawzJ["null"]=true;
            return return_wBKawzJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_QskRfeY=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_QzCryEg=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_WbcIaoK=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_ueeXWHs=json({});
    
        if (name.pSampleLocations==NULL){
            return_ueeXWHs["null"]=true;
            return return_ueeXWHs;
        }
        
        return_ueeXWHs["members"]={};
        for(int i=0; i < name.sampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_fwrKwsC=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[i]);}();
            return_ueeXWHs["members"][std::to_string(i)].push_back(temp);
        }
        return return_ueeXWHs;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gQBWXaC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gQBWXaC=NULL;
        }
    temp_gQBWXaC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gQBWXaC;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_EurUsQB;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_EurUsQB=NULL;
        }
    temp_EurUsQB=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int lCZIPMR=0; lCZIPMR < result.sampleLocationsCount; lCZIPMR++){
            [&]() {
temp_EurUsQB[lCZIPMR]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][lCZIPMR]);}();;
        }
        }();result.pSampleLocations=temp_EurUsQB;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_nskCxqC=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_WYrVmqP=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_CtjIaoi=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_nHwkidC=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GrYOZOq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TJVwdMD=json({});
    
        if (name.pNext==NULL){
            return_TJVwdMD["null"]=true;
            return return_TJVwdMD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_JDEiqPi=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_xNJzAUH=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_xNJzAUH["null"]=true;
            return return_xNJzAUH;
        }
        
        return_xNJzAUH["members"]={};
        for(int i=0; i < name.attachmentInitialSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_umamGJw=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[i]);}();
            return_xNJzAUH["members"][std::to_string(i)].push_back(temp);
        }
        return return_xNJzAUH;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_DCSBMvk=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_gDieUom=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_gDieUom["null"]=true;
            return return_gDieUom;
        }
        
        return_gDieUom["members"]={};
        for(int i=0; i < name.postSubpassSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_OBeVrQR=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[i]);}();
            return_gDieUom["members"][std::to_string(i)].push_back(temp);
        }
        return return_gDieUom;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aBixpxn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aBixpxn=NULL;
        }
    temp_aBixpxn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aBixpxn;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_FZkqfhG;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_FZkqfhG=NULL;
        }
    temp_FZkqfhG=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int bqGCqhi=0; bqGCqhi < result.attachmentInitialSampleLocationsCount; bqGCqhi++){
            [&]() {
temp_FZkqfhG[bqGCqhi]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][bqGCqhi]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_FZkqfhG;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_vnKxcLt;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_vnKxcLt=NULL;
        }
    temp_vnKxcLt=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int TvldleR=0; TvldleR < result.postSubpassSampleLocationsCount; TvldleR++){
            [&]() {
temp_vnKxcLt[TvldleR]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][TvldleR]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_vnKxcLt;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MJXHSUH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBQSFDl=json({});
    
        if (name.pNext==NULL){
            return_cBQSFDl["null"]=true;
            return return_cBQSFDl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_EcvttdR=json({});
    return_EcvttdR=[&]() {
    json return_hzoUnIV=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_EcvttdR;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_EStoRDz=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_znOjokg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_znOjokg=NULL;
        }
    temp_znOjokg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_znOjokg;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qjduMrr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HqxvnIh=json({});
    
        if (name.pNext==NULL){
            return_HqxvnIh["null"]=true;
            return return_HqxvnIh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_QqCRaLS=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_gcWFaVp=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_rdrzyVS=json({});
    
        return_rdrzyVS["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_fYANTYE=json({});
    return serialize_float(name.sampleLocationCoordinateRange[i]);}();
            return_rdrzyVS["members"][std::to_string(i)].push_back(temp);
        }
        return return_rdrzyVS;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_CkgYSsh=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_FQpacuV=json({});
    return_FQpacuV=[&]() {
    json return_VSoiycd=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_FQpacuV;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int UrNJgLW=0; UrNJgLW < 2; UrNJgLW++){
            [&]() {
result.sampleLocationCoordinateRange[UrNJgLW]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][UrNJgLW]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pDApQBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pVPMZXG=json({});
    
        if (name.pNext==NULL){
            return_pVPMZXG["null"]=true;
            return return_pVPMZXG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_ArnyyVY=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IIqIYdS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fdbOSLC=json({});
    
        if (name.pNext==NULL){
            return_fdbOSLC["null"]=true;
            return return_fdbOSLC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_eltDfey=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_esgirBK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_esgirBK=NULL;
        }
    temp_esgirBK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_esgirBK;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kAuZjkt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kOCBZwe=json({});
    
        if (name.pNext==NULL){
            return_kOCBZwe["null"]=true;
            return return_kOCBZwe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_PEZKrkZ=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MhRqOSa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MhRqOSa=NULL;
        }
    temp_MhRqOSa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MhRqOSa;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EdwpJWj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FCTJFps=json({});
    
        if (name.pNext==NULL){
            return_FCTJFps["null"]=true;
            return return_FCTJFps;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_wmGtQCq=json({});
    return_wmGtQCq=[&]() {
    json return_TVtCQQZ=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_wmGtQCq;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XQQEQwM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hPIsfjm=json({});
    
        if (name.pNext==NULL){
            return_hPIsfjm["null"]=true;
            return return_hPIsfjm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiDraw"]=[&]() {
    json return_bAUxddz=json({});
    return_bAUxddz=[&]() {
    json return_CXgsraC=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_bAUxddz;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EfnSymp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nacowPx=json({});
    
        if (name.pNext==NULL){
            return_nacowPx["null"]=true;
            return return_nacowPx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_QZgnswI=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_VHWLKhM=json({});
    return_VHWLKhM=[&]() {
    json return_riCYypg=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_VHWLKhM;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_ikUDcZP=json({});
    return_ikUDcZP=[&]() {
    json return_ndQlcit=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_ikUDcZP;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_dBjvYoM=json({});
    return_dBjvYoM=[&]() {
    json return_BzvUUXH=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_dBjvYoM;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_nhxukeM=json({});
    return_nhxukeM=[&]() {
    json return_NPkKryX=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_nhxukeM;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_uEYTOKz=json({});
    return_uEYTOKz=[&]() {
    json return_miYGDrM=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_uEYTOKz;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pqyRYbS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dAbbCij=json({});
    
        if (name.pNext==NULL){
            return_dAbbCij["null"]=true;
            return return_dAbbCij;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_wMmKwlK=json({});
    return_wMmKwlK=[&]() {
    json return_VgPwPkS=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_wMmKwlK;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_uCBZGTd=json({});
    return_uCBZGTd=[&]() {
    json return_dLSUTmr=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_uCBZGTd;}();
result["members"]["blendOverlap"]=[&]() {
    json return_oAWofsU=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mKpYZtS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mKpYZtS=NULL;
        }
    temp_mKpYZtS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mKpYZtS;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hsKPppi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zZYwday=json({});
    
        if (name.pNext==NULL){
            return_zZYwday["null"]=true;
            return return_zZYwday;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_zPvZGLw=json({});
    return_zPvZGLw=[&]() {
    json return_yuafiOE=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_zPvZGLw;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_CteZlGC=json({});
    return_CteZlGC=[&]() {
    json return_lDjSklB=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_CteZlGC;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XAvvosX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nCaVFbL=json({});
    
        if (name.pNext==NULL){
            return_nCaVFbL["null"]=true;
            return return_nCaVFbL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_SqBewfW=json({});
    return_SqBewfW=[&]() {
    json return_DgbAqAG=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_SqBewfW;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_fqrAIjA=json({});
    return_fqrAIjA=[&]() {
    json return_XdLXlYd=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_fqrAIjA;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HNZXCqY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eNeStfP=json({});
    
        if (name.pNext==NULL){
            return_eNeStfP["null"]=true;
            return return_eNeStfP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_IGMMWNs=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_vZKVquh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ZksoutG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_McyxPpA=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_reHbErz=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qFbXLVT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UIaSnIr=json({});
    
        if (name.pNext==NULL){
            return_UIaSnIr["null"]=true;
            return return_UIaSnIr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_VUutZCt=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_xEtSTCe=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ZBJPKrb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_nwIXAmZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ODRwNaM=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XpBHDXc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yPIbBUP=json({});
    
        if (name.pNext==NULL){
            return_yPIbBUP["null"]=true;
            return return_yPIbBUP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_crsQxXm=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_AMzWBTU=json({});
    
        if (name.pData==NULL){
            return_AMzWBTU["null"]=true;
            return return_AMzWBTU;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ykSPpZP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ykSPpZP=NULL;
        }
    temp_ykSPpZP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ykSPpZP;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_ISAmTfD;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_ISAmTfD=NULL;
        }
    temp_ISAmTfD=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_ISAmTfD;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_khnVpLV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OAJHrci=json({});
    
        if (name.pNext==NULL){
            return_OAJHrci["null"]=true;
            return return_OAJHrci;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_RbEdjWQ=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_UxFeVYX=json({});
    
        if (name.pData==NULL){
            return_UxFeVYX["null"]=true;
            return return_UxFeVYX;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UPFAyFq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UPFAyFq=NULL;
        }
    temp_UPFAyFq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UPFAyFq;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_AFHmDmP;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_AFHmDmP=NULL;
        }
    temp_AFHmDmP=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_AFHmDmP;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_opfmshu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_asonoPS=json({});
    
        if (name.pNext==NULL){
            return_asonoPS["null"]=true;
            return return_asonoPS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_yNRlpbU=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fZplTrq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fZplTrq=NULL;
        }
    temp_fZplTrq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fZplTrq;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tdkSrSN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zAOcOaH=json({});
    
        if (name.pNext==NULL){
            return_zAOcOaH["null"]=true;
            return return_zAOcOaH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_NzxewST=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ffegMMX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ffegMMX=NULL;
        }
    temp_ffegMMX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ffegMMX;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IQHjygT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CxqUqwj=json({});
    
        if (name.pNext==NULL){
            return_CxqUqwj["null"]=true;
            return return_CxqUqwj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WGFwiWF=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_hfNDiMA=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_RIjgKFD=json({});
    return_RIjgKFD=[&]() {
    json return_eWpOOeu=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_RIjgKFD;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_HuCguZi=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_XudNuDX=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_XudNuDX["null"]=true;
            return return_XudNuDX;
        }
        
        return_XudNuDX["members"]={};
        for(int i=0; i < name.coverageModulationTableCount; i++){
            json temp;
            temp=[&]() {
    json return_xsOrhmf=json({});
    return serialize_float(name.pCoverageModulationTable[i]);}();
            return_XudNuDX["members"][std::to_string(i)].push_back(temp);
        }
        return return_XudNuDX;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WJoECmp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WJoECmp=NULL;
        }
    temp_WJoECmp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WJoECmp;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_HhErWnK;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_HhErWnK=NULL;
        }
    temp_HhErWnK=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int FcJrlez=0; FcJrlez < result.coverageModulationTableCount; FcJrlez++){
            [&]() {
temp_HhErWnK[FcJrlez]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][FcJrlez]);}();;
        }
        }();result.pCoverageModulationTable=temp_HhErWnK;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MFhosMD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zNOGSUG=json({});
    
        if (name.pNext==NULL){
            return_zNOGSUG["null"]=true;
            return return_zNOGSUG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_URqWDMb=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_IRFPyQt=json({});
    
        if (name.pViewFormats==NULL){
            return_IRFPyQt["null"]=true;
            return return_IRFPyQt;
        }
        
        return_IRFPyQt["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_YqmlqeM=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_IRFPyQt["members"][std::to_string(i)].push_back(temp);
        }
        return return_IRFPyQt;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ikZytkw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ikZytkw=NULL;
        }
    temp_ikZytkw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ikZytkw;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_bXRdOZu;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_bXRdOZu=NULL;
        }
    temp_bXRdOZu=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int xtEilmB=0; xtEilmB < result.viewFormatCount; xtEilmB++){
            [&]() {
temp_bXRdOZu[xtEilmB]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][xtEilmB]);}();;
        }
        }();result.pViewFormats=temp_bXRdOZu;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QTYgrPk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_khuvUMX=json({});
    
        if (name.pNext==NULL){
            return_khuvUMX["null"]=true;
            return return_khuvUMX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_NmKKpUM=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_cdixyZw=json({});
    
        if (name.pViewFormats==NULL){
            return_cdixyZw["null"]=true;
            return return_cdixyZw;
        }
        
        return_cdixyZw["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_KmifSci=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_cdixyZw["members"][std::to_string(i)].push_back(temp);
        }
        return return_cdixyZw;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hGJgZWv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hGJgZWv=NULL;
        }
    temp_hGJgZWv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hGJgZWv;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_OMJzilO;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_OMJzilO=NULL;
        }
    temp_OMJzilO=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int PfYDvfs=0; PfYDvfs < result.viewFormatCount; PfYDvfs++){
            [&]() {
temp_OMJzilO[PfYDvfs]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][PfYDvfs]);}();;
        }
        }();result.pViewFormats=temp_OMJzilO;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZIhcVSd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AmJURLt=json({});
    
        if (name.pNext==NULL){
            return_AmJURLt["null"]=true;
            return return_AmJURLt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ieLvJjg=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_jfqRJhI=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_lSRCEFk=json({});
    
        if (name.pInitialData==NULL){
            return_lSRCEFk["null"]=true;
            return return_lSRCEFk;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fXaxEuQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fXaxEuQ=NULL;
        }
    temp_fXaxEuQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fXaxEuQ;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_ebemHNa;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_ebemHNa=NULL;
        }
    temp_ebemHNa=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_ebemHNa;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nHGHAdt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZsaNgpk=json({});
    
        if (name.pNext==NULL){
            return_ZsaNgpk["null"]=true;
            return return_ZsaNgpk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["validationCache"]=[&]() {
    json return_oUwPhET=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fIhVsgh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fIhVsgh=NULL;
        }
    temp_fIhVsgh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fIhVsgh;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jrEObsC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oslZJks=json({});
    
        if (name.pNext==NULL){
            return_oslZJks["null"]=true;
            return return_oslZJks;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_LhUiPKx=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_IjrGLqD=json({});
    return_IjrGLqD=[&]() {
    json return_BkhVlKk=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_IjrGLqD;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vbeoUiA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zSNvkNa=json({});
    
        if (name.pNext==NULL){
            return_zSNvkNa["null"]=true;
            return return_zSNvkNa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_VRgtHGk=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_ZdzQYcG=json({});
    return_ZdzQYcG=[&]() {
    json return_fUnBrOU=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_ZdzQYcG;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TzEJMYk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LtVzaSW=json({});
    
        if (name.pNext==NULL){
            return_LtVzaSW["null"]=true;
            return return_LtVzaSW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_zJbgXla=json({});
    return_zJbgXla=[&]() {
    json return_tFzFgeY=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_zJbgXla;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DqeQgLP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PPIGfHM=json({});
    
        if (name.pNext==NULL){
            return_PPIGfHM["null"]=true;
            return return_PPIGfHM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_WubmOHu=json({});
    return_WubmOHu=[&]() {
    json return_xyKmNVT=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_WubmOHu;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mbNhZKo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NxSgyQJ=json({});
    
        if (name.pNext==NULL){
            return_NxSgyQJ["null"]=true;
            return return_NxSgyQJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_UINSIPp=json({});
    return_UINSIPp=[&]() {
    json return_NLJRNhH=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_UINSIPp;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gfumxci=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MGrcubo=json({});
    
        if (name.pNext==NULL){
            return_MGrcubo["null"]=true;
            return return_MGrcubo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_KkQyiHT=json({});
    return_KkQyiHT=[&]() {
    json return_FvOqarm=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_KkQyiHT;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rwJJXtV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_slbmLUM=json({});
    
        if (name.pNext==NULL){
            return_slbmLUM["null"]=true;
            return return_slbmLUM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance5"]=[&]() {
    json return_pJdmUiX=json({});
    return_pJdmUiX=[&]() {
    json return_sydSLFO=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_pJdmUiX;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yAHBols=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FdGerbJ=json({});
    
        if (name.pNext==NULL){
            return_FdGerbJ["null"]=true;
            return return_FdGerbJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_nIeqVWZ=json({});
    return_nIeqVWZ=[&]() {
    json return_RjHRgup=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_nIeqVWZ;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_zwEwmFd=json({});
    return_zwEwmFd=[&]() {
    json return_ewWKCGA=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_zwEwmFd;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_nejZclf=json({});
    return_nejZclf=[&]() {
    json return_sHVIyWz=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_nejZclf;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_JzqLfUY=json({});
    return_JzqLfUY=[&]() {
    json return_aORzMme=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_JzqLfUY;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_RmhwiPK=json({});
    return_RmhwiPK=[&]() {
    json return_EVlkgiD=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_RmhwiPK;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_fwqRIrS=json({});
    return_fwqRIrS=[&]() {
    json return_XmgjADO=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_fwqRIrS;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PyqWRuj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LWnyvXQ=json({});
    
        if (name.pNext==NULL){
            return_LWnyvXQ["null"]=true;
            return return_LWnyvXQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_FRvdhyi=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_oFppFQj=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_LWbLRxP=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_LWbLRxP["null"]=true;
            return return_LWbLRxP;
        }
        
        return_LWbLRxP["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_FFnIiIJ=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_LWbLRxP["members"][std::to_string(i)].push_back(temp);
        }
        return return_LWbLRxP;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_ONrXcNa=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_IXiejjO=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_udawlbV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_udawlbV=NULL;
        }
    temp_udawlbV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_udawlbV;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_QPcSlxK;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_QPcSlxK=NULL;
        }
    temp_QPcSlxK=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int yvPjTrV=0; yvPjTrV < result.colorAttachmentCount; yvPjTrV++){
            [&]() {
temp_QPcSlxK[yvPjTrV]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][yvPjTrV]);}();;
        }
        }();result.pColorAttachmentFormats=temp_QPcSlxK;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UiTWXRb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ereAfPj=json({});
    
        if (name.pNext==NULL){
            return_ereAfPj["null"]=true;
            return return_ereAfPj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_YfHyhRW=json({});
    return_YfHyhRW=[&]() {
    json return_NIyShBY=json({});
    return serialize_uint32_t(name.supported);}();return return_YfHyhRW;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kjDTRGh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XzMFwdX=json({});
    
        if (name.pNext==NULL){
            return_XzMFwdX["null"]=true;
            return return_XzMFwdX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_dkNRPKD=json({});
    return_dkNRPKD=[&]() {
    json return_GUqZGBg=json({});
    return serialize_uint32_t(name.supported);}();return return_dkNRPKD;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZsVsovC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UKDmfQn=json({});
    
        if (name.pNext==NULL){
            return_UKDmfQn["null"]=true;
            return return_UKDmfQn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_NFlsDlQ=json({});
    return_NFlsDlQ=[&]() {
    json return_fFBXYWN=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_NFlsDlQ;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lEQYmun=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iENpzVf=json({});
    
        if (name.pNext==NULL){
            return_iENpzVf["null"]=true;
            return return_iENpzVf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_RwQMmRj=json({});
    return_RwQMmRj=[&]() {
    json return_NtquuTI=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_RwQMmRj;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ctQIlUj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aekwAnK=json({});
    
        if (name.pNext==NULL){
            return_aekwAnK["null"]=true;
            return return_aekwAnK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_OEHlWHs=json({});
    return_OEHlWHs=[&]() {
    json return_DQPVTKB=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_OEHlWHs;}();
result["members"]["shaderInt8"]=[&]() {
    json return_Hcwspva=json({});
    return_Hcwspva=[&]() {
    json return_TbdETIu=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_Hcwspva;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IshSLwu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BniKBxl=json({});
    
        if (name.pNext==NULL){
            return_BniKBxl["null"]=true;
            return return_BniKBxl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_hnwoUBC=json({});
    return_hnwoUBC=[&]() {
    json return_aaAXQwD=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_hnwoUBC;}();
result["members"]["shaderInt8"]=[&]() {
    json return_wZjiDzI=json({});
    return_wZjiDzI=[&]() {
    json return_MqgxuAq=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_wZjiDzI;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tCnZRhc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iXlXpYy=json({});
    
        if (name.pNext==NULL){
            return_iXlXpYy["null"]=true;
            return return_iXlXpYy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_lMNnQug=json({});
    return_lMNnQug=[&]() {
    json return_cqfndFz=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_lMNnQug;}();
result["members"]["shaderInt8"]=[&]() {
    json return_VFTJkiO=json({});
    return_VFTJkiO=[&]() {
    json return_lOAEHlV=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_VFTJkiO;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QORJVTv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rekewsq=json({});
    
        if (name.pNext==NULL){
            return_rekewsq["null"]=true;
            return return_rekewsq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_NqIzahq=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_JSlskXc=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_DAgnnvl=json({});
    return_DAgnnvl=[&]() {
    json return_dxNRcFI=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_DAgnnvl;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_ZfucuQe=json({});
    return_ZfucuQe=[&]() {
    json return_JdRunqW=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_ZfucuQe;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_VWNAdJR=json({});
    return_VWNAdJR=[&]() {
    json return_zJMufgg=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_VWNAdJR;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_KNtpgLa=json({});
    return_KNtpgLa=[&]() {
    json return_AwNapaX=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_KNtpgLa;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_CnsVZXC=json({});
    return_CnsVZXC=[&]() {
    json return_QPvgcHC=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_CnsVZXC;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_PHZnXzA=json({});
    return_PHZnXzA=[&]() {
    json return_CPQhrhF=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_PHZnXzA;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_GRcAtlj=json({});
    return_GRcAtlj=[&]() {
    json return_gwXJXPs=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_GRcAtlj;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_bNwRltP=json({});
    return_bNwRltP=[&]() {
    json return_EKNYMft=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_bNwRltP;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_EHzrrQS=json({});
    return_EHzrrQS=[&]() {
    json return_uzHwcCl=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_EHzrrQS;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_RTYmUPQ=json({});
    return_RTYmUPQ=[&]() {
    json return_cWEjTZr=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_RTYmUPQ;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_RBYtAjn=json({});
    return_RBYtAjn=[&]() {
    json return_zyASkFn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_RBYtAjn;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_izTIneu=json({});
    return_izTIneu=[&]() {
    json return_AGVIAqP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_izTIneu;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_jVjyyFC=json({});
    return_jVjyyFC=[&]() {
    json return_mEtrbkK=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_jVjyyFC;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_nxsQqKT=json({});
    return_nxsQqKT=[&]() {
    json return_CzPVEuj=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_nxsQqKT;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_pEsdeoR=json({});
    return_pEsdeoR=[&]() {
    json return_moweXkC=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_pEsdeoR;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ORJPAJd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bmUoxFM=json({});
    
        if (name.pNext==NULL){
            return_bmUoxFM["null"]=true;
            return return_bmUoxFM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_lIunwvx=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_bHWfvFp=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_tRKcbYw=json({});
    return_tRKcbYw=[&]() {
    json return_Ypqtxgv=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_tRKcbYw;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_LoRvNbd=json({});
    return_LoRvNbd=[&]() {
    json return_EKKzUkm=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_LoRvNbd;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_CRzxdGO=json({});
    return_CRzxdGO=[&]() {
    json return_zPcKeRl=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_CRzxdGO;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_KeiNFRZ=json({});
    return_KeiNFRZ=[&]() {
    json return_chKkxov=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_KeiNFRZ;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_fXdZeLX=json({});
    return_fXdZeLX=[&]() {
    json return_JLnVIZl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_fXdZeLX;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_SgTpJOv=json({});
    return_SgTpJOv=[&]() {
    json return_XrnewcX=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_SgTpJOv;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_whIlLrY=json({});
    return_whIlLrY=[&]() {
    json return_vThlKDv=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_whIlLrY;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_oiEUJTv=json({});
    return_oiEUJTv=[&]() {
    json return_BBIdeyG=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_oiEUJTv;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_THFHMmM=json({});
    return_THFHMmM=[&]() {
    json return_MtkUfnm=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_THFHMmM;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_JOSPFlV=json({});
    return_JOSPFlV=[&]() {
    json return_OGqJtYk=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_JOSPFlV;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_jKkUIHw=json({});
    return_jKkUIHw=[&]() {
    json return_SEsewiw=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_jKkUIHw;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_YrkShIQ=json({});
    return_YrkShIQ=[&]() {
    json return_UErNnew=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_YrkShIQ;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_UCPcUXS=json({});
    return_UCPcUXS=[&]() {
    json return_kEHHrmT=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_UCPcUXS;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_nUgnFqD=json({});
    return_nUgnFqD=[&]() {
    json return_oNRYLtn=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_nUgnFqD;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_SLIDlHw=json({});
    return_SLIDlHw=[&]() {
    json return_tzuqwVF=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_SLIDlHw;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IaDDMdC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bquLKlT=json({});
    
        if (name.pNext==NULL){
            return_bquLKlT["null"]=true;
            return return_bquLKlT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_pRcVhdy=json({});
    return_pRcVhdy=[&]() {
    json return_prteXEr=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_pRcVhdy;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fdVNPUI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_abyQRLB=json({});
    
        if (name.pNext==NULL){
            return_abyQRLB["null"]=true;
            return return_abyQRLB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_XwdlxHp=json({});
    return_XwdlxHp=[&]() {
    json return_PJTYgYY=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_XwdlxHp;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_JnsYDxD=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_kUIetGb=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_teAebRt=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_uiopxQp=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_dILNYUQ=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_bBWnKvI=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_eqdrmQe=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_gwMSxYk=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_BmRlbgA=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_GWMrnyj=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_iNPPdzO=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_YxhZtdM=json({});
    
        return_YxhZtdM["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_hSgCPJr=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[i]);}();
            return_YxhZtdM["members"][std::to_string(i)].push_back(temp);
        }
        return return_YxhZtdM;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int UQBDilA=0; UQBDilA < 3; UQBDilA++){
            [&]() {
result.computeWorkGroupSize[UQBDilA]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][UQBDilA]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qNmZsfp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HqqvSng=json({});
    
        if (name.pNext==NULL){
            return_HqqvSng["null"]=true;
            return return_HqqvSng;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_CkLcMYu=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jLtCLmP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jLtCLmP=NULL;
        }
    temp_jLtCLmP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jLtCLmP;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sOydBuf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYwfIUD=json({});
    
        if (name.pNext==NULL){
            return_RYwfIUD["null"]=true;
            return return_RYwfIUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_oVnjsrd=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eeuVuqP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eeuVuqP=NULL;
        }
    temp_eeuVuqP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eeuVuqP;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pbhGlNa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dvTWusJ=json({});
    
        if (name.pNext==NULL){
            return_dvTWusJ["null"]=true;
            return return_dvTWusJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_xaIWkUA=json({});
    return_xaIWkUA=[&]() {
    json return_RuOPxRN=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_xaIWkUA;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sNQKSgn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cIkIwzI=json({});
    
        if (name.pNext==NULL){
            return_cIkIwzI["null"]=true;
            return return_cIkIwzI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_oFGKNTi=json({});
    return_oFGKNTi=[&]() {
    json return_AhTeMLS=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_oFGKNTi;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GwGTRaD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uYUSUKS=json({});
    
        if (name.pNext==NULL){
            return_uYUSUKS["null"]=true;
            return return_uYUSUKS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_PmPzwrV=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_wIxhXvO=json({});
    
        return_wIxhXvO["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_YbPXNRy=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_wIxhXvO["members"][std::to_string(i)].push_back(temp);
        }
        return return_wIxhXvO;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int NRcpCyi=0; NRcpCyi < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; NRcpCyi++){
            [&]() {
result.priorities[NRcpCyi]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][NRcpCyi]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lsnqktp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nZCfFbM=json({});
    
        if (name.pNext==NULL){
            return_nZCfFbM["null"]=true;
            return return_nZCfFbM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_YIlbPEi=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_xPyOKWE=json({});
    
        return_xPyOKWE["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_bAGHThn=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_xPyOKWE["members"][std::to_string(i)].push_back(temp);
        }
        return return_xPyOKWE;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int XuGGOGW=0; XuGGOGW < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; XuGGOGW++){
            [&]() {
result.priorities[XuGGOGW]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][XuGGOGW]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nAfwpCD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zQpxjXg=json({});
    
        if (name.pNext==NULL){
            return_zQpxjXg["null"]=true;
            return return_zQpxjXg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_xWnpYlb=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_sntwGdc=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_MLxtfPA=json({});
    
        if (name.pObjectName==NULL){
            return_MLxtfPA["null"]=true;
            return return_MLxtfPA;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JsrEGGj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JsrEGGj=NULL;
        }
    temp_JsrEGGj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JsrEGGj;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_WJgrtFh;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_WJgrtFh=NULL;
        }
    temp_WJgrtFh=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_WJgrtFh;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sJnzXfs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JYBAbQs=json({});
    
        if (name.pNext==NULL){
            return_JYBAbQs["null"]=true;
            return return_JYBAbQs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_LCgFuII=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_jRWaYOb=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_CSKZrPz=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_BAhiuOs=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_LxztmvT=json({});
    
        if (name.pTag==NULL){
            return_LxztmvT["null"]=true;
            return return_LxztmvT;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jlVfGZj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jlVfGZj=NULL;
        }
    temp_jlVfGZj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jlVfGZj;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_rNNntWZ;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_rNNntWZ=NULL;
        }
    temp_rNNntWZ=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_rNNntWZ;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_miXGWGN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IWByrAV=json({});
    
        if (name.pNext==NULL){
            return_IWByrAV["null"]=true;
            return return_IWByrAV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pLabelName"]=[&]() {
    json return_IfXeCrr=json({});
    
        if (name.pLabelName==NULL){
            return_IfXeCrr["null"]=true;
            return return_IfXeCrr;
        }
        return serialize_char_p(name.pLabelName);
}();
result["members"]["color"]=[&]() {
    json return_hmhwtbu=json({});
    
        return_hmhwtbu["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_uPBZEdx=json({});
    return serialize_float(name.color[i]);}();
            return_hmhwtbu["members"][std::to_string(i)].push_back(temp);
        }
        return return_hmhwtbu;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YlJDcLF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YlJDcLF=NULL;
        }
    temp_YlJDcLF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YlJDcLF;}();
[&]() {
char* temp_tofDYmu;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_tofDYmu=NULL;
        }
    temp_tofDYmu=deserialize_char_p(name["members"]["pLabelName"]);
}();result.pLabelName=temp_tofDYmu;}();
[&]() {

        for (int qhcJMBn=0; qhcJMBn < 4; qhcJMBn++){
            [&]() {
result.color[qhcJMBn]=deserialize_float(name["members"]["color"]["members"][qhcJMBn]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VBcpERX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IPUrLvN=json({});
    
        if (name.pNext==NULL){
            return_IPUrLvN["null"]=true;
            return return_IPUrLvN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MICZrSG=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_rVyJOrq=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_fBUHXOH=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_iWrVoXx=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_QfWcNHS=json({});
    
        if (name.pUserData==NULL){
            return_QfWcNHS["null"]=true;
            return return_QfWcNHS;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iJxBIej;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iJxBIej=NULL;
        }
    temp_iJxBIej=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iJxBIej;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hQfrmEu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYujbYR=json({});
    
        if (name.pNext==NULL){
            return_PYujbYR["null"]=true;
            return return_PYujbYR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hpwYIBm=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_fNOFNQF=json({});
    
        if (name.pMessageIdName==NULL){
            return_fNOFNQF["null"]=true;
            return return_fNOFNQF;
        }
        return serialize_char_p(name.pMessageIdName);
}();
result["members"]["messageIdNumber"]=[&]() {
    json return_PgyzSEw=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_gWPtEsC=json({});
    
        if (name.pMessage==NULL){
            return_gWPtEsC["null"]=true;
            return return_gWPtEsC;
        }
        return serialize_char_p(name.pMessage);
}();
result["members"]["queueLabelCount"]=[&]() {
    json return_kfOeBGx=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_rrGpYNm=json({});
    
        if (name.pQueueLabels==NULL){
            return_rrGpYNm["null"]=true;
            return return_rrGpYNm;
        }
        
        return_rrGpYNm["members"]={};
        for(int i=0; i < name.queueLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_OAHJmOO=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[i]);}();
            return_rrGpYNm["members"][std::to_string(i)].push_back(temp);
        }
        return return_rrGpYNm;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_UrTwcxL=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_dosbjqi=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_dosbjqi["null"]=true;
            return return_dosbjqi;
        }
        
        return_dosbjqi["members"]={};
        for(int i=0; i < name.cmdBufLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_rhQFAGz=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[i]);}();
            return_dosbjqi["members"][std::to_string(i)].push_back(temp);
        }
        return return_dosbjqi;
        }();
result["members"]["objectCount"]=[&]() {
    json return_mAKjBwa=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_NZoqthj=json({});
    
        if (name.pObjects==NULL){
            return_NZoqthj["null"]=true;
            return return_NZoqthj;
        }
        
        return_NZoqthj["members"]={};
        for(int i=0; i < name.objectCount; i++){
            json temp;
            temp=[&]() {
    json return_VoDUnHM=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[i]);}();
            return_NZoqthj["members"][std::to_string(i)].push_back(temp);
        }
        return return_NZoqthj;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cTuMKZm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cTuMKZm=NULL;
        }
    temp_cTuMKZm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cTuMKZm;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_PFMjEwF;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_PFMjEwF=NULL;
        }
    temp_PFMjEwF=deserialize_char_p(name["members"]["pMessageIdName"]);
}();result.pMessageIdName=temp_PFMjEwF;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_OjDlnnS;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_OjDlnnS=NULL;
        }
    temp_OjDlnnS=deserialize_char_p(name["members"]["pMessage"]);
}();result.pMessage=temp_OjDlnnS;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_tyxBXSi;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_tyxBXSi=NULL;
        }
    temp_tyxBXSi=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int SoKastP=0; SoKastP < result.queueLabelCount; SoKastP++){
            [&]() {
temp_tyxBXSi[SoKastP]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][SoKastP]);}();;
        }
        }();result.pQueueLabels=temp_tyxBXSi;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_vwIImGy;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_vwIImGy=NULL;
        }
    temp_vwIImGy=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int fQKDjMs=0; fQKDjMs < result.cmdBufLabelCount; fQKDjMs++){
            [&]() {
temp_vwIImGy[fQKDjMs]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][fQKDjMs]);}();;
        }
        }();result.pCmdBufLabels=temp_vwIImGy;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_KzywUoa;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_KzywUoa=NULL;
        }
    temp_KzywUoa=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int hBJGoKM=0; hBJGoKM < result.objectCount; hBJGoKM++){
            [&]() {
temp_KzywUoa[hBJGoKM]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][hBJGoKM]);}();;
        }
        }();result.pObjects=temp_KzywUoa;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DmuHeLv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IQcCUzn=json({});
    
        if (name.pNext==NULL){
            return_IQcCUzn["null"]=true;
            return return_IQcCUzn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_ePyKgya=json({});
    return_ePyKgya=[&]() {
    json return_rLWDOhR=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_ePyKgya;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dHryrbh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lQTpneM=json({});
    
        if (name.pNext==NULL){
            return_lQTpneM["null"]=true;
            return return_lQTpneM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HJsuRvU=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_DsKpMbw=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_hnFvYxy=json({});
    
        if (name.pUserData==NULL){
            return_hnFvYxy["null"]=true;
            return return_hnFvYxy;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sXuyzfm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sXuyzfm=NULL;
        }
    temp_sXuyzfm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sXuyzfm;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LYMPSzA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AaVnvqv=json({});
    
        if (name.pNext==NULL){
            return_AaVnvqv["null"]=true;
            return return_AaVnvqv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BqeLhTb=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_toygfmL=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_QadqTpM=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_uZlXObR=json({});
    return_uZlXObR=[&]() {
    json return_PJMMaPs=json({});
    return serialize_uint64_t(name.size);}();return return_uZlXObR;}();
result["members"]["objectType"]=[&]() {
    json return_webeKFI=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_GPUmtsA=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_tvzTQsC=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xpkOtDM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oDURnzb=json({});
    
        if (name.pNext==NULL){
            return_oDURnzb["null"]=true;
            return return_oDURnzb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_KmNvQFS=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_eFXYzGK=json({});
    
        if (name.pHostPointer==NULL){
            return_eFXYzGK["null"]=true;
            return return_eFXYzGK;
        }
        return serialize_void_p(name.pHostPointer);
}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RBaLSfG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RBaLSfG=NULL;
        }
    temp_RBaLSfG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RBaLSfG;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LDfETuB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SojsEHb=json({});
    
        if (name.pNext==NULL){
            return_SojsEHb["null"]=true;
            return return_SojsEHb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_LwGHHVl=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_euuqfnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UuflANf=json({});
    
        if (name.pNext==NULL){
            return_UuflANf["null"]=true;
            return return_UuflANf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_zMVZuBq=json({});
    return_zMVZuBq=[&]() {
    json return_WrEtUZK=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_zMVZuBq;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FiouHIt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tiUxyNQ=json({});
    
        if (name.pNext==NULL){
            return_tiUxyNQ["null"]=true;
            return return_tiUxyNQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_ceschFZ=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_qnQhefm=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_OmqawcO=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_vHWIuDI=json({});
    return_vHWIuDI=[&]() {
    json return_kyyjrJQ=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_vHWIuDI;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_wFXrcsB=json({});
    return_wFXrcsB=[&]() {
    json return_ILGHUKY=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_wFXrcsB;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_BziQoEW=json({});
    return_BziQoEW=[&]() {
    json return_qouulOv=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_BziQoEW;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_EizGedZ=json({});
    return_EizGedZ=[&]() {
    json return_uSbsiyk=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_EizGedZ;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_rEIKrJI=json({});
    return_rEIKrJI=[&]() {
    json return_BrimiyH=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_rEIKrJI;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_BPpeewz=json({});
    return_BPpeewz=[&]() {
    json return_GVieIuO=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_BPpeewz;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MgmKHin=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sfvlEJW=json({});
    
        if (name.pNext==NULL){
            return_sfvlEJW["null"]=true;
            return return_sfvlEJW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timeDomain"]=[&]() {
    json return_JvkiIfw=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_liZwlOx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_liZwlOx=NULL;
        }
    temp_liZwlOx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_liZwlOx;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YRcfZhz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NWishrE=json({});
    
        if (name.pNext==NULL){
            return_NWishrE["null"]=true;
            return return_NWishrE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_yrPdGjw=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_BwSEsRS=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_uosXIsG=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_UBgQUAU=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_WMvmBSY=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_vTyvAKb=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_DVUrrBl=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_wfdcTlx=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_FyLxtmc=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_PuIMrmJ=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_gtzkRdr=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_njmSUyY=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_yunZzCM=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_BAkehtd=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HrJUCPg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LNQrLlp=json({});
    
        if (name.pNext==NULL){
            return_LNQrLlp["null"]=true;
            return return_LNQrLlp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_CwoKhmq=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_dKCPZTr=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_baSBegI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OyBbdeo=json({});
    
        if (name.pNext==NULL){
            return_OyBbdeo["null"]=true;
            return return_OyBbdeo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XwdJdQK=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_NslfFRq=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_SXtMXgn=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tcDADei;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tcDADei=NULL;
        }
    temp_tcDADei=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tcDADei;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cFlOXal=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rSrfJVt=json({});
    
        if (name.pNext==NULL){
            return_rSrfJVt["null"]=true;
            return return_rSrfJVt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_skqwuIj=json({});
    return_skqwuIj=[&]() {
    json return_dNfRRol=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_skqwuIj;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_ulZmrIE=json({});
    return_ulZmrIE=[&]() {
    json return_TRFsPnX=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_ulZmrIE;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_lYIDAsO=json({});
    return_lYIDAsO=[&]() {
    json return_PsAaVgp=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_lYIDAsO;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_FqTpVPD=json({});
    return_FqTpVPD=[&]() {
    json return_ourlQQT=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_FqTpVPD;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_lHfTtQO=json({});
    return_lHfTtQO=[&]() {
    json return_FJqyGSS=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_lHfTtQO;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_Iqkylas=json({});
    return_Iqkylas=[&]() {
    json return_eAeAYQY=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_Iqkylas;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_ThGcBzp=json({});
    return_ThGcBzp=[&]() {
    json return_CkClylc=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_ThGcBzp;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_imjGOVK=json({});
    return_imjGOVK=[&]() {
    json return_vEQSdMj=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_imjGOVK;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_uhyQgXw=json({});
    return_uhyQgXw=[&]() {
    json return_OXqoVFt=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_uhyQgXw;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_jKcgIZm=json({});
    return_jKcgIZm=[&]() {
    json return_axgTJaY=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_jKcgIZm;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_ozQqHEX=json({});
    return_ozQqHEX=[&]() {
    json return_yYSuAmH=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_ozQqHEX;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_LSMKgiQ=json({});
    return_LSMKgiQ=[&]() {
    json return_xQueqXQ=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_LSMKgiQ;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_HwowdTd=json({});
    return_HwowdTd=[&]() {
    json return_wxbFNNw=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_HwowdTd;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_IJiLUqE=json({});
    return_IJiLUqE=[&]() {
    json return_tkVqADY=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_IJiLUqE;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_iQcrMgG=json({});
    return_iQcrMgG=[&]() {
    json return_ISnJYix=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_iQcrMgG;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_tWwUOgQ=json({});
    return_tWwUOgQ=[&]() {
    json return_uJDEPeh=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_tWwUOgQ;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_LdBocld=json({});
    return_LdBocld=[&]() {
    json return_xNDRFPA=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_LdBocld;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_rhsqswE=json({});
    return_rhsqswE=[&]() {
    json return_UfyHPGG=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_rhsqswE;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_TUFKPnY=json({});
    return_TUFKPnY=[&]() {
    json return_DgSoiBO=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_TUFKPnY;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_EnvYXUe=json({});
    return_EnvYXUe=[&]() {
    json return_eeAlDDA=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_EnvYXUe;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JuatNUq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_daTxPRX=json({});
    
        if (name.pNext==NULL){
            return_daTxPRX["null"]=true;
            return return_daTxPRX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_RcnKFOn=json({});
    return_RcnKFOn=[&]() {
    json return_KKPSuPT=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_RcnKFOn;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_uhClWTl=json({});
    return_uhClWTl=[&]() {
    json return_wdSKTSr=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_uhClWTl;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_PtIsbDF=json({});
    return_PtIsbDF=[&]() {
    json return_GaKqlwe=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_PtIsbDF;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_BMqyJMS=json({});
    return_BMqyJMS=[&]() {
    json return_uoeAOVa=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_BMqyJMS;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_BWXigKe=json({});
    return_BWXigKe=[&]() {
    json return_bLRZvXw=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_BWXigKe;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_xeLtGIG=json({});
    return_xeLtGIG=[&]() {
    json return_TOdqFNW=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_xeLtGIG;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_GNdGHkn=json({});
    return_GNdGHkn=[&]() {
    json return_rSHDpYN=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_GNdGHkn;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_CtAamQI=json({});
    return_CtAamQI=[&]() {
    json return_IaoPHwe=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_CtAamQI;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_pZFrApV=json({});
    return_pZFrApV=[&]() {
    json return_aKzWfnP=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_pZFrApV;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_CJMMgBG=json({});
    return_CJMMgBG=[&]() {
    json return_XBNKjYX=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_CJMMgBG;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_kqmiiLd=json({});
    return_kqmiiLd=[&]() {
    json return_quaxmMn=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_kqmiiLd;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_FxkXTTE=json({});
    return_FxkXTTE=[&]() {
    json return_BkbpGuk=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_FxkXTTE;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_MDsOujf=json({});
    return_MDsOujf=[&]() {
    json return_cMDmdNs=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_MDsOujf;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_mDqmACu=json({});
    return_mDqmACu=[&]() {
    json return_gNTOKyr=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_mDqmACu;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_KRVQdBn=json({});
    return_KRVQdBn=[&]() {
    json return_EDiWYQO=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_KRVQdBn;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_WLVeDIp=json({});
    return_WLVeDIp=[&]() {
    json return_yUJrIct=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_WLVeDIp;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_BzaqpQM=json({});
    return_BzaqpQM=[&]() {
    json return_wfisbQv=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_BzaqpQM;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_dEUfbQh=json({});
    return_dEUfbQh=[&]() {
    json return_KfJCJtx=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_dEUfbQh;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_eYrzrUL=json({});
    return_eYrzrUL=[&]() {
    json return_WlMvHud=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_eYrzrUL;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_mTiQOLl=json({});
    return_mTiQOLl=[&]() {
    json return_rvYsxSh=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_mTiQOLl;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ebbPaDM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SvCtOIC=json({});
    
        if (name.pNext==NULL){
            return_SvCtOIC["null"]=true;
            return return_SvCtOIC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_sppNQFe=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_ibgeQaP=json({});
    return_ibgeQaP=[&]() {
    json return_JRDCTUt=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_ibgeQaP;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_RXSVQPr=json({});
    return_RXSVQPr=[&]() {
    json return_MyBvNTW=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_RXSVQPr;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_IggmQeS=json({});
    return_IggmQeS=[&]() {
    json return_etFyrSX=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_IggmQeS;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_pQRAEPR=json({});
    return_pQRAEPR=[&]() {
    json return_vzfNznI=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_pQRAEPR;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_eLXSFxu=json({});
    return_eLXSFxu=[&]() {
    json return_XWvExwg=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_eLXSFxu;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_yDqVCJX=json({});
    return_yDqVCJX=[&]() {
    json return_pIPbqEC=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_yDqVCJX;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_ALVLOXL=json({});
    return_ALVLOXL=[&]() {
    json return_XhAetdN=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_ALVLOXL;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_XRQgwwm=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_lsbtnkT=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_QyezwHG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_maLGPKE=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_EnEusCC=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_IUBvSLi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_NsVUsBg=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_BmEKaSw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_PcWqhbv=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_XNGZrmZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_uHgRUrZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_lNDBkFO=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_jWJvrPB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_TIKrFft=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_cQyHxcq=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xIMvVNo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XMOnnIL=json({});
    
        if (name.pNext==NULL){
            return_XMOnnIL["null"]=true;
            return return_XMOnnIL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_gdGOptg=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_oeoMozZ=json({});
    return_oeoMozZ=[&]() {
    json return_WfmYYew=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_oeoMozZ;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_mQsHSOC=json({});
    return_mQsHSOC=[&]() {
    json return_CpQMeiC=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_mQsHSOC;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_gYQlctP=json({});
    return_gYQlctP=[&]() {
    json return_wmqlsWa=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_gYQlctP;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_uEtqCqo=json({});
    return_uEtqCqo=[&]() {
    json return_krPBOQz=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_uEtqCqo;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_puHbgix=json({});
    return_puHbgix=[&]() {
    json return_GpzhEfZ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_puHbgix;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_IibiHYZ=json({});
    return_IibiHYZ=[&]() {
    json return_nJtIYqS=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_IibiHYZ;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_UxXcJjQ=json({});
    return_UxXcJjQ=[&]() {
    json return_wXGqQaH=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_UxXcJjQ;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_sQCGvPx=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_EOsMsLE=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_BnYRwZF=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_UUbdwCf=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_WrdlQBs=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_eqTRMVG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_UjiSXSh=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_nMtRFDs=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_MoBPLES=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_dZwaJfO=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_xYyEaHC=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_GjEhkYk=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_JhgOCzc=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_JRfpijj=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_DyoLHKN=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BHZckJA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lTtSLah=json({});
    
        if (name.pNext==NULL){
            return_lTtSLah["null"]=true;
            return return_lTtSLah;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_uEJdSae=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_EfhZRai=json({});
    
        if (name.pBindingFlags==NULL){
            return_EfhZRai["null"]=true;
            return return_EfhZRai;
        }
        
        return_EfhZRai["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_PdIJRFX=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_EfhZRai["members"][std::to_string(i)].push_back(temp);
        }
        return return_EfhZRai;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_roehcTP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_roehcTP=NULL;
        }
    temp_roehcTP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_roehcTP;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_vHksLEx;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_vHksLEx=NULL;
        }
    temp_vHksLEx=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int ebvPIAG=0; ebvPIAG < result.bindingCount; ebvPIAG++){
            [&]() {
temp_vHksLEx[ebvPIAG]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][ebvPIAG]);}();;
        }
        }();result.pBindingFlags=temp_vHksLEx;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bRMZlMa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hRWqunw=json({});
    
        if (name.pNext==NULL){
            return_hRWqunw["null"]=true;
            return return_hRWqunw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_yDqOlAW=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_bqitgag=json({});
    
        if (name.pBindingFlags==NULL){
            return_bqitgag["null"]=true;
            return return_bqitgag;
        }
        
        return_bqitgag["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_DCfdPXx=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_bqitgag["members"][std::to_string(i)].push_back(temp);
        }
        return return_bqitgag;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nDtnJWg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nDtnJWg=NULL;
        }
    temp_nDtnJWg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nDtnJWg;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_vzaGojL;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_vzaGojL=NULL;
        }
    temp_vzaGojL=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int rpNubWl=0; rpNubWl < result.bindingCount; rpNubWl++){
            [&]() {
temp_vzaGojL[rpNubWl]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][rpNubWl]);}();;
        }
        }();result.pBindingFlags=temp_vzaGojL;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZkeUzqa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WRZVxhK=json({});
    
        if (name.pNext==NULL){
            return_WRZVxhK["null"]=true;
            return return_WRZVxhK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_mLgEeNZ=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_IjMAMNU=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_IjMAMNU["null"]=true;
            return return_IjMAMNU;
        }
        
        return_IjMAMNU["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_ikiNgrn=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_IjMAMNU["members"][std::to_string(i)].push_back(temp);
        }
        return return_IjMAMNU;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sNFKZlD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sNFKZlD=NULL;
        }
    temp_sNFKZlD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sNFKZlD;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_gvlCOLn;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_gvlCOLn=NULL;
        }
    temp_gvlCOLn=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int qlyuKyP=0; qlyuKyP < result.descriptorSetCount; qlyuKyP++){
            [&]() {
temp_gvlCOLn[qlyuKyP]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][qlyuKyP]);}();;
        }
        }();result.pDescriptorCounts=temp_gvlCOLn;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NZyZQry=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rcADPsM=json({});
    
        if (name.pNext==NULL){
            return_rcADPsM["null"]=true;
            return return_rcADPsM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_KJfSAzj=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_mHoNmWX=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_mHoNmWX["null"]=true;
            return return_mHoNmWX;
        }
        
        return_mHoNmWX["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_ATYCjbB=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_mHoNmWX["members"][std::to_string(i)].push_back(temp);
        }
        return return_mHoNmWX;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pbeohNl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pbeohNl=NULL;
        }
    temp_pbeohNl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pbeohNl;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_aRhfwyv;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_aRhfwyv=NULL;
        }
    temp_aRhfwyv=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int eKaqdVb=0; eKaqdVb < result.descriptorSetCount; eKaqdVb++){
            [&]() {
temp_aRhfwyv[eKaqdVb]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][eKaqdVb]);}();;
        }
        }();result.pDescriptorCounts=temp_aRhfwyv;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SkmbUbv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FnRWLpV=json({});
    
        if (name.pNext==NULL){
            return_FnRWLpV["null"]=true;
            return return_FnRWLpV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_TgYfcYi=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sUjNYtF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KGbyEag=json({});
    
        if (name.pNext==NULL){
            return_KGbyEag["null"]=true;
            return return_KGbyEag;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_odqXLVA=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GMIukNB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XyzuKHU=json({});
    
        if (name.pNext==NULL){
            return_XyzuKHU["null"]=true;
            return return_XyzuKHU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yJjQsvU=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_GtVJuFR=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_SyVPRSH=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_lhdnvQg=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_krltlFE=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_IsvHmsv=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_xLhcKNR=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_lhVDvsz=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ibwrRxH=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PatIBlU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PatIBlU=NULL;
        }
    temp_PatIBlU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PatIBlU;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XsKaxkJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hBsafcX=json({});
    
        if (name.pNext==NULL){
            return_hBsafcX["null"]=true;
            return return_hBsafcX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jnNTCeS=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_SVZsNIu=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_YYFvllT=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_DwsHbDC=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_NcOaZOe=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_qvpSuIN=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_XcfiKEf=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_yXyexUf=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_TRqnOYN=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EbrFLWV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EbrFLWV=NULL;
        }
    temp_EbrFLWV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EbrFLWV;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VaemgPY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Jkhnzth=json({});
    
        if (name.pNext==NULL){
            return_Jkhnzth["null"]=true;
            return return_Jkhnzth;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_cbQiyAZ=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_kzMcCvk=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_iINHagA=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_faCVXwB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_faCVXwB=NULL;
        }
    temp_faCVXwB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_faCVXwB;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OefqQak=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QaoCUwp=json({});
    
        if (name.pNext==NULL){
            return_QaoCUwp["null"]=true;
            return return_QaoCUwp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_QSauQDI=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_WJWbyoz=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_awNhwcH=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mtgYgdn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mtgYgdn=NULL;
        }
    temp_mtgYgdn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mtgYgdn;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cHXfulS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XBaUgdd=json({});
    
        if (name.pNext==NULL){
            return_XBaUgdd["null"]=true;
            return return_XBaUgdd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BHBVdwK=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_JfuYmgY=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_UtYWjKF=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_CQdTJYk=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_igRpsvD=json({});
    
        if (name.pInputAttachments==NULL){
            return_igRpsvD["null"]=true;
            return return_igRpsvD;
        }
        
        return_igRpsvD["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_LCWlrOq=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_igRpsvD["members"][std::to_string(i)].push_back(temp);
        }
        return return_igRpsvD;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_GaXDchA=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_nnszQJw=json({});
    
        if (name.pColorAttachments==NULL){
            return_nnszQJw["null"]=true;
            return return_nnszQJw;
        }
        
        return_nnszQJw["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_TGCDfcQ=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_nnszQJw["members"][std::to_string(i)].push_back(temp);
        }
        return return_nnszQJw;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_hVmidNt=json({});
    
        if (name.pResolveAttachments==NULL){
            return_hVmidNt["null"]=true;
            return return_hVmidNt;
        }
        
        return_hVmidNt["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_cPqECSS=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_hVmidNt["members"][std::to_string(i)].push_back(temp);
        }
        return return_hVmidNt;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_EgsaiBY=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_EgsaiBY["null"]=true;
            return return_EgsaiBY;
        }
        return_EgsaiBY=[&]() {
    json return_GXDuCrT=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_EgsaiBY;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_xRqUSnd=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_avFkpRy=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_avFkpRy["null"]=true;
            return return_avFkpRy;
        }
        
        return_avFkpRy["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_Wwrtinz=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_avFkpRy["members"][std::to_string(i)].push_back(temp);
        }
        return return_avFkpRy;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UJYWlnZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UJYWlnZ=NULL;
        }
    temp_UJYWlnZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UJYWlnZ;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_HPIoVty;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_HPIoVty=NULL;
        }
    temp_HPIoVty=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int oCLnHQg=0; oCLnHQg < result.inputAttachmentCount; oCLnHQg++){
            [&]() {
temp_HPIoVty[oCLnHQg]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][oCLnHQg]);}();;
        }
        }();result.pInputAttachments=temp_HPIoVty;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_GKuiCiJ;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_GKuiCiJ=NULL;
        }
    temp_GKuiCiJ=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int hWnBJnU=0; hWnBJnU < result.colorAttachmentCount; hWnBJnU++){
            [&]() {
temp_GKuiCiJ[hWnBJnU]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][hWnBJnU]);}();;
        }
        }();result.pColorAttachments=temp_GKuiCiJ;}();
[&]() {
VkAttachmentReference2* temp_YemJCdo;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_YemJCdo=NULL;
        }
    temp_YemJCdo=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int IzPOMxc=0; IzPOMxc < result.colorAttachmentCount; IzPOMxc++){
            [&]() {
temp_YemJCdo[IzPOMxc]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][IzPOMxc]);}();;
        }
        }();result.pResolveAttachments=temp_YemJCdo;}();
[&]() {
VkAttachmentReference2* temp_lKgiBrL;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_lKgiBrL=NULL;
        }
    [&]() {
*(temp_lKgiBrL)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_lKgiBrL;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_LzblNNV;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_LzblNNV=NULL;
        }
    temp_LzblNNV=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int qMxBBjy=0; qMxBBjy < result.preserveAttachmentCount; qMxBBjy++){
            [&]() {
temp_LzblNNV[qMxBBjy]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][qMxBBjy]);}();;
        }
        }();result.pPreserveAttachments=temp_LzblNNV;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aRtWwQK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZYeHcTl=json({});
    
        if (name.pNext==NULL){
            return_ZYeHcTl["null"]=true;
            return return_ZYeHcTl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wgwEbmW=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_tGdIcLz=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_YfVyTrb=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_XwAdXVX=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_HXpDSHR=json({});
    
        if (name.pInputAttachments==NULL){
            return_HXpDSHR["null"]=true;
            return return_HXpDSHR;
        }
        
        return_HXpDSHR["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_KNOEpwm=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_HXpDSHR["members"][std::to_string(i)].push_back(temp);
        }
        return return_HXpDSHR;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_NjVbGnY=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_QtmZwOW=json({});
    
        if (name.pColorAttachments==NULL){
            return_QtmZwOW["null"]=true;
            return return_QtmZwOW;
        }
        
        return_QtmZwOW["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_gUGztkh=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_QtmZwOW["members"][std::to_string(i)].push_back(temp);
        }
        return return_QtmZwOW;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_HyMvKjp=json({});
    
        if (name.pResolveAttachments==NULL){
            return_HyMvKjp["null"]=true;
            return return_HyMvKjp;
        }
        
        return_HyMvKjp["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_rGIEhuF=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_HyMvKjp["members"][std::to_string(i)].push_back(temp);
        }
        return return_HyMvKjp;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_KxfoCKA=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_KxfoCKA["null"]=true;
            return return_KxfoCKA;
        }
        return_KxfoCKA=[&]() {
    json return_HghskWy=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_KxfoCKA;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_jresCcM=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_yMBCHzg=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_yMBCHzg["null"]=true;
            return return_yMBCHzg;
        }
        
        return_yMBCHzg["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ZLGAHGV=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_yMBCHzg["members"][std::to_string(i)].push_back(temp);
        }
        return return_yMBCHzg;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SgxVZdY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SgxVZdY=NULL;
        }
    temp_SgxVZdY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SgxVZdY;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_dCoRKrz;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_dCoRKrz=NULL;
        }
    temp_dCoRKrz=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int nYXBRlM=0; nYXBRlM < result.inputAttachmentCount; nYXBRlM++){
            [&]() {
temp_dCoRKrz[nYXBRlM]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][nYXBRlM]);}();;
        }
        }();result.pInputAttachments=temp_dCoRKrz;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_VsSXzxb;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_VsSXzxb=NULL;
        }
    temp_VsSXzxb=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int qTEsUMP=0; qTEsUMP < result.colorAttachmentCount; qTEsUMP++){
            [&]() {
temp_VsSXzxb[qTEsUMP]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][qTEsUMP]);}();;
        }
        }();result.pColorAttachments=temp_VsSXzxb;}();
[&]() {
VkAttachmentReference2* temp_evEiQin;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_evEiQin=NULL;
        }
    temp_evEiQin=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int xISeybI=0; xISeybI < result.colorAttachmentCount; xISeybI++){
            [&]() {
temp_evEiQin[xISeybI]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][xISeybI]);}();;
        }
        }();result.pResolveAttachments=temp_evEiQin;}();
[&]() {
VkAttachmentReference2* temp_IVGAsDj;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_IVGAsDj=NULL;
        }
    [&]() {
*(temp_IVGAsDj)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_IVGAsDj;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_JlYzPLu;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_JlYzPLu=NULL;
        }
    temp_JlYzPLu=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int HHRWmEG=0; HHRWmEG < result.preserveAttachmentCount; HHRWmEG++){
            [&]() {
temp_JlYzPLu[HHRWmEG]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][HHRWmEG]);}();;
        }
        }();result.pPreserveAttachments=temp_JlYzPLu;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tXngoXo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YVkBcEb=json({});
    
        if (name.pNext==NULL){
            return_YVkBcEb["null"]=true;
            return return_YVkBcEb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_fwjWGAm=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_MLIBqBr=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_uTOLZIj=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_AbkHsFT=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_vJrIOpG=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_CPwenhw=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_LfvhUoc=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_MhTKfhP=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nKniEjW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nKniEjW=NULL;
        }
    temp_nKniEjW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nKniEjW;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DOGfzGw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AYNlaCr=json({});
    
        if (name.pNext==NULL){
            return_AYNlaCr["null"]=true;
            return return_AYNlaCr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_LwlFDJn=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_mlInTmn=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_LBAEaOr=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_HfgizEP=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_fOqTGZW=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_xAJkRIS=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_zDjkfBu=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_PygVZkI=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dSUQQxo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dSUQQxo=NULL;
        }
    temp_dSUQQxo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dSUQQxo;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wbHroSj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZEUkkjo=json({});
    
        if (name.pNext==NULL){
            return_ZEUkkjo["null"]=true;
            return return_ZEUkkjo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_maPFNnH=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_KbKnddn=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_lZrcCvt=json({});
    
        if (name.pAttachments==NULL){
            return_lZrcCvt["null"]=true;
            return return_lZrcCvt;
        }
        
        return_lZrcCvt["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_iPDtbgy=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_lZrcCvt["members"][std::to_string(i)].push_back(temp);
        }
        return return_lZrcCvt;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_srmYlOE=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_pRnSuiQ=json({});
    
        if (name.pSubpasses==NULL){
            return_pRnSuiQ["null"]=true;
            return return_pRnSuiQ;
        }
        
        return_pRnSuiQ["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_AaLRzev=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_pRnSuiQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_pRnSuiQ;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_eCfPfiC=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_Wqvaujp=json({});
    
        if (name.pDependencies==NULL){
            return_Wqvaujp["null"]=true;
            return return_Wqvaujp;
        }
        
        return_Wqvaujp["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_dgcHzxq=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_Wqvaujp["members"][std::to_string(i)].push_back(temp);
        }
        return return_Wqvaujp;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_yIzQyJd=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_ybdAPyE=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_ybdAPyE["null"]=true;
            return return_ybdAPyE;
        }
        
        return_ybdAPyE["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_XbczzCf=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_ybdAPyE["members"][std::to_string(i)].push_back(temp);
        }
        return return_ybdAPyE;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_alTDelx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_alTDelx=NULL;
        }
    temp_alTDelx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_alTDelx;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_XeDgAnx;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_XeDgAnx=NULL;
        }
    temp_XeDgAnx=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int VTgqXET=0; VTgqXET < result.attachmentCount; VTgqXET++){
            [&]() {
temp_XeDgAnx[VTgqXET]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][VTgqXET]);}();;
        }
        }();result.pAttachments=temp_XeDgAnx;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_oWfHVro;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_oWfHVro=NULL;
        }
    temp_oWfHVro=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int qVCPepC=0; qVCPepC < result.subpassCount; qVCPepC++){
            [&]() {
temp_oWfHVro[qVCPepC]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][qVCPepC]);}();;
        }
        }();result.pSubpasses=temp_oWfHVro;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_jKIGKsn;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_jKIGKsn=NULL;
        }
    temp_jKIGKsn=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int OrHGeJl=0; OrHGeJl < result.dependencyCount; OrHGeJl++){
            [&]() {
temp_jKIGKsn[OrHGeJl]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][OrHGeJl]);}();;
        }
        }();result.pDependencies=temp_jKIGKsn;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_ccyfmgH;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_ccyfmgH=NULL;
        }
    temp_ccyfmgH=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int aVKQnkm=0; aVKQnkm < result.correlatedViewMaskCount; aVKQnkm++){
            [&]() {
temp_ccyfmgH[aVKQnkm]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][aVKQnkm]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_ccyfmgH;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FnzcClB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tzaZoAf=json({});
    
        if (name.pNext==NULL){
            return_tzaZoAf["null"]=true;
            return return_tzaZoAf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qHORULI=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_IGeaYDH=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_ygQhRKg=json({});
    
        if (name.pAttachments==NULL){
            return_ygQhRKg["null"]=true;
            return return_ygQhRKg;
        }
        
        return_ygQhRKg["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_zcwfNKf=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_ygQhRKg["members"][std::to_string(i)].push_back(temp);
        }
        return return_ygQhRKg;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_JnAyRsy=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_sKIcKAs=json({});
    
        if (name.pSubpasses==NULL){
            return_sKIcKAs["null"]=true;
            return return_sKIcKAs;
        }
        
        return_sKIcKAs["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_csXnbca=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_sKIcKAs["members"][std::to_string(i)].push_back(temp);
        }
        return return_sKIcKAs;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_tnuXiPk=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_BPdnclF=json({});
    
        if (name.pDependencies==NULL){
            return_BPdnclF["null"]=true;
            return return_BPdnclF;
        }
        
        return_BPdnclF["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_zqUgcDy=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_BPdnclF["members"][std::to_string(i)].push_back(temp);
        }
        return return_BPdnclF;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_uOiHAWE=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_NSzSdAJ=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_NSzSdAJ["null"]=true;
            return return_NSzSdAJ;
        }
        
        return_NSzSdAJ["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_olAykhH=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_NSzSdAJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_NSzSdAJ;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XjJBvsz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XjJBvsz=NULL;
        }
    temp_XjJBvsz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XjJBvsz;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_kDtuAxB;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_kDtuAxB=NULL;
        }
    temp_kDtuAxB=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int JbsrqgI=0; JbsrqgI < result.attachmentCount; JbsrqgI++){
            [&]() {
temp_kDtuAxB[JbsrqgI]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][JbsrqgI]);}();;
        }
        }();result.pAttachments=temp_kDtuAxB;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_poeotBD;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_poeotBD=NULL;
        }
    temp_poeotBD=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int vkSMfIc=0; vkSMfIc < result.subpassCount; vkSMfIc++){
            [&]() {
temp_poeotBD[vkSMfIc]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][vkSMfIc]);}();;
        }
        }();result.pSubpasses=temp_poeotBD;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_ScSTeXg;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_ScSTeXg=NULL;
        }
    temp_ScSTeXg=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int ZTpKKsr=0; ZTpKKsr < result.dependencyCount; ZTpKKsr++){
            [&]() {
temp_ScSTeXg[ZTpKKsr]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][ZTpKKsr]);}();;
        }
        }();result.pDependencies=temp_ScSTeXg;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_uwGStQa;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_uwGStQa=NULL;
        }
    temp_uwGStQa=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int xjRKfHD=0; xjRKfHD < result.correlatedViewMaskCount; xjRKfHD++){
            [&]() {
temp_uwGStQa[xjRKfHD]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][xjRKfHD]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_uwGStQa;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CoSYOEO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oIDNXnd=json({});
    
        if (name.pNext==NULL){
            return_oIDNXnd["null"]=true;
            return return_oIDNXnd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_IItreAL=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZPGOuyc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZPGOuyc=NULL;
        }
    temp_ZPGOuyc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZPGOuyc;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZnZITeA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HSBzdRp=json({});
    
        if (name.pNext==NULL){
            return_HSBzdRp["null"]=true;
            return return_HSBzdRp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_hTZzDHm=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sGTLgFK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sGTLgFK=NULL;
        }
    temp_sGTLgFK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sGTLgFK;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ssXRIal=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EKGmivm=json({});
    
        if (name.pNext==NULL){
            return_EKGmivm["null"]=true;
            return return_EKGmivm;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wXXuAtz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wXXuAtz=NULL;
        }
    temp_wXXuAtz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wXXuAtz;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eTdIYef=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BFOCfCL=json({});
    
        if (name.pNext==NULL){
            return_BFOCfCL["null"]=true;
            return return_BFOCfCL;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NkvWdDW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NkvWdDW=NULL;
        }
    temp_NkvWdDW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NkvWdDW;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YvlgtdQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBQdPde=json({});
    
        if (name.pNext==NULL){
            return_cBQdPde["null"]=true;
            return return_cBQdPde;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_wwNSstr=json({});
    return_wwNSstr=[&]() {
    json return_lnoNYiD=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_wwNSstr;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_srLMElR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sGATbBV=json({});
    
        if (name.pNext==NULL){
            return_sGATbBV["null"]=true;
            return return_sGATbBV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_wyqMDCd=json({});
    return_wyqMDCd=[&]() {
    json return_zUTeWZs=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_wyqMDCd;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_krKTRPm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wGxcrBj=json({});
    
        if (name.pNext==NULL){
            return_wGxcrBj["null"]=true;
            return return_wGxcrBj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_vWlpfnL=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kehorwc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EcUWxxT=json({});
    
        if (name.pNext==NULL){
            return_EcUWxxT["null"]=true;
            return return_EcUWxxT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_DrpIfrC=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fXZGDgu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_arSpnRD=json({});
    
        if (name.pNext==NULL){
            return_arSpnRD["null"]=true;
            return return_arSpnRD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_RTZQTQq=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_DUroslc=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LcELpzH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LcELpzH=NULL;
        }
    temp_LcELpzH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LcELpzH;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ppueJDi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jAnpiCh=json({});
    
        if (name.pNext==NULL){
            return_jAnpiCh["null"]=true;
            return return_jAnpiCh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_wCDoswN=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_JXEjvzb=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aLoVsui;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aLoVsui=NULL;
        }
    temp_aLoVsui=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aLoVsui;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CjMFFUb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EeiyJAk=json({});
    
        if (name.pNext==NULL){
            return_EeiyJAk["null"]=true;
            return return_EeiyJAk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_FcHGPnm=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_TnroKDJ=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_TnroKDJ["null"]=true;
            return return_TnroKDJ;
        }
        
        return_TnroKDJ["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_GystoAL=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_TnroKDJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_TnroKDJ;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_cklaSkF=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_dVpNDxb=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_dVpNDxb["null"]=true;
            return return_dVpNDxb;
        }
        
        return_dVpNDxb["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_QGliIgh=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_dVpNDxb["members"][std::to_string(i)].push_back(temp);
        }
        return return_dVpNDxb;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_svYtFoI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_svYtFoI=NULL;
        }
    temp_svYtFoI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_svYtFoI;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_CcDgkwM;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_CcDgkwM=NULL;
        }
    temp_CcDgkwM=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int NTRVzti=0; NTRVzti < result.waitSemaphoreValueCount; NTRVzti++){
            [&]() {
temp_CcDgkwM[NTRVzti]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][NTRVzti]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_CcDgkwM;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_gaiieMA;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_gaiieMA=NULL;
        }
    temp_gaiieMA=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int CSSAauf=0; CSSAauf < result.signalSemaphoreValueCount; CSSAauf++){
            [&]() {
temp_gaiieMA[CSSAauf]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][CSSAauf]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_gaiieMA;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YXSkkOI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WWGeZlx=json({});
    
        if (name.pNext==NULL){
            return_WWGeZlx["null"]=true;
            return return_WWGeZlx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_fvinkeQ=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_kYhPRqg=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_kYhPRqg["null"]=true;
            return return_kYhPRqg;
        }
        
        return_kYhPRqg["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_duLLlxn=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_kYhPRqg["members"][std::to_string(i)].push_back(temp);
        }
        return return_kYhPRqg;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_kGiWhvv=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_VLDIDGz=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_VLDIDGz["null"]=true;
            return return_VLDIDGz;
        }
        
        return_VLDIDGz["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_GMCaEjZ=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_VLDIDGz["members"][std::to_string(i)].push_back(temp);
        }
        return return_VLDIDGz;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fKikREf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fKikREf=NULL;
        }
    temp_fKikREf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fKikREf;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_rmExKfF;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_rmExKfF=NULL;
        }
    temp_rmExKfF=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int EprUSaB=0; EprUSaB < result.waitSemaphoreValueCount; EprUSaB++){
            [&]() {
temp_rmExKfF[EprUSaB]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][EprUSaB]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_rmExKfF;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_EbySayo;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_EbySayo=NULL;
        }
    temp_EbySayo=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int SisGzXe=0; SisGzXe < result.signalSemaphoreValueCount; SisGzXe++){
            [&]() {
temp_EbySayo[SisGzXe]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][SisGzXe]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_EbySayo;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_crUvYXm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nCrBpHk=json({});
    
        if (name.pNext==NULL){
            return_nCrBpHk["null"]=true;
            return return_nCrBpHk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oMRoaZZ=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_hermmqC=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_XkXSQzn=json({});
    
        if (name.pSemaphores==NULL){
            return_XkXSQzn["null"]=true;
            return return_XkXSQzn;
        }
        
        return_XkXSQzn["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_yTiSssR=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_XkXSQzn["members"][std::to_string(i)].push_back(temp);
        }
        return return_XkXSQzn;
        }();
result["members"]["pValues"]=[&]() {
    json return_iDEeuVK=json({});
    
        if (name.pValues==NULL){
            return_iDEeuVK["null"]=true;
            return return_iDEeuVK;
        }
        
        return_iDEeuVK["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_fMZjCaa=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_iDEeuVK["members"][std::to_string(i)].push_back(temp);
        }
        return return_iDEeuVK;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iXiwoTL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iXiwoTL=NULL;
        }
    temp_iXiwoTL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iXiwoTL;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_RgBBDMU;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_RgBBDMU=NULL;
        }
    temp_RgBBDMU=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int wRYzxLx=0; wRYzxLx < result.semaphoreCount; wRYzxLx++){
            [&]() {
temp_RgBBDMU[wRYzxLx]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][wRYzxLx]);}();;
        }
        }();result.pSemaphores=temp_RgBBDMU;}();
[&]() {
uint64_t* temp_xeBKMDQ;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_xeBKMDQ=NULL;
        }
    temp_xeBKMDQ=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int qfLDFQL=0; qfLDFQL < result.semaphoreCount; qfLDFQL++){
            [&]() {
temp_xeBKMDQ[qfLDFQL]=deserialize_uint64_t(name["members"]["pValues"]["members"][qfLDFQL]);}();;
        }
        }();result.pValues=temp_xeBKMDQ;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_luNzRwh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_skMYmcn=json({});
    
        if (name.pNext==NULL){
            return_skMYmcn["null"]=true;
            return return_skMYmcn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aAmzveb=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_SCutWHN=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_zcYVVqv=json({});
    
        if (name.pSemaphores==NULL){
            return_zcYVVqv["null"]=true;
            return return_zcYVVqv;
        }
        
        return_zcYVVqv["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_NLZWqtZ=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_zcYVVqv["members"][std::to_string(i)].push_back(temp);
        }
        return return_zcYVVqv;
        }();
result["members"]["pValues"]=[&]() {
    json return_sIBmAKr=json({});
    
        if (name.pValues==NULL){
            return_sIBmAKr["null"]=true;
            return return_sIBmAKr;
        }
        
        return_sIBmAKr["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_XlPbHbx=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_sIBmAKr["members"][std::to_string(i)].push_back(temp);
        }
        return return_sIBmAKr;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YOTGwZR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YOTGwZR=NULL;
        }
    temp_YOTGwZR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YOTGwZR;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_NOamGgU;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_NOamGgU=NULL;
        }
    temp_NOamGgU=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int XiiJeZV=0; XiiJeZV < result.semaphoreCount; XiiJeZV++){
            [&]() {
temp_NOamGgU[XiiJeZV]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][XiiJeZV]);}();;
        }
        }();result.pSemaphores=temp_NOamGgU;}();
[&]() {
uint64_t* temp_pPJEpAg;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_pPJEpAg=NULL;
        }
    temp_pPJEpAg=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int cvZxNcf=0; cvZxNcf < result.semaphoreCount; cvZxNcf++){
            [&]() {
temp_pPJEpAg[cvZxNcf]=deserialize_uint64_t(name["members"]["pValues"]["members"][cvZxNcf]);}();;
        }
        }();result.pValues=temp_pPJEpAg;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HFrsgAs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HjraQNm=json({});
    
        if (name.pNext==NULL){
            return_HjraQNm["null"]=true;
            return return_HjraQNm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_HsZAMQc=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_mDJvOas=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_trpvkxn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_trpvkxn=NULL;
        }
    temp_trpvkxn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_trpvkxn;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oalWStL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rvAQDdc=json({});
    
        if (name.pNext==NULL){
            return_rvAQDdc["null"]=true;
            return return_rvAQDdc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_ogpkFFn=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_pMFvJFn=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ByfFRDh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ByfFRDh=NULL;
        }
    temp_ByfFRDh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ByfFRDh;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_Mdiyhgf=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_ntpHnUw=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VdwuZXd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aHIixNl=json({});
    
        if (name.pNext==NULL){
            return_aHIixNl["null"]=true;
            return return_aHIixNl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_QqpzNuu=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_LydZsJX=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_LydZsJX["null"]=true;
            return return_LydZsJX;
        }
        
        return_LydZsJX["members"]={};
        for(int i=0; i < name.vertexBindingDivisorCount; i++){
            json temp;
            temp=[&]() {
    json return_YPBqWdT=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[i]);}();
            return_LydZsJX["members"][std::to_string(i)].push_back(temp);
        }
        return return_LydZsJX;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XHuubDE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XHuubDE=NULL;
        }
    temp_XHuubDE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XHuubDE;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_IzIfReL;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_IzIfReL=NULL;
        }
    temp_IzIfReL=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int taStFCB=0; taStFCB < result.vertexBindingDivisorCount; taStFCB++){
            [&]() {
temp_IzIfReL[taStFCB]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][taStFCB]);}();;
        }
        }();result.pVertexBindingDivisors=temp_IzIfReL;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gAUBkgm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YonobfN=json({});
    
        if (name.pNext==NULL){
            return_YonobfN["null"]=true;
            return return_YonobfN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_disObEI=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aENJBDb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CgZcHMM=json({});
    
        if (name.pNext==NULL){
            return_CgZcHMM["null"]=true;
            return return_CgZcHMM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pciDomain"]=[&]() {
    json return_zvUXIfC=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_HadpxwT=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_vluBnwz=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_dBkjnPI=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bnZYnSy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OxjIDjf=json({});
    
        if (name.pNext==NULL){
            return_OxjIDjf["null"]=true;
            return return_OxjIDjf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_CjrVZFB=json({});
    return_CjrVZFB=[&]() {
    json return_XrcJrCk=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_CjrVZFB;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EIYkOkH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EIYkOkH=NULL;
        }
    temp_EIYkOkH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EIYkOkH;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Iehezqi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ahqktbS=json({});
    
        if (name.pNext==NULL){
            return_ahqktbS["null"]=true;
            return return_ahqktbS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_JhZqFom=json({});
    return_JhZqFom=[&]() {
    json return_UlnPbzf=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_JhZqFom;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_BUOyiBM=json({});
    return_BUOyiBM=[&]() {
    json return_ZZczUOy=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_BUOyiBM;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_wkQVxTp=json({});
    return_wkQVxTp=[&]() {
    json return_kYLAVdy=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_wkQVxTp;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OKYofuM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EOiORPf=json({});
    
        if (name.pNext==NULL){
            return_EOiORPf["null"]=true;
            return return_EOiORPf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_Ppwipyl=json({});
    return_Ppwipyl=[&]() {
    json return_htwOjDN=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_Ppwipyl;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_KvHlrxC=json({});
    return_KvHlrxC=[&]() {
    json return_yflWJpm=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_KvHlrxC;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_OMtQvLx=json({});
    return_OMtQvLx=[&]() {
    json return_BJHxsIy=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_OMtQvLx;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yTKkQVV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_osXBIkx=json({});
    
        if (name.pNext==NULL){
            return_osXBIkx["null"]=true;
            return return_osXBIkx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRendering"]=[&]() {
    json return_mYJBJuj=json({});
    return_mYJBJuj=[&]() {
    json return_gAevbQl=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_mYJBJuj;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_QOVDoqo=json({});
    return_QOVDoqo=[&]() {
    json return_uFjSMsY=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_QOVDoqo;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uXnsxdN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ojRcGMm=json({});
    
        if (name.pNext==NULL){
            return_ojRcGMm["null"]=true;
            return return_ojRcGMm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_lCJhoBj=json({});
    return_lCJhoBj=[&]() {
    json return_geVNgct=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_lCJhoBj;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_wyqvLyi=json({});
    return_wyqvLyi=[&]() {
    json return_XgFDnUV=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_wyqvLyi;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_USOBLzO=json({});
    return_USOBLzO=[&]() {
    json return_OsrmnBM=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_USOBLzO;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tibLzDB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tesKmsf=json({});
    
        if (name.pNext==NULL){
            return_tesKmsf["null"]=true;
            return return_tesKmsf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_fpyPsrC=json({});
    return_fpyPsrC=[&]() {
    json return_sDmvBYp=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_fpyPsrC;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_ZXctwgD=json({});
    return_ZXctwgD=[&]() {
    json return_jkvKMkF=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_ZXctwgD;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_idPbsyX=json({});
    return_idPbsyX=[&]() {
    json return_YiyDkSo=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_idPbsyX;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UkQdvcN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jpGNWKB=json({});
    
        if (name.pNext==NULL){
            return_jpGNWKB["null"]=true;
            return return_jpGNWKB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_pVOdNRd=json({});
    return_pVOdNRd=[&]() {
    json return_sWCmQhW=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_pVOdNRd;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_BnGzNuu=json({});
    return_BnGzNuu=[&]() {
    json return_hptdziE=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_BnGzNuu;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_peAEvGS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OaCwXcO=json({});
    
        if (name.pNext==NULL){
            return_OaCwXcO["null"]=true;
            return return_OaCwXcO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_piRcIsR=json({});
    return_piRcIsR=[&]() {
    json return_BSYjldl=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_piRcIsR;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_fFsJStZ=json({});
    return_fFsJStZ=[&]() {
    json return_cxJyBWt=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_fFsJStZ;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_twDjMcj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qNLdnmj=json({});
    
        if (name.pNext==NULL){
            return_qNLdnmj["null"]=true;
            return return_qNLdnmj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_JLLJaCk=json({});
    return_JLLJaCk=[&]() {
    json return_RRlJKSO=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_JLLJaCk;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_dIjUSNT=json({});
    return_dIjUSNT=[&]() {
    json return_MWkxGRd=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_dIjUSNT;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_bHOwtOC=json({});
    return_bHOwtOC=[&]() {
    json return_vwzTJDF=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_bHOwtOC;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_uMYnsEC=json({});
    return_uMYnsEC=[&]() {
    json return_rUaDTOQ=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_uMYnsEC;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_Gusrrss=json({});
    return_Gusrrss=[&]() {
    json return_eKtpXAE=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_Gusrrss;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_wfPPhkR=json({});
    return_wfPPhkR=[&]() {
    json return_kTTtVOS=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_wfPPhkR;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_tLFwkdC=json({});
    return_tLFwkdC=[&]() {
    json return_MpLwKMG=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_tLFwkdC;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_RIMSewM=json({});
    return_RIMSewM=[&]() {
    json return_fwouHZO=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_RIMSewM;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_OVDpOJA=json({});
    return_OVDpOJA=[&]() {
    json return_FiklXBP=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_OVDpOJA;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_SZdMGlf=json({});
    return_SZdMGlf=[&]() {
    json return_MMYgHEP=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_SZdMGlf;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_NhInJWl=json({});
    return_NhInJWl=[&]() {
    json return_zYLvPIE=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_NhInJWl;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_iByDvOl=json({});
    return_iByDvOl=[&]() {
    json return_VwlkwAl=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_iByDvOl;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tIvhUkC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KlcCHiQ=json({});
    
        if (name.pNext==NULL){
            return_KlcCHiQ["null"]=true;
            return return_KlcCHiQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_VRdHnEp=json({});
    return_VRdHnEp=[&]() {
    json return_UIwHfsT=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_VRdHnEp;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_brFSwiT=json({});
    return_brFSwiT=[&]() {
    json return_OxSuPeM=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_brFSwiT;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_JlGSTyH=json({});
    return_JlGSTyH=[&]() {
    json return_gLedQBL=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_JlGSTyH;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_FaPWKAQ=json({});
    return_FaPWKAQ=[&]() {
    json return_ySPNYfe=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_FaPWKAQ;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_tSlJxCB=json({});
    return_tSlJxCB=[&]() {
    json return_BhUACuZ=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_tSlJxCB;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_pvBgmfa=json({});
    return_pvBgmfa=[&]() {
    json return_zxzBiph=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_pvBgmfa;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_IkNYJJf=json({});
    return_IkNYJJf=[&]() {
    json return_SSVdJGI=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_IkNYJJf;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_yeiDvnH=json({});
    return_yeiDvnH=[&]() {
    json return_MvflHCG=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_yeiDvnH;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_GKZJOTZ=json({});
    return_GKZJOTZ=[&]() {
    json return_wWGVjYb=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_GKZJOTZ;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_qNUYoQb=json({});
    return_qNUYoQb=[&]() {
    json return_eXtsxLu=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_qNUYoQb;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_lUPsBvX=json({});
    return_lUPsBvX=[&]() {
    json return_fEUDGVo=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_lUPsBvX;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_jFvMzQJ=json({});
    return_jFvMzQJ=[&]() {
    json return_gWxbDpV=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_jFvMzQJ;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WPVLOpm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UJrwcnO=json({});
    
        if (name.pNext==NULL){
            return_UJrwcnO["null"]=true;
            return return_UJrwcnO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_PvrrsPF=json({});
    return_PvrrsPF=[&]() {
    json return_wQGKpPl=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_PvrrsPF;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_azSQiHm=json({});
    return_azSQiHm=[&]() {
    json return_UGMqVGD=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_azSQiHm;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hDddgPH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pbsaRPk=json({});
    
        if (name.pNext==NULL){
            return_pbsaRPk["null"]=true;
            return return_pbsaRPk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_aIuEGGy=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yzPcAot=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LLKCNOL=json({});
    
        if (name.pNext==NULL){
            return_LLKCNOL["null"]=true;
            return return_LLKCNOL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_BKyIURF=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_nUCfsPw=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_nUCfsPw["null"]=true;
            return return_nUCfsPw;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yHhMbYn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uYeHqvC=json({});
    
        if (name.pNext==NULL){
            return_uYeHqvC["null"]=true;
            return return_uYeHqvC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_Xkxylju=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_tZGYHTk=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_LSoZgBx=json({});
    return_LSoZgBx=[&]() {
    json return_bGsClmG=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_LSoZgBx;}();
result["members"]["independentResolve"]=[&]() {
    json return_HeBaVWA=json({});
    return_HeBaVWA=[&]() {
    json return_nWqDZsQ=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_HeBaVWA;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AVCTVpt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YzzXKtH=json({});
    
        if (name.pNext==NULL){
            return_YzzXKtH["null"]=true;
            return return_YzzXKtH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_iXgYfQr=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_CZZNLFg=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_orzDMio=json({});
    return_orzDMio=[&]() {
    json return_BDQAvDZ=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_orzDMio;}();
result["members"]["independentResolve"]=[&]() {
    json return_OoUITXm=json({});
    return_OoUITXm=[&]() {
    json return_CyiZhUz=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_OoUITXm;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dMhIFBA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tZezAHg=json({});
    
        if (name.pNext==NULL){
            return_tZezAHg["null"]=true;
            return return_tZezAHg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_CqRztuw=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_FpgfheK=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_fdjlzbU=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_fdjlzbU["null"]=true;
            return return_fdjlzbU;
        }
        return_fdjlzbU=[&]() {
    json return_fsaPtQV=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_fdjlzbU;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bcTbXBB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bcTbXBB=NULL;
        }
    temp_bcTbXBB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bcTbXBB;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_dOGJKlu;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_dOGJKlu=NULL;
        }
    [&]() {
*(temp_dOGJKlu)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_dOGJKlu;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rUqTEhb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LqGkOGv=json({});
    
        if (name.pNext==NULL){
            return_LqGkOGv["null"]=true;
            return return_LqGkOGv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_mhyCupx=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_xwgVHoi=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_cuLlViG=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_cuLlViG["null"]=true;
            return return_cuLlViG;
        }
        return_cuLlViG=[&]() {
    json return_vJcMYMM=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_cuLlViG;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_luqbWLZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_luqbWLZ=NULL;
        }
    temp_luqbWLZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_luqbWLZ;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_TQOdYZa;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_TQOdYZa=NULL;
        }
    [&]() {
*(temp_TQOdYZa)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_TQOdYZa;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tRvHxwc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qJUBdYI=json({});
    
        if (name.pNext==NULL){
            return_qJUBdYI["null"]=true;
            return return_qJUBdYI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeMode"]=[&]() {
    json return_ZpETGmk=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yHrwKiv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yHrwKiv=NULL;
        }
    temp_yHrwKiv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yHrwKiv;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VfDNicQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aHMqKqR=json({});
    
        if (name.pNext==NULL){
            return_aHMqKqR["null"]=true;
            return return_aHMqKqR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_ENztefa=json({});
    return_ENztefa=[&]() {
    json return_pxBcbxE=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_ENztefa;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yjczplI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bIeDMre=json({});
    
        if (name.pNext==NULL){
            return_bIeDMre["null"]=true;
            return return_bIeDMre;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transformFeedback"]=[&]() {
    json return_PsrCsfl=json({});
    return_PsrCsfl=[&]() {
    json return_qkyFgde=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_PsrCsfl;}();
result["members"]["geometryStreams"]=[&]() {
    json return_MqejRoF=json({});
    return_MqejRoF=[&]() {
    json return_ehhehlk=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_MqejRoF;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sNTWqrf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iwOqtKb=json({});
    
        if (name.pNext==NULL){
            return_iwOqtKb["null"]=true;
            return return_iwOqtKb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_FNJApVZ=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_xCSrahP=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_ZLaXQLH=json({});
    return_ZLaXQLH=[&]() {
    json return_JoCCoaa=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_ZLaXQLH;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_khLBKMS=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_gynYtDn=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_lrYgPKs=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_lRsXJNa=json({});
    return_lRsXJNa=[&]() {
    json return_zIkIxZj=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_lRsXJNa;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_oRdTpkT=json({});
    return_oRdTpkT=[&]() {
    json return_pAUBlDw=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_oRdTpkT;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_EtPfJWE=json({});
    return_EtPfJWE=[&]() {
    json return_vMBAGen=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_EtPfJWE;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_EkcKuKJ=json({});
    return_EkcKuKJ=[&]() {
    json return_fyKaXLJ=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_EkcKuKJ;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WtaFIey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RwgBvBv=json({});
    
        if (name.pNext==NULL){
            return_RwgBvBv["null"]=true;
            return return_RwgBvBv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GEKFCuW=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_NYyRzXn=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dBNylVl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dBNylVl=NULL;
        }
    temp_dBNylVl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dBNylVl;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mtTcOvr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dkIylXV=json({});
    
        if (name.pNext==NULL){
            return_dkIylXV["null"]=true;
            return return_dkIylXV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_HUGVazs=json({});
    return_HUGVazs=[&]() {
    json return_lOpuTpk=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_HUGVazs;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hcmKlaq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CGRoehI=json({});
    
        if (name.pNext==NULL){
            return_CGRoehI["null"]=true;
            return return_CGRoehI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_wrRNzcL=json({});
    return_wrRNzcL=[&]() {
    json return_vHfJina=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_wrRNzcL;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XzOmCRJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XzOmCRJ=NULL;
        }
    temp_XzOmCRJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XzOmCRJ;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iTsoSAv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zUHGjSo=json({});
    
        if (name.pNext==NULL){
            return_zUHGjSo["null"]=true;
            return return_zUHGjSo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_TjKfCAP=json({});
    return_TjKfCAP=[&]() {
    json return_PiiLQTL=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_TjKfCAP;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YfDPbVV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fqxBVfo=json({});
    
        if (name.pNext==NULL){
            return_fqxBVfo["null"]=true;
            return return_fqxBVfo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_eRgmipX=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_arjYzCN=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_arjYzCN["null"]=true;
            return return_arjYzCN;
        }
        
        return_arjYzCN["members"]={};
        for(int i=0; i < name.exclusiveScissorCount; i++){
            json temp;
            temp=[&]() {
    json return_twSLpyK=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[i]);}();
            return_arjYzCN["members"][std::to_string(i)].push_back(temp);
        }
        return return_arjYzCN;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OhEbNuv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OhEbNuv=NULL;
        }
    temp_OhEbNuv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OhEbNuv;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_pUyJtGt;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_pUyJtGt=NULL;
        }
    temp_pUyJtGt=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int QASSMEl=0; QASSMEl < result.exclusiveScissorCount; QASSMEl++){
            [&]() {
temp_pUyJtGt[QASSMEl]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][QASSMEl]);}();;
        }
        }();result.pExclusiveScissors=temp_pUyJtGt;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JZxGtie=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OSxztFm=json({});
    
        if (name.pNext==NULL){
            return_OSxztFm["null"]=true;
            return return_OSxztFm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_euyDcot=json({});
    return_euyDcot=[&]() {
    json return_wzwDCtR=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_euyDcot;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JApwfrH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CkZsGRW=json({});
    
        if (name.pNext==NULL){
            return_CkZsGRW["null"]=true;
            return return_CkZsGRW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_azMkgzU=json({});
    return_azMkgzU=[&]() {
    json return_ImvndYX=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_azMkgzU;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_xhzKYxA=json({});
    return_xhzKYxA=[&]() {
    json return_gqgRGdn=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_xhzKYxA;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ucmvvCJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lVYyCpO=json({});
    
        if (name.pNext==NULL){
            return_lVYyCpO["null"]=true;
            return return_lVYyCpO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFootprint"]=[&]() {
    json return_EbBmvvr=json({});
    return_EbBmvvr=[&]() {
    json return_UDBsbOo=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_EbBmvvr;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JxIskem=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pzWFMQU=json({});
    
        if (name.pNext==NULL){
            return_pzWFMQU["null"]=true;
            return return_pzWFMQU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_LDJBNyV=json({});
    return_LDJBNyV=[&]() {
    json return_bNakzva=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_LDJBNyV;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kQBkhGB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GQzagoA=json({});
    
        if (name.pNext==NULL){
            return_GQzagoA["null"]=true;
            return return_GQzagoA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indirectCopy"]=[&]() {
    json return_pMxGUUF=json({});
    return_pMxGUUF=[&]() {
    json return_yAAcrQy=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_pMxGUUF;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EOaUFye=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LWedkVR=json({});
    
        if (name.pNext==NULL){
            return_LWedkVR["null"]=true;
            return return_LWedkVR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedQueues"]=[&]() {
    json return_mZAjXxX=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qnLQUWE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bBQPtgi=json({});
    
        if (name.pNext==NULL){
            return_bBQPtgi["null"]=true;
            return return_bBQPtgi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryDecompression"]=[&]() {
    json return_KTmrcpn=json({});
    return_KTmrcpn=[&]() {
    json return_WgzEVzm=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_KTmrcpn;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VJoLdLE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wyMwcQF=json({});
    
        if (name.pNext==NULL){
            return_wyMwcQF["null"]=true;
            return return_wyMwcQF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decompressionMethods"]=[&]() {
    json return_vlCWmbk=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_dsxdRjn=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_hvnGDxi=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_dTMjtZc=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_dTMjtZc["null"]=true;
            return return_dTMjtZc;
        }
        
        return_dTMjtZc["members"]={};
        for(int i=0; i < name.shadingRatePaletteEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_yFzbGIN=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[i]);}();
            return_dTMjtZc["members"][std::to_string(i)].push_back(temp);
        }
        return return_dTMjtZc;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_DTTVsfQ;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_DTTVsfQ=NULL;
        }
    temp_DTTVsfQ=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int WqqTbCU=0; WqqTbCU < result.shadingRatePaletteEntryCount; WqqTbCU++){
            [&]() {
temp_DTTVsfQ[WqqTbCU]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][WqqTbCU]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_DTTVsfQ;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eKAawMX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CsYDiKQ=json({});
    
        if (name.pNext==NULL){
            return_CsYDiKQ["null"]=true;
            return return_CsYDiKQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_jYzkGVS=json({});
    return_jYzkGVS=[&]() {
    json return_ZcjAPuH=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_jYzkGVS;}();
result["members"]["viewportCount"]=[&]() {
    json return_OOVLkpC=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_lsvJVAY=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_lsvJVAY["null"]=true;
            return return_lsvJVAY;
        }
        
        return_lsvJVAY["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_UrXWrGy=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[i]);}();
            return_lsvJVAY["members"][std::to_string(i)].push_back(temp);
        }
        return return_lsvJVAY;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GOPyFQM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GOPyFQM=NULL;
        }
    temp_GOPyFQM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GOPyFQM;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_qdWHijb;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_qdWHijb=NULL;
        }
    temp_qdWHijb=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int FxoSsYC=0; FxoSsYC < result.viewportCount; FxoSsYC++){
            [&]() {
temp_qdWHijb[FxoSsYC]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][FxoSsYC]);}();;
        }
        }();result.pShadingRatePalettes=temp_qdWHijb;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vLhTHyd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NxjaowO=json({});
    
        if (name.pNext==NULL){
            return_NxjaowO["null"]=true;
            return return_NxjaowO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImage"]=[&]() {
    json return_HgoTeQv=json({});
    return_HgoTeQv=[&]() {
    json return_BqIhTUG=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_HgoTeQv;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_IIDtnQV=json({});
    return_IIDtnQV=[&]() {
    json return_tBXnssP=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_IIDtnQV;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OUjuplo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gOShFHW=json({});
    
        if (name.pNext==NULL){
            return_gOShFHW["null"]=true;
            return return_gOShFHW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_ZJIwdAJ=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_dACvLDp=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_MFAUqyp=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rszOoPa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kxyggYE=json({});
    
        if (name.pNext==NULL){
            return_kxyggYE["null"]=true;
            return return_kxyggYE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["invocationMask"]=[&]() {
    json return_IkuTqCy=json({});
    return_IkuTqCy=[&]() {
    json return_rfiRdXC=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_IkuTqCy;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_URwMhli=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_RWXbXxj=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_yXiYGAx=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_ymsgHxe=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_XJSeoUx=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_NLBPNsD=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_iYoiprP=json({});
    
        if (name.pSampleLocations==NULL){
            return_iYoiprP["null"]=true;
            return return_iYoiprP;
        }
        
        return_iYoiprP["members"]={};
        for(int i=0; i < name.sampleLocationCount; i++){
            json temp;
            temp=[&]() {
    json return_YzmRanj=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[i]);}();
            return_iYoiprP["members"][std::to_string(i)].push_back(temp);
        }
        return return_iYoiprP;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_CadcOlQ;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_CadcOlQ=NULL;
        }
    temp_CadcOlQ=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int wqdpSFj=0; wqdpSFj < result.sampleLocationCount; wqdpSFj++){
            [&]() {
temp_CadcOlQ[wqdpSFj]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][wqdpSFj]);}();;
        }
        }();result.pSampleLocations=temp_CadcOlQ;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LEVtwFi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wcgeEDW=json({});
    
        if (name.pNext==NULL){
            return_wcgeEDW["null"]=true;
            return return_wcgeEDW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleOrderType"]=[&]() {
    json return_ZHikbFJ=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_FxGPmzF=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_opPaamw=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_opPaamw["null"]=true;
            return return_opPaamw;
        }
        
        return_opPaamw["members"]={};
        for(int i=0; i < name.customSampleOrderCount; i++){
            json temp;
            temp=[&]() {
    json return_ngJXtCu=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[i]);}();
            return_opPaamw["members"][std::to_string(i)].push_back(temp);
        }
        return return_opPaamw;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vqueKMb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vqueKMb=NULL;
        }
    temp_vqueKMb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vqueKMb;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_pberswb;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_pberswb=NULL;
        }
    temp_pberswb=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int KtoFMOs=0; KtoFMOs < result.customSampleOrderCount; KtoFMOs++){
            [&]() {
temp_pberswb[KtoFMOs]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][KtoFMOs]);}();;
        }
        }();result.pCustomSampleOrders=temp_pberswb;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DHOSnSl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YnIUmui=json({});
    
        if (name.pNext==NULL){
            return_YnIUmui["null"]=true;
            return return_YnIUmui;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_RJkkyqu=json({});
    return_RJkkyqu=[&]() {
    json return_QrulEJt=json({});
    return serialize_uint32_t(name.taskShader);}();return return_RJkkyqu;}();
result["members"]["meshShader"]=[&]() {
    json return_gMuGkod=json({});
    return_gMuGkod=[&]() {
    json return_FsTJacs=json({});
    return serialize_uint32_t(name.meshShader);}();return return_gMuGkod;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ksXxRuS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hPEFDZb=json({});
    
        if (name.pNext==NULL){
            return_hPEFDZb["null"]=true;
            return return_hPEFDZb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_XrpRNUS=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_cJleiom=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_CtFRklZ=json({});
    
        return_CtFRklZ["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_DjnHJgC=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_CtFRklZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_CtFRklZ;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_jDeMGPD=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_xTHiYZo=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_kQRxSbL=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_PyPlQdJ=json({});
    
        return_PyPlQdJ["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_lDvUQtp=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_PyPlQdJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_PyPlQdJ;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_OUXmiCs=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_XkKnrKc=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_wNFKSEA=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_QeVvGQZ=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_rcCYgDR=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_TUDiSMx=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int KvJMOgL=0; KvJMOgL < 3; KvJMOgL++){
            [&]() {
result.maxTaskWorkGroupSize[KvJMOgL]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][KvJMOgL]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int GmtgXaF=0; GmtgXaF < 3; GmtgXaF++){
            [&]() {
result.maxMeshWorkGroupSize[GmtgXaF]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][GmtgXaF]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_UfRGDFr=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_YiZKpyd=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CabdHtQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Hcvecjc=json({});
    
        if (name.pNext==NULL){
            return_Hcvecjc["null"]=true;
            return return_Hcvecjc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_UTcjVMV=json({});
    return_UTcjVMV=[&]() {
    json return_BzNpVVd=json({});
    return serialize_uint32_t(name.taskShader);}();return return_UTcjVMV;}();
result["members"]["meshShader"]=[&]() {
    json return_mVKINjO=json({});
    return_mVKINjO=[&]() {
    json return_MrBVphn=json({});
    return serialize_uint32_t(name.meshShader);}();return return_mVKINjO;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_pysoyxJ=json({});
    return_pysoyxJ=[&]() {
    json return_UZPrbqs=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_pysoyxJ;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_qzgJjBC=json({});
    return_qzgJjBC=[&]() {
    json return_zaSyymb=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_qzgJjBC;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_vJjuBOG=json({});
    return_vJjuBOG=[&]() {
    json return_vsisdEP=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_vJjuBOG;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KjqvlpJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ITYZgzN=json({});
    
        if (name.pNext==NULL){
            return_ITYZgzN["null"]=true;
            return return_ITYZgzN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_jPJsnbA=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_nQVpdiR=json({});
    
        return_nQVpdiR["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_zxLQYAd=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[i]);}();
            return_nQVpdiR["members"][std::to_string(i)].push_back(temp);
        }
        return return_nQVpdiR;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_BUyCiWs=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_NdLvVXJ=json({});
    
        return_NdLvVXJ["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_NkdtkXk=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_NdLvVXJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_NdLvVXJ;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_QgFwLXx=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_ylCjVSV=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_YDCrXJu=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_JMLJkes=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_uOFHsZs=json({});
    
        return_uOFHsZs["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_BoAOuNg=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[i]);}();
            return_uOFHsZs["members"][std::to_string(i)].push_back(temp);
        }
        return return_uOFHsZs;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_Qjzlstb=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_BArKjWE=json({});
    
        return_BArKjWE["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_gIFhpxF=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_BArKjWE["members"][std::to_string(i)].push_back(temp);
        }
        return return_BArKjWE;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_WfVXulz=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_ImDmHUc=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_sbMnCRN=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_aONyHDv=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_JufHKfz=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_ZcuxMXP=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_cqTrvyP=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_fYylxKD=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_PHDuHZx=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_jlllIeC=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_DsSdITc=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_BShjjil=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_cucvDaT=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_zcMBOcy=json({});
    return_zcMBOcy=[&]() {
    json return_Bcvvcfd=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_zcMBOcy;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_wqCVWTV=json({});
    return_wqCVWTV=[&]() {
    json return_piKMELE=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_wqCVWTV;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_CJWcrZb=json({});
    return_CJWcrZb=[&]() {
    json return_snBhGav=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_CJWcrZb;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_gqGpeBI=json({});
    return_gqGpeBI=[&]() {
    json return_IRdgqKT=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_gqGpeBI;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int ZHdWMMc=0; ZHdWMMc < 3; ZHdWMMc++){
            [&]() {
result.maxTaskWorkGroupCount[ZHdWMMc]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][ZHdWMMc]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int CiTXUOW=0; CiTXUOW < 3; CiTXUOW++){
            [&]() {
result.maxTaskWorkGroupSize[CiTXUOW]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][CiTXUOW]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int cbxjTxG=0; cbxjTxG < 3; cbxjTxG++){
            [&]() {
result.maxMeshWorkGroupCount[cbxjTxG]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][cbxjTxG]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int pJKZMoP=0; pJKZMoP < 3; pJKZMoP++){
            [&]() {
result.maxMeshWorkGroupSize[pJKZMoP]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][pJKZMoP]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_LyOwNKg=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_MNLWfiW=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_dYgVRAj=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UStGLKF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nvJIVay=json({});
    
        if (name.pNext==NULL){
            return_nvJIVay["null"]=true;
            return return_nvJIVay;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_SoCWcOh=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_vUXWyGS=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_ZcqLwcF=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_BNYVqdz=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_tfDYGFk=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dGiXpKu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dGiXpKu=NULL;
        }
    temp_dGiXpKu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dGiXpKu;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UBvFWnE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ATMMHZJ=json({});
    
        if (name.pNext==NULL){
            return_ATMMHZJ["null"]=true;
            return return_ATMMHZJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_uumLgVP=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_nNvnWuk=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_anaQTER=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_ITVKDOZ=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_JEInbDB=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_gwHzjCT=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_gwHzjCT["null"]=true;
            return return_gwHzjCT;
        }
        return serialize_void_p(name.pShaderGroupCaptureReplayHandle);
}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gPvfCzu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gPvfCzu=NULL;
        }
    temp_gPvfCzu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gPvfCzu;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_ODsnPFu;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_ODsnPFu=NULL;
        }
    temp_ODsnPFu=deserialize_void_p(name["members"]["pShaderGroupCaptureReplayHandle"]);
}();result.pShaderGroupCaptureReplayHandle=temp_ODsnPFu;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OieyHMe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WvJuTES=json({});
    
        if (name.pNext==NULL){
            return_WvJuTES["null"]=true;
            return return_WvJuTES;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_BRzihUf=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_LHZUXfo=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_IXByqzl=json({});
    
        if (name.pStages==NULL){
            return_IXByqzl["null"]=true;
            return return_IXByqzl;
        }
        
        return_IXByqzl["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_asKpeyW=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_IXByqzl["members"][std::to_string(i)].push_back(temp);
        }
        return return_IXByqzl;
        }();
result["members"]["groupCount"]=[&]() {
    json return_wvUqXJN=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_opFbsHg=json({});
    
        if (name.pGroups==NULL){
            return_opFbsHg["null"]=true;
            return return_opFbsHg;
        }
        
        return_opFbsHg["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_xZNbuIG=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_opFbsHg["members"][std::to_string(i)].push_back(temp);
        }
        return return_opFbsHg;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_hLznAWm=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_CXySNTQ=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_FofjwHS=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_YxpyKog=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Cyrbkue;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Cyrbkue=NULL;
        }
    temp_Cyrbkue=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Cyrbkue;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_PvaEZiu;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_PvaEZiu=NULL;
        }
    temp_PvaEZiu=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int RriACMe=0; RriACMe < result.stageCount; RriACMe++){
            [&]() {
temp_PvaEZiu[RriACMe]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][RriACMe]);}();;
        }
        }();result.pStages=temp_PvaEZiu;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_GcFZcrc;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_GcFZcrc=NULL;
        }
    temp_GcFZcrc=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int OJOMPkK=0; OJOMPkK < result.groupCount; OJOMPkK++){
            [&]() {
temp_GcFZcrc[OJOMPkK]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][OJOMPkK]);}();;
        }
        }();result.pGroups=temp_GcFZcrc;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FceYCpf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gPDPKPP=json({});
    
        if (name.pNext==NULL){
            return_gPDPKPP["null"]=true;
            return return_gPDPKPP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YtECZJE=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_gEAMhLx=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_yucKPtu=json({});
    
        if (name.pStages==NULL){
            return_yucKPtu["null"]=true;
            return return_yucKPtu;
        }
        
        return_yucKPtu["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_ApmXiHX=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_yucKPtu["members"][std::to_string(i)].push_back(temp);
        }
        return return_yucKPtu;
        }();
result["members"]["groupCount"]=[&]() {
    json return_eyDyXft=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_copyQVX=json({});
    
        if (name.pGroups==NULL){
            return_copyQVX["null"]=true;
            return return_copyQVX;
        }
        
        return_copyQVX["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_SdiyNDJ=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[i]);}();
            return_copyQVX["members"][std::to_string(i)].push_back(temp);
        }
        return return_copyQVX;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_gGXvMaV=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_yPkBxTE=json({});
    
        if (name.pLibraryInfo==NULL){
            return_yPkBxTE["null"]=true;
            return return_yPkBxTE;
        }
        return_yPkBxTE=[&]() {
    json return_FdzrDrH=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_yPkBxTE;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_tmpHnVa=json({});
    
        if (name.pLibraryInterface==NULL){
            return_tmpHnVa["null"]=true;
            return return_tmpHnVa;
        }
        return_tmpHnVa=[&]() {
    json return_lQTlPhN=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_tmpHnVa;}();
result["members"]["pDynamicState"]=[&]() {
    json return_ypotudD=json({});
    
        if (name.pDynamicState==NULL){
            return_ypotudD["null"]=true;
            return return_ypotudD;
        }
        return_ypotudD=[&]() {
    json return_pCjjQlk=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_ypotudD;}();
result["members"]["layout"]=[&]() {
    json return_tACyzPt=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_uQRxpzK=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_RqtWKKh=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HpLTXBl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HpLTXBl=NULL;
        }
    temp_HpLTXBl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HpLTXBl;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_gNdVNzF;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_gNdVNzF=NULL;
        }
    temp_gNdVNzF=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int kxixgyN=0; kxixgyN < result.stageCount; kxixgyN++){
            [&]() {
temp_gNdVNzF[kxixgyN]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][kxixgyN]);}();;
        }
        }();result.pStages=temp_gNdVNzF;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_AGxJlCC;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_AGxJlCC=NULL;
        }
    temp_AGxJlCC=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int TlFHfKD=0; TlFHfKD < result.groupCount; TlFHfKD++){
            [&]() {
temp_AGxJlCC[TlFHfKD]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][TlFHfKD]);}();;
        }
        }();result.pGroups=temp_AGxJlCC;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_iaXVBFz;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_iaXVBFz=NULL;
        }
    [&]() {
*(temp_iaXVBFz)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_iaXVBFz;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_opHOWEi;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_opHOWEi=NULL;
        }
    [&]() {
*(temp_opHOWEi)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_opHOWEi;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_InsCORY;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_InsCORY=NULL;
        }
    [&]() {
*(temp_InsCORY)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_InsCORY;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MAUlycm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LSOmNlv=json({});
    
        if (name.pNext==NULL){
            return_LSOmNlv["null"]=true;
            return return_LSOmNlv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_sRidkzC=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_olCEQcR=json({});
    return_olCEQcR=[&]() {
    json return_zQrzxyP=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_olCEQcR;}();
result["members"]["vertexCount"]=[&]() {
    json return_ZDrpfVM=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_YzwXbga=json({});
    return_YzwXbga=[&]() {
    json return_NEWHaZm=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_YzwXbga;}();
result["members"]["vertexFormat"]=[&]() {
    json return_NiYmOPu=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_mfWFspg=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_jtYqkGq=json({});
    return_jtYqkGq=[&]() {
    json return_vamVMnb=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_jtYqkGq;}();
result["members"]["indexCount"]=[&]() {
    json return_HztjPdh=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_tmjZtxG=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_JdRBtop=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_egezNtP=json({});
    return_egezNtP=[&]() {
    json return_oAbjRmp=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_egezNtP;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NndHKHO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NndHKHO=NULL;
        }
    temp_NndHKHO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NndHKHO;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DSewkOz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MbJMAsW=json({});
    
        if (name.pNext==NULL){
            return_MbJMAsW["null"]=true;
            return return_MbJMAsW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aabbData"]=[&]() {
    json return_yxSGWji=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_MXnQBOb=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_WyDfTLh=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_IMmSFKg=json({});
    return_IMmSFKg=[&]() {
    json return_LWkmGsv=json({});
    return serialize_uint64_t(name.offset);}();return return_IMmSFKg;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rdQmgmk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rdQmgmk=NULL;
        }
    temp_rdQmgmk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rdQmgmk;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_wgMkumv=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_CAvIEqA=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RWvOult=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HzvTsjU=json({});
    
        if (name.pNext==NULL){
            return_HzvTsjU["null"]=true;
            return return_HzvTsjU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_hAKHgms=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_BUGjaND=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_upvjIMY=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_trYaqZj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_trYaqZj=NULL;
        }
    temp_trYaqZj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_trYaqZj;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pKJLuYD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eEBCEJH=json({});
    
        if (name.pNext==NULL){
            return_eEBCEJH["null"]=true;
            return return_eEBCEJH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_BGyLIxM=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_EkqjHeb=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_rmfFsMx=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_mGnFrgr=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_oGFPKiS=json({});
    
        if (name.pGeometries==NULL){
            return_oGFPKiS["null"]=true;
            return return_oGFPKiS;
        }
        
        return_oGFPKiS["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_IbWYteo=json({});
    return serialize_VkGeometryNV(name.pGeometries[i]);}();
            return_oGFPKiS["members"][std::to_string(i)].push_back(temp);
        }
        return return_oGFPKiS;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pIZUvdy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pIZUvdy=NULL;
        }
    temp_pIZUvdy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pIZUvdy;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_rWibNmz;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_rWibNmz=NULL;
        }
    temp_rWibNmz=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int vvxJDBO=0; vvxJDBO < result.geometryCount; vvxJDBO++){
            [&]() {
temp_rWibNmz[vvxJDBO]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][vvxJDBO]);}();;
        }
        }();result.pGeometries=temp_rWibNmz;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mnXUKKI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IZqQsNr=json({});
    
        if (name.pNext==NULL){
            return_IZqQsNr["null"]=true;
            return return_IZqQsNr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compactedSize"]=[&]() {
    json return_qpqjNoh=json({});
    return_qpqjNoh=[&]() {
    json return_NuXqgeg=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_qpqjNoh;}();
result["members"]["info"]=[&]() {
    json return_aNgXPaY=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RAnNkPn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RAnNkPn=NULL;
        }
    temp_RAnNkPn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RAnNkPn;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PauXOmt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HBxEZPB=json({});
    
        if (name.pNext==NULL){
            return_HBxEZPB["null"]=true;
            return return_HBxEZPB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_nYIqPUC=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_sKdMhgM=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_spCtaPo=json({});
    return_spCtaPo=[&]() {
    json return_ZNWhFWH=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_spCtaPo;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_juHjsfB=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_kIEwRYP=json({});
    
        if (name.pDeviceIndices==NULL){
            return_kIEwRYP["null"]=true;
            return return_kIEwRYP;
        }
        
        return_kIEwRYP["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_QrLaXce=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_kIEwRYP["members"][std::to_string(i)].push_back(temp);
        }
        return return_kIEwRYP;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qUngwIh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qUngwIh=NULL;
        }
    temp_qUngwIh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qUngwIh;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_MbluOwr;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_MbluOwr=NULL;
        }
    temp_MbluOwr=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int AGmYKZT=0; AGmYKZT < result.deviceIndexCount; AGmYKZT++){
            [&]() {
temp_MbluOwr[AGmYKZT]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][AGmYKZT]);}();;
        }
        }();result.pDeviceIndices=temp_MbluOwr;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZdCYggH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iOikClp=json({});
    
        if (name.pNext==NULL){
            return_iOikClp["null"]=true;
            return return_iOikClp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_GVzoVYM=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_oRWcdud=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_oRWcdud["null"]=true;
            return return_oRWcdud;
        }
        
        return_oRWcdud["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_LIvnPxS=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[i]);}();
            return_oRWcdud["members"][std::to_string(i)].push_back(temp);
        }
        return return_oRWcdud;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ayrEPLa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ayrEPLa=NULL;
        }
    temp_ayrEPLa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ayrEPLa;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_RhktPYX;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_RhktPYX=NULL;
        }
    temp_RhktPYX=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int fbZQzKK=0; fbZQzKK < result.accelerationStructureCount; fbZQzKK++){
            [&]() {
temp_RhktPYX[fbZQzKK]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][fbZQzKK]);}();;
        }
        }();result.pAccelerationStructures=temp_RhktPYX;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PTYKcuE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ryefWpU=json({});
    
        if (name.pNext==NULL){
            return_ryefWpU["null"]=true;
            return return_ryefWpU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_ADRMFWP=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_sozrywy=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_sozrywy["null"]=true;
            return return_sozrywy;
        }
        
        return_sozrywy["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_AQiLfEz=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[i]);}();
            return_sozrywy["members"][std::to_string(i)].push_back(temp);
        }
        return return_sozrywy;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IGizYOX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IGizYOX=NULL;
        }
    temp_IGizYOX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IGizYOX;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_hNlHWxA;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_hNlHWxA=NULL;
        }
    temp_hNlHWxA=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int yshJBcU=0; yshJBcU < result.accelerationStructureCount; yshJBcU++){
            [&]() {
temp_hNlHWxA[yshJBcU]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][yshJBcU]);}();;
        }
        }();result.pAccelerationStructures=temp_hNlHWxA;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MpqdbBd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GSZSRqx=json({});
    
        if (name.pNext==NULL){
            return_GSZSRqx["null"]=true;
            return return_GSZSRqx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_BLtlSTx=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_KrRXpHM=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_poPhnZD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_poPhnZD=NULL;
        }
    temp_poPhnZD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_poPhnZD;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TbvlBfQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OCXpfPq=json({});
    
        if (name.pNext==NULL){
            return_OCXpfPq["null"]=true;
            return return_OCXpfPq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_TRFzHDp=json({});
    return_TRFzHDp=[&]() {
    json return_IKUJTVW=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_TRFzHDp;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_JwdHcds=json({});
    return_JwdHcds=[&]() {
    json return_wfrPXuN=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_JwdHcds;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_FUTewbh=json({});
    return_FUTewbh=[&]() {
    json return_oYBSWaO=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_FUTewbh;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_goJDfmu=json({});
    return_goJDfmu=[&]() {
    json return_GGNCLPL=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_goJDfmu;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_yPdvegn=json({});
    return_yPdvegn=[&]() {
    json return_egefjMo=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_yPdvegn;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TEyXkPY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CvBPBAR=json({});
    
        if (name.pNext==NULL){
            return_CvBPBAR["null"]=true;
            return return_CvBPBAR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_xTrIrEx=json({});
    return_xTrIrEx=[&]() {
    json return_IZpBRzl=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_xTrIrEx;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_fnkbqfV=json({});
    return_fnkbqfV=[&]() {
    json return_duRMksl=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_fnkbqfV;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_nQzhExK=json({});
    return_nQzhExK=[&]() {
    json return_gWyPHPK=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_nQzhExK;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_ppWMKnM=json({});
    return_ppWMKnM=[&]() {
    json return_OJaqERi=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_ppWMKnM;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_ffiMXgo=json({});
    return_ffiMXgo=[&]() {
    json return_ErGGFKk=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_ffiMXgo;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DlDbiAO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CTDKkQZ=json({});
    
        if (name.pNext==NULL){
            return_CTDKkQZ["null"]=true;
            return return_CTDKkQZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayQuery"]=[&]() {
    json return_HHPeEWt=json({});
    return_HHPeEWt=[&]() {
    json return_nDjgmyQ=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_HHPeEWt;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_huNUNIE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VWujHcC=json({});
    
        if (name.pNext==NULL){
            return_VWujHcC["null"]=true;
            return return_VWujHcC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_uiJGADu=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_kjGSrFv=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_LQwXlVk=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_HMiAJKb=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_rJzvmHN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_HlpYmuq=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_OzoQIyO=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_AEFOGnE=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KATnMZF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dwghkIS=json({});
    
        if (name.pNext==NULL){
            return_dwghkIS["null"]=true;
            return return_dwghkIS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_SxoXFuK=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_EFfXqpB=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_IEXBuLC=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_aHtjGMB=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_QrlucjA=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_JNbSzhb=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_sSFsQbq=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_SuLqPnj=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VFKOGbZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dMnYOrE=json({});
    
        if (name.pNext==NULL){
            return_dMnYOrE["null"]=true;
            return return_dMnYOrE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_TcxHCFy=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_svWyjpq=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_GtwnAXv=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_QZEpbtU=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_pmLOXwF=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_gDWhIux=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_SDasFwD=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_cCBWgZp=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_zYymRws=json({});
    return_zYymRws=[&]() {
    json return_UpqlQsQ=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_zYymRws;}();
result["members"]["stride"]=[&]() {
    json return_eYxKSxz=json({});
    return_eYxKSxz=[&]() {
    json return_rcctvhu=json({});
    return serialize_uint64_t(name.stride);}();return return_eYxKSxz;}();
result["members"]["size"]=[&]() {
    json return_COnixwj=json({});
    return_COnixwj=[&]() {
    json return_JLbqaPX=json({});
    return serialize_uint64_t(name.size);}();return return_COnixwj;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_nkQusxh=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_gpEKxqN=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_lgnuABd=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_QTCJtCG=json({});
    return_QTCJtCG=[&]() {
    json return_YHMplmB=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_QTCJtCG;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_NWbAhxn=json({});
    return_NWbAhxn=[&]() {
    json return_aYMnQZz=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_NWbAhxn;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_qqYtKMk=json({});
    return_qqYtKMk=[&]() {
    json return_RHGlZyb=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_qqYtKMk;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_HBDOswZ=json({});
    return_HBDOswZ=[&]() {
    json return_kxhDZQY=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_HBDOswZ;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_jjjcqOz=json({});
    return_jjjcqOz=[&]() {
    json return_RaSCZOl=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_jjjcqOz;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_HVUFIyK=json({});
    return_HVUFIyK=[&]() {
    json return_wfjqCCr=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_HVUFIyK;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_oZwMfdP=json({});
    return_oZwMfdP=[&]() {
    json return_YyAFdeL=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_oZwMfdP;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_TAqFJaG=json({});
    return_TAqFJaG=[&]() {
    json return_zzZMGFd=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_TAqFJaG;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_sqrmmhn=json({});
    return_sqrmmhn=[&]() {
    json return_UuhMbtG=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_sqrmmhn;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_IgmouLu=json({});
    return_IgmouLu=[&]() {
    json return_wfEuCGg=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_IgmouLu;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_zMJpdnf=json({});
    return_zMJpdnf=[&]() {
    json return_LZRjSMs=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_zMJpdnf;}();
result["members"]["width"]=[&]() {
    json return_zokvKFI=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_wTduJEO=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_LQmtHUJ=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lbMpbDK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EWoimds=json({});
    
        if (name.pNext==NULL){
            return_EWoimds["null"]=true;
            return return_EWoimds;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_OYdoeDA=json({});
    return_OYdoeDA=[&]() {
    json return_HLWVtXl=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_OYdoeDA;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_KlPUZnR=json({});
    return_KlPUZnR=[&]() {
    json return_VZPHRcy=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_KlPUZnR;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CdrXChj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YjkfmNQ=json({});
    
        if (name.pNext==NULL){
            return_YjkfmNQ["null"]=true;
            return return_YjkfmNQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_qskQnWa=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_bxubATy=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_bxubATy["null"]=true;
            return return_bxubATy;
        }
        
        return_bxubATy["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_YicCnYP=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[i]);}();
            return_bxubATy["members"][std::to_string(i)].push_back(temp);
        }
        return return_bxubATy;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int DacdEEm=0; DacdEEm < result.drmFormatModifierCount; DacdEEm++){
            [&]() {
result.pDrmFormatModifierProperties[DacdEEm]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][DacdEEm]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_aMAazUr=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_OepgJtw=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_QkHCqOM=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ColMKdh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QpNPdyC=json({});
    
        if (name.pNext==NULL){
            return_QpNPdyC["null"]=true;
            return return_QpNPdyC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_MVUdNMK=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_oBASMac=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_iOJpgFm=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_eCzCCvS=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_eCzCCvS["null"]=true;
            return return_eCzCCvS;
        }
        
        return_eCzCCvS["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_qKCnuQS=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_eCzCCvS["members"][std::to_string(i)].push_back(temp);
        }
        return return_eCzCCvS;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BowghDG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BowghDG=NULL;
        }
    temp_BowghDG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BowghDG;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_QIJilto;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_QIJilto=NULL;
        }
    temp_QIJilto=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int tYcllfe=0; tYcllfe < result.queueFamilyIndexCount; tYcllfe++){
            [&]() {
temp_QIJilto[tYcllfe]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][tYcllfe]);}();;
        }
        }();result.pQueueFamilyIndices=temp_QIJilto;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Flboisg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_flfEuVw=json({});
    
        if (name.pNext==NULL){
            return_flfEuVw["null"]=true;
            return return_flfEuVw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_bRHAnRe=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_GAwjYcy=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_GAwjYcy["null"]=true;
            return return_GAwjYcy;
        }
        
        return_GAwjYcy["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_OxswPTi=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[i]);}();
            return_GAwjYcy["members"][std::to_string(i)].push_back(temp);
        }
        return return_GAwjYcy;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_elMvrjG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_elMvrjG=NULL;
        }
    temp_elMvrjG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_elMvrjG;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_kaGqlLI;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_kaGqlLI=NULL;
        }
    temp_kaGqlLI=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int KHvokHH=0; KHvokHH < result.drmFormatModifierCount; KHvokHH++){
            [&]() {
temp_kaGqlLI[KHvokHH]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][KHvokHH]);}();;
        }
        }();result.pDrmFormatModifiers=temp_kaGqlLI;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EVFrPkM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MStaYPz=json({});
    
        if (name.pNext==NULL){
            return_MStaYPz["null"]=true;
            return return_MStaYPz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_nixQfwX=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_CdWbSLZ=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_WWlvQAx=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_WWlvQAx["null"]=true;
            return return_WWlvQAx;
        }
        
        return_WWlvQAx["members"]={};
        for(int i=0; i < name.drmFormatModifierPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_xTbwLCY=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[i]);}();
            return_WWlvQAx["members"][std::to_string(i)].push_back(temp);
        }
        return return_WWlvQAx;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_acwAnOL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_acwAnOL=NULL;
        }
    temp_acwAnOL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_acwAnOL;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_eYMLJEF;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_eYMLJEF=NULL;
        }
    temp_eYMLJEF=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int FSYrKVE=0; FSYrKVE < result.drmFormatModifierPlaneCount; FSYrKVE++){
            [&]() {
temp_eYMLJEF[FSYrKVE]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][FSYrKVE]);}();;
        }
        }();result.pPlaneLayouts=temp_eYMLJEF;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EsNxysX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lmYiaPH=json({});
    
        if (name.pNext==NULL){
            return_lmYiaPH["null"]=true;
            return return_lmYiaPH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_VhniRVU=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SRSUunu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DMvajNw=json({});
    
        if (name.pNext==NULL){
            return_DMvajNw["null"]=true;
            return return_DMvajNw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_qnbSimG=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aJrBYOr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aJrBYOr=NULL;
        }
    temp_aJrBYOr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aJrBYOr;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bjjYFNj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GAZSPnp=json({});
    
        if (name.pNext==NULL){
            return_GAZSPnp["null"]=true;
            return return_GAZSPnp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_gcteJMa=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_olKUfIi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_olKUfIi=NULL;
        }
    temp_olKUfIi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_olKUfIi;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ceTspmW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCXNOsX=json({});
    
        if (name.pNext==NULL){
            return_BCXNOsX["null"]=true;
            return return_BCXNOsX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_TaiQXbZ=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CpFtHCA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CpFtHCA=NULL;
        }
    temp_CpFtHCA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CpFtHCA;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CweuvdM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vkTIhPA=json({});
    
        if (name.pNext==NULL){
            return_vkTIhPA["null"]=true;
            return return_vkTIhPA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_NXSFcBo=json({});
    return_NXSFcBo=[&]() {
    json return_ANptCxn=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_NXSFcBo;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_pyLVNkK=json({});
    return_pyLVNkK=[&]() {
    json return_oSInLck=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_pyLVNkK;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_yLfKFer=json({});
    return_yLfKFer=[&]() {
    json return_hLylzVs=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_yLfKFer;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_djONfld=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PKKhoBC=json({});
    
        if (name.pNext==NULL){
            return_PKKhoBC["null"]=true;
            return return_PKKhoBC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_LlRVtEI=json({});
    return_LlRVtEI=[&]() {
    json return_EpWHuGY=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_LlRVtEI;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TRYmObw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ljqEkbP=json({});
    
        if (name.pNext==NULL){
            return_ljqEkbP["null"]=true;
            return return_ljqEkbP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_kAFrIvK=json({});
    return_kAFrIvK=[&]() {
    json return_PnwyoCA=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_kAFrIvK;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bPkCYan=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OBxWxoS=json({});
    
        if (name.pNext==NULL){
            return_OBxWxoS["null"]=true;
            return return_OBxWxoS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_NxLSmQr=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_GRXgeyx=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_xMpsrbi=json({});
    return_xMpsrbi=[&]() {
    json return_HrnqTqx=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_xMpsrbi;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qEROIaT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cAdeyDr=json({});
    
        if (name.pNext==NULL){
            return_cAdeyDr["null"]=true;
            return return_cAdeyDr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subsampledLoads"]=[&]() {
    json return_ILJQsNL=json({});
    return_ILJQsNL=[&]() {
    json return_JxqefZZ=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_ILJQsNL;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_GRaIPRX=json({});
    return_GRaIPRX=[&]() {
    json return_ZYtETWh=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_GRaIPRX;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_uUZoRKv=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_YfTgRlN=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pxUAcxE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xuZkLwW=json({});
    
        if (name.pNext==NULL){
            return_xuZkLwW["null"]=true;
            return return_xuZkLwW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_kwKivUf=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wWPPRzX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WUKuShn=json({});
    
        if (name.pNext==NULL){
            return_WUKuShn["null"]=true;
            return return_WUKuShn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_FnwPpNJ=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dxsBsRy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dxsBsRy=NULL;
        }
    temp_dxsBsRy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dxsBsRy;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ItnReTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UEAhUZc=json({});
    
        if (name.pNext==NULL){
            return_UEAhUZc["null"]=true;
            return return_UEAhUZc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_MWyupJV=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_exuUQXL=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_exuUQXL["null"]=true;
            return return_exuUQXL;
        }
        
        return_exuUQXL["members"]={};
        for(int i=0; i < name.fragmentDensityOffsetCount; i++){
            json temp;
            temp=[&]() {
    json return_NmEZSCQ=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[i]);}();
            return_exuUQXL["members"][std::to_string(i)].push_back(temp);
        }
        return return_exuUQXL;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_soRQVev;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_soRQVev=NULL;
        }
    temp_soRQVev=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_soRQVev;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_gUyMjMc;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_gUyMjMc=NULL;
        }
    temp_gUyMjMc=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int HVzzSJF=0; HVzzSJF < result.fragmentDensityOffsetCount; HVzzSJF++){
            [&]() {
temp_gUyMjMc[HVzzSJF]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][HVzzSJF]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_gUyMjMc;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MtQZYVI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DyCuZUS=json({});
    
        if (name.pNext==NULL){
            return_DyCuZUS["null"]=true;
            return return_DyCuZUS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_OzjOMMg=json({});
    return_OzjOMMg=[&]() {
    json return_jQpLSTq=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_OzjOMMg;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CjjsjQR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_meHJAHU=json({});
    
        if (name.pNext==NULL){
            return_meHJAHU["null"]=true;
            return return_meHJAHU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_MGwflGI=json({});
    return_MGwflGI=[&]() {
    json return_IeyTksE=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_MGwflGI;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CVuzNcg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hDIPsLX=json({});
    
        if (name.pNext==NULL){
            return_hDIPsLX["null"]=true;
            return return_hDIPsLX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsProtected"]=[&]() {
    json return_DQcYBcv=json({});
    return_DQcYBcv=[&]() {
    json return_njAwlDK=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_DQcYBcv;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RSbapXg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RSbapXg=NULL;
        }
    temp_RSbapXg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RSbapXg;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WxYMrIh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lzlYuWs=json({});
    
        if (name.pNext==NULL){
            return_lzlYuWs["null"]=true;
            return return_lzlYuWs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_AfvDIOY=json({});
    return_AfvDIOY=[&]() {
    json return_KVImFUm=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_AfvDIOY;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cyXOsJA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YclrTjR=json({});
    
        if (name.pNext==NULL){
            return_YclrTjR["null"]=true;
            return return_YclrTjR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_FLJkuFI=json({});
    return_FLJkuFI=[&]() {
    json return_tgxZUyu=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_FLJkuFI;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wegjNAm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rGnpSdS=json({});
    
        if (name.pNext==NULL){
            return_rGnpSdS["null"]=true;
            return return_rGnpSdS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipEnable"]=[&]() {
    json return_pBfRAYp=json({});
    return_pBfRAYp=[&]() {
    json return_wjTMxAQ=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_pBfRAYp;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ompEBLd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QnlEjJC=json({});
    
        if (name.pNext==NULL){
            return_QnlEjJC["null"]=true;
            return return_QnlEjJC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xERGBIk=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_DblSkWi=json({});
    return_DblSkWi=[&]() {
    json return_oOoXePD=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_DblSkWi;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PUAjIyf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PUAjIyf=NULL;
        }
    temp_PUAjIyf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PUAjIyf;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pJofVdH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NmdFLqF=json({});
    
        if (name.pNext==NULL){
            return_NmdFLqF["null"]=true;
            return return_NmdFLqF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["heapBudget"]=[&]() {
    json return_OGhLuUb=json({});
    
        return_OGhLuUb["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_fpLWirt=json({});
    return_fpLWirt=[&]() {
    json return_ibDDuud=json({});
    return serialize_uint64_t(name.heapBudget[i]);}();return return_fpLWirt;}();
            return_OGhLuUb["members"][std::to_string(i)].push_back(temp);
        }
        return return_OGhLuUb;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_phmORyE=json({});
    
        return_phmORyE["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_PrFxZXb=json({});
    return_PrFxZXb=[&]() {
    json return_DRcyDSy=json({});
    return serialize_uint64_t(name.heapUsage[i]);}();return return_PrFxZXb;}();
            return_phmORyE["members"][std::to_string(i)].push_back(temp);
        }
        return return_phmORyE;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int cFABJHn=0; cFABJHn < VK_MAX_MEMORY_HEAPS; cFABJHn++){
            [&]() {
[&]() {
result.heapBudget[cFABJHn]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][cFABJHn]);}();}();;
        }
        }();
[&]() {

        for (int zHiTPSt=0; zHiTPSt < VK_MAX_MEMORY_HEAPS; zHiTPSt++){
            [&]() {
[&]() {
result.heapUsage[zHiTPSt]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][zHiTPSt]);}();}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mQNqbvc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LLAfBVR=json({});
    
        if (name.pNext==NULL){
            return_LLAfBVR["null"]=true;
            return return_LLAfBVR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryPriority"]=[&]() {
    json return_koRacvM=json({});
    return_koRacvM=[&]() {
    json return_GziMtlj=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_koRacvM;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_drEzXws=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LNCxqWQ=json({});
    
        if (name.pNext==NULL){
            return_LNCxqWQ["null"]=true;
            return return_LNCxqWQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priority"]=[&]() {
    json return_RFwSUpC=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IzdRJBc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IzdRJBc=NULL;
        }
    temp_IzdRJBc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IzdRJBc;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HsCCtYe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xaXwuCD=json({});
    
        if (name.pNext==NULL){
            return_xaXwuCD["null"]=true;
            return return_xaXwuCD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_XomYeQR=json({});
    return_XomYeQR=[&]() {
    json return_PfTFKzM=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_XomYeQR;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LcDVbmW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sYalrRV=json({});
    
        if (name.pNext==NULL){
            return_sYalrRV["null"]=true;
            return return_sYalrRV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_GvOcHgH=json({});
    return_GvOcHgH=[&]() {
    json return_RZCjOtE=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_GvOcHgH;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_hAlqwqa=json({});
    return_hAlqwqa=[&]() {
    json return_VbKxFlx=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_hAlqwqa;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_WvYICtO=json({});
    return_WvYICtO=[&]() {
    json return_ynZrJfe=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_WvYICtO;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jkHgAnT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RwvGvYo=json({});
    
        if (name.pNext==NULL){
            return_RwvGvYo["null"]=true;
            return return_RwvGvYo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_bFvoYzS=json({});
    return_bFvoYzS=[&]() {
    json return_PTxGmwy=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_bFvoYzS;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_ZJMiPSa=json({});
    return_ZJMiPSa=[&]() {
    json return_uIubziJ=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_ZJMiPSa;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_KcqRhsU=json({});
    return_KcqRhsU=[&]() {
    json return_VNWlSuS=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_KcqRhsU;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KHFJTVI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZoeKPhB=json({});
    
        if (name.pNext==NULL){
            return_ZoeKPhB["null"]=true;
            return return_ZoeKPhB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_nmjZdti=json({});
    return_nmjZdti=[&]() {
    json return_SaJJXhp=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_nmjZdti;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_gjxJkgu=json({});
    return_gjxJkgu=[&]() {
    json return_YVeHqas=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_gjxJkgu;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_unlzSbJ=json({});
    return_unlzSbJ=[&]() {
    json return_NsCcgLD=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_unlzSbJ;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LapdYcI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cEpiWXQ=json({});
    
        if (name.pNext==NULL){
            return_cEpiWXQ["null"]=true;
            return return_cEpiWXQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_KPsYNow=json({});
    return_KPsYNow=[&]() {
    json return_zCXOAHB=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_KPsYNow;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_pfwESdC=json({});
    return_pfwESdC=[&]() {
    json return_BFJibRk=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_pfwESdC;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_XWQvnqj=json({});
    return_XWQvnqj=[&]() {
    json return_qTUtBeI=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_XWQvnqj;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GgDpUKV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VedXcvF=json({});
    
        if (name.pNext==NULL){
            return_VedXcvF["null"]=true;
            return return_VedXcvF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_fWOMxFb=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DGjTtmZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DGjTtmZ=NULL;
        }
    temp_DGjTtmZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DGjTtmZ;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xNuCKdb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_buQndCG=json({});
    
        if (name.pNext==NULL){
            return_buQndCG["null"]=true;
            return return_buQndCG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_boiidhe=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mqcnOfI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mqcnOfI=NULL;
        }
    temp_mqcnOfI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mqcnOfI;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_voMPsRm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LkWadjy=json({});
    
        if (name.pNext==NULL){
            return_LkWadjy["null"]=true;
            return return_LkWadjy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_AWpwxAL=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Yohbuch;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Yohbuch=NULL;
        }
    temp_Yohbuch=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Yohbuch;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KAKHBHD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ooAzsLx=json({});
    
        if (name.pNext==NULL){
            return_ooAzsLx["null"]=true;
            return return_ooAzsLx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_FHHavkM=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oiLNIlx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oiLNIlx=NULL;
        }
    temp_oiLNIlx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oiLNIlx;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YdUfhjR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OziQNBd=json({});
    
        if (name.pNext==NULL){
            return_OziQNBd["null"]=true;
            return return_OziQNBd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_hZCgNCf=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vAOWsyK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vAOWsyK=NULL;
        }
    temp_vAOWsyK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vAOWsyK;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QJRIkdT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SkaoDQq=json({});
    
        if (name.pNext==NULL){
            return_SkaoDQq["null"]=true;
            return return_SkaoDQq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_yOMeSsX=json({});
    return_yOMeSsX=[&]() {
    json return_RhceRoK=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_yOMeSsX;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MTDolEF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MTDolEF=NULL;
        }
    temp_MTDolEF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MTDolEF;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WmhTWOD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nfLrScb=json({});
    
        if (name.pNext==NULL){
            return_nfLrScb["null"]=true;
            return return_nfLrScb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageViewType"]=[&]() {
    json return_asMTXbV=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hjNKXvJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YbbDbRa=json({});
    
        if (name.pNext==NULL){
            return_YbbDbRa["null"]=true;
            return return_YbbDbRa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCubic"]=[&]() {
    json return_DmGRWhw=json({});
    return_DmGRWhw=[&]() {
    json return_bYyZXQA=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_DmGRWhw;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_hzQehxk=json({});
    return_hzQehxk=[&]() {
    json return_ECQUPJp=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_hzQehxk;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GppYVrl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HoIjPxN=json({});
    
        if (name.pNext==NULL){
            return_HoIjPxN["null"]=true;
            return return_HoIjPxN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_khVpISn=json({});
    return_khVpISn=[&]() {
    json return_Byeekfa=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_khVpISn;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RheqVdI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KWdcvdL=json({});
    
        if (name.pNext==NULL){
            return_KWdcvdL["null"]=true;
            return return_KWdcvdL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_kpjBtdF=json({});
    return_kpjBtdF=[&]() {
    json return_npKjtnZ=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_kpjBtdF;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QteOfgZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bWJHQvj=json({});
    
        if (name.pNext==NULL){
            return_bWJHQvj["null"]=true;
            return return_bWJHQvj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_dORVRKN=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_xHDplug=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_xHDplug["null"]=true;
            return return_xHDplug;
        }
        
        return_xHDplug["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_dqXLaBL=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_xHDplug["members"][std::to_string(i)].push_back(temp);
        }
        return return_xHDplug;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GSNqpWh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GSNqpWh=NULL;
        }
    temp_GSNqpWh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GSNqpWh;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_UgIbbYk;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_UgIbbYk=NULL;
        }
    temp_UgIbbYk=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int iIXsESH=0; iIXsESH < result.attachmentImageInfoCount; iIXsESH++){
            [&]() {
temp_UgIbbYk[iIXsESH]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][iIXsESH]);}();;
        }
        }();result.pAttachmentImageInfos=temp_UgIbbYk;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FDZsCss=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XoOuYXW=json({});
    
        if (name.pNext==NULL){
            return_XoOuYXW["null"]=true;
            return return_XoOuYXW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_KHriyox=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_ACLqiGc=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_ACLqiGc["null"]=true;
            return return_ACLqiGc;
        }
        
        return_ACLqiGc["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_AYntXfS=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_ACLqiGc["members"][std::to_string(i)].push_back(temp);
        }
        return return_ACLqiGc;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wYCrwVd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wYCrwVd=NULL;
        }
    temp_wYCrwVd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wYCrwVd;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_ouUHVQG;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_ouUHVQG=NULL;
        }
    temp_ouUHVQG=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int mCMqZnn=0; mCMqZnn < result.attachmentImageInfoCount; mCMqZnn++){
            [&]() {
temp_ouUHVQG[mCMqZnn]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][mCMqZnn]);}();;
        }
        }();result.pAttachmentImageInfos=temp_ouUHVQG;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SMBbZOb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TndKUzB=json({});
    
        if (name.pNext==NULL){
            return_TndKUzB["null"]=true;
            return return_TndKUzB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DmMnJPn=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_XBxYgTJ=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_gbamCwN=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_DNPwRRd=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_hRaEgKz=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_IIrTtjI=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_NoLTKdt=json({});
    
        if (name.pViewFormats==NULL){
            return_NoLTKdt["null"]=true;
            return return_NoLTKdt;
        }
        
        return_NoLTKdt["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_vvEKZqW=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_NoLTKdt["members"][std::to_string(i)].push_back(temp);
        }
        return return_NoLTKdt;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dxbqrbQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dxbqrbQ=NULL;
        }
    temp_dxbqrbQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dxbqrbQ;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_hXxEpJh;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_hXxEpJh=NULL;
        }
    temp_hXxEpJh=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int EkJERcZ=0; EkJERcZ < result.viewFormatCount; EkJERcZ++){
            [&]() {
temp_hXxEpJh[EkJERcZ]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][EkJERcZ]);}();;
        }
        }();result.pViewFormats=temp_hXxEpJh;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YurgKcH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RKbWOup=json({});
    
        if (name.pNext==NULL){
            return_RKbWOup["null"]=true;
            return return_RKbWOup;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uxqEqxX=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_uwyrouE=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_IlRWHTP=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_ZsBhQSg=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_iXBFpkF=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_jbBrbWz=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_bTyFROx=json({});
    
        if (name.pViewFormats==NULL){
            return_bTyFROx["null"]=true;
            return return_bTyFROx;
        }
        
        return_bTyFROx["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_TNztNBC=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_bTyFROx["members"][std::to_string(i)].push_back(temp);
        }
        return return_bTyFROx;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jYRCqNh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jYRCqNh=NULL;
        }
    temp_jYRCqNh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jYRCqNh;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_yTSmhYv;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_yTSmhYv=NULL;
        }
    temp_yTSmhYv=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int zOjakxe=0; zOjakxe < result.viewFormatCount; zOjakxe++){
            [&]() {
temp_yTSmhYv[zOjakxe]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][zOjakxe]);}();;
        }
        }();result.pViewFormats=temp_yTSmhYv;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eEzcdqw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mBMYMzv=json({});
    
        if (name.pNext==NULL){
            return_mBMYMzv["null"]=true;
            return return_mBMYMzv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_aLTuEVO=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_jknhEdo=json({});
    
        if (name.pAttachments==NULL){
            return_jknhEdo["null"]=true;
            return return_jknhEdo;
        }
        
        return_jknhEdo["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_eNFFBEf=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_jknhEdo["members"][std::to_string(i)].push_back(temp);
        }
        return return_jknhEdo;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bXwIkpu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bXwIkpu=NULL;
        }
    temp_bXwIkpu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bXwIkpu;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_zkKjmbA;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_zkKjmbA=NULL;
        }
    temp_zkKjmbA=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int pwdTrdW=0; pwdTrdW < result.attachmentCount; pwdTrdW++){
            [&]() {
temp_zkKjmbA[pwdTrdW]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][pwdTrdW]);}();;
        }
        }();result.pAttachments=temp_zkKjmbA;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PXhfrrE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cnqNkKj=json({});
    
        if (name.pNext==NULL){
            return_cnqNkKj["null"]=true;
            return return_cnqNkKj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_XegRsIY=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_xsxXtFc=json({});
    
        if (name.pAttachments==NULL){
            return_xsxXtFc["null"]=true;
            return return_xsxXtFc;
        }
        
        return_xsxXtFc["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_czcNXwS=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_xsxXtFc["members"][std::to_string(i)].push_back(temp);
        }
        return return_xsxXtFc;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NHKohcT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NHKohcT=NULL;
        }
    temp_NHKohcT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NHKohcT;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_XhSWvHz;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_XhSWvHz=NULL;
        }
    temp_XhSWvHz=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int VVBIRkq=0; VVBIRkq < result.attachmentCount; VVBIRkq++){
            [&]() {
temp_XhSWvHz[VVBIRkq]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][VVBIRkq]);}();;
        }
        }();result.pAttachments=temp_XhSWvHz;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NUMcQpr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OiOHjQR=json({});
    
        if (name.pNext==NULL){
            return_OiOHjQR["null"]=true;
            return return_OiOHjQR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_WVpxVmn=json({});
    return_WVpxVmn=[&]() {
    json return_qcssTTf=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_WVpxVmn;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dteWeJA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nBIzPED=json({});
    
        if (name.pNext==NULL){
            return_nBIzPED["null"]=true;
            return return_nBIzPED;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_totKHCm=json({});
    return_totKHCm=[&]() {
    json return_QYDXahr=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_totKHCm;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OhTefmA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kxglZWH=json({});
    
        if (name.pNext==NULL){
            return_kxglZWH["null"]=true;
            return return_kxglZWH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_QmxtTMd=json({});
    return_QmxtTMd=[&]() {
    json return_etmQZfA=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_QmxtTMd;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_JahFWik=json({});
    return_JahFWik=[&]() {
    json return_wIuIrzl=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_JahFWik;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IcIoUba=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MRNCoKm=json({});
    
        if (name.pNext==NULL){
            return_MRNCoKm["null"]=true;
            return return_MRNCoKm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_lGctDUC=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tAWrICj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_acREBMT=json({});
    
        if (name.pNext==NULL){
            return_acREBMT["null"]=true;
            return return_acREBMT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_aRmYJrE=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_gVtIiwK=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_yyXJeND=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_iwzJYvO=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_VfOuBqm=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_FnTHLri=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_UyTxfRZ=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_TnNCBYI=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oawAiVH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QBtkqCc=json({});
    
        if (name.pNext==NULL){
            return_QBtkqCc["null"]=true;
            return return_QBtkqCc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_oqzityg=json({});
    return_oqzityg=[&]() {
    json return_OCqGpCu=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_oqzityg;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qyelqgU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_paFjQgO=json({});
    
        if (name.pNext==NULL){
            return_paFjQgO["null"]=true;
            return return_paFjQgO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_WDpSylN=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_kfpMyqk=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_smiAadG=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UTNPpmK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UTNPpmK=NULL;
        }
    temp_UTNPpmK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UTNPpmK;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yYMAnpK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IuWVkiR=json({});
    
        if (name.pNext==NULL){
            return_IuWVkiR["null"]=true;
            return return_IuWVkiR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_jPaNwGd=json({});
    return_jPaNwGd=[&]() {
    json return_QOwvTtF=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_jPaNwGd;}();
result["members"]["size"]=[&]() {
    json return_FYYbaVh=json({});
    return_FYYbaVh=[&]() {
    json return_HVkIcWB=json({});
    return serialize_uint64_t(name.size);}();return return_FYYbaVh;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_NNfDSlu=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_wcbVJwh=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_COpivbZ=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_OgEjPpz=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sPwVrsx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gtDqszJ=json({});
    
        if (name.pNext==NULL){
            return_gtDqszJ["null"]=true;
            return return_gtDqszJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_SWRQIyn=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_SWRQIyn["null"]=true;
            return return_SWRQIyn;
        }
        return_SWRQIyn=[&]() {
    json return_sYJZCzg=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_SWRQIyn;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_omxGSUN=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_cgPfBfc=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_cgPfBfc["null"]=true;
            return return_cgPfBfc;
        }
        
        return_cgPfBfc["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_mGnavGp=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_cgPfBfc["members"][std::to_string(i)].push_back(temp);
        }
        return return_cgPfBfc;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CsOLITc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CsOLITc=NULL;
        }
    temp_CsOLITc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CsOLITc;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int cpCZVmF=0; cpCZVmF < result.pipelineStageCreationFeedbackCount; cpCZVmF++){
            [&]() {
result.pPipelineStageCreationFeedbacks[cpCZVmF]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][cpCZVmF]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cpqjcFB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SPtaySN=json({});
    
        if (name.pNext==NULL){
            return_SPtaySN["null"]=true;
            return return_SPtaySN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_mDjROQA=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_mDjROQA["null"]=true;
            return return_mDjROQA;
        }
        return_mDjROQA=[&]() {
    json return_PXVUoLz=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_mDjROQA;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_OdTOsid=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_zHInxTy=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_zHInxTy["null"]=true;
            return return_zHInxTy;
        }
        
        return_zHInxTy["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_PeyYEwI=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_zHInxTy["members"][std::to_string(i)].push_back(temp);
        }
        return return_zHInxTy;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vbTCCUa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vbTCCUa=NULL;
        }
    temp_vbTCCUa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vbTCCUa;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int jtSkgAR=0; jtSkgAR < result.pipelineStageCreationFeedbackCount; jtSkgAR++){
            [&]() {
result.pPipelineStageCreationFeedbacks[jtSkgAR]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][jtSkgAR]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NtFhTKL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_egZpjIm=json({});
    
        if (name.pNext==NULL){
            return_egZpjIm["null"]=true;
            return return_egZpjIm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrier"]=[&]() {
    json return_vgwjDoj=json({});
    return_vgwjDoj=[&]() {
    json return_BgUIurN=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_vgwjDoj;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LZPJoTX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZEDQtPa=json({});
    
        if (name.pNext==NULL){
            return_ZEDQtPa["null"]=true;
            return return_ZEDQtPa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_yeZlQXq=json({});
    return_yeZlQXq=[&]() {
    json return_cBPivKO=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_yeZlQXq;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PSHJRvq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_obnwRmI=json({});
    
        if (name.pNext==NULL){
            return_obnwRmI["null"]=true;
            return return_obnwRmI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_hyhsRqK=json({});
    return_hyhsRqK=[&]() {
    json return_QdiRArz=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_hyhsRqK;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CwUMoag=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sdAdMfI=json({});
    
        if (name.pNext==NULL){
            return_sdAdMfI["null"]=true;
            return return_sdAdMfI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_bUluXRJ=json({});
    return_bUluXRJ=[&]() {
    json return_dpoBcbP=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_bUluXRJ;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_wCGuLZA=json({});
    return_wCGuLZA=[&]() {
    json return_auENUYi=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_wCGuLZA;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FSfmfar=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ntqIoSk=json({});
    
        if (name.pNext==NULL){
            return_ntqIoSk["null"]=true;
            return return_ntqIoSk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_ggjjciT=json({});
    return_ggjjciT=[&]() {
    json return_yZPxuCz=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_ggjjciT;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UqeATeC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oKgrHbd=json({});
    
        if (name.pNext==NULL){
            return_oKgrHbd["null"]=true;
            return return_oKgrHbd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["unit"]=[&]() {
    json return_KcHzmCf=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_nHPGHYw=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_qcJGwgK=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_yAYyelN=json({});
    
        return_yAYyelN["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_WzQfZcf=json({});
    return serialize_uint8_t(name.uuid[i]);}();
            return_yAYyelN["members"][std::to_string(i)].push_back(temp);
        }
        return return_yAYyelN;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int dWnuxCV=0; dWnuxCV < VK_UUID_SIZE; dWnuxCV++){
            [&]() {
result.uuid[dWnuxCV]=deserialize_uint8_t(name["members"]["uuid"]["members"][dWnuxCV]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GCtgyHU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QvWrgCX=json({});
    
        if (name.pNext==NULL){
            return_QvWrgCX["null"]=true;
            return return_QvWrgCX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_apYACxo=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_cZjasSr=json({});
    
        return_cZjasSr["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QWpHxIr=json({});
    return serialize_char(name.name[i]);}();
            return_cZjasSr["members"][std::to_string(i)].push_back(temp);
        }
        return return_cZjasSr;
        }();
result["members"]["category"]=[&]() {
    json return_iQMAWWw=json({});
    
        return_iQMAWWw["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_hieVuda=json({});
    return serialize_char(name.category[i]);}();
            return_iQMAWWw["members"][std::to_string(i)].push_back(temp);
        }
        return return_iQMAWWw;
        }();
result["members"]["description"]=[&]() {
    json return_XYQgtrk=json({});
    
        return_XYQgtrk["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HPYAlca=json({});
    return serialize_char(name.description[i]);}();
            return_XYQgtrk["members"][std::to_string(i)].push_back(temp);
        }
        return return_XYQgtrk;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int zKvWbUt=0; zKvWbUt < VK_MAX_DESCRIPTION_SIZE; zKvWbUt++){
            [&]() {
result.name[zKvWbUt]=deserialize_char(name["members"]["name"]["members"][zKvWbUt]);}();;
        }
        }();
[&]() {

        for (int ysMTaER=0; ysMTaER < VK_MAX_DESCRIPTION_SIZE; ysMTaER++){
            [&]() {
result.category[ysMTaER]=deserialize_char(name["members"]["category"]["members"][ysMTaER]);}();;
        }
        }();
[&]() {

        for (int qVITlcZ=0; qVITlcZ < VK_MAX_DESCRIPTION_SIZE; qVITlcZ++){
            [&]() {
result.description[qVITlcZ]=deserialize_char(name["members"]["description"]["members"][qVITlcZ]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_guieNfc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SbLpxPD=json({});
    
        if (name.pNext==NULL){
            return_SbLpxPD["null"]=true;
            return return_SbLpxPD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_MtiDfIh=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_EjksWsK=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_NKwEDXr=json({});
    
        if (name.pCounterIndices==NULL){
            return_NKwEDXr["null"]=true;
            return return_NKwEDXr;
        }
        
        return_NKwEDXr["members"]={};
        for(int i=0; i < name.counterIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_DevPGsJ=json({});
    return serialize_uint32_t(name.pCounterIndices[i]);}();
            return_NKwEDXr["members"][std::to_string(i)].push_back(temp);
        }
        return return_NKwEDXr;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kyetJML;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kyetJML=NULL;
        }
    temp_kyetJML=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kyetJML;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_pYCiWXR;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_pYCiWXR=NULL;
        }
    temp_pYCiWXR=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int gSmjTkT=0; gSmjTkT < result.counterIndexCount; gSmjTkT++){
            [&]() {
temp_pYCiWXR[gSmjTkT]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][gSmjTkT]);}();;
        }
        }();result.pCounterIndices=temp_pYCiWXR;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_HAxuRhb=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_OUiTNnL=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_YcfjHmX=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_VJokKxn=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_nSmExFk=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_FPitQAD=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rJcLpgC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GVKaqYf=json({});
    
        if (name.pNext==NULL){
            return_GVKaqYf["null"]=true;
            return return_GVKaqYf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gQbEvUr=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_YwhnUSf=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kFoRJJS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kFoRJJS=NULL;
        }
    temp_kFoRJJS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kFoRJJS;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DVmqWBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BCQGqiX=json({});
    
        if (name.pNext==NULL){
            return_BCQGqiX["null"]=true;
            return return_BCQGqiX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["counterPassIndex"]=[&]() {
    json return_iaOkoch=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VIKgYQT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VIKgYQT=NULL;
        }
    temp_VIKgYQT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VIKgYQT;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_illCyFz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TGBwyEc=json({});
    
        if (name.pNext==NULL){
            return_TGBwyEc["null"]=true;
            return return_TGBwyEc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lPPVyVk=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZOajVbQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZOajVbQ=NULL;
        }
    temp_ZOajVbQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZOajVbQ;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IvSBAym=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NVVREmv=json({});
    
        if (name.pNext==NULL){
            return_NVVREmv["null"]=true;
            return return_NVVREmv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_nupsdyn=json({});
    return_nupsdyn=[&]() {
    json return_VPboAxN=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_nupsdyn;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zoDuRPe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wBiwKap=json({});
    
        if (name.pNext==NULL){
            return_wBiwKap["null"]=true;
            return return_wBiwKap;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_egVbhYY=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_JNPLGDE=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tluuIja;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tluuIja=NULL;
        }
    temp_tluuIja=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tluuIja;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hRnYhEQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zkaoWAs=json({});
    
        if (name.pNext==NULL){
            return_zkaoWAs["null"]=true;
            return return_zkaoWAs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_oeumfTv=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_BWsmnpP=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_GNCmecL=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_hmkuCmu=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GGWBiZt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YlTNQvp=json({});
    
        if (name.pNext==NULL){
            return_YlTNQvp["null"]=true;
            return return_YlTNQvp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_slqkBQN=json({});
    return_slqkBQN=[&]() {
    json return_nAfMawN=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_slqkBQN;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_oznibig=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_vLiWZDP=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_JpcRgLk=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_slpTGJR=json({});
    return_slpTGJR=[&]() {
    json return_GUMZZeQ=json({});
    return serialize_uint32_t(name.valueBool);}();return return_slpTGJR;}();
result["members"]["valueString"]=[&]() {
    json return_OCCJzlB=json({});
    
        if (name.valueString==NULL){
            return_OCCJzlB["null"]=true;
            return return_OCCJzlB;
        }
        return serialize_char_p(name.valueString);
}();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_VeIeeOE;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_VeIeeOE=NULL;
        }
    temp_VeIeeOE=deserialize_char_p(name["members"]["valueString"]);
}();result.valueString=temp_VeIeeOE;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_dwAzfCW=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_GkECMPI=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LxOnQpm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NoHQLkh=json({});
    
        if (name.pNext==NULL){
            return_NoHQLkh["null"]=true;
            return return_NoHQLkh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pUserData"]=[&]() {
    json return_myimAYw=json({});
    
        if (name.pUserData==NULL){
            return_myimAYw["null"]=true;
            return return_myimAYw;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xkAgWWb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xkAgWWb=NULL;
        }
    temp_xkAgWWb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xkAgWWb;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WoLVrRE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BuhXxAx=json({});
    
        if (name.pNext==NULL){
            return_BuhXxAx["null"]=true;
            return return_BuhXxAx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_kLQPTGx=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UdBmwod;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UdBmwod=NULL;
        }
    temp_UdBmwod=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UdBmwod;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hQcmsrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_grBhyGv=json({});
    
        if (name.pNext==NULL){
            return_grBhyGv["null"]=true;
            return return_grBhyGv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_JUKogJG=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EgnHwpZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EgnHwpZ=NULL;
        }
    temp_EgnHwpZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EgnHwpZ;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nufhSgu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GwBPORp=json({});
    
        if (name.pNext==NULL){
            return_GwBPORp["null"]=true;
            return return_GwBPORp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_JfDQCPq=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nlLsQnO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nlLsQnO=NULL;
        }
    temp_nlLsQnO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nlLsQnO;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ErcahSy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YdENtJf=json({});
    
        if (name.pNext==NULL){
            return_YdENtJf["null"]=true;
            return return_YdENtJf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_pryfJqA=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fDstUwP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fDstUwP=NULL;
        }
    temp_fDstUwP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fDstUwP;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JvOBgeT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WlQDUMH=json({});
    
        if (name.pNext==NULL){
            return_WlQDUMH["null"]=true;
            return return_WlQDUMH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_TDVDVjf=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_lJKCadd=json({});
    return_lJKCadd=[&]() {
    json return_sdjbDBL=json({});
    return serialize_uint32_t(name.enable);}();return return_lJKCadd;}();
result["members"]["parameter"]=[&]() {
    json return_buwDKoV=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SLDLNnb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SLDLNnb=NULL;
        }
    temp_SLDLNnb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SLDLNnb;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rdFiZSF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NjKcdJQ=json({});
    
        if (name.pNext==NULL){
            return_NjKcdJQ["null"]=true;
            return return_NjKcdJQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_qDBXIyP=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AJRqgYw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AJRqgYw=NULL;
        }
    temp_AJRqgYw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AJRqgYw;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lMqPyFa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uIGbwIt=json({});
    
        if (name.pNext==NULL){
            return_uIGbwIt["null"]=true;
            return return_uIGbwIt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_ztUZosG=json({});
    return_ztUZosG=[&]() {
    json return_oYYikVi=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_ztUZosG;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_sZMxtDx=json({});
    return_sZMxtDx=[&]() {
    json return_roDXpDl=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_sZMxtDx;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RwueLLa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gKMiAfR=json({});
    
        if (name.pNext==NULL){
            return_gKMiAfR["null"]=true;
            return return_gKMiAfR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_KPIOjWj=json({});
    return_KPIOjWj=[&]() {
    json return_pzruVoo=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_KPIOjWj;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_naERvgP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bOTCcwJ=json({});
    
        if (name.pNext==NULL){
            return_bOTCcwJ["null"]=true;
            return return_bOTCcwJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMCount"]=[&]() {
    json return_RWzwgum=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_encmMpm=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UxjQzfZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XWotYna=json({});
    
        if (name.pNext==NULL){
            return_XWotYna["null"]=true;
            return return_XWotYna;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_OMpTrmb=json({});
    return_OMpTrmb=[&]() {
    json return_ExAECmA=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_OMpTrmb;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WvUgBWM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eHJDYIp=json({});
    
        if (name.pNext==NULL){
            return_eHJDYIp["null"]=true;
            return return_eHJDYIp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_poqueMf=json({});
    return_poqueMf=[&]() {
    json return_cuqJhGP=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_poqueMf;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_kwMVrOR=json({});
    return_kwMVrOR=[&]() {
    json return_hzldTtP=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_kwMVrOR;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_ImXuPRZ=json({});
    return_ImXuPRZ=[&]() {
    json return_GtHZEZo=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_ImXuPRZ;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gLbuqiK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GyBpzGh=json({});
    
        if (name.pNext==NULL){
            return_GyBpzGh["null"]=true;
            return return_GyBpzGh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_lMiCrQS=json({});
    return_lMiCrQS=[&]() {
    json return_JyUDqWJ=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_lMiCrQS;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_igpqFJJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bYSRKjv=json({});
    
        if (name.pNext==NULL){
            return_bYSRKjv["null"]=true;
            return return_bYSRKjv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_pepYzui=json({});
    return_pepYzui=[&]() {
    json return_eugIjyx=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_pepYzui;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UvBIiVy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vrSfvDH=json({});
    
        if (name.pNext==NULL){
            return_vrSfvDH["null"]=true;
            return return_vrSfvDH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_MLsASrs=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eOVIeAm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FIVjpxD=json({});
    
        if (name.pNext==NULL){
            return_FIVjpxD["null"]=true;
            return return_FIVjpxD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_kMfdujc=json({});
    return_kMfdujc=[&]() {
    json return_ZpskQGV=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_kMfdujc;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_MjcxwaN=json({});
    return_MjcxwaN=[&]() {
    json return_StWdaQJ=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_MjcxwaN;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CUkabNO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xtSTjxW=json({});
    
        if (name.pNext==NULL){
            return_xtSTjxW["null"]=true;
            return return_xtSTjxW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_lkFOuKJ=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zcdHnJE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zewjqJK=json({});
    
        if (name.pNext==NULL){
            return_zewjqJK["null"]=true;
            return return_zewjqJK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_RZIaPKf=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_aZFGYqs=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LOsFrts=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xitPEGQ=json({});
    
        if (name.pNext==NULL){
            return_xitPEGQ["null"]=true;
            return return_xitPEGQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_ZjQENww=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_PhHosde=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uqCCDwA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QhvrXzf=json({});
    
        if (name.pNext==NULL){
            return_QhvrXzf["null"]=true;
            return return_QhvrXzf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_NlvwTDb=json({});
    return_NlvwTDb=[&]() {
    json return_RlloCtS=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_NlvwTDb;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qZcVwtU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bXiCrCL=json({});
    
        if (name.pNext==NULL){
            return_bXiCrCL["null"]=true;
            return return_bXiCrCL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_HsIyqkW=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MJpdHet;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MJpdHet=NULL;
        }
    temp_MJpdHet=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MJpdHet;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GDxwvYw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iAvOmVJ=json({});
    
        if (name.pNext==NULL){
            return_iAvOmVJ["null"]=true;
            return return_iAvOmVJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_VxctCOB=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qwEfejx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qwEfejx=NULL;
        }
    temp_qwEfejx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qwEfejx;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gatXTOG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bioywnw=json({});
    
        if (name.pNext==NULL){
            return_bioywnw["null"]=true;
            return return_bioywnw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stages"]=[&]() {
    json return_yOXGxZR=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_KkulnHX=json({});
    
        return_KkulnHX["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_JWynDtf=json({});
    return serialize_char(name.name[i]);}();
            return_KkulnHX["members"][std::to_string(i)].push_back(temp);
        }
        return return_KkulnHX;
        }();
result["members"]["description"]=[&]() {
    json return_DJaIxEC=json({});
    
        return_DJaIxEC["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_zganVOU=json({});
    return serialize_char(name.description[i]);}();
            return_DJaIxEC["members"][std::to_string(i)].push_back(temp);
        }
        return return_DJaIxEC;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_LPhlfdH=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int XXqHQLS=0; XXqHQLS < VK_MAX_DESCRIPTION_SIZE; XXqHQLS++){
            [&]() {
result.name[XXqHQLS]=deserialize_char(name["members"]["name"]["members"][XXqHQLS]);}();;
        }
        }();
[&]() {

        for (int XzRCMZI=0; XzRCMZI < VK_MAX_DESCRIPTION_SIZE; XzRCMZI++){
            [&]() {
result.description[XzRCMZI]=deserialize_char(name["members"]["description"]["members"][XzRCMZI]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HrVMAGF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DLSMsYJ=json({});
    
        if (name.pNext==NULL){
            return_DLSMsYJ["null"]=true;
            return return_DLSMsYJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_BgAuoLD=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_kSYWdZw=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jjXvGPq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jjXvGPq=NULL;
        }
    temp_jjXvGPq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jjXvGPq;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_cftzfUR=json({});
    return_cftzfUR=[&]() {
    json return_LEFfRbI=json({});
    return serialize_uint32_t(name.b32);}();return return_cftzfUR;}();
result["members"]["i64"]=[&]() {
    json return_JCDRUhe=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_DMciaEK=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_CnowXny=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KUnLBPJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xHTJIot=json({});
    
        if (name.pNext==NULL){
            return_xHTJIot["null"]=true;
            return return_xHTJIot;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_GnbUHlL=json({});
    
        return_GnbUHlL["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_cdEDqrR=json({});
    return serialize_char(name.name[i]);}();
            return_GnbUHlL["members"][std::to_string(i)].push_back(temp);
        }
        return return_GnbUHlL;
        }();
result["members"]["description"]=[&]() {
    json return_MAkSLEW=json({});
    
        return_MAkSLEW["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FuJMWzS=json({});
    return serialize_char(name.description[i]);}();
            return_MAkSLEW["members"][std::to_string(i)].push_back(temp);
        }
        return return_MAkSLEW;
        }();
result["members"]["format"]=[&]() {
    json return_ROvTxDA=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_dhMdMLu=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int BOWmRoS=0; BOWmRoS < VK_MAX_DESCRIPTION_SIZE; BOWmRoS++){
            [&]() {
result.name[BOWmRoS]=deserialize_char(name["members"]["name"]["members"][BOWmRoS]);}();;
        }
        }();
[&]() {

        for (int vljMIkf=0; vljMIkf < VK_MAX_DESCRIPTION_SIZE; vljMIkf++){
            [&]() {
result.description[vljMIkf]=deserialize_char(name["members"]["description"]["members"][vljMIkf]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jIKafCf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UIdCDxT=json({});
    
        if (name.pNext==NULL){
            return_UIdCDxT["null"]=true;
            return return_UIdCDxT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_CiJWXKc=json({});
    
        return_CiJWXKc["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_MENbUnJ=json({});
    return serialize_char(name.name[i]);}();
            return_CiJWXKc["members"][std::to_string(i)].push_back(temp);
        }
        return return_CiJWXKc;
        }();
result["members"]["description"]=[&]() {
    json return_sHhnGSB=json({});
    
        return_sHhnGSB["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_EDMWLDS=json({});
    return serialize_char(name.description[i]);}();
            return_sHhnGSB["members"][std::to_string(i)].push_back(temp);
        }
        return return_sHhnGSB;
        }();
result["members"]["isText"]=[&]() {
    json return_skgjzHw=json({});
    return_skgjzHw=[&]() {
    json return_CAjHMay=json({});
    return serialize_uint32_t(name.isText);}();return return_skgjzHw;}();
result["members"]["dataSize"]=[&]() {
    json return_EyjsiVq=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_nzuHYRR=json({});
    
        if (name.pData==NULL){
            return_nzuHYRR["null"]=true;
            return return_nzuHYRR;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int tKQxjuv=0; tKQxjuv < VK_MAX_DESCRIPTION_SIZE; tKQxjuv++){
            [&]() {
result.name[tKQxjuv]=deserialize_char(name["members"]["name"]["members"][tKQxjuv]);}();;
        }
        }();
[&]() {

        for (int NCHczKX=0; NCHczKX < VK_MAX_DESCRIPTION_SIZE; NCHczKX++){
            [&]() {
result.description[NCHczKX]=deserialize_char(name["members"]["description"]["members"][NCHczKX]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        }
    result.pData=deserialize_void_p(name["members"]["pData"]);
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BZWYtPA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ftZLQNQ=json({});
    
        if (name.pNext==NULL){
            return_ftZLQNQ["null"]=true;
            return return_ftZLQNQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_kGopSlM=json({});
    return_kGopSlM=[&]() {
    json return_WTvnwjH=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_kGopSlM;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YvuUszc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VjjfDSE=json({});
    
        if (name.pNext==NULL){
            return_VjjfDSE["null"]=true;
            return return_VjjfDSE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_BLMjygG=json({});
    return_BLMjygG=[&]() {
    json return_JhBJZjd=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_BLMjygG;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TlcEgOU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LkcdUZy=json({});
    
        if (name.pNext==NULL){
            return_LkcdUZy["null"]=true;
            return return_LkcdUZy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_iIEeprq=json({});
    return_iIEeprq=[&]() {
    json return_ouGSbMu=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_iIEeprq;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WFVpMBz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PuGnvhb=json({});
    
        if (name.pNext==NULL){
            return_PuGnvhb["null"]=true;
            return return_PuGnvhb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_JzNfCRi=json({});
    return_JzNfCRi=[&]() {
    json return_YPuZgKn=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_JzNfCRi;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_KkiOBED=json({});
    return_KkiOBED=[&]() {
    json return_bgYqBxs=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_KkiOBED;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_TCOiEww=json({});
    return_TCOiEww=[&]() {
    json return_PeKKNUi=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_TCOiEww;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_eUEJNAW=json({});
    return_eUEJNAW=[&]() {
    json return_qCbQiTI=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_eUEJNAW;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RJBrzRJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IUJbryJ=json({});
    
        if (name.pNext==NULL){
            return_IUJbryJ["null"]=true;
            return return_IUJbryJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_abnfLVz=json({});
    return_abnfLVz=[&]() {
    json return_ZzdnYdR=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_abnfLVz;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_wvHozEn=json({});
    return_wvHozEn=[&]() {
    json return_CSLkmTF=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_wvHozEn;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_KRnjcDd=json({});
    return_KRnjcDd=[&]() {
    json return_PmMStsh=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_KRnjcDd;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_jwNMaAB=json({});
    return_jwNMaAB=[&]() {
    json return_HYnCaxT=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_jwNMaAB;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MFikPRA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lXmYegv=json({});
    
        if (name.pNext==NULL){
            return_lXmYegv["null"]=true;
            return return_lXmYegv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_TcgAsNj=json({});
    return_TcgAsNj=[&]() {
    json return_nlzpaOk=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_TcgAsNj;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_xnMQhmU=json({});
    return_xnMQhmU=[&]() {
    json return_HpiwVYn=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_xnMQhmU;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WroaHiz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eoLHZxu=json({});
    
        if (name.pNext==NULL){
            return_eoLHZxu["null"]=true;
            return return_eoLHZxu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_plxcrdc=json({});
    return_plxcrdc=[&]() {
    json return_AfxaGrT=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_plxcrdc;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_gsPYpnh=json({});
    return_gsPYpnh=[&]() {
    json return_awHngqa=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_gsPYpnh;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HBFxttP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wmMBdZr=json({});
    
        if (name.pNext==NULL){
            return_wmMBdZr["null"]=true;
            return return_wmMBdZr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_lSXWMcz=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_AMbehQh=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_NGKCMKR=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_hzDwitf=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KyOdpIk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NkJjRNG=json({});
    
        if (name.pNext==NULL){
            return_NkJjRNG["null"]=true;
            return return_NkJjRNG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_RrDNXSE=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_FAkSXzT=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_uXUNUAj=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_FZDyKoK=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZMczSLY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gJOYqYU=json({});
    
        if (name.pNext==NULL){
            return_gJOYqYU["null"]=true;
            return return_gJOYqYU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_lkCAxFa=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bhRlvOq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uJsPPIT=json({});
    
        if (name.pNext==NULL){
            return_uJsPPIT["null"]=true;
            return return_uJsPPIT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_JTxdfIv=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zifRhEv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_osDuCcm=json({});
    
        if (name.pNext==NULL){
            return_osDuCcm["null"]=true;
            return return_osDuCcm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_jpuiVvA=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FRXpaYG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aQUgAcI=json({});
    
        if (name.pNext==NULL){
            return_aQUgAcI["null"]=true;
            return return_aQUgAcI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_GMSeJCO=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_pGqrwGl=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PwXvjOX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BavlQRW=json({});
    
        if (name.pNext==NULL){
            return_BavlQRW["null"]=true;
            return return_BavlQRW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_WWKVDTt=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SmXOjzN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YIZtYEB=json({});
    
        if (name.pNext==NULL){
            return_YIZtYEB["null"]=true;
            return return_YIZtYEB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_xQRuHEI=json({});
    
        return_xQRuHEI["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_geyHgiF=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[i]);}();
            return_xQRuHEI["members"][std::to_string(i)].push_back(temp);
        }
        return return_xQRuHEI;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_eZmsgit=json({});
    
        return_eZmsgit["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_YUHHTDv=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[i]);}();
            return_eZmsgit["members"][std::to_string(i)].push_back(temp);
        }
        return return_eZmsgit;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_dMsLwXz=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_bZARvQC=json({});
    return_bZARvQC=[&]() {
    json return_OjRWZNp=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_bZARvQC;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int YRSuJDs=0; YRSuJDs < 3; YRSuJDs++){
            [&]() {
result.maxWorkGroupCount[YRSuJDs]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][YRSuJDs]);}();;
        }
        }();
[&]() {

        for (int HxVAYdY=0; HxVAYdY < 3; HxVAYdY++){
            [&]() {
result.maxWorkGroupSize[HxVAYdY]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][HxVAYdY]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yzveIzc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ACrIhEZ=json({});
    
        if (name.pNext==NULL){
            return_ACrIhEZ["null"]=true;
            return return_ACrIhEZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_pTqwGvv=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iIkNbfp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iIkNbfp=NULL;
        }
    temp_iIkNbfp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iIkNbfp;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TdtFZIv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jkxJoPt=json({});
    
        if (name.pNext==NULL){
            return_jkxJoPt["null"]=true;
            return return_jkxJoPt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_JiDtmYz=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VPdZDFY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VPdZDFY=NULL;
        }
    temp_VPdZDFY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VPdZDFY;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ucDlLMp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xAmCptq=json({});
    
        if (name.pNext==NULL){
            return_xAmCptq["null"]=true;
            return return_xAmCptq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_NzRdQqY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xxBbwGE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xxBbwGE=NULL;
        }
    temp_xxBbwGE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xxBbwGE;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aqDZsyY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_muytBjI=json({});
    
        if (name.pNext==NULL){
            return_muytBjI["null"]=true;
            return return_muytBjI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_YtSbIAA=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_amjPtby;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_amjPtby=NULL;
        }
    temp_amjPtby=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_amjPtby;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zyQQlTb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZqfoftI=json({});
    
        if (name.pNext==NULL){
            return_ZqfoftI["null"]=true;
            return return_ZqfoftI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rectangularLines"]=[&]() {
    json return_NVfXVNM=json({});
    return_NVfXVNM=[&]() {
    json return_VGAANfg=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_NVfXVNM;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_rKcdPaw=json({});
    return_rKcdPaw=[&]() {
    json return_xOEqtEJ=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_rKcdPaw;}();
result["members"]["smoothLines"]=[&]() {
    json return_oleqhMk=json({});
    return_oleqhMk=[&]() {
    json return_PDxsiWi=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_oleqhMk;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_zOBueiZ=json({});
    return_zOBueiZ=[&]() {
    json return_JPuErLz=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_zOBueiZ;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_IQDHZgG=json({});
    return_IQDHZgG=[&]() {
    json return_CjKZIHd=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_IQDHZgG;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_ijTiXCV=json({});
    return_ijTiXCV=[&]() {
    json return_PBFvCHV=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_ijTiXCV;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JpfSdPk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EHAlUIN=json({});
    
        if (name.pNext==NULL){
            return_EHAlUIN["null"]=true;
            return return_EHAlUIN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_RdnxAuJ=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tLQpPdL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zuOPkGk=json({});
    
        if (name.pNext==NULL){
            return_zuOPkGk["null"]=true;
            return return_zuOPkGk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_DfXYqJQ=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_fVcVRNZ=json({});
    return_fVcVRNZ=[&]() {
    json return_xufLgSD=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_fVcVRNZ;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_qcsphZb=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_hwyrFgl=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xcRPOhc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xcRPOhc=NULL;
        }
    temp_xcRPOhc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xcRPOhc;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aJAoEdX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bXuRYFk=json({});
    
        if (name.pNext==NULL){
            return_bXuRYFk["null"]=true;
            return return_bXuRYFk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_nMuegvi=json({});
    return_nMuegvi=[&]() {
    json return_HCuvkqD=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_nMuegvi;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQxNKYt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ORJtdiv=json({});
    
        if (name.pNext==NULL){
            return_ORJtdiv["null"]=true;
            return return_ORJtdiv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_AaQEqxL=json({});
    return_AaQEqxL=[&]() {
    json return_TaXAoxs=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_AaQEqxL;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iMqjqnQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Iffhrlv=json({});
    
        if (name.pNext==NULL){
            return_Iffhrlv["null"]=true;
            return return_Iffhrlv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_aWnrSlB=json({});
    return_aWnrSlB=[&]() {
    json return_oqJEKuh=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_aWnrSlB;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_aOEDuSC=json({});
    return_aOEDuSC=[&]() {
    json return_jONVfLB=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_aOEDuSC;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_FLlVofD=json({});
    return_FLlVofD=[&]() {
    json return_POveHDH=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_FLlVofD;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_cNxAdws=json({});
    return_cNxAdws=[&]() {
    json return_FXyoEYi=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_cNxAdws;}();
result["members"]["multiview"]=[&]() {
    json return_RdHvtxF=json({});
    return_RdHvtxF=[&]() {
    json return_SaooZLp=json({});
    return serialize_uint32_t(name.multiview);}();return return_RdHvtxF;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_nJczrQE=json({});
    return_nJczrQE=[&]() {
    json return_ESMrMMH=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_nJczrQE;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_NNVaztj=json({});
    return_NNVaztj=[&]() {
    json return_EUOqKCi=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_NNVaztj;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_pbPhBcq=json({});
    return_pbPhBcq=[&]() {
    json return_suJaQCr=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_pbPhBcq;}();
result["members"]["variablePointers"]=[&]() {
    json return_YyYqVaY=json({});
    return_YyYqVaY=[&]() {
    json return_iLtBlLa=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_YyYqVaY;}();
result["members"]["protectedMemory"]=[&]() {
    json return_ZhlAOxT=json({});
    return_ZhlAOxT=[&]() {
    json return_IXwdXqp=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_ZhlAOxT;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_ffthXhQ=json({});
    return_ffthXhQ=[&]() {
    json return_DIisgyW=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_ffthXhQ;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_LBmlIIF=json({});
    return_LBmlIIF=[&]() {
    json return_YwAJROB=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_LBmlIIF;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ERPoVdO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zKmqifT=json({});
    
        if (name.pNext==NULL){
            return_zKmqifT["null"]=true;
            return return_zKmqifT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_PaOLliG=json({});
    
        return_PaOLliG["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_UtQILgh=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_PaOLliG["members"][std::to_string(i)].push_back(temp);
        }
        return return_PaOLliG;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_EuDRAxM=json({});
    
        return_EuDRAxM["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LlOyCqD=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_EuDRAxM["members"][std::to_string(i)].push_back(temp);
        }
        return return_EuDRAxM;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_dPuCXWk=json({});
    
        return_dPuCXWk["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_AEJVmAl=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_dPuCXWk["members"][std::to_string(i)].push_back(temp);
        }
        return return_dPuCXWk;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_dHLXBAS=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_JUxdylV=json({});
    return_JUxdylV=[&]() {
    json return_GVLeWTE=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_JUxdylV;}();
result["members"]["subgroupSize"]=[&]() {
    json return_UqYpgta=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_rajfffR=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_cOyjOnR=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_WHlZNSw=json({});
    return_WHlZNSw=[&]() {
    json return_DVcYFTn=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_WHlZNSw;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_XQSChSS=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_vHopBcz=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_AJXeocl=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_BoZSNil=json({});
    return_BoZSNil=[&]() {
    json return_ceSGLBu=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_BoZSNil;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_QTzUXJy=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_jXCcgLo=json({});
    return_jXCcgLo=[&]() {
    json return_iqrANFa=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_jXCcgLo;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int TUDVdhG=0; TUDVdhG < VK_UUID_SIZE; TUDVdhG++){
            [&]() {
result.deviceUUID[TUDVdhG]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][TUDVdhG]);}();;
        }
        }();
[&]() {

        for (int fCCNCaJ=0; fCCNCaJ < VK_UUID_SIZE; fCCNCaJ++){
            [&]() {
result.driverUUID[fCCNCaJ]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][fCCNCaJ]);}();;
        }
        }();
[&]() {

        for (int ceYggJk=0; ceYggJk < VK_LUID_SIZE; ceYggJk++){
            [&]() {
result.deviceLUID[ceYggJk]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][ceYggJk]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tEXfJIh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BgPvKYS=json({});
    
        if (name.pNext==NULL){
            return_BgPvKYS["null"]=true;
            return return_BgPvKYS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_WyXYtoy=json({});
    return_WyXYtoy=[&]() {
    json return_HweNSDG=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_WyXYtoy;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_cOMINMT=json({});
    return_cOMINMT=[&]() {
    json return_rUAJEkp=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_cOMINMT;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_GfyVdKA=json({});
    return_GfyVdKA=[&]() {
    json return_GqWXVFt=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_GfyVdKA;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_cTvzunh=json({});
    return_cTvzunh=[&]() {
    json return_dOJjaBq=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_cTvzunh;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_nWQFLeY=json({});
    return_nWQFLeY=[&]() {
    json return_sRoKviG=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_nWQFLeY;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_XQIuxSe=json({});
    return_XQIuxSe=[&]() {
    json return_EcMlmpP=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_XQIuxSe;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_yZkPTjS=json({});
    return_yZkPTjS=[&]() {
    json return_dfCHIoQ=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_yZkPTjS;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_ndjbVWq=json({});
    return_ndjbVWq=[&]() {
    json return_nOOtaZR=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_ndjbVWq;}();
result["members"]["shaderInt8"]=[&]() {
    json return_LpfYrxp=json({});
    return_LpfYrxp=[&]() {
    json return_lBTKvvu=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_LpfYrxp;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_WopTvBu=json({});
    return_WopTvBu=[&]() {
    json return_iLTyZwZ=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_WopTvBu;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_rRkxYtT=json({});
    return_rRkxYtT=[&]() {
    json return_oNnAuWX=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_rRkxYtT;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_IKEQsRh=json({});
    return_IKEQsRh=[&]() {
    json return_oWUrABs=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_IKEQsRh;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_YPQpNSy=json({});
    return_YPQpNSy=[&]() {
    json return_AngzxjG=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_YPQpNSy;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_EarwRqL=json({});
    return_EarwRqL=[&]() {
    json return_qZyrtpv=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_EarwRqL;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_SPUmGFb=json({});
    return_SPUmGFb=[&]() {
    json return_alboAMN=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_SPUmGFb;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_JTJlFNU=json({});
    return_JTJlFNU=[&]() {
    json return_JpwAyAT=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_JTJlFNU;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_SOTlVmE=json({});
    return_SOTlVmE=[&]() {
    json return_zOVSmSB=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_SOTlVmE;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_ntYNOre=json({});
    return_ntYNOre=[&]() {
    json return_TfJdjyj=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_ntYNOre;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_NbYFCSi=json({});
    return_NbYFCSi=[&]() {
    json return_ZQnLJad=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_NbYFCSi;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_qXOXLoD=json({});
    return_qXOXLoD=[&]() {
    json return_qoNPGzg=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_qXOXLoD;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_HhoxxVR=json({});
    return_HhoxxVR=[&]() {
    json return_KEMUPho=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_HhoxxVR;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_rsFMUMc=json({});
    return_rsFMUMc=[&]() {
    json return_NbAkbIv=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_rsFMUMc;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_dJEFeqK=json({});
    return_dJEFeqK=[&]() {
    json return_pjhftAf=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_dJEFeqK;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_kjVllqE=json({});
    return_kjVllqE=[&]() {
    json return_oaZbVRh=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_kjVllqE;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_GmOiOxG=json({});
    return_GmOiOxG=[&]() {
    json return_qRladPX=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_GmOiOxG;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_sDxBMyj=json({});
    return_sDxBMyj=[&]() {
    json return_RBCiPph=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_sDxBMyj;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_NlwcsPl=json({});
    return_NlwcsPl=[&]() {
    json return_uCMTsrd=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_NlwcsPl;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_LIbqRye=json({});
    return_LIbqRye=[&]() {
    json return_pRgPNYK=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_LIbqRye;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_HXDgmII=json({});
    return_HXDgmII=[&]() {
    json return_mHDtgdl=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_HXDgmII;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_GjyewEA=json({});
    return_GjyewEA=[&]() {
    json return_TQCUiGF=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_GjyewEA;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_uguFNQw=json({});
    return_uguFNQw=[&]() {
    json return_stJbDum=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_uguFNQw;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_NBrdAtd=json({});
    return_NBrdAtd=[&]() {
    json return_YLsIUbR=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_NBrdAtd;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_FoJIsHT=json({});
    return_FoJIsHT=[&]() {
    json return_ZkkDRau=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_FoJIsHT;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_ukDDIkX=json({});
    return_ukDDIkX=[&]() {
    json return_arZuwXY=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_ukDDIkX;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_vBeTXAz=json({});
    return_vBeTXAz=[&]() {
    json return_yDGMttM=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_vBeTXAz;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_tZIQgmV=json({});
    return_tZIQgmV=[&]() {
    json return_EnSbuyP=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_tZIQgmV;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_cbdKuwk=json({});
    return_cbdKuwk=[&]() {
    json return_ayGNgMK=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_cbdKuwk;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_ZvVaMZp=json({});
    return_ZvVaMZp=[&]() {
    json return_aQEfqwS=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_ZvVaMZp;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_VznsYUa=json({});
    return_VznsYUa=[&]() {
    json return_iuVOSkW=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_VznsYUa;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_EWBDRqS=json({});
    return_EWBDRqS=[&]() {
    json return_lAXxchN=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_EWBDRqS;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_oBFzEbB=json({});
    return_oBFzEbB=[&]() {
    json return_rjLtTBd=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_oBFzEbB;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_QaJDEnK=json({});
    return_QaJDEnK=[&]() {
    json return_pHsuwVl=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_QaJDEnK;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_FlGdJqc=json({});
    return_FlGdJqc=[&]() {
    json return_bdpjccW=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_FlGdJqc;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_QXRLsUk=json({});
    return_QXRLsUk=[&]() {
    json return_mZOoNmX=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_QXRLsUk;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_UJALZVa=json({});
    return_UJALZVa=[&]() {
    json return_uwWDiCs=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_UJALZVa;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_tKEaiDR=json({});
    return_tKEaiDR=[&]() {
    json return_tDSJXei=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_tKEaiDR;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_dVEDGkl=json({});
    return_dVEDGkl=[&]() {
    json return_UTytMDL=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_dVEDGkl;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eHIaell=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oUWqIvC=json({});
    
        if (name.pNext==NULL){
            return_oUWqIvC["null"]=true;
            return return_oUWqIvC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_AOyWEeY=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_kdGweZD=json({});
    
        return_kdGweZD["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ToPnomj=json({});
    return serialize_char(name.driverName[i]);}();
            return_kdGweZD["members"][std::to_string(i)].push_back(temp);
        }
        return return_kdGweZD;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_SynVmwL=json({});
    
        return_SynVmwL["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xWVLbnz=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_SynVmwL["members"][std::to_string(i)].push_back(temp);
        }
        return return_SynVmwL;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_bAXmFOp=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_zwvonQy=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_teTmtqn=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_GHusVws=json({});
    return_GHusVws=[&]() {
    json return_YigmfEz=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_GHusVws;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_qLvosRA=json({});
    return_qLvosRA=[&]() {
    json return_VVINMTE=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_qLvosRA;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_tQTZRrc=json({});
    return_tQTZRrc=[&]() {
    json return_WYWkkfX=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_tQTZRrc;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_XfFxruK=json({});
    return_XfFxruK=[&]() {
    json return_PYHXUkb=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_XfFxruK;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_TvuObbA=json({});
    return_TvuObbA=[&]() {
    json return_PzgCkgr=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_TvuObbA;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_UBDPPIf=json({});
    return_UBDPPIf=[&]() {
    json return_uldOQaS=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_UBDPPIf;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_XBtfAcc=json({});
    return_XBtfAcc=[&]() {
    json return_eGBmuxW=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_XBtfAcc;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_CslBseq=json({});
    return_CslBseq=[&]() {
    json return_iQygCsQ=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_CslBseq;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_XXyTHPo=json({});
    return_XXyTHPo=[&]() {
    json return_YtwfDsz=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_XXyTHPo;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_OrHRwrL=json({});
    return_OrHRwrL=[&]() {
    json return_XPlVpWP=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_OrHRwrL;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_spVClVu=json({});
    return_spVClVu=[&]() {
    json return_TEKOhME=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_spVClVu;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_AkgSaXI=json({});
    return_AkgSaXI=[&]() {
    json return_XRWYmne=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_AkgSaXI;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_svtsUcI=json({});
    return_svtsUcI=[&]() {
    json return_cptuOkB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_svtsUcI;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_nIqPNZf=json({});
    return_nIqPNZf=[&]() {
    json return_GasBhut=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_nIqPNZf;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_wrLrrvS=json({});
    return_wrLrrvS=[&]() {
    json return_tSrTQAj=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_wrLrrvS;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_tUrKPQo=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_pWUknqt=json({});
    return_pWUknqt=[&]() {
    json return_fiWYpCD=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_pWUknqt;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_iwkpvYq=json({});
    return_iwkpvYq=[&]() {
    json return_uddsAuw=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_iwkpvYq;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_hDgvfHK=json({});
    return_hDgvfHK=[&]() {
    json return_LsYPfVv=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_hDgvfHK;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_YrzvXmz=json({});
    return_YrzvXmz=[&]() {
    json return_LGXdaVI=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_YrzvXmz;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_VLGVCSf=json({});
    return_VLGVCSf=[&]() {
    json return_fIUofnZ=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_VLGVCSf;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_FNSnvEY=json({});
    return_FNSnvEY=[&]() {
    json return_JKYjAWs=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_FNSnvEY;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_Srphgst=json({});
    return_Srphgst=[&]() {
    json return_NFnnbUE=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_Srphgst;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_dJShwFL=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_ufAWemD=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_HZngXrA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_Ypuphjw=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_NXhsGQX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_qNPvrHG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_fqowvpz=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_zQZhAAm=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_XmBxyFh=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_VRBHlfx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_ZWFBCAW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_kjfOlMJ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_vrfvbjx=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_GaxHTwU=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_uOjDBgT=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_LHXcGgc=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_hkUUsuv=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_jsAplzU=json({});
    return_jsAplzU=[&]() {
    json return_fJWVLBe=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_jsAplzU;}();
result["members"]["independentResolve"]=[&]() {
    json return_FCGHpgs=json({});
    return_FCGHpgs=[&]() {
    json return_HJKnwJc=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_FCGHpgs;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_hWIolUr=json({});
    return_hWIolUr=[&]() {
    json return_csUkBcg=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_hWIolUr;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_wkEmYDc=json({});
    return_wkEmYDc=[&]() {
    json return_HhfZlvr=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_wkEmYDc;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_mqkENGh=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_qobmFaQ=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int SEtrgKy=0; SEtrgKy < VK_MAX_DRIVER_NAME_SIZE; SEtrgKy++){
            [&]() {
result.driverName[SEtrgKy]=deserialize_char(name["members"]["driverName"]["members"][SEtrgKy]);}();;
        }
        }();
[&]() {

        for (int ZOuBBis=0; ZOuBBis < VK_MAX_DRIVER_INFO_SIZE; ZOuBBis++){
            [&]() {
result.driverInfo[ZOuBBis]=deserialize_char(name["members"]["driverInfo"]["members"][ZOuBBis]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qutujCc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JXEUMpm=json({});
    
        if (name.pNext==NULL){
            return_JXEUMpm["null"]=true;
            return return_JXEUMpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_avKICQZ=json({});
    return_avKICQZ=[&]() {
    json return_CVjfmta=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_avKICQZ;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_HriQiOv=json({});
    return_HriQiOv=[&]() {
    json return_SfUEewl=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_HriQiOv;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_FeMkokE=json({});
    return_FeMkokE=[&]() {
    json return_VaKHuEu=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_FeMkokE;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_XNDAdya=json({});
    return_XNDAdya=[&]() {
    json return_pvZibLo=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_XNDAdya;}();
result["members"]["privateData"]=[&]() {
    json return_CVoFskc=json({});
    return_CVoFskc=[&]() {
    json return_dJRSPon=json({});
    return serialize_uint32_t(name.privateData);}();return return_CVoFskc;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_xGvPWly=json({});
    return_xGvPWly=[&]() {
    json return_kuYAXrF=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_xGvPWly;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_oPkDrFJ=json({});
    return_oPkDrFJ=[&]() {
    json return_wZzWGvm=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_oPkDrFJ;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_BymSuJP=json({});
    return_BymSuJP=[&]() {
    json return_wVRMaSE=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_BymSuJP;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_LmhCznD=json({});
    return_LmhCznD=[&]() {
    json return_ffGHekb=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_LmhCznD;}();
result["members"]["synchronization2"]=[&]() {
    json return_GGsEsLx=json({});
    return_GGsEsLx=[&]() {
    json return_hmRmgbW=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_GGsEsLx;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_zmTLDpu=json({});
    return_zmTLDpu=[&]() {
    json return_oNTtqcD=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_zmTLDpu;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_cViJUCO=json({});
    return_cViJUCO=[&]() {
    json return_vqPDsOv=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_cViJUCO;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_gXilLus=json({});
    return_gXilLus=[&]() {
    json return_XmkQMxa=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_gXilLus;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_bkLgwfl=json({});
    return_bkLgwfl=[&]() {
    json return_nTtSiVN=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_bkLgwfl;}();
result["members"]["maintenance4"]=[&]() {
    json return_LhuWVkS=json({});
    return_LhuWVkS=[&]() {
    json return_esBcYaO=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_LhuWVkS;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XvmMduj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hetsYhf=json({});
    
        if (name.pNext==NULL){
            return_hetsYhf["null"]=true;
            return return_hetsYhf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_dCBJnRp=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_TTZDBjy=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_UacRPrN=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_TiXpVNw=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_GmBzvEV=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_fxiNmaP=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ZKXxbOj=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_rjNVsrY=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_wGHSGyy=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_SZooUiH=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_VQAezIB=json({});
    return_VQAezIB=[&]() {
    json return_UNpYWeM=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_VQAezIB;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_CfWIluh=json({});
    return_CfWIluh=[&]() {
    json return_aGVMAjL=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_CfWIluh;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_vvKUxsw=json({});
    return_vvKUxsw=[&]() {
    json return_NgVWYEE=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_vvKUxsw;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_MIrSHXw=json({});
    return_MIrSHXw=[&]() {
    json return_vSoLqgb=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_MIrSHXw;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_aSihAQO=json({});
    return_aSihAQO=[&]() {
    json return_MHEkZVt=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_aSihAQO;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_BmGHvpJ=json({});
    return_BmGHvpJ=[&]() {
    json return_AiFQizY=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_BmGHvpJ;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_IKrBBqJ=json({});
    return_IKrBBqJ=[&]() {
    json return_KTtAkIJ=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_IKrBBqJ;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_DyeHwfK=json({});
    return_DyeHwfK=[&]() {
    json return_EGIaUGl=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_DyeHwfK;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_JczjzxH=json({});
    return_JczjzxH=[&]() {
    json return_WrDiteS=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_JczjzxH;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_LuTMPDH=json({});
    return_LuTMPDH=[&]() {
    json return_VojRgMb=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_LuTMPDH;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_sgPsKRJ=json({});
    return_sgPsKRJ=[&]() {
    json return_eogsnLH=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_sgPsKRJ;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_jelnBFF=json({});
    return_jelnBFF=[&]() {
    json return_ffQHxdQ=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_jelnBFF;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_jaDaBGa=json({});
    return_jaDaBGa=[&]() {
    json return_nrMhwBZ=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_jaDaBGa;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_PwumxcD=json({});
    return_PwumxcD=[&]() {
    json return_UhHnjjh=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_PwumxcD;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_hQxJuZe=json({});
    return_hQxJuZe=[&]() {
    json return_pQzGGHX=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_hQxJuZe;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_gBJOAMl=json({});
    return_gBJOAMl=[&]() {
    json return_LbemFWh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_gBJOAMl;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_DNRpArA=json({});
    return_DNRpArA=[&]() {
    json return_BllzEHj=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_DNRpArA;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_UXpLrrX=json({});
    return_UXpLrrX=[&]() {
    json return_hwVvlxg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_UXpLrrX;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_KcMeRta=json({});
    return_KcMeRta=[&]() {
    json return_rjcfQOT=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_KcMeRta;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_FsgztyP=json({});
    return_FsgztyP=[&]() {
    json return_reeNufZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_FsgztyP;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_LwiokJK=json({});
    return_LwiokJK=[&]() {
    json return_kKYxXQm=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_LwiokJK;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_qkqgqmk=json({});
    return_qkqgqmk=[&]() {
    json return_PdEnQZk=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_qkqgqmk;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_VTEZfpR=json({});
    return_VTEZfpR=[&]() {
    json return_thOVvpl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_VTEZfpR;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_ydrKMAg=json({});
    return_ydrKMAg=[&]() {
    json return_gUmtGKl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_ydrKMAg;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_DbSIMvZ=json({});
    return_DbSIMvZ=[&]() {
    json return_fQuerXG=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_DbSIMvZ;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_mLMBGGz=json({});
    return_mLMBGGz=[&]() {
    json return_AhVVZoq=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_mLMBGGz;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_fHXxruM=json({});
    return_fHXxruM=[&]() {
    json return_OSLaHoP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_fHXxruM;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_UydkYTN=json({});
    return_UydkYTN=[&]() {
    json return_gzXtDak=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_UydkYTN;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_GQzMomE=json({});
    return_GQzMomE=[&]() {
    json return_aRwDLdB=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_GQzMomE;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_KgRErcO=json({});
    return_KgRErcO=[&]() {
    json return_SKAVpmi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_KgRErcO;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_yhQeATp=json({});
    return_yhQeATp=[&]() {
    json return_jMixYsy=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_yhQeATp;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_eQTrqQG=json({});
    return_eQTrqQG=[&]() {
    json return_kROJELd=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_eQTrqQG;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_fcqKnRg=json({});
    return_fcqKnRg=[&]() {
    json return_JIYgIMZ=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_fcqKnRg;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_xKPSnWe=json({});
    return_xKPSnWe=[&]() {
    json return_jYyjdyC=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_xKPSnWe;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_BEWECwu=json({});
    return_BEWECwu=[&]() {
    json return_xIzlewO=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_BEWECwu;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aCGcqvE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kTTOdEr=json({});
    
        if (name.pNext==NULL){
            return_kTTOdEr["null"]=true;
            return return_kTTOdEr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_KTkZssD=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YMtXgNl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YMtXgNl=NULL;
        }
    temp_YMtXgNl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YMtXgNl;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qYZejdT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FRYouFV=json({});
    
        if (name.pNext==NULL){
            return_FRYouFV["null"]=true;
            return return_FRYouFV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_YkmYgqO=json({});
    return_YkmYgqO=[&]() {
    json return_ozjYNlc=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_YkmYgqO;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KEkURMK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_apNkpok=json({});
    
        if (name.pNext==NULL){
            return_apNkpok["null"]=true;
            return return_apNkpok;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_rIdJytM=json({});
    
        return_rIdJytM["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_jYUqfPs=json({});
    return serialize_char(name.name[i]);}();
            return_rIdJytM["members"][std::to_string(i)].push_back(temp);
        }
        return return_rIdJytM;
        }();
result["members"]["version"]=[&]() {
    json return_UERtRqD=json({});
    
        return_UERtRqD["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_GIJVPis=json({});
    return serialize_char(name.version[i]);}();
            return_UERtRqD["members"][std::to_string(i)].push_back(temp);
        }
        return return_UERtRqD;
        }();
result["members"]["purposes"]=[&]() {
    json return_rFtwOwm=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_hUjykNl=json({});
    
        return_hUjykNl["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_sjzXarB=json({});
    return serialize_char(name.description[i]);}();
            return_hUjykNl["members"][std::to_string(i)].push_back(temp);
        }
        return return_hUjykNl;
        }();
result["members"]["layer"]=[&]() {
    json return_YmwjASm=json({});
    
        return_YmwjASm["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_gOuLilN=json({});
    return serialize_char(name.layer[i]);}();
            return_YmwjASm["members"][std::to_string(i)].push_back(temp);
        }
        return return_YmwjASm;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int AqGeHDe=0; AqGeHDe < VK_MAX_EXTENSION_NAME_SIZE; AqGeHDe++){
            [&]() {
result.name[AqGeHDe]=deserialize_char(name["members"]["name"]["members"][AqGeHDe]);}();;
        }
        }();
[&]() {

        for (int DmnGTOH=0; DmnGTOH < VK_MAX_EXTENSION_NAME_SIZE; DmnGTOH++){
            [&]() {
result.version[DmnGTOH]=deserialize_char(name["members"]["version"]["members"][DmnGTOH]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int yxtLKZn=0; yxtLKZn < VK_MAX_DESCRIPTION_SIZE; yxtLKZn++){
            [&]() {
result.description[yxtLKZn]=deserialize_char(name["members"]["description"]["members"][yxtLKZn]);}();;
        }
        }();
[&]() {

        for (int mtMNYaY=0; mtMNYaY < VK_MAX_EXTENSION_NAME_SIZE; mtMNYaY++){
            [&]() {
result.layer[mtMNYaY]=deserialize_char(name["members"]["layer"]["members"][mtMNYaY]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XwvjuMO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hHEBQhC=json({});
    
        if (name.pNext==NULL){
            return_hHEBQhC["null"]=true;
            return return_hHEBQhC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_VDKOiIr=json({});
    
        return_VDKOiIr["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_atcRTVr=json({});
    return serialize_char(name.name[i]);}();
            return_VDKOiIr["members"][std::to_string(i)].push_back(temp);
        }
        return return_VDKOiIr;
        }();
result["members"]["version"]=[&]() {
    json return_whqnrWx=json({});
    
        return_whqnrWx["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_PvbqLNR=json({});
    return serialize_char(name.version[i]);}();
            return_whqnrWx["members"][std::to_string(i)].push_back(temp);
        }
        return return_whqnrWx;
        }();
result["members"]["purposes"]=[&]() {
    json return_EpLsMVE=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_GbjMAIp=json({});
    
        return_GbjMAIp["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_qOhkvvz=json({});
    return serialize_char(name.description[i]);}();
            return_GbjMAIp["members"][std::to_string(i)].push_back(temp);
        }
        return return_GbjMAIp;
        }();
result["members"]["layer"]=[&]() {
    json return_LySlTvZ=json({});
    
        return_LySlTvZ["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_jeZLxPD=json({});
    return serialize_char(name.layer[i]);}();
            return_LySlTvZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_LySlTvZ;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int bUyHkDr=0; bUyHkDr < VK_MAX_EXTENSION_NAME_SIZE; bUyHkDr++){
            [&]() {
result.name[bUyHkDr]=deserialize_char(name["members"]["name"]["members"][bUyHkDr]);}();;
        }
        }();
[&]() {

        for (int TdYGnrj=0; TdYGnrj < VK_MAX_EXTENSION_NAME_SIZE; TdYGnrj++){
            [&]() {
result.version[TdYGnrj]=deserialize_char(name["members"]["version"]["members"][TdYGnrj]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int AgijMFA=0; AgijMFA < VK_MAX_DESCRIPTION_SIZE; AgijMFA++){
            [&]() {
result.description[AgijMFA]=deserialize_char(name["members"]["description"]["members"][AgijMFA]);}();;
        }
        }();
[&]() {

        for (int slVZHhW=0; slVZHhW < VK_MAX_EXTENSION_NAME_SIZE; slVZHhW++){
            [&]() {
result.layer[slVZHhW]=deserialize_char(name["members"]["layer"]["members"][slVZHhW]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EsrwdSJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FOQzQro=json({});
    
        if (name.pNext==NULL){
            return_FOQzQro["null"]=true;
            return return_FOQzQro;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColor"]=[&]() {
    json return_oWOqcLB=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_kuKCqTj=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZvxCStk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZvxCStk=NULL;
        }
    temp_ZvxCStk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZvxCStk;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_plEFliw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HaBiZfI=json({});
    
        if (name.pNext==NULL){
            return_HaBiZfI["null"]=true;
            return return_HaBiZfI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_tQOeTZk=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SLnPRZi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vshXibF=json({});
    
        if (name.pNext==NULL){
            return_vshXibF["null"]=true;
            return return_vshXibF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColors"]=[&]() {
    json return_MVBzfcL=json({});
    return_MVBzfcL=[&]() {
    json return_GZNNvqW=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_MVBzfcL;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_bXcyTMd=json({});
    return_bXcyTMd=[&]() {
    json return_WijiRfL=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_bXcyTMd;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jvkplbh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hXQIQQc=json({});
    
        if (name.pNext==NULL){
            return_hXQIQQc["null"]=true;
            return return_hXQIQQc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["components"]=[&]() {
    json return_tRmookJ=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_yhFiBXc=json({});
    return_yhFiBXc=[&]() {
    json return_ZMVLwIv=json({});
    return serialize_uint32_t(name.srgb);}();return return_yhFiBXc;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qkGENEa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qkGENEa=NULL;
        }
    temp_qkGENEa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qkGENEa;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gguPoVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YexxIyH=json({});
    
        if (name.pNext==NULL){
            return_YexxIyH["null"]=true;
            return return_YexxIyH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_mDNezdf=json({});
    return_mDNezdf=[&]() {
    json return_iwahgeN=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_mDNezdf;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_WzhUOMI=json({});
    return_WzhUOMI=[&]() {
    json return_ZLXQYEF=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_WzhUOMI;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_OYFlyHj=json({});
    return_OYFlyHj=[&]() {
    json return_xcekcUI=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_OYFlyHj;}();
result["members"]["hostAddress"]=[&]() {
    json return_MileARR=json({});
    
        if (name.hostAddress==NULL){
            return_MileARR["null"]=true;
            return return_MileARR;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        }
    result.hostAddress=deserialize_void_p(name["members"]["hostAddress"]);
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_nyaSKaW=json({});
    return_nyaSKaW=[&]() {
    json return_YBVkdmD=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_nyaSKaW;}();
result["members"]["hostAddress"]=[&]() {
    json return_LqPvwSw=json({});
    
        if (name.hostAddress==NULL){
            return_LqPvwSw["null"]=true;
            return return_LqPvwSw;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_BMOMQSb;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_BMOMQSb=NULL;
        }
    temp_BMOMQSb=deserialize_void_p(name["members"]["hostAddress"]);
}();result.hostAddress=temp_BMOMQSb;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQEAhPF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ekFpxCV=json({});
    
        if (name.pNext==NULL){
            return_ekFpxCV["null"]=true;
            return return_ekFpxCV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexFormat"]=[&]() {
    json return_dAMCJso=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_PBvAbFv=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_onBUSDf=json({});
    return_onBUSDf=[&]() {
    json return_GUFVJov=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_onBUSDf;}();
result["members"]["maxVertex"]=[&]() {
    json return_yHJGWDW=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_tXaRzrv=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_WMjnHTh=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_thvlRZW=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RyxhyGl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RyxhyGl=NULL;
        }
    temp_RyxhyGl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RyxhyGl;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZlVWXvM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dYDXTfM=json({});
    
        if (name.pNext==NULL){
            return_dYDXTfM["null"]=true;
            return return_dYDXTfM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["data"]=[&]() {
    json return_YjmjRRd=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_TfGgRRz=json({});
    return_TfGgRRz=[&]() {
    json return_avvzFxi=json({});
    return serialize_uint64_t(name.stride);}();return return_TfGgRRz;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eHuKQKA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eHuKQKA=NULL;
        }
    temp_eHuKQKA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eHuKQKA;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EXXaffQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fGJtlsp=json({});
    
        if (name.pNext==NULL){
            return_fGJtlsp["null"]=true;
            return return_fGJtlsp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_UCHeLGJ=json({});
    return_UCHeLGJ=[&]() {
    json return_whgelsH=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_UCHeLGJ;}();
result["members"]["data"]=[&]() {
    json return_GNsrFbu=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YSOTRld;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YSOTRld=NULL;
        }
    temp_YSOTRld=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YSOTRld;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_vacGxUA=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_bCHhsDE=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_YcYNMcI=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oXHXthO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wepoArC=json({});
    
        if (name.pNext==NULL){
            return_wepoArC["null"]=true;
            return return_wepoArC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_IcnSYFe=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_TeNfOOK=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_QUpPMdc=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uNcrVDs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uNcrVDs=NULL;
        }
    temp_uNcrVDs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uNcrVDs;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oyZojJC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KmTXkfP=json({});
    
        if (name.pNext==NULL){
            return_KmTXkfP["null"]=true;
            return return_KmTXkfP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_MvUGnPb=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_UthitzY=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_HgzpjsC=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_znBhwcz=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_OuUMcME=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_EdVPTvO=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_CpcqEWv=json({});
    
        if (name.pGeometries==NULL){
            return_CpcqEWv["null"]=true;
            return return_CpcqEWv;
        }
        
        return_CpcqEWv["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_MkReWgm=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[i]);}();
            return_CpcqEWv["members"][std::to_string(i)].push_back(temp);
        }
        return return_CpcqEWv;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_UlGwSCC=json({});
    
        if (name.ppGeometries==NULL){
            return_UlGwSCC["null"]=true;
            return return_UlGwSCC;
        }
        
        return_UlGwSCC["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_gTHCBCz=json({});
    
        if (name.ppGeometries[i]==NULL){
            return_gTHCBCz["null"]=true;
            return return_gTHCBCz;
        }
        
        return_gTHCBCz["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_UeYvLHR=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[i][i]);}();
            return_gTHCBCz["members"][std::to_string(i)].push_back(temp);
        }
        return return_gTHCBCz;
        }();
            return_UlGwSCC["members"][std::to_string(i)].push_back(temp);
        }
        return return_UlGwSCC;
        }();
result["members"]["scratchData"]=[&]() {
    json return_GsoMLYc=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VNUdwrN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VNUdwrN=NULL;
        }
    temp_VNUdwrN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VNUdwrN;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_dskpcIK;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_dskpcIK=NULL;
        }
    temp_dskpcIK=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int pavRwsY=0; pavRwsY < result.geometryCount; pavRwsY++){
            [&]() {
temp_dskpcIK[pavRwsY]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][pavRwsY]);}();;
        }
        }();result.pGeometries=temp_dskpcIK;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_lavLsiV;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_lavLsiV=NULL;
        }
    temp_lavLsiV=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int hXIhrWV=0; hXIhrWV < result.geometryCount; hXIhrWV++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][hXIhrWV].contains("null")){
        temp_lavLsiV[hXIhrWV]=NULL;
        }
    temp_lavLsiV[hXIhrWV]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int UMOdcen=0; UMOdcen < 1; UMOdcen++){
            [&]() {
temp_lavLsiV[hXIhrWV][UMOdcen]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][hXIhrWV]["members"][UMOdcen]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_lavLsiV;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_MMOaZOq=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_JPjriga=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_jtvRaeR=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_EgnZMgP=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ESEqNqx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KMYhHSN=json({});
    
        if (name.pNext==NULL){
            return_KMYhHSN["null"]=true;
            return return_KMYhHSN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_pQRTmUL=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_CSDawhx=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_EKkDLiU=json({});
    return_EKkDLiU=[&]() {
    json return_GmDhDmC=json({});
    return serialize_uint64_t(name.offset);}();return return_EKkDLiU;}();
result["members"]["size"]=[&]() {
    json return_AbfzDez=json({});
    return_AbfzDez=[&]() {
    json return_zofUAnJ=json({});
    return serialize_uint64_t(name.size);}();return return_AbfzDez;}();
result["members"]["type"]=[&]() {
    json return_GYnbOns=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_WZwVRlv=json({});
    return_WZwVRlv=[&]() {
    json return_YLsGWVT=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_WZwVRlv;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PTECUQf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PTECUQf=NULL;
        }
    temp_PTECUQf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PTECUQf;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_ZKiKCWr=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_jSmRKqh=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_ZxRUUvp=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_afABGtg=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_xoSZWzE=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_soEFJrt=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_vZuMhRB=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_nHNDCyM=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_pJSAJum=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_sSDsFOf=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_OGgkSNf=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_IUCocVL=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_PazttWy=json({});
    
        return_PazttWy["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_NRlkRRV=json({});
    
        return_NRlkRRV["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_AJxoYKF=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_NRlkRRV["members"][std::to_string(i)].push_back(temp);
        }
        return return_NRlkRRV;
        }();
            return_PazttWy["members"][std::to_string(i)].push_back(temp);
        }
        return return_PazttWy;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int grJuYIF=0; grJuYIF < 3; grJuYIF++){
            [&]() {

        for (int JUcoTjJ=0; JUcoTjJ < 4; JUcoTjJ++){
            [&]() {
result.matrix[grJuYIF][JUcoTjJ]=deserialize_float(name["members"]["matrix"]["members"][grJuYIF]["members"][JUcoTjJ]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_tTiOcwE=json({});
    
        return_tTiOcwE["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_ybYpZNE=json({});
    
        return_ybYpZNE["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_LnjDvXD=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_ybYpZNE["members"][std::to_string(i)].push_back(temp);
        }
        return return_ybYpZNE;
        }();
            return_tTiOcwE["members"][std::to_string(i)].push_back(temp);
        }
        return return_tTiOcwE;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int aSgLYID=0; aSgLYID < 3; aSgLYID++){
            [&]() {

        for (int kuglqnb=0; kuglqnb < 4; kuglqnb++){
            [&]() {
result.matrix[aSgLYID][kuglqnb]=deserialize_float(name["members"]["matrix"]["members"][aSgLYID]["members"][kuglqnb]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_wskrxWA=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_FvtFXrs=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_tUKHPkh=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_BWrpeYl=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_rUqSpKD=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_kvgMPYu=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_CsslUyd=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_uuylidK=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_nroNoll=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_UYKHKOC=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_kLJPwqa=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_wjxfjIQ=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kidxQtP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RvtyYgf=json({});
    
        if (name.pNext==NULL){
            return_RvtyYgf["null"]=true;
            return return_RvtyYgf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_WyUJGML=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tCxJdVs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tCxJdVs=NULL;
        }
    temp_tCxJdVs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tCxJdVs;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MuKlQMR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mDvJnPB=json({});
    
        if (name.pNext==NULL){
            return_mDvJnPB["null"]=true;
            return return_mDvJnPB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_AmRDxSZ=json({});
    
        if (name.pVersionData==NULL){
            return_AmRDxSZ["null"]=true;
            return return_AmRDxSZ;
        }
        
        return_AmRDxSZ["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RIuMYQo=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_AmRDxSZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_AmRDxSZ;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zhuyiys;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zhuyiys=NULL;
        }
    temp_zhuyiys=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zhuyiys;}();
[&]() {
uint8_t* temp_qPycxGB;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_qPycxGB=NULL;
        }
    temp_qPycxGB=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int ovPsjhM=0; ovPsjhM < 2*VK_UUID_SIZE; ovPsjhM++){
            [&]() {
temp_qPycxGB[ovPsjhM]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][ovPsjhM]);}();;
        }
        }();result.pVersionData=temp_qPycxGB;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bfBYNiP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZqguhJb=json({});
    
        if (name.pNext==NULL){
            return_ZqguhJb["null"]=true;
            return return_ZqguhJb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_mExVAmg=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_lVRXjic=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_UsUeijE=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EbvFOQV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EbvFOQV=NULL;
        }
    temp_EbvFOQV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EbvFOQV;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OkdovAz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RYyQUmc=json({});
    
        if (name.pNext==NULL){
            return_RYyQUmc["null"]=true;
            return return_RYyQUmc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_uDNlZBj=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_CTyDqia=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_qMdPJjf=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iTfCSue;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iTfCSue=NULL;
        }
    temp_iTfCSue=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iTfCSue;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QCnObIU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_drVprgQ=json({});
    
        if (name.pNext==NULL){
            return_drVprgQ["null"]=true;
            return return_drVprgQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_izrqmJl=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_swgGIYZ=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_KetvPUK=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tpAUqlo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tpAUqlo=NULL;
        }
    temp_tpAUqlo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tpAUqlo;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vBbDKWP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vIeUpfF=json({});
    
        if (name.pNext==NULL){
            return_vIeUpfF["null"]=true;
            return return_vIeUpfF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_IOEGxPN=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_FCIIypP=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VOANZwP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VOANZwP=NULL;
        }
    temp_VOANZwP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VOANZwP;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OXavuVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RpMwjzk=json({});
    
        if (name.pNext==NULL){
            return_RpMwjzk["null"]=true;
            return return_RpMwjzk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["libraryCount"]=[&]() {
    json return_LaTmKzs=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_HkNWlVg=json({});
    
        if (name.pLibraries==NULL){
            return_HkNWlVg["null"]=true;
            return return_HkNWlVg;
        }
        
        return_HkNWlVg["members"]={};
        for(int i=0; i < name.libraryCount; i++){
            json temp;
            temp=[&]() {
    json return_fywOcSK=json({});
    return serialize_VkPipeline(name.pLibraries[i]);}();
            return_HkNWlVg["members"][std::to_string(i)].push_back(temp);
        }
        return return_HkNWlVg;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RXTCGtz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RXTCGtz=NULL;
        }
    temp_RXTCGtz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RXTCGtz;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_EUgOkvR;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_EUgOkvR=NULL;
        }
    temp_EUgOkvR=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int mESjVke=0; mESjVke < result.libraryCount; mESjVke++){
            [&]() {
temp_EUgOkvR[mESjVke]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][mESjVke]);}();;
        }
        }();result.pLibraries=temp_EUgOkvR;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xcTvsAT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_afeRuaP=json({});
    
        if (name.pNext==NULL){
            return_afeRuaP["null"]=true;
            return return_afeRuaP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_dQlUvKX=json({});
    return_dQlUvKX=[&]() {
    json return_YCALbMD=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_dQlUvKX;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DZtqMqe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PKQsdBb=json({});
    
        if (name.pNext==NULL){
            return_PKQsdBb["null"]=true;
            return return_PKQsdBb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_PufVgsH=json({});
    return_PufVgsH=[&]() {
    json return_VZADqtN=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_PufVgsH;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_qoFEjLe=json({});
    return_qoFEjLe=[&]() {
    json return_XSOergR=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_qoFEjLe;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_LOQEIvN=json({});
    return_LOQEIvN=[&]() {
    json return_uOdSLZO=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_LOQEIvN;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gloSSSr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cRCHiUD=json({});
    
        if (name.pNext==NULL){
            return_cRCHiUD["null"]=true;
            return return_cRCHiUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_XBNXdfi=json({});
    return_XBNXdfi=[&]() {
    json return_zpaoptQ=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_XBNXdfi;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_SagrEwl=json({});
    return_SagrEwl=[&]() {
    json return_iaCYzKu=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_SagrEwl;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_JfmUHBE=json({});
    return_JfmUHBE=[&]() {
    json return_hrvCKDm=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_JfmUHBE;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_PntbOdE=json({});
    return_PntbOdE=[&]() {
    json return_vGHCpZc=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_PntbOdE;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_lLcsoPx=json({});
    return_lLcsoPx=[&]() {
    json return_YCIqIps=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_lLcsoPx;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_onWGbYx=json({});
    return_onWGbYx=[&]() {
    json return_fDTpeMK=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_onWGbYx;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_DBxroUx=json({});
    return_DBxroUx=[&]() {
    json return_efOoqcP=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_DBxroUx;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_rXPJakA=json({});
    return_rXPJakA=[&]() {
    json return_iVYytpW=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_rXPJakA;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_CjVdKaR=json({});
    return_CjVdKaR=[&]() {
    json return_UofUQXa=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_CjVdKaR;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_gFeJgAa=json({});
    return_gFeJgAa=[&]() {
    json return_WrEreaY=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_gFeJgAa;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_mGZUFtT=json({});
    return_mGZUFtT=[&]() {
    json return_MtVTGIk=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_mGZUFtT;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_RFyneUa=json({});
    return_RFyneUa=[&]() {
    json return_mxxLZNy=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_RFyneUa;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_jEuCDZC=json({});
    return_jEuCDZC=[&]() {
    json return_jxkwAEi=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_jEuCDZC;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_jCVizFQ=json({});
    return_jCVizFQ=[&]() {
    json return_fdjZlUq=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_jCVizFQ;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_TrKngHK=json({});
    return_TrKngHK=[&]() {
    json return_ETDHLLw=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_TrKngHK;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_lfRBRro=json({});
    return_lfRBRro=[&]() {
    json return_oXXiJEU=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_lfRBRro;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_HglGAMQ=json({});
    return_HglGAMQ=[&]() {
    json return_PzAdgaC=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_HglGAMQ;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_XVAnqpP=json({});
    return_XVAnqpP=[&]() {
    json return_benTrnI=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_XVAnqpP;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_cEXnpAF=json({});
    return_cEXnpAF=[&]() {
    json return_lfaqQQz=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_cEXnpAF;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_sLAHibW=json({});
    return_sLAHibW=[&]() {
    json return_fqVLozx=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_sLAHibW;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_uEpCVLq=json({});
    return_uEpCVLq=[&]() {
    json return_cHcGKUO=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_uEpCVLq;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_tozDgxa=json({});
    return_tozDgxa=[&]() {
    json return_UHJwMWt=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_tozDgxa;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_haiGgTv=json({});
    return_haiGgTv=[&]() {
    json return_ICRtZQt=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_haiGgTv;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_aKdNXgk=json({});
    return_aKdNXgk=[&]() {
    json return_yEhdTRB=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_aKdNXgk;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_LSsXYQW=json({});
    return_LSsXYQW=[&]() {
    json return_jsXevWr=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_LSsXYQW;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_FeqWtdm=json({});
    return_FeqWtdm=[&]() {
    json return_jytYYqH=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_FeqWtdm;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_eMaXBfe=json({});
    return_eMaXBfe=[&]() {
    json return_uRwYwUA=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_eMaXBfe;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_iDzGaFf=json({});
    return_iDzGaFf=[&]() {
    json return_hjPGVGd=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_iDzGaFf;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_MyAkLoI=json({});
    return_MyAkLoI=[&]() {
    json return_vBpAgCG=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_MyAkLoI;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_MsjhAzH=json({});
    return_MsjhAzH=[&]() {
    json return_tLPiJDH=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_MsjhAzH;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_pqDlStm=json({});
    return_pqDlStm=[&]() {
    json return_KkouPrK=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_pqDlStm;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uwbhtcz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SOHJNhP=json({});
    
        if (name.pNext==NULL){
            return_SOHJNhP["null"]=true;
            return return_SOHJNhP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_RlbOmrJ=json({});
    return_RlbOmrJ=[&]() {
    json return_aNbmBHp=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_RlbOmrJ;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_npDaaat=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_VsKWKYG=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_mDynRTJ=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_ZflFidm=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_tWlRhTK=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_GsoSBIe=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_CPMzqlv=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_ffKdyYc=json({});
    return_ffKdyYc=[&]() {
    json return_HfUgMZP=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_ffKdyYc;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_OcTFtRc=json({});
    return_OcTFtRc=[&]() {
    json return_BmKiGwT=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_OcTFtRc;}();
result["members"]["blendOverlap"]=[&]() {
    json return_mgrGGuL=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_EmUrrBd=json({});
    return_EmUrrBd=[&]() {
    json return_IrcqolK=json({});
    return serialize_uint32_t(name.clampResults);}();return return_EmUrrBd;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dAVYbGi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dYwrsls=json({});
    
        if (name.pNext==NULL){
            return_dYwrsls["null"]=true;
            return return_dYwrsls;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_cyffxcw=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aNOkUWQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ijXqWBQ=json({});
    
        if (name.pNext==NULL){
            return_ijXqWBQ["null"]=true;
            return return_ijXqWBQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_wgWJOyI=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rDPBcHF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rDPBcHF=NULL;
        }
    temp_rDPBcHF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rDPBcHF;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BHWSebr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WHhEaDc=json({});
    
        if (name.pNext==NULL){
            return_WHhEaDc["null"]=true;
            return return_WHhEaDc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_oIrDupl=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_tvaSvWI=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HrDDSUH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OefXhAw=json({});
    
        if (name.pNext==NULL){
            return_OefXhAw["null"]=true;
            return return_OefXhAw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_UbjMUxE=json({});
    return_UbjMUxE=[&]() {
    json return_vPrKpOy=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_UbjMUxE;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NSYMOqk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WEUEJEn=json({});
    
        if (name.pNext==NULL){
            return_WEUEJEn["null"]=true;
            return return_WEUEJEn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RkyAjgf=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ryPgGOL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ryPgGOL=NULL;
        }
    temp_ryPgGOL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ryPgGOL;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QSPRgzV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rfVRepo=json({});
    
        if (name.pNext==NULL){
            return_rfVRepo["null"]=true;
            return return_rfVRepo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_npJJLzv=json({});
    return_npJJLzv=[&]() {
    json return_gBVWbHs=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_npJJLzv;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QYJYaVp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yYiDcRY=json({});
    
        if (name.pNext==NULL){
            return_yYiDcRY["null"]=true;
            return return_yYiDcRY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_zbRsurW=json({});
    return_zbRsurW=[&]() {
    json return_GrXHFFr=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_zbRsurW;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MeZpJpS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SAuxbRZ=json({});
    
        if (name.pNext==NULL){
            return_SAuxbRZ["null"]=true;
            return return_SAuxbRZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_QYHVlRy=json({});
    return_QYHVlRy=[&]() {
    json return_WxyQWFn=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_QYHVlRy;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kwSVUkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OORnjFJ=json({});
    
        if (name.pNext==NULL){
            return_OORnjFJ["null"]=true;
            return return_OORnjFJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_JUdQSPW=json({});
    return_JUdQSPW=[&]() {
    json return_DaBAKbv=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_JUdQSPW;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_TZcktWY=json({});
    return_TZcktWY=[&]() {
    json return_wAmAYnF=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_TZcktWY;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_JkIEcbr=json({});
    return_JkIEcbr=[&]() {
    json return_SofRfEI=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_JkIEcbr;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DUdoQCj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oTWePPq=json({});
    
        if (name.pNext==NULL){
            return_oTWePPq["null"]=true;
            return return_oTWePPq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_xYmPzGH=json({});
    return_xYmPzGH=[&]() {
    json return_WXAcYQy=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_xYmPzGH;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_JwoCrrV=json({});
    return_JwoCrrV=[&]() {
    json return_IwBLGjV=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_JwoCrrV;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gzdafMf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bColCgb=json({});
    
        if (name.pNext==NULL){
            return_bColCgb["null"]=true;
            return return_bColCgb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_yLawrfJ=json({});
    return_yLawrfJ=[&]() {
    json return_mNnABdo=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_yLawrfJ;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wkkuRgW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LEMeeQf=json({});
    
        if (name.pNext==NULL){
            return_LEMeeQf["null"]=true;
            return return_LEMeeQf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_RSqVFPz=json({});
    return_RSqVFPz=[&]() {
    json return_NMKJICg=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_RSqVFPz;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AhaDRia=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bpxGDVG=json({});
    
        if (name.pNext==NULL){
            return_bpxGDVG["null"]=true;
            return return_bpxGDVG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_zFPDRcD=json({});
    return_zFPDRcD=[&]() {
    json return_YAPqZzg=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_zFPDRcD;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_DhyMFzS=json({});
    return_DhyMFzS=[&]() {
    json return_cWcykEA=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_DhyMFzS;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_JHDKEJV=json({});
    return_JHDKEJV=[&]() {
    json return_AydfXVq=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_JHDKEJV;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_azLvwBL=json({});
    return_azLvwBL=[&]() {
    json return_BvPMvDw=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_azLvwBL;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jiKCDjb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BtSzsqj=json({});
    
        if (name.pNext==NULL){
            return_BtSzsqj["null"]=true;
            return return_BtSzsqj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_IwrcclD=json({});
    return_IwrcclD=[&]() {
    json return_FqerYYb=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_IwrcclD;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_LXlCRda=json({});
    return_LXlCRda=[&]() {
    json return_bPsoPwK=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_LXlCRda;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wyqKcgh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lYpEPJQ=json({});
    
        if (name.pNext==NULL){
            return_lYpEPJQ["null"]=true;
            return return_lYpEPJQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassShading"]=[&]() {
    json return_iJyylFf=json({});
    return_iJyylFf=[&]() {
    json return_DNAzlCh=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_iJyylFf;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HDhgouV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KTFPhAP=json({});
    
        if (name.pNext==NULL){
            return_KTFPhAP["null"]=true;
            return return_KTFPhAP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["clustercullingShader"]=[&]() {
    json return_XQGFbda=json({});
    return_XQGFbda=[&]() {
    json return_MzjkiKd=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_XQGFbda;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_vBUREaI=json({});
    return_vBUREaI=[&]() {
    json return_TbXsKyU=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_vBUREaI;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yGLpfiX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xgVrqjr=json({});
    
        if (name.pNext==NULL){
            return_xgVrqjr["null"]=true;
            return return_xgVrqjr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_bddRRlt=json({});
    return_bddRRlt=[&]() {
    json return_ncOFCDf=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_bddRRlt;}();
result["members"]["dstOffset"]=[&]() {
    json return_gMwuJSM=json({});
    return_gMwuJSM=[&]() {
    json return_qIfeAGg=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_gMwuJSM;}();
result["members"]["size"]=[&]() {
    json return_mCarXnW=json({});
    return_mCarXnW=[&]() {
    json return_DWdomzP=json({});
    return serialize_uint64_t(name.size);}();return return_mCarXnW;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pZoEcfn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pZoEcfn=NULL;
        }
    temp_pZoEcfn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pZoEcfn;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LGUuxlW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YJEhZyg=json({});
    
        if (name.pNext==NULL){
            return_YJEhZyg["null"]=true;
            return return_YJEhZyg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_ASsIOKj=json({});
    return_ASsIOKj=[&]() {
    json return_AyFyxvV=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_ASsIOKj;}();
result["members"]["dstOffset"]=[&]() {
    json return_QhJYPGa=json({});
    return_QhJYPGa=[&]() {
    json return_ofEpojJ=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_QhJYPGa;}();
result["members"]["size"]=[&]() {
    json return_MgWwHIe=json({});
    return_MgWwHIe=[&]() {
    json return_vtbLvxF=json({});
    return serialize_uint64_t(name.size);}();return return_MgWwHIe;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CBOnZyZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CBOnZyZ=NULL;
        }
    temp_CBOnZyZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CBOnZyZ;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DTKmctP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sLKMoQp=json({});
    
        if (name.pNext==NULL){
            return_sLKMoQp["null"]=true;
            return return_sLKMoQp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_OuQWepq=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_oiKwyMy=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_dVAOLVk=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_zvCQtpL=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_robaavT=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MYPDEyI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MYPDEyI=NULL;
        }
    temp_MYPDEyI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MYPDEyI;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iNHEgdf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hxSUKYP=json({});
    
        if (name.pNext==NULL){
            return_hxSUKYP["null"]=true;
            return return_hxSUKYP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_MSOGRtv=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_XBFdoqw=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_GxVWRYx=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_HTRKhRW=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_pSjplYd=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oCbggfk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oCbggfk=NULL;
        }
    temp_oCbggfk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oCbggfk;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GaAycrG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OhYTdHa=json({});
    
        if (name.pNext==NULL){
            return_OhYTdHa["null"]=true;
            return return_OhYTdHa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_DIsjcPV=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_bzHlzVG=json({});
    
        return_bzHlzVG["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_bpNNPhG=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_bzHlzVG["members"][std::to_string(i)].push_back(temp);
        }
        return return_bzHlzVG;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_duoBzHZ=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_zHsWFlN=json({});
    
        return_zHsWFlN["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_CYupuRo=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_zHsWFlN["members"][std::to_string(i)].push_back(temp);
        }
        return return_zHsWFlN;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JbvSNsC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JbvSNsC=NULL;
        }
    temp_JbvSNsC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JbvSNsC;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int qxbLlaG=0; qxbLlaG < 2; qxbLlaG++){
            [&]() {
result.srcOffsets[qxbLlaG]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][qxbLlaG]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int akOqVqC=0; akOqVqC < 2; akOqVqC++){
            [&]() {
result.dstOffsets[akOqVqC]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][akOqVqC]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YKQLzcs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwOpXPM=json({});
    
        if (name.pNext==NULL){
            return_AwOpXPM["null"]=true;
            return return_AwOpXPM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_WUbKeip=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_ExJjDoX=json({});
    
        return_ExJjDoX["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_MGLkKJx=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_ExJjDoX["members"][std::to_string(i)].push_back(temp);
        }
        return return_ExJjDoX;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_aohUMpa=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_TJfphou=json({});
    
        return_TJfphou["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_nbfJHBd=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_TJfphou["members"][std::to_string(i)].push_back(temp);
        }
        return return_TJfphou;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ycjvlFN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ycjvlFN=NULL;
        }
    temp_ycjvlFN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ycjvlFN;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int ULmuzVT=0; ULmuzVT < 2; ULmuzVT++){
            [&]() {
result.srcOffsets[ULmuzVT]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][ULmuzVT]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int CvofYGr=0; CvofYGr < 2; CvofYGr++){
            [&]() {
result.dstOffsets[CvofYGr]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][CvofYGr]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tWXPmUO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QWMJDdx=json({});
    
        if (name.pNext==NULL){
            return_QWMJDdx["null"]=true;
            return return_QWMJDdx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_AHAbpTF=json({});
    return_AHAbpTF=[&]() {
    json return_HZVrcdw=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_AHAbpTF;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_PCcnEei=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_VYmdoeZ=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_HXhiZFG=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_DymiNlc=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_tLKobGd=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zLIQvbG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zLIQvbG=NULL;
        }
    temp_zLIQvbG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zLIQvbG;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yUwtDbf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PMPxKbv=json({});
    
        if (name.pNext==NULL){
            return_PMPxKbv["null"]=true;
            return return_PMPxKbv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_HuAbSji=json({});
    return_HuAbSji=[&]() {
    json return_uKdhfbN=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_HuAbSji;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_QbjpnIu=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_squjvhq=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_lgIvZca=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_yQqvXzT=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_ChwInpy=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YOOFutk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YOOFutk=NULL;
        }
    temp_YOOFutk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YOOFutk;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ApHrwNG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AjdpcaB=json({});
    
        if (name.pNext==NULL){
            return_AjdpcaB["null"]=true;
            return return_AjdpcaB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_lpEqrZZ=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_jOdBsUH=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_sWTzCMt=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_teVGivH=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_ONZvJyU=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wWhQWpx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wWhQWpx=NULL;
        }
    temp_wWhQWpx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wWhQWpx;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LsBtrwu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VskhYdz=json({});
    
        if (name.pNext==NULL){
            return_VskhYdz["null"]=true;
            return return_VskhYdz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_EchQwiq=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_eNhcyXl=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_lHqbKwg=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_cucIjHm=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_kUyzoyQ=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ovfWRrc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ovfWRrc=NULL;
        }
    temp_ovfWRrc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ovfWRrc;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_losXFTN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vrkWszD=json({});
    
        if (name.pNext==NULL){
            return_vrkWszD["null"]=true;
            return return_vrkWszD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_OSczQgr=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_UtohezV=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_dhRIVwO=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_lhqYIUd=json({});
    
        if (name.pRegions==NULL){
            return_lhqYIUd["null"]=true;
            return return_lhqYIUd;
        }
        
        return_lhqYIUd["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_TNRetKi=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_lhqYIUd["members"][std::to_string(i)].push_back(temp);
        }
        return return_lhqYIUd;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JIJEyMK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JIJEyMK=NULL;
        }
    temp_JIJEyMK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JIJEyMK;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_XjpuFpw;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_XjpuFpw=NULL;
        }
    temp_XjpuFpw=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int SFrhlgK=0; SFrhlgK < result.regionCount; SFrhlgK++){
            [&]() {
temp_XjpuFpw[SFrhlgK]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][SFrhlgK]);}();;
        }
        }();result.pRegions=temp_XjpuFpw;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LeGqrmw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AyswKIv=json({});
    
        if (name.pNext==NULL){
            return_AyswKIv["null"]=true;
            return return_AyswKIv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_GhKXuuy=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_RqGmSsf=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_dBNdXMp=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_zbRDZfe=json({});
    
        if (name.pRegions==NULL){
            return_zbRDZfe["null"]=true;
            return return_zbRDZfe;
        }
        
        return_zbRDZfe["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_IMEMcIG=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_zbRDZfe["members"][std::to_string(i)].push_back(temp);
        }
        return return_zbRDZfe;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YYtDjBH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YYtDjBH=NULL;
        }
    temp_YYtDjBH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YYtDjBH;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_yiLzIqM;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_yiLzIqM=NULL;
        }
    temp_yiLzIqM=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int CkKvYDO=0; CkKvYDO < result.regionCount; CkKvYDO++){
            [&]() {
temp_yiLzIqM[CkKvYDO]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][CkKvYDO]);}();;
        }
        }();result.pRegions=temp_yiLzIqM;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ojLRkPd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gdfBlgQ=json({});
    
        if (name.pNext==NULL){
            return_gdfBlgQ["null"]=true;
            return return_gdfBlgQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_MFzyefH=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_DYnMSvc=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_crYvTZp=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_fKcFrCb=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_RUeAtlu=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_bPvnnyL=json({});
    
        if (name.pRegions==NULL){
            return_bPvnnyL["null"]=true;
            return return_bPvnnyL;
        }
        
        return_bPvnnyL["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_QRVoxKz=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_bPvnnyL["members"][std::to_string(i)].push_back(temp);
        }
        return return_bPvnnyL;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XKGnvoG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XKGnvoG=NULL;
        }
    temp_XKGnvoG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XKGnvoG;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_IEPpcFB;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_IEPpcFB=NULL;
        }
    temp_IEPpcFB=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int xIadbzY=0; xIadbzY < result.regionCount; xIadbzY++){
            [&]() {
temp_IEPpcFB[xIadbzY]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][xIadbzY]);}();;
        }
        }();result.pRegions=temp_IEPpcFB;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_umGCxiC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FqsuuUz=json({});
    
        if (name.pNext==NULL){
            return_FqsuuUz["null"]=true;
            return return_FqsuuUz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_oPLomwR=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_TiQXzZU=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_buoYSrb=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_XGptWly=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ezXPnXs=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_HOfmRAP=json({});
    
        if (name.pRegions==NULL){
            return_HOfmRAP["null"]=true;
            return return_HOfmRAP;
        }
        
        return_HOfmRAP["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_iZHSzNJ=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_HOfmRAP["members"][std::to_string(i)].push_back(temp);
        }
        return return_HOfmRAP;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hXjDhzd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hXjDhzd=NULL;
        }
    temp_hXjDhzd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hXjDhzd;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_EGJeDdo;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_EGJeDdo=NULL;
        }
    temp_EGJeDdo=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int avBXYPP=0; avBXYPP < result.regionCount; avBXYPP++){
            [&]() {
temp_EGJeDdo[avBXYPP]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][avBXYPP]);}();;
        }
        }();result.pRegions=temp_EGJeDdo;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MnesIDV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_erqHfRR=json({});
    
        if (name.pNext==NULL){
            return_erqHfRR["null"]=true;
            return return_erqHfRR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_OeQXpbU=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_BgRIaEE=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_NeXESSw=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_symVcQo=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_rlbCpHA=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_AbZkdqf=json({});
    
        if (name.pRegions==NULL){
            return_AbZkdqf["null"]=true;
            return return_AbZkdqf;
        }
        
        return_AbZkdqf["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_RjdFivy=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_AbZkdqf["members"][std::to_string(i)].push_back(temp);
        }
        return return_AbZkdqf;
        }();
result["members"]["filter"]=[&]() {
    json return_loZaVlY=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Uksqgda;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Uksqgda=NULL;
        }
    temp_Uksqgda=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Uksqgda;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_gOjXMXa;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_gOjXMXa=NULL;
        }
    temp_gOjXMXa=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int QzjvXlj=0; QzjvXlj < result.regionCount; QzjvXlj++){
            [&]() {
temp_gOjXMXa[QzjvXlj]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][QzjvXlj]);}();;
        }
        }();result.pRegions=temp_gOjXMXa;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wlRQLxI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mqdOuiT=json({});
    
        if (name.pNext==NULL){
            return_mqdOuiT["null"]=true;
            return return_mqdOuiT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_pbXBcGe=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_hNnMhKO=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_DUZuPQo=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_TYWwhfl=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_KFrNTal=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BMRZjII=json({});
    
        if (name.pRegions==NULL){
            return_BMRZjII["null"]=true;
            return return_BMRZjII;
        }
        
        return_BMRZjII["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_NMzHVHD=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_BMRZjII["members"][std::to_string(i)].push_back(temp);
        }
        return return_BMRZjII;
        }();
result["members"]["filter"]=[&]() {
    json return_ddyREwP=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Pzzayvm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Pzzayvm=NULL;
        }
    temp_Pzzayvm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Pzzayvm;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_dhxLxUQ;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_dhxLxUQ=NULL;
        }
    temp_dhxLxUQ=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int NBYImGJ=0; NBYImGJ < result.regionCount; NBYImGJ++){
            [&]() {
temp_dhxLxUQ[NBYImGJ]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][NBYImGJ]);}();;
        }
        }();result.pRegions=temp_dhxLxUQ;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MdyAPfu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wSzxYUL=json({});
    
        if (name.pNext==NULL){
            return_wSzxYUL["null"]=true;
            return return_wSzxYUL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_koFgEZS=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_SlaxnWu=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_FsUWnJx=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_TyWtRsf=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_hhDIQYN=json({});
    
        if (name.pRegions==NULL){
            return_hhDIQYN["null"]=true;
            return return_hhDIQYN;
        }
        
        return_hhDIQYN["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_bxjhFis=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_hhDIQYN["members"][std::to_string(i)].push_back(temp);
        }
        return return_hhDIQYN;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MhLEteD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MhLEteD=NULL;
        }
    temp_MhLEteD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MhLEteD;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_bQQfphR;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_bQQfphR=NULL;
        }
    temp_bQQfphR=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int ERYVJFj=0; ERYVJFj < result.regionCount; ERYVJFj++){
            [&]() {
temp_bQQfphR[ERYVJFj]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][ERYVJFj]);}();;
        }
        }();result.pRegions=temp_bQQfphR;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ovyHyte=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UuKIkxc=json({});
    
        if (name.pNext==NULL){
            return_UuKIkxc["null"]=true;
            return return_UuKIkxc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_UPhjylh=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_fSnYKle=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_iDUuKDZ=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_ZaiQmTK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_XJzCyov=json({});
    
        if (name.pRegions==NULL){
            return_XJzCyov["null"]=true;
            return return_XJzCyov;
        }
        
        return_XJzCyov["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_ERZIVeI=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_XJzCyov["members"][std::to_string(i)].push_back(temp);
        }
        return return_XJzCyov;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TFzmCni;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TFzmCni=NULL;
        }
    temp_TFzmCni=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TFzmCni;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_Tdpahmd;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_Tdpahmd=NULL;
        }
    temp_Tdpahmd=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int TZXSojw=0; TZXSojw < result.regionCount; TZXSojw++){
            [&]() {
temp_Tdpahmd[TZXSojw]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][TZXSojw]);}();;
        }
        }();result.pRegions=temp_Tdpahmd;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BRBfXXb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nDuXssZ=json({});
    
        if (name.pNext==NULL){
            return_nDuXssZ["null"]=true;
            return return_nDuXssZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_vkXBfwL=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_AGrrJfU=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_ktKEvPO=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_qYNfECh=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_VyWgAGh=json({});
    
        if (name.pRegions==NULL){
            return_VyWgAGh["null"]=true;
            return return_VyWgAGh;
        }
        
        return_VyWgAGh["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_GXupZHV=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_VyWgAGh["members"][std::to_string(i)].push_back(temp);
        }
        return return_VyWgAGh;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iXBgOdY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iXBgOdY=NULL;
        }
    temp_iXBgOdY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iXBgOdY;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_UcgXXWk;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_UcgXXWk=NULL;
        }
    temp_UcgXXWk=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int JAFNhyF=0; JAFNhyF < result.regionCount; JAFNhyF++){
            [&]() {
temp_UcgXXWk[JAFNhyF]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][JAFNhyF]);}();;
        }
        }();result.pRegions=temp_UcgXXWk;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GcRoJdb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eahlSwV=json({});
    
        if (name.pNext==NULL){
            return_eahlSwV["null"]=true;
            return return_eahlSwV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_EgXVlDJ=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_xCspiID=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_gmCQrmg=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_YrUoKoK=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_IGLGbgb=json({});
    
        if (name.pRegions==NULL){
            return_IGLGbgb["null"]=true;
            return return_IGLGbgb;
        }
        
        return_IGLGbgb["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_FlBzYbB=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_IGLGbgb["members"][std::to_string(i)].push_back(temp);
        }
        return return_IGLGbgb;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pKfeDxP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pKfeDxP=NULL;
        }
    temp_pKfeDxP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pKfeDxP;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_bkpDKVA;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_bkpDKVA=NULL;
        }
    temp_bkpDKVA=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int djHlxdM=0; djHlxdM < result.regionCount; djHlxdM++){
            [&]() {
temp_bkpDKVA[djHlxdM]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][djHlxdM]);}();;
        }
        }();result.pRegions=temp_bkpDKVA;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rIOZunz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tRmZLmi=json({});
    
        if (name.pNext==NULL){
            return_tRmZLmi["null"]=true;
            return return_tRmZLmi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_BwuEdGa=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_MJdmGSA=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_gUePKPH=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_rXxGHEX=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_zkcbfNP=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_mVszlvY=json({});
    
        if (name.pRegions==NULL){
            return_mVszlvY["null"]=true;
            return return_mVszlvY;
        }
        
        return_mVszlvY["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_dOwovtY=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_mVszlvY["members"][std::to_string(i)].push_back(temp);
        }
        return return_mVszlvY;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zlSRLAL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zlSRLAL=NULL;
        }
    temp_zlSRLAL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zlSRLAL;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_LAldoiG;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_LAldoiG=NULL;
        }
    temp_LAldoiG=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int asxHONW=0; asxHONW < result.regionCount; asxHONW++){
            [&]() {
temp_LAldoiG[asxHONW]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][asxHONW]);}();;
        }
        }();result.pRegions=temp_LAldoiG;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLzmjwx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lAbAsSA=json({});
    
        if (name.pNext==NULL){
            return_lAbAsSA["null"]=true;
            return return_lAbAsSA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_ZXoruXd=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_PdHmQhs=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_BtisvDf=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LuuLGJi=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_MhjzzUy=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_nxHAbke=json({});
    
        if (name.pRegions==NULL){
            return_nxHAbke["null"]=true;
            return return_nxHAbke;
        }
        
        return_nxHAbke["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_qSJNWwG=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_nxHAbke["members"][std::to_string(i)].push_back(temp);
        }
        return return_nxHAbke;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_elQeQDt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_elQeQDt=NULL;
        }
    temp_elQeQDt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_elQeQDt;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_WZQUCET;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_WZQUCET=NULL;
        }
    temp_WZQUCET=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int fVUqcge=0; fVUqcge < result.regionCount; fVUqcge++){
            [&]() {
temp_WZQUCET[fVUqcge]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][fVUqcge]);}();;
        }
        }();result.pRegions=temp_WZQUCET;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lgPnvcR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PkGekzU=json({});
    
        if (name.pNext==NULL){
            return_PkGekzU["null"]=true;
            return return_PkGekzU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_GAPwVko=json({});
    return_GAPwVko=[&]() {
    json return_jQUjAhk=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_GAPwVko;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_hGcbLfw=json({});
    return_hGcbLfw=[&]() {
    json return_AYCaSCN=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_hGcbLfw;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dobhYHq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RJTCKDD=json({});
    
        if (name.pNext==NULL){
            return_RJTCKDD["null"]=true;
            return return_RJTCKDD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_TgqZPOF=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_TgqZPOF["null"]=true;
            return return_TgqZPOF;
        }
        return_TgqZPOF=[&]() {
    json return_NhXrkjV=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_TgqZPOF;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_qljPwrS=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SizJmgH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SizJmgH=NULL;
        }
    temp_SizJmgH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SizJmgH;}();
[&]() {
VkAttachmentReference2* temp_NskCvQk;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_NskCvQk=NULL;
        }
    [&]() {
*(temp_NskCvQk)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_NskCvQk;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sKNpaii=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sVIMVXa=json({});
    
        if (name.pNext==NULL){
            return_sVIMVXa["null"]=true;
            return return_sVIMVXa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentSize"]=[&]() {
    json return_lFIbASt=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_oWeyzOk=json({});
    
        return_oWeyzOk["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_nANjiOC=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_oWeyzOk["members"][std::to_string(i)].push_back(temp);
        }
        return return_oWeyzOk;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cYMuSFQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cYMuSFQ=NULL;
        }
    temp_cYMuSFQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cYMuSFQ;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int mrTnVDb=0; mrTnVDb < 2; mrTnVDb++){
            [&]() {
result.combinerOps[mrTnVDb]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][mrTnVDb]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_paJpvCE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KeECEXO=json({});
    
        if (name.pNext==NULL){
            return_KeECEXO["null"]=true;
            return return_KeECEXO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_BpdQXbc=json({});
    return_BpdQXbc=[&]() {
    json return_lNIekKJ=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_BpdQXbc;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_xlKhOOF=json({});
    return_xlKhOOF=[&]() {
    json return_GJoYbyp=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_xlKhOOF;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_wGpyJia=json({});
    return_wGpyJia=[&]() {
    json return_siFMWeq=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_wGpyJia;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bLcFaRD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SanYQCL=json({});
    
        if (name.pNext==NULL){
            return_SanYQCL["null"]=true;
            return return_SanYQCL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_TNHmNNl=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_wUXWtjm=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_BCIIDwR=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_mFHuoYd=json({});
    return_mFHuoYd=[&]() {
    json return_VHiJoRV=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_mFHuoYd;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_kCgvuDC=json({});
    return_kCgvuDC=[&]() {
    json return_gYejoVh=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_kCgvuDC;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_TjqJDvG=json({});
    return_TjqJDvG=[&]() {
    json return_SCcYmmW=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_TjqJDvG;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_qyBHmkE=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_OYdRjqD=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_pGnEhJO=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_XGxfzqz=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_PdaylUP=json({});
    return_PdaylUP=[&]() {
    json return_XAJhVTU=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_PdaylUP;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_oxjUVwx=json({});
    return_oxjUVwx=[&]() {
    json return_QXpCUUy=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_oxjUVwx;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_MbBxMqm=json({});
    return_MbBxMqm=[&]() {
    json return_ZyXShvR=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_MbBxMqm;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_SHqrbQR=json({});
    return_SHqrbQR=[&]() {
    json return_fmhLMWC=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_SHqrbQR;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_iOidKzW=json({});
    return_iOidKzW=[&]() {
    json return_TdTwbIQ=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_iOidKzW;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_qaPQQCT=json({});
    return_qaPQQCT=[&]() {
    json return_Zupgerz=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_qaPQQCT;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_FCEKBCa=json({});
    return_FCEKBCa=[&]() {
    json return_OReRhBi=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_FCEKBCa;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nvWcQUi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YXDmhHF=json({});
    
        if (name.pNext==NULL){
            return_YXDmhHF["null"]=true;
            return return_YXDmhHF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleCounts"]=[&]() {
    json return_fEupzDT=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_QZZdZNC=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OShYGMj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wLzpHyk=json({});
    
        if (name.pNext==NULL){
            return_wLzpHyk["null"]=true;
            return return_wLzpHyk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_UxwyOXz=json({});
    return_UxwyOXz=[&]() {
    json return_gyzDYNc=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_UxwyOXz;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VaSNmtO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QFtqMYE=json({});
    
        if (name.pNext==NULL){
            return_QFtqMYE["null"]=true;
            return return_QFtqMYE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_zlYFYUs=json({});
    return_zlYFYUs=[&]() {
    json return_JTJsDlE=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_zlYFYUs;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qXvLLcF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dOlVkCK=json({});
    
        if (name.pNext==NULL){
            return_dOlVkCK["null"]=true;
            return return_dOlVkCK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_BpjedqY=json({});
    return_BpjedqY=[&]() {
    json return_pTZHIQO=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_BpjedqY;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_cWhifVd=json({});
    return_cWhifVd=[&]() {
    json return_wsPqypg=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_cWhifVd;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_QybazPo=json({});
    return_QybazPo=[&]() {
    json return_DISKRjo=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_QybazPo;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ClfYmpR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NYDlnya=json({});
    
        if (name.pNext==NULL){
            return_NYDlnya["null"]=true;
            return return_NYDlnya;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_YMUpjDb=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ywbCmBg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_enUXRVi=json({});
    
        if (name.pNext==NULL){
            return_enUXRVi["null"]=true;
            return return_enUXRVi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateType"]=[&]() {
    json return_HcFlcws=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_emIZIpg=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_kjCiFzw=json({});
    
        return_kjCiFzw["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_ydIGYZk=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_kjCiFzw["members"][std::to_string(i)].push_back(temp);
        }
        return return_kjCiFzw;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hrorXFU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hrorXFU=NULL;
        }
    temp_hrorXFU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hrorXFU;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int XekjfyN=0; XekjfyN < 2; XekjfyN++){
            [&]() {
result.combinerOps[XekjfyN]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][XekjfyN]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DVGHIGa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OGXjWqc=json({});
    
        if (name.pNext==NULL){
            return_OGXjWqc["null"]=true;
            return return_OGXjWqc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_acyEvvP=json({});
    return_acyEvvP=[&]() {
    json return_sgkknQs=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_acyEvvP;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_HEUIMOh=json({});
    return_HEUIMOh=[&]() {
    json return_WNnhvZE=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_HEUIMOh;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_lQKkFbt=json({});
    return_lQKkFbt=[&]() {
    json return_BvfohVg=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_lQKkFbt;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yAnbGfh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yAnbGfh=NULL;
        }
    temp_yAnbGfh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yAnbGfh;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NiBspsE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nxYVqCH=json({});
    
        if (name.pNext==NULL){
            return_nxYVqCH["null"]=true;
            return return_nxYVqCH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_FSdrskU=json({});
    return_FSdrskU=[&]() {
    json return_UQHNwwj=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_FSdrskU;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_QJJCNOq=json({});
    return_QJJCNOq=[&]() {
    json return_AueLbgQ=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_QJJCNOq;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kZgNIko=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FJKvnKJ=json({});
    
        if (name.pNext==NULL){
            return_FJKvnKJ["null"]=true;
            return return_FJKvnKJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_gDdlKpA=json({});
    return_gDdlKpA=[&]() {
    json return_LurHJcP=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_gDdlKpA;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ztUuxBM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UWCySyG=json({});
    
        if (name.pNext==NULL){
            return_UWCySyG["null"]=true;
            return return_UWCySyG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_krQUmqy=json({});
    return_krQUmqy=[&]() {
    json return_vdecGtY=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_krQUmqy;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xxlLTlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qdoyGbg=json({});
    
        if (name.pNext==NULL){
            return_qdoyGbg["null"]=true;
            return return_qdoyGbg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_DhzEUTR=json({});
    return_DhzEUTR=[&]() {
    json return_dYveqxQ=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_DhzEUTR;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iJZfnpG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JxEvKWT=json({});
    
        if (name.pNext==NULL){
            return_JxEvKWT["null"]=true;
            return return_JxEvKWT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_bfWtHla=json({});
    return_bfWtHla=[&]() {
    json return_HRQBRco=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_bfWtHla;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_NQWJzvw=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_VYIfdAX=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_VYIfdAX["null"]=true;
            return return_VYIfdAX;
        }
        
        return_VYIfdAX["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_DADnPMk=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_VYIfdAX["members"][std::to_string(i)].push_back(temp);
        }
        return return_VYIfdAX;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_UpHlpXy;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_UpHlpXy=NULL;
        }
    temp_UpHlpXy=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int zyhOGYT=0; zyhOGYT < result.descriptorTypeCount; zyhOGYT++){
            [&]() {
temp_UpHlpXy[zyhOGYT]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][zyhOGYT]);}();;
        }
        }();result.pDescriptorTypes=temp_UpHlpXy;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_wwyWBMk=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_syVFomt=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_syVFomt["null"]=true;
            return return_syVFomt;
        }
        
        return_syVFomt["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_jPLqmRF=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_syVFomt["members"][std::to_string(i)].push_back(temp);
        }
        return return_syVFomt;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_BDQvWds;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_BDQvWds=NULL;
        }
    temp_BDQvWds=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int ONLJPoZ=0; ONLJPoZ < result.descriptorTypeCount; ONLJPoZ++){
            [&]() {
temp_BDQvWds[ONLJPoZ]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][ONLJPoZ]);}();;
        }
        }();result.pDescriptorTypes=temp_BDQvWds;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IaBUsqo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RBRtaJa=json({});
    
        if (name.pNext==NULL){
            return_RBRtaJa["null"]=true;
            return return_RBRtaJa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_OMQPcbT=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_dIpdLEh=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_dIpdLEh["null"]=true;
            return return_dIpdLEh;
        }
        
        return_dIpdLEh["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_xZTYFpl=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_dIpdLEh["members"][std::to_string(i)].push_back(temp);
        }
        return return_dIpdLEh;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QLGrpQe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QLGrpQe=NULL;
        }
    temp_QLGrpQe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QLGrpQe;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_YyvVVOm;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_YyvVVOm=NULL;
        }
    temp_YyvVVOm=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int OFFfnFJ=0; OFFfnFJ < result.mutableDescriptorTypeListCount; OFFfnFJ++){
            [&]() {
temp_YyvVVOm[OFFfnFJ]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][OFFfnFJ]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_YyvVVOm;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fLfCWjq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tNiRmYH=json({});
    
        if (name.pNext==NULL){
            return_tNiRmYH["null"]=true;
            return return_tNiRmYH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_TLiMrSA=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_pHpeAdh=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_pHpeAdh["null"]=true;
            return return_pHpeAdh;
        }
        
        return_pHpeAdh["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_qsTwQle=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_pHpeAdh["members"][std::to_string(i)].push_back(temp);
        }
        return return_pHpeAdh;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VsGBrne;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VsGBrne=NULL;
        }
    temp_VsGBrne=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VsGBrne;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_dOQTorv;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_dOQTorv=NULL;
        }
    temp_dOQTorv=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int MQCUULl=0; MQCUULl < result.mutableDescriptorTypeListCount; MQCUULl++){
            [&]() {
temp_dOQTorv[MQCUULl]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][MQCUULl]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_dOQTorv;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iWNumgO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qjgnizw=json({});
    
        if (name.pNext==NULL){
            return_qjgnizw["null"]=true;
            return return_qjgnizw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipControl"]=[&]() {
    json return_ipTtIrk=json({});
    return_ipTtIrk=[&]() {
    json return_ZzPFpLp=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_ipTtIrk;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RbrBZKv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gclihKs=json({});
    
        if (name.pNext==NULL){
            return_gclihKs["null"]=true;
            return return_gclihKs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_ennDTyi=json({});
    return_ennDTyi=[&]() {
    json return_kpVMKAK=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_ennDTyi;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GrRlMGp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GrRlMGp=NULL;
        }
    temp_GrRlMGp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GrRlMGp;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JaUlctP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uUIEbCc=json({});
    
        if (name.pNext==NULL){
            return_uUIEbCc["null"]=true;
            return return_uUIEbCc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_slSHKqd=json({});
    return_slSHKqd=[&]() {
    json return_rQAIvBT=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_slSHKqd;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NqsmqdX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gSnKJmd=json({});
    
        if (name.pNext==NULL){
            return_gSnKJmd["null"]=true;
            return return_gSnKJmd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_ALmumYI=json({});
    return_ALmumYI=[&]() {
    json return_BuuFBKW=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_ALmumYI;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eLSXIbH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OVczlii=json({});
    
        if (name.pNext==NULL){
            return_OVczlii["null"]=true;
            return return_OVczlii;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["binding"]=[&]() {
    json return_NktXVYL=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_QXFDUdO=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_RXMEMuk=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_NnAPpoZ=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MtzkJjr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PtPAfnb=json({});
    
        if (name.pNext==NULL){
            return_PtPAfnb["null"]=true;
            return return_PtPAfnb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["location"]=[&]() {
    json return_JtmJJUk=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_EeoVyJC=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_uzjqcaQ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_mvXgWNt=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oeBVYlj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GFfdSxa=json({});
    
        if (name.pNext==NULL){
            return_GFfdSxa["null"]=true;
            return return_GFfdSxa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_qaxokdV=json({});
    return_qaxokdV=[&]() {
    json return_gfFmoda=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_qaxokdV;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IlDGIeO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPnIhOM=json({});
    
        if (name.pNext==NULL){
            return_FPnIhOM["null"]=true;
            return return_FPnIhOM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_OhMDJRK=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_pYIfkNX=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_pYIfkNX["null"]=true;
            return return_pYIfkNX;
        }
        
        return_pYIfkNX["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_pWosbRI=json({});
    return_pWosbRI=[&]() {
    json return_RBcXUNg=json({});
    return serialize_uint32_t(name.pColorWriteEnables[i]);}();return return_pWosbRI;}();
            return_pYIfkNX["members"][std::to_string(i)].push_back(temp);
        }
        return return_pYIfkNX;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XvYgIcq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XvYgIcq=NULL;
        }
    temp_XvYgIcq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XvYgIcq;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_vrUrpSC;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_vrUrpSC=NULL;
        }
    temp_vrUrpSC=(VkBool32*)malloc(result.attachmentCount*sizeof(VkBool32));
        for (int RbsNAzz=0; RbsNAzz < result.attachmentCount; RbsNAzz++){
            [&]() {
[&]() {
temp_vrUrpSC[RbsNAzz]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][RbsNAzz]);}();}();;
        }
        }();result.pColorWriteEnables=temp_vrUrpSC;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WtPiaVl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WqcksJN=json({});
    
        if (name.pNext==NULL){
            return_WqcksJN["null"]=true;
            return return_WqcksJN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_BTdwYXa=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CYZJVbQ=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_PpuTpcq=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_xryQTtf=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uCWibtO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uCWibtO=NULL;
        }
    temp_uCWibtO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uCWibtO;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IydQHFI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vdIfing=json({});
    
        if (name.pNext==NULL){
            return_vdIfing["null"]=true;
            return return_vdIfing;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_QUlrNyJ=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CkSWQlU=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_faqeOoi=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_vfLSLPg=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SFUdMlw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SFUdMlw=NULL;
        }
    temp_SFUdMlw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SFUdMlw;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gNIWDjy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ysieQYS=json({});
    
        if (name.pNext==NULL){
            return_ysieQYS["null"]=true;
            return return_ysieQYS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_ZonCAgy=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_wTLDmgz=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_ceAzpDi=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_IWRpObF=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_FnxfIJU=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_laIhoip=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_KqCXiAD=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_aukXaUU=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_smbCxZj=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_raQpHGd=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ybBctpI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ybBctpI=NULL;
        }
    temp_ybBctpI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ybBctpI;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TtIVvKE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DqSOydr=json({});
    
        if (name.pNext==NULL){
            return_DqSOydr["null"]=true;
            return return_DqSOydr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_dirEzuc=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_ifRJhrn=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_sjCjCOh=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_GRSVpjj=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_kxlVzPJ=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_OvlPsZL=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_unoWNeZ=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_IrAAcFS=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_NFxldCx=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_XBWAuCh=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_THXUycf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_THXUycf=NULL;
        }
    temp_THXUycf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_THXUycf;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gQwLQKF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kRGQMzl=json({});
    
        if (name.pNext==NULL){
            return_kRGQMzl["null"]=true;
            return return_kRGQMzl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_PpHyrpS=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_ucheYds=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_SluZxMR=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_gMNtdaL=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_LIgwOye=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_XQNJrBM=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_sVDSFnT=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_yqTDGzm=json({});
    return_yqTDGzm=[&]() {
    json return_QlXogJK=json({});
    return serialize_uint64_t(name.offset);}();return return_yqTDGzm;}();
result["members"]["size"]=[&]() {
    json return_yQVziwr=json({});
    return_yQVziwr=[&]() {
    json return_iJaZMye=json({});
    return serialize_uint64_t(name.size);}();return return_yQVziwr;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_usCrOPv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_usCrOPv=NULL;
        }
    temp_usCrOPv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_usCrOPv;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PkoPjmF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GHtGSIj=json({});
    
        if (name.pNext==NULL){
            return_GHtGSIj["null"]=true;
            return return_GHtGSIj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_qspidto=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_pWFxKIT=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_coOWSBC=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_jNCIxwr=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_ufWHVqA=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_IKvEwuJ=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_EyrtjEP=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_HzvYWpu=json({});
    return_HzvYWpu=[&]() {
    json return_qAtIdGs=json({});
    return serialize_uint64_t(name.offset);}();return return_HzvYWpu;}();
result["members"]["size"]=[&]() {
    json return_QAkVdJx=json({});
    return_QAkVdJx=[&]() {
    json return_EPJCZOS=json({});
    return serialize_uint64_t(name.size);}();return return_QAkVdJx;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Qluqrwa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Qluqrwa=NULL;
        }
    temp_Qluqrwa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Qluqrwa;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_groYvve=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UHGOPNd=json({});
    
        if (name.pNext==NULL){
            return_UHGOPNd["null"]=true;
            return return_UHGOPNd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_gnLsktj=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_yaIcHUS=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_PXaNLPz=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_PXaNLPz["null"]=true;
            return return_PXaNLPz;
        }
        
        return_PXaNLPz["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_PENfHFX=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_PXaNLPz["members"][std::to_string(i)].push_back(temp);
        }
        return return_PXaNLPz;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_pZuIXzI=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_YoaCePZ=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_YoaCePZ["null"]=true;
            return return_YoaCePZ;
        }
        
        return_YoaCePZ["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_XXyGmAi=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_YoaCePZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_YoaCePZ;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_SfcafKT=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_QOrsQxR=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_QOrsQxR["null"]=true;
            return return_QOrsQxR;
        }
        
        return_QOrsQxR["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_XfrELBu=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_QOrsQxR["members"][std::to_string(i)].push_back(temp);
        }
        return return_QOrsQxR;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HjvpTFs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HjvpTFs=NULL;
        }
    temp_HjvpTFs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HjvpTFs;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_gJWQGOL;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_gJWQGOL=NULL;
        }
    temp_gJWQGOL=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int yXnXuRR=0; yXnXuRR < result.memoryBarrierCount; yXnXuRR++){
            [&]() {
temp_gJWQGOL[yXnXuRR]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][yXnXuRR]);}();;
        }
        }();result.pMemoryBarriers=temp_gJWQGOL;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_MnrjNBR;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_MnrjNBR=NULL;
        }
    temp_MnrjNBR=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int dxefQOg=0; dxefQOg < result.bufferMemoryBarrierCount; dxefQOg++){
            [&]() {
temp_MnrjNBR[dxefQOg]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][dxefQOg]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_MnrjNBR;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_PPuowmt;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_PPuowmt=NULL;
        }
    temp_PPuowmt=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int BGQtkDN=0; BGQtkDN < result.imageMemoryBarrierCount; BGQtkDN++){
            [&]() {
temp_PPuowmt[BGQtkDN]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][BGQtkDN]);}();;
        }
        }();result.pImageMemoryBarriers=temp_PPuowmt;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HJgMZDx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mmXdhqg=json({});
    
        if (name.pNext==NULL){
            return_mmXdhqg["null"]=true;
            return return_mmXdhqg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_pQkdksr=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_ryMVAlp=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_FmVpumQ=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_FmVpumQ["null"]=true;
            return return_FmVpumQ;
        }
        
        return_FmVpumQ["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_yKRVwgu=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_FmVpumQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_FmVpumQ;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_rYVLjpa=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_tZwFnKT=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_tZwFnKT["null"]=true;
            return return_tZwFnKT;
        }
        
        return_tZwFnKT["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_whnxQyl=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_tZwFnKT["members"][std::to_string(i)].push_back(temp);
        }
        return return_tZwFnKT;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_xbPFyvf=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_fHwxQvA=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_fHwxQvA["null"]=true;
            return return_fHwxQvA;
        }
        
        return_fHwxQvA["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_QTDRiJm=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_fHwxQvA["members"][std::to_string(i)].push_back(temp);
        }
        return return_fHwxQvA;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hiiztKa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hiiztKa=NULL;
        }
    temp_hiiztKa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hiiztKa;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_yICftRE;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_yICftRE=NULL;
        }
    temp_yICftRE=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int giwCnEV=0; giwCnEV < result.memoryBarrierCount; giwCnEV++){
            [&]() {
temp_yICftRE[giwCnEV]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][giwCnEV]);}();;
        }
        }();result.pMemoryBarriers=temp_yICftRE;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_sCmQSRB;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_sCmQSRB=NULL;
        }
    temp_sCmQSRB=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int TzNommo=0; TzNommo < result.bufferMemoryBarrierCount; TzNommo++){
            [&]() {
temp_sCmQSRB[TzNommo]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][TzNommo]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_sCmQSRB;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_ifDibvV;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_ifDibvV=NULL;
        }
    temp_ifDibvV=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int BKleiUM=0; BKleiUM < result.imageMemoryBarrierCount; BKleiUM++){
            [&]() {
temp_ifDibvV[BKleiUM]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][BKleiUM]);}();;
        }
        }();result.pImageMemoryBarriers=temp_ifDibvV;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OKGCybo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rekNKCU=json({});
    
        if (name.pNext==NULL){
            return_rekNKCU["null"]=true;
            return return_rekNKCU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_fIKkhek=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_FenhomQ=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_oOXBInZ=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_RfNoyGm=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UYsVywF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UYsVywF=NULL;
        }
    temp_UYsVywF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UYsVywF;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NzIoGEz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMqmxwJ=json({});
    
        if (name.pNext==NULL){
            return_xMqmxwJ["null"]=true;
            return return_xMqmxwJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_baRqDCB=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_zQOQwhK=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_dzBmyDF=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_TilhSkU=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aKBzWTI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aKBzWTI=NULL;
        }
    temp_aKBzWTI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aKBzWTI;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nNLvBfE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cGwvNnp=json({});
    
        if (name.pNext==NULL){
            return_cGwvNnp["null"]=true;
            return return_cGwvNnp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_myhykSC=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_dsdusVh=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OypUfer;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OypUfer=NULL;
        }
    temp_OypUfer=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OypUfer;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WKdwdOf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IIKNGmu=json({});
    
        if (name.pNext==NULL){
            return_IIKNGmu["null"]=true;
            return return_IIKNGmu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_LbbGVEu=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_SYkZnRm=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lzmcRsB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lzmcRsB=NULL;
        }
    temp_lzmcRsB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lzmcRsB;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wFKVkCf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TJukXou=json({});
    
        if (name.pNext==NULL){
            return_TJukXou["null"]=true;
            return return_TJukXou;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mrHywVL=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_YaZWVOp=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_qtbFVAF=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_qtbFVAF["null"]=true;
            return return_qtbFVAF;
        }
        
        return_qtbFVAF["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_rmGqedb=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_qtbFVAF["members"][std::to_string(i)].push_back(temp);
        }
        return return_qtbFVAF;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_jvbUnQb=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_dYfFoTv=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_dYfFoTv["null"]=true;
            return return_dYfFoTv;
        }
        
        return_dYfFoTv["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_OFNntZo=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_dYfFoTv["members"][std::to_string(i)].push_back(temp);
        }
        return return_dYfFoTv;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_BDFyUhD=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_HomESrX=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_HomESrX["null"]=true;
            return return_HomESrX;
        }
        
        return_HomESrX["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_oHobxih=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_HomESrX["members"][std::to_string(i)].push_back(temp);
        }
        return return_HomESrX;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OcROumQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OcROumQ=NULL;
        }
    temp_OcROumQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OcROumQ;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_FjZwugk;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_FjZwugk=NULL;
        }
    temp_FjZwugk=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int zQYXiAK=0; zQYXiAK < result.waitSemaphoreInfoCount; zQYXiAK++){
            [&]() {
temp_FjZwugk[zQYXiAK]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][zQYXiAK]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_FjZwugk;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_afeDtzH;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_afeDtzH=NULL;
        }
    temp_afeDtzH=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int VPhVUtA=0; VPhVUtA < result.commandBufferInfoCount; VPhVUtA++){
            [&]() {
temp_afeDtzH[VPhVUtA]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][VPhVUtA]);}();;
        }
        }();result.pCommandBufferInfos=temp_afeDtzH;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_lGZVuXG;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_lGZVuXG=NULL;
        }
    temp_lGZVuXG=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int KpNHqEX=0; KpNHqEX < result.signalSemaphoreInfoCount; KpNHqEX++){
            [&]() {
temp_lGZVuXG[KpNHqEX]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][KpNHqEX]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_lGZVuXG;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PCuaFMU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tIAGYBo=json({});
    
        if (name.pNext==NULL){
            return_tIAGYBo["null"]=true;
            return return_tIAGYBo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sbHyOhS=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_vFvzpEx=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_lMOCaba=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_lMOCaba["null"]=true;
            return return_lMOCaba;
        }
        
        return_lMOCaba["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_SXyOsrE=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_lMOCaba["members"][std::to_string(i)].push_back(temp);
        }
        return return_lMOCaba;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_CLJYEzd=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_LoHinQl=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_LoHinQl["null"]=true;
            return return_LoHinQl;
        }
        
        return_LoHinQl["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_ChMPUgF=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_LoHinQl["members"][std::to_string(i)].push_back(temp);
        }
        return return_LoHinQl;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_OeDpUfG=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_HkHxVRg=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_HkHxVRg["null"]=true;
            return return_HkHxVRg;
        }
        
        return_HkHxVRg["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_yjYAUcn=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_HkHxVRg["members"][std::to_string(i)].push_back(temp);
        }
        return return_HkHxVRg;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YzJKvsA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YzJKvsA=NULL;
        }
    temp_YzJKvsA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YzJKvsA;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_iKpUcwx;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_iKpUcwx=NULL;
        }
    temp_iKpUcwx=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int KCSZOCd=0; KCSZOCd < result.waitSemaphoreInfoCount; KCSZOCd++){
            [&]() {
temp_iKpUcwx[KCSZOCd]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][KCSZOCd]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_iKpUcwx;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_dLQyDtp;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_dLQyDtp=NULL;
        }
    temp_dLQyDtp=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int WczpMgB=0; WczpMgB < result.commandBufferInfoCount; WczpMgB++){
            [&]() {
temp_dLQyDtp[WczpMgB]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][WczpMgB]);}();;
        }
        }();result.pCommandBufferInfos=temp_dLQyDtp;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_hPemVLf;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_hPemVLf=NULL;
        }
    temp_hPemVLf=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int KrHfZCA=0; KrHfZCA < result.signalSemaphoreInfoCount; KrHfZCA++){
            [&]() {
temp_hPemVLf[KrHfZCA]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][KrHfZCA]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_hPemVLf;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NywLWaG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PFILWUC=json({});
    
        if (name.pNext==NULL){
            return_PFILWUC["null"]=true;
            return return_PFILWUC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_xDmPJGB=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PjhNBLM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RvmmWFQ=json({});
    
        if (name.pNext==NULL){
            return_RvmmWFQ["null"]=true;
            return return_RvmmWFQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_BDPvOqF=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_wykneZh=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_wykneZh["null"]=true;
            return return_wykneZh;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XoVkrbY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cMaeeyg=json({});
    
        if (name.pNext==NULL){
            return_cMaeeyg["null"]=true;
            return return_cMaeeyg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_qoraree=json({});
    return_qoraree=[&]() {
    json return_Swjhhvv=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_qoraree;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xfaRwbI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oabFeNq=json({});
    
        if (name.pNext==NULL){
            return_oabFeNq["null"]=true;
            return return_oabFeNq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_cvxAhIl=json({});
    return_cvxAhIl=[&]() {
    json return_fwVBcxT=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_cvxAhIl;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ngqePoc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gYBUsir=json({});
    
        if (name.pNext==NULL){
            return_gYBUsir["null"]=true;
            return return_gYBUsir;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostImageCopy"]=[&]() {
    json return_luOTiLF=json({});
    return_luOTiLF=[&]() {
    json return_wClEPhy=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_luOTiLF;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JJTMZEQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IlemVyM=json({});
    
        if (name.pNext==NULL){
            return_IlemVyM["null"]=true;
            return return_IlemVyM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_qTrSKSI=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_wDiOnrM=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_wDiOnrM["null"]=true;
            return return_wDiOnrM;
        }
        
        return_wDiOnrM["members"]={};
        for(int i=0; i < name.copySrcLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_ewdfbyA=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[i]);}();
            return_wDiOnrM["members"][std::to_string(i)].push_back(temp);
        }
        return return_wDiOnrM;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_wCXEBYK=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_IqpkYbv=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_IqpkYbv["null"]=true;
            return return_IqpkYbv;
        }
        
        return_IqpkYbv["members"]={};
        for(int i=0; i < name.copyDstLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_UCuwNKT=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[i]);}();
            return_IqpkYbv["members"][std::to_string(i)].push_back(temp);
        }
        return return_IqpkYbv;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_lfYmdse=json({});
    
        return_lfYmdse["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_wwjyYjQ=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[i]);}();
            return_lfYmdse["members"][std::to_string(i)].push_back(temp);
        }
        return return_lfYmdse;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_lOhaGup=json({});
    return_lOhaGup=[&]() {
    json return_UngkPzF=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_lOhaGup;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int ygwZGeI=0; ygwZGeI < result.copySrcLayoutCount; ygwZGeI++){
            [&]() {
result.pCopySrcLayouts[ygwZGeI]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][ygwZGeI]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int RRlIgkg=0; RRlIgkg < result.copyDstLayoutCount; RRlIgkg++){
            [&]() {
result.pCopyDstLayouts[RRlIgkg]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][RRlIgkg]);}();;
        }
        }();
[&]() {

        for (int dJizBRp=0; dJizBRp < VK_UUID_SIZE; dJizBRp++){
            [&]() {
result.optimalTilingLayoutUUID[dJizBRp]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][dJizBRp]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kdMijGh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nApefhA=json({});
    
        if (name.pNext==NULL){
            return_nApefhA["null"]=true;
            return return_nApefhA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_yIzyRco=json({});
    
        if (name.pHostPointer==NULL){
            return_yIzyRco["null"]=true;
            return return_yIzyRco;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_OSXleFe=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_clbtrIT=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_IsobHsk=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_NCTdmaw=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_Swryeoi=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hXnWxNj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hXnWxNj=NULL;
        }
    temp_hXnWxNj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hXnWxNj;}();
[&]() {
void* temp_wZZNsEV;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_wZZNsEV=NULL;
        }
    temp_wZZNsEV=deserialize_void_p(name["members"]["pHostPointer"]);
}();result.pHostPointer=temp_wZZNsEV;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PgHXOUK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RORppBF=json({});
    
        if (name.pNext==NULL){
            return_RORppBF["null"]=true;
            return return_RORppBF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_ORgtHkc=json({});
    
        if (name.pHostPointer==NULL){
            return_ORgtHkc["null"]=true;
            return return_ORgtHkc;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_gGAyjNA=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_wfQJLpD=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_CBQvGQP=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_jeLpFii=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_GwWPiFL=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DexumLf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DexumLf=NULL;
        }
    temp_DexumLf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DexumLf;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XCzitsL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kwDqCvq=json({});
    
        if (name.pNext==NULL){
            return_kwDqCvq["null"]=true;
            return return_kwDqCvq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lLsszIW=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_ytvfogn=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_mKUpDxJ=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_MIOZClC=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_CbkDGUl=json({});
    
        if (name.pRegions==NULL){
            return_CbkDGUl["null"]=true;
            return return_CbkDGUl;
        }
        
        return_CbkDGUl["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_aSdgPkT=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[i]);}();
            return_CbkDGUl["members"][std::to_string(i)].push_back(temp);
        }
        return return_CbkDGUl;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nmpUVnH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nmpUVnH=NULL;
        }
    temp_nmpUVnH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nmpUVnH;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_QvqMlis;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_QvqMlis=NULL;
        }
    temp_QvqMlis=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int xSjJVep=0; xSjJVep < result.regionCount; xSjJVep++){
            [&]() {
temp_QvqMlis[xSjJVep]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][xSjJVep]);}();;
        }
        }();result.pRegions=temp_QvqMlis;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lvNwYIe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DfNjFSZ=json({});
    
        if (name.pNext==NULL){
            return_DfNjFSZ["null"]=true;
            return return_DfNjFSZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_clASEMT=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_xGHAlLN=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_dbsOzgZ=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_BqUeioE=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_PicAiEA=json({});
    
        if (name.pRegions==NULL){
            return_PicAiEA["null"]=true;
            return return_PicAiEA;
        }
        
        return_PicAiEA["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_QkmYFsV=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[i]);}();
            return_PicAiEA["members"][std::to_string(i)].push_back(temp);
        }
        return return_PicAiEA;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dKyzucV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dKyzucV=NULL;
        }
    temp_dKyzucV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dKyzucV;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_wmrtUIj;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_wmrtUIj=NULL;
        }
    temp_wmrtUIj=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int NDSJZyO=0; NDSJZyO < result.regionCount; NDSJZyO++){
            [&]() {
temp_wmrtUIj[NDSJZyO]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][NDSJZyO]);}();;
        }
        }();result.pRegions=temp_wmrtUIj;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UIaQSkT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eEWiIqg=json({});
    
        if (name.pNext==NULL){
            return_eEWiIqg["null"]=true;
            return return_eEWiIqg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HUboNpD=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_xxWcpdq=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_OEFHhro=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_PlTiJQO=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_SCMOhqW=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_HMANcfo=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ENvNsIv=json({});
    
        if (name.pRegions==NULL){
            return_ENvNsIv["null"]=true;
            return return_ENvNsIv;
        }
        
        return_ENvNsIv["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_nALKlVR=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_ENvNsIv["members"][std::to_string(i)].push_back(temp);
        }
        return return_ENvNsIv;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MWbQfyo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MWbQfyo=NULL;
        }
    temp_MWbQfyo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MWbQfyo;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_KQzYuNj;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_KQzYuNj=NULL;
        }
    temp_KQzYuNj=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int AsHwuGp=0; AsHwuGp < result.regionCount; AsHwuGp++){
            [&]() {
temp_KQzYuNj[AsHwuGp]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][AsHwuGp]);}();;
        }
        }();result.pRegions=temp_KQzYuNj;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KVExqxJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kYGZahn=json({});
    
        if (name.pNext==NULL){
            return_kYGZahn["null"]=true;
            return return_kYGZahn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_ECTuytE=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_HenaRou=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_UiQyode=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_klUBkiI=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeNSsuu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeNSsuu=NULL;
        }
    temp_jeNSsuu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jeNSsuu;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CQwedQx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EuvBqWg=json({});
    
        if (name.pNext==NULL){
            return_EuvBqWg["null"]=true;
            return return_EuvBqWg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["size"]=[&]() {
    json return_ctqhWmg=json({});
    return_ctqhWmg=[&]() {
    json return_HHyizid=json({});
    return serialize_uint64_t(name.size);}();return return_ctqhWmg;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cixkERS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sSDhzWx=json({});
    
        if (name.pNext==NULL){
            return_sSDhzWx["null"]=true;
            return return_sSDhzWx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_HedUnqx=json({});
    return_HedUnqx=[&]() {
    json return_TmKzpQc=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_HedUnqx;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_YAPqZMw=json({});
    return_YAPqZMw=[&]() {
    json return_BhFXmGg=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_YAPqZMw;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kAVQmxc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cpkacpV=json({});
    
        if (name.pNext==NULL){
            return_cpkacpV["null"]=true;
            return return_cpkacpV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_bAytJPE=json({});
    return_bAytJPE=[&]() {
    json return_LRubUcb=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_bAytJPE;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_PRrAKva=json({});
    return_PRrAKva=[&]() {
    json return_UDhycOa=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_PRrAKva;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_UOYpEYo=json({});
    return_UOYpEYo=[&]() {
    json return_vfFJLbF=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_UOYpEYo;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mUPHRZQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BaSoqOm=json({});
    
        if (name.pNext==NULL){
            return_BaSoqOm["null"]=true;
            return return_BaSoqOm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["legacyDithering"]=[&]() {
    json return_iOEvrXn=json({});
    return_iOEvrXn=[&]() {
    json return_WgfIZRZ=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_iOEvrXn;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eFIclHw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uIlwUeY=json({});
    
        if (name.pNext==NULL){
            return_uIlwUeY["null"]=true;
            return return_uIlwUeY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_JOPOrjH=json({});
    return_JOPOrjH=[&]() {
    json return_zatOhhD=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_JOPOrjH;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MfztWPf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yJkderj=json({});
    
        if (name.pNext==NULL){
            return_yJkderj["null"]=true;
            return return_yJkderj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimal"]=[&]() {
    json return_GAXquYK=json({});
    return_GAXquYK=[&]() {
    json return_VxAgnii=json({});
    return serialize_uint32_t(name.optimal);}();return return_GAXquYK;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WUAdXbN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EqcckVR=json({});
    
        if (name.pNext==NULL){
            return_EqcckVR["null"]=true;
            return return_EqcckVR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_NsQeMeM=json({});
    return_NsQeMeM=[&]() {
    json return_IvelrmL=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_NsQeMeM;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_LMpPMEr=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mzTiVOu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mzTiVOu=NULL;
        }
    temp_mzTiVOu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mzTiVOu;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_smffnix=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bwWVhbC=json({});
    
        if (name.pNext==NULL){
            return_bwWVhbC["null"]=true;
            return return_bwWVhbC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_ZviAHLW=json({});
    return_ZviAHLW=[&]() {
    json return_qcCRrnG=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_ZviAHLW;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MLwYJLb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VbRQFMO=json({});
    
        if (name.pNext==NULL){
            return_VbRQFMO["null"]=true;
            return return_VbRQFMO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_mWmImtY=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BrcounP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KppWAPT=json({});
    
        if (name.pNext==NULL){
            return_KppWAPT["null"]=true;
            return return_KppWAPT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_JrHqNWR=json({});
    return_JrHqNWR=[&]() {
    json return_vDSZvUN=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_JrHqNWR;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oUMMXIo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jUyGuNK=json({});
    
        if (name.pNext==NULL){
            return_jUyGuNK["null"]=true;
            return return_jUyGuNK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["profileCount"]=[&]() {
    json return_cVHtuff=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_PqnSeIx=json({});
    
        if (name.pProfiles==NULL){
            return_PqnSeIx["null"]=true;
            return return_PqnSeIx;
        }
        
        return_PqnSeIx["members"]={};
        for(int i=0; i < name.profileCount; i++){
            json temp;
            temp=[&]() {
    json return_JsYeyVl=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[i]);}();
            return_PqnSeIx["members"][std::to_string(i)].push_back(temp);
        }
        return return_PqnSeIx;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uWdXmvt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uWdXmvt=NULL;
        }
    temp_uWdXmvt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uWdXmvt;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_AuqPUjm;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_AuqPUjm=NULL;
        }
    temp_AuqPUjm=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int hYKFeXr=0; hYKFeXr < result.profileCount; hYKFeXr++){
            [&]() {
temp_AuqPUjm[hYKFeXr]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][hYKFeXr]);}();;
        }
        }();result.pProfiles=temp_AuqPUjm;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yfKczUw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_plAUOxR=json({});
    
        if (name.pNext==NULL){
            return_plAUOxR["null"]=true;
            return return_plAUOxR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageUsage"]=[&]() {
    json return_CvGpLqL=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FFNKurt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FFNKurt=NULL;
        }
    temp_FFNKurt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FFNKurt;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yiFkmrb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xTgWUxh=json({});
    
        if (name.pNext==NULL){
            return_xTgWUxh["null"]=true;
            return return_xTgWUxh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_LEpdGHY=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_CmYEjbw=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_WIlKIKJ=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_YgFBsPD=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_SGzDmQR=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_yGonLgK=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FpVXpMH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aNNbVic=json({});
    
        if (name.pNext==NULL){
            return_aNNbVic["null"]=true;
            return return_aNNbVic;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_kOyngRZ=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_LFAPrvk=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_KbOPngS=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_vXFPlHV=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IkIktTC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IkIktTC=NULL;
        }
    temp_IkIktTC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IkIktTC;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MPtqxEn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wrCZdeB=json({});
    
        if (name.pNext==NULL){
            return_wrCZdeB["null"]=true;
            return return_wrCZdeB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_HdHGvRV=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_mRnVieU=json({});
    return_mRnVieU=[&]() {
    json return_PwiGKOo=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_mRnVieU;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_DoNCMsV=json({});
    return_DoNCMsV=[&]() {
    json return_MQSCJOB=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_DoNCMsV;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_eRHzVKW=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_MFnEFyF=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_BzTcLTU=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_IFHQiqH=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_cKQQVul=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_tLoKyBO=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eRxTvaN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uhyZkwK=json({});
    
        if (name.pNext==NULL){
            return_uhyZkwK["null"]=true;
            return return_uhyZkwK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_THjzYip=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_jQJFcar=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GKhnuZU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fzfaVgC=json({});
    
        if (name.pNext==NULL){
            return_fzfaVgC["null"]=true;
            return return_fzfaVgC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_FZJCxpm=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_wqkRRMa=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_PwjxDbe=json({});
    return_PwjxDbe=[&]() {
    json return_mWRQbtR=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_PwjxDbe;}();
result["members"]["memorySize"]=[&]() {
    json return_rNmRmTl=json({});
    return_rNmRmTl=[&]() {
    json return_QBaQkLF=json({});
    return serialize_uint64_t(name.memorySize);}();return return_rNmRmTl;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FjWMgIG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FjWMgIG=NULL;
        }
    temp_FjWMgIG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FjWMgIG;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_weDsOLU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UeLvmBB=json({});
    
        if (name.pNext==NULL){
            return_UeLvmBB["null"]=true;
            return return_UeLvmBB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["codedOffset"]=[&]() {
    json return_SPwlKTE=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_PTnyIBU=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_EluCCON=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_XqtUFgr=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jRUCZnP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jRUCZnP=NULL;
        }
    temp_jRUCZnP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jRUCZnP;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zKIMYyh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yXsiRUS=json({});
    
        if (name.pNext==NULL){
            return_yXsiRUS["null"]=true;
            return return_yXsiRUS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["slotIndex"]=[&]() {
    json return_HEbJjdd=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_DMZEYvF=json({});
    
        if (name.pPictureResource==NULL){
            return_DMZEYvF["null"]=true;
            return return_DMZEYvF;
        }
        return_DMZEYvF=[&]() {
    json return_wBszLmB=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_DMZEYvF;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DzsEAoV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DzsEAoV=NULL;
        }
    temp_DzsEAoV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DzsEAoV;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_iSvthuu;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_iSvthuu=NULL;
        }
    [&]() {
*(temp_iSvthuu)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_iSvthuu;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JLpZPBt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RDHHvCY=json({});
    
        if (name.pNext==NULL){
            return_RDHHvCY["null"]=true;
            return return_RDHHvCY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bkwyVCf=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hOSGLRd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_izxYKiU=json({});
    
        if (name.pNext==NULL){
            return_izxYKiU["null"]=true;
            return return_izxYKiU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoUsageHints"]=[&]() {
    json return_fSCOOzk=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hzewLwO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hzewLwO=NULL;
        }
    temp_hzewLwO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hzewLwO;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QkYAMDT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HUgnMAT=json({});
    
        if (name.pNext==NULL){
            return_HUgnMAT["null"]=true;
            return return_HUgnMAT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UIQuKae=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_icmrREK=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_cuTgYzB=json({});
    return_cuTgYzB=[&]() {
    json return_gIFamLK=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_cuTgYzB;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_mSZQuuz=json({});
    return_mSZQuuz=[&]() {
    json return_rfYGONI=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_mSZQuuz;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_vACUucC=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_jeHfeVh=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_jeHfeVh["null"]=true;
            return return_jeHfeVh;
        }
        return_jeHfeVh=[&]() {
    json return_wYmezcg=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_jeHfeVh;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_dflaQgy=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_aJattLl=json({});
    
        if (name.pReferenceSlots==NULL){
            return_aJattLl["null"]=true;
            return return_aJattLl;
        }
        
        return_aJattLl["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_HyLdJqZ=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_aJattLl["members"][std::to_string(i)].push_back(temp);
        }
        return return_aJattLl;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AcELibb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AcELibb=NULL;
        }
    temp_AcELibb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AcELibb;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_bQOxpLq;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_bQOxpLq=NULL;
        }
    [&]() {
*(temp_bQOxpLq)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_bQOxpLq;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_sSdRDuP;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_sSdRDuP=NULL;
        }
    temp_sSdRDuP=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int ndArLdY=0; ndArLdY < result.referenceSlotCount; ndArLdY++){
            [&]() {
temp_sSdRDuP[ndArLdY]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][ndArLdY]);}();;
        }
        }();result.pReferenceSlots=temp_sSdRDuP;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qbeRbew=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_krcsccP=json({});
    
        if (name.pNext==NULL){
            return_krcsccP["null"]=true;
            return return_krcsccP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_NVuroro=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_vxGESnt=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YMajDYK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YMajDYK=NULL;
        }
    temp_YMajDYK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YMajDYK;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rDCfeXi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WOtPEQB=json({});
    
        if (name.pNext==NULL){
            return_WOtPEQB["null"]=true;
            return return_WOtPEQB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_uhtagSl=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_PnlqUDd=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YjaMkMA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jmrreKl=json({});
    
        if (name.pNext==NULL){
            return_jmrreKl["null"]=true;
            return return_jmrreKl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_ZMvhfTW=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_LiDyYNE=json({});
    
        if (name.pStdSPSs==NULL){
            return_LiDyYNE["null"]=true;
            return return_LiDyYNE;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_UNAwmwp=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_gqaEnEC=json({});
    
        if (name.pStdPPSs==NULL){
            return_gqaEnEC["null"]=true;
            return return_gqaEnEC;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sWHcBds;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sWHcBds=NULL;
        }
    temp_sWHcBds=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sWHcBds;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_mwyzLmF;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_mwyzLmF=NULL;
        }
    temp_mwyzLmF=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_mwyzLmF;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_cEWiRFY;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_cEWiRFY=NULL;
        }
    temp_cEWiRFY=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_cEWiRFY;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YfoDtTI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QEnWMyA=json({});
    
        if (name.pNext==NULL){
            return_QEnWMyA["null"]=true;
            return return_QEnWMyA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_BaygyFd=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_nFGpFjT=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_EIEYgJI=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_EIEYgJI["null"]=true;
            return return_EIEYgJI;
        }
        return_EIEYgJI=[&]() {
    json return_OcCwIQP=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_EIEYgJI;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oviRrJJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oviRrJJ=NULL;
        }
    temp_oviRrJJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oviRrJJ;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_AOCsxVQ;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_AOCsxVQ=NULL;
        }
    [&]() {
*(temp_AOCsxVQ)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_AOCsxVQ;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WVJbjqf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OWPTUHR=json({});
    
        if (name.pNext==NULL){
            return_OWPTUHR["null"]=true;
            return return_OWPTUHR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_bvWOLLa=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_bvWOLLa["null"]=true;
            return return_bvWOLLa;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_ilXQJfO=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_kekPGQr=json({});
    
        if (name.pSliceOffsets==NULL){
            return_kekPGQr["null"]=true;
            return return_kekPGQr;
        }
        
        return_kekPGQr["members"]={};
        for(int i=0; i < name.sliceCount; i++){
            json temp;
            temp=[&]() {
    json return_HnrYwSR=json({});
    return serialize_uint32_t(name.pSliceOffsets[i]);}();
            return_kekPGQr["members"][std::to_string(i)].push_back(temp);
        }
        return return_kekPGQr;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cWxyQPG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cWxyQPG=NULL;
        }
    temp_cWxyQPG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cWxyQPG;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_cFloSBE;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_cFloSBE=NULL;
        }
    temp_cFloSBE=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_cFloSBE;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_GbOZVvf;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_GbOZVvf=NULL;
        }
    temp_GbOZVvf=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int bKqeMKo=0; bKqeMKo < result.sliceCount; bKqeMKo++){
            [&]() {
temp_GbOZVvf[bKqeMKo]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][bKqeMKo]);}();;
        }
        }();result.pSliceOffsets=temp_GbOZVvf;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YDsUpur=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MAhkwRV=json({});
    
        if (name.pNext==NULL){
            return_MAhkwRV["null"]=true;
            return return_MAhkwRV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_noSZrJB=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_noSZrJB["null"]=true;
            return return_noSZrJB;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aDkvVNR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aDkvVNR=NULL;
        }
    temp_aDkvVNR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aDkvVNR;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_bPrZMNE;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_bPrZMNE=NULL;
        }
    temp_bPrZMNE=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_bPrZMNE;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iboXoiF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fjgYurt=json({});
    
        if (name.pNext==NULL){
            return_fjgYurt["null"]=true;
            return return_fjgYurt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_sulOLGw=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pFqlaWD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pFqlaWD=NULL;
        }
    temp_pFqlaWD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pFqlaWD;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VPGdeSG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FSBPSSP=json({});
    
        if (name.pNext==NULL){
            return_FSBPSSP["null"]=true;
            return return_FSBPSSP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_jTNqtAS=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PlyYJhu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fYTBwQy=json({});
    
        if (name.pNext==NULL){
            return_fYTBwQy["null"]=true;
            return return_fYTBwQy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdVPSCount"]=[&]() {
    json return_lkNzHjm=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_vOZzDdW=json({});
    
        if (name.pStdVPSs==NULL){
            return_vOZzDdW["null"]=true;
            return return_vOZzDdW;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_txufQAD=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_jGAdAwX=json({});
    
        if (name.pStdSPSs==NULL){
            return_jGAdAwX["null"]=true;
            return return_jGAdAwX;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_RhNwUZD=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_pwpqBmM=json({});
    
        if (name.pStdPPSs==NULL){
            return_pwpqBmM["null"]=true;
            return return_pwpqBmM;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EWkXGwo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EWkXGwo=NULL;
        }
    temp_EWkXGwo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EWkXGwo;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_VrejPxX;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_VrejPxX=NULL;
        }
    temp_VrejPxX=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_VrejPxX;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_wNgvOUg;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_wNgvOUg=NULL;
        }
    temp_wNgvOUg=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_wNgvOUg;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_qgVEBId;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_qgVEBId=NULL;
        }
    temp_qgVEBId=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_qgVEBId;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_evviwHW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BngcDNH=json({});
    
        if (name.pNext==NULL){
            return_BngcDNH["null"]=true;
            return return_BngcDNH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_YbjuJro=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_ZasgYrt=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_pLbAyuV=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_qJaqpke=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_qJaqpke["null"]=true;
            return return_qJaqpke;
        }
        return_qJaqpke=[&]() {
    json return_FMHZxPo=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_qJaqpke;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uyXbnzv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uyXbnzv=NULL;
        }
    temp_uyXbnzv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uyXbnzv;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_RfVQDDV;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_RfVQDDV=NULL;
        }
    [&]() {
*(temp_RfVQDDV)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_RfVQDDV;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vbnnZVS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FuXZkbV=json({});
    
        if (name.pNext==NULL){
            return_FuXZkbV["null"]=true;
            return return_FuXZkbV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_xVFtTih=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_xVFtTih["null"]=true;
            return return_xVFtTih;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_KzGqbmU=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_sNJGRdi=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_sNJGRdi["null"]=true;
            return return_sNJGRdi;
        }
        
        return_sNJGRdi["members"]={};
        for(int i=0; i < name.sliceSegmentCount; i++){
            json temp;
            temp=[&]() {
    json return_rOJsDzl=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[i]);}();
            return_sNJGRdi["members"][std::to_string(i)].push_back(temp);
        }
        return return_sNJGRdi;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JvWZaIO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JvWZaIO=NULL;
        }
    temp_JvWZaIO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JvWZaIO;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_UWuvcdw;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_UWuvcdw=NULL;
        }
    temp_UWuvcdw=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_UWuvcdw;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_AmgUPuD;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_AmgUPuD=NULL;
        }
    temp_AmgUPuD=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int LlTrvOX=0; LlTrvOX < result.sliceSegmentCount; LlTrvOX++){
            [&]() {
temp_AmgUPuD[LlTrvOX]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][LlTrvOX]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_AmgUPuD;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_geeFvBI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_feFWSnx=json({});
    
        if (name.pNext==NULL){
            return_feFWSnx["null"]=true;
            return return_feFWSnx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_kRpWBmr=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_kRpWBmr["null"]=true;
            return return_kRpWBmr;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KHOaTnF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KHOaTnF=NULL;
        }
    temp_KHOaTnF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KHOaTnF;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_qpONUyL;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_qpONUyL=NULL;
        }
    temp_qpONUyL=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_qpONUyL;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qqxDxSQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yEVmGUK=json({});
    
        if (name.pNext==NULL){
            return_yEVmGUK["null"]=true;
            return return_yEVmGUK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_CcfEDqN=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_EuoaamW=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_JrMzPtm=json({});
    
        if (name.pVideoProfile==NULL){
            return_JrMzPtm["null"]=true;
            return return_JrMzPtm;
        }
        return_JrMzPtm=[&]() {
    json return_nVmpDjK=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_JrMzPtm;}();
result["members"]["pictureFormat"]=[&]() {
    json return_EjfqZrG=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_boDTnzc=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_aimumEZ=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_tMckEsk=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_ZlRYrOA=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_XyWmiOe=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_XyWmiOe["null"]=true;
            return return_XyWmiOe;
        }
        return_XyWmiOe=[&]() {
    json return_MeYclRy=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_XyWmiOe;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oFKHGjU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oFKHGjU=NULL;
        }
    temp_oFKHGjU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oFKHGjU;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_ooMWfnY;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_ooMWfnY=NULL;
        }
    [&]() {
*(temp_ooMWfnY)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_ooMWfnY;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_sFbYvxV;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_sFbYvxV=NULL;
        }
    [&]() {
*(temp_sFbYvxV)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_sFbYvxV;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DgCtLqX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LsAmViM=json({});
    
        if (name.pNext==NULL){
            return_LsAmViM["null"]=true;
            return return_LsAmViM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jIpvmll=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_LNUAIzL=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_kHInBci=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iNlQeHZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iNlQeHZ=NULL;
        }
    temp_iNlQeHZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iNlQeHZ;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ObdzrUh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GjFMOwq=json({});
    
        if (name.pNext==NULL){
            return_GjFMOwq["null"]=true;
            return return_GjFMOwq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_ESUVzjo=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IdhnaVQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IdhnaVQ=NULL;
        }
    temp_IdhnaVQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IdhnaVQ;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LbuAOJK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ORXjJIT=json({});
    
        if (name.pNext==NULL){
            return_ORXjJIT["null"]=true;
            return return_ORXjJIT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XjWZzYi=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_NAlqkLF=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_WSMxJNG=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_zBtCTFl=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_ulEPvUk=json({});
    
        if (name.pReferenceSlots==NULL){
            return_ulEPvUk["null"]=true;
            return return_ulEPvUk;
        }
        
        return_ulEPvUk["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_aHeWCyD=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_ulEPvUk["members"][std::to_string(i)].push_back(temp);
        }
        return return_ulEPvUk;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zFguCWE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zFguCWE=NULL;
        }
    temp_zFguCWE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zFguCWE;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_whcflJb;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_whcflJb=NULL;
        }
    temp_whcflJb=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int JtRCeBg=0; JtRCeBg < result.referenceSlotCount; JtRCeBg++){
            [&]() {
temp_whcflJb[JtRCeBg]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][JtRCeBg]);}();;
        }
        }();result.pReferenceSlots=temp_whcflJb;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NZsQKUN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zVqeKOZ=json({});
    
        if (name.pNext==NULL){
            return_zVqeKOZ["null"]=true;
            return return_zVqeKOZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nsSwEOm=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FPfFSSt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FPfFSSt=NULL;
        }
    temp_FPfFSSt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FPfFSSt;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ttAqoHG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qjXwbog=json({});
    
        if (name.pNext==NULL){
            return_qjXwbog["null"]=true;
            return return_qjXwbog;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_eheFkHB=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yecalYn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yecalYn=NULL;
        }
    temp_yecalYn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yecalYn;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rlGETtT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DIdfVdY=json({});
    
        if (name.pNext==NULL){
            return_DIdfVdY["null"]=true;
            return return_DIdfVdY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_VRcMVNz=json({});
    return_VRcMVNz=[&]() {
    json return_GwTBGXO=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_VRcMVNz;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FBlnWQb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AdLCdwC=json({});
    
        if (name.pNext==NULL){
            return_AdLCdwC["null"]=true;
            return return_AdLCdwC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_GffaEgn=json({});
    return_GffaEgn=[&]() {
    json return_DBrVxuH=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_GffaEgn;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_SeJdwha=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_IlEaCsN=json({});
    
        if (name.pViewportDepths==NULL){
            return_IlEaCsN["null"]=true;
            return return_IlEaCsN;
        }
        return_IlEaCsN=[&]() {
    json return_MXAGVdV=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_IlEaCsN;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HmRqgMs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HmRqgMs=NULL;
        }
    temp_HmRqgMs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HmRqgMs;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_hJdmPCd;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_hJdmPCd=NULL;
        }
    [&]() {
*(temp_hJdmPCd)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_hJdmPCd;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ppoDcia=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HQVKrhk=json({});
    
        if (name.pNext==NULL){
            return_HQVKrhk["null"]=true;
            return return_HQVKrhk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_bFYyKIg=json({});
    return_bFYyKIg=[&]() {
    json return_hUihBOA=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_bFYyKIg;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rAhzPie=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DGWAKfg=json({});
    
        if (name.pNext==NULL){
            return_DGWAKfg["null"]=true;
            return return_DGWAKfg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_GoutUhl=json({});
    return_GoutUhl=[&]() {
    json return_YWzUKIo=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_GoutUhl;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_XjqmuqU=json({});
    return_XjqmuqU=[&]() {
    json return_eRNHCqw=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_XjqmuqU;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KAMwnrz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ddTGOJG=json({});
    
        if (name.pNext==NULL){
            return_ddTGOJG["null"]=true;
            return return_ddTGOJG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_AIGnisD=json({});
    return_AIGnisD=[&]() {
    json return_rlhckZd=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_AIGnisD;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_wmgzBme=json({});
    return_wmgzBme=[&]() {
    json return_dyrqXTE=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_wmgzBme;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tSMaAUn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TLoyvbP=json({});
    
        if (name.pNext==NULL){
            return_TLoyvbP["null"]=true;
            return return_TLoyvbP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_luodaAt=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YEPsJUW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YEPsJUW=NULL;
        }
    temp_YEPsJUW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YEPsJUW;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PztgMVg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YAIpjwv=json({});
    
        if (name.pNext==NULL){
            return_YAIpjwv["null"]=true;
            return return_YAIpjwv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_bKxUGRc=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_diOfFcN=json({});
    
        if (name.pData==NULL){
            return_diOfFcN["null"]=true;
            return return_diOfFcN;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WwOgnEr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WwOgnEr=NULL;
        }
    temp_WwOgnEr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WwOgnEr;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_VEGSdas;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_VEGSdas=NULL;
        }
    temp_VEGSdas=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_VEGSdas;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BqvLDin=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TaERhSK=json({});
    
        if (name.pNext==NULL){
            return_TaERhSK["null"]=true;
            return return_TaERhSK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["module"]=[&]() {
    json return_AYGNGIA=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_CBfUCcZ=json({});
    
        if (name.pName==NULL){
            return_CBfUCcZ["null"]=true;
            return return_CBfUCcZ;
        }
        return serialize_char_p(name.pName);
}();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uGTKCSt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uGTKCSt=NULL;
        }
    temp_uGTKCSt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uGTKCSt;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_nFOMRba;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_nFOMRba=NULL;
        }
    temp_nFOMRba=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_nFOMRba;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rPWNUPp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TBiCbhu=json({});
    
        if (name.pNext==NULL){
            return_TBiCbhu["null"]=true;
            return return_TBiCbhu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["function"]=[&]() {
    json return_mTpvvrm=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_tAeYbqK=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_ByGZzlg=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_tMEgqZk=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_OdlsmSu=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_KSqjocR=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_DoiFPqB=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_pFIgYIP=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_CJVNhzE=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_HZpcBNS=json({});
    
        if (name.pParams==NULL){
            return_HZpcBNS["null"]=true;
            return return_HZpcBNS;
        }
        
        return_HZpcBNS["members"]={};
        for(int i=0; i < name.paramCount; i++){
            json temp;
            temp=[&]() {
    json return_sUFWOKb=json({});
    
        if (name.pParams[i]==NULL){
            return_sUFWOKb["null"]=true;
            return return_sUFWOKb;
        }
        return serialize_void_p(name.pParams[i]);
}();
            return_HZpcBNS["members"][std::to_string(i)].push_back(temp);
        }
        return return_HZpcBNS;
        }();
result["members"]["extraCount"]=[&]() {
    json return_wzisHWJ=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_XGWtPlH=json({});
    
        if (name.pExtras==NULL){
            return_XGWtPlH["null"]=true;
            return return_XGWtPlH;
        }
        
        return_XGWtPlH["members"]={};
        for(int i=0; i < name.extraCount; i++){
            json temp;
            temp=[&]() {
    json return_SkQwayo=json({});
    
        if (name.pExtras[i]==NULL){
            return_SkQwayo["null"]=true;
            return return_SkQwayo;
        }
        return serialize_void_p(name.pExtras[i]);
}();
            return_XGWtPlH["members"][std::to_string(i)].push_back(temp);
        }
        return return_XGWtPlH;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JiXkADq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JiXkADq=NULL;
        }
    temp_JiXkADq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JiXkADq;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_zIoLfrs;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_zIoLfrs=NULL;
        }
    temp_zIoLfrs=(void**)malloc(result.paramCount*sizeof(void*));
        for (int QpoIyAo=0; QpoIyAo < result.paramCount; QpoIyAo++){
            [&]() {

        if (name["members"]["pParams"]["members"][QpoIyAo].contains("null")){
        temp_zIoLfrs[QpoIyAo]=NULL;
        }
    temp_zIoLfrs[QpoIyAo]=deserialize_void_p(name["members"]["pParams"]["members"][QpoIyAo]);
}();;
        }
        }();result.pParams=temp_zIoLfrs;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_BCnoaMc;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_BCnoaMc=NULL;
        }
    temp_BCnoaMc=(void**)malloc(result.extraCount*sizeof(void*));
        for (int rLsILHT=0; rLsILHT < result.extraCount; rLsILHT++){
            [&]() {

        if (name["members"]["pExtras"]["members"][rLsILHT].contains("null")){
        temp_BCnoaMc[rLsILHT]=NULL;
        }
    temp_BCnoaMc[rLsILHT]=deserialize_void_p(name["members"]["pExtras"]["members"][rLsILHT]);
}();;
        }
        }();result.pExtras=temp_BCnoaMc;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lCxzSXs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zaCmHck=json({});
    
        if (name.pNext==NULL){
            return_zaCmHck["null"]=true;
            return return_zaCmHck;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_zTRIXLI=json({});
    return_zTRIXLI=[&]() {
    json return_itCesmc=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_zTRIXLI;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_KBCQIxC=json({});
    return_KBCQIxC=[&]() {
    json return_nxSgXqW=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_KBCQIxC;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_OQVWCUc=json({});
    return_OQVWCUc=[&]() {
    json return_nxwNStE=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_OQVWCUc;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_PxyVusO=json({});
    return_PxyVusO=[&]() {
    json return_xOcHUIk=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_PxyVusO;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HijeGrt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VrQLCFH=json({});
    
        if (name.pNext==NULL){
            return_VrQLCFH["null"]=true;
            return return_VrQLCFH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_zIByBDc=json({});
    return_zIByBDc=[&]() {
    json return_tXdfgjc=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_zIByBDc;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_UyoPoQx=json({});
    return_UyoPoQx=[&]() {
    json return_IvSPoht=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_UyoPoQx;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_NfApByc=json({});
    return_NfApByc=[&]() {
    json return_hvjftBU=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_NfApByc;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_LfBqzWQ=json({});
    return_LfBqzWQ=[&]() {
    json return_uGdfVgT=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_LfBqzWQ;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_rObSrwN=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_dtTPuEY=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_ZeUwMnx=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_wxanBRk=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_rplwAGm=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_EWydFWK=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_ibifXZN=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_ujGkTQd=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_iFdUeHm=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_apkJEzo=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_IxLBAKb=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_OzXJJZq=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_dJscryb=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_chKiuBZ=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_ltcqHKu=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_DzpFHUF=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_jAhtoTs=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_XHISzYZ=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_xKjsDpc=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_DCiWjNs=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_ZJfWuAW=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_ruIdduq=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_DhfBPZo=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_hvxKHgp=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_HNgCroz=json({});
    return_HNgCroz=[&]() {
    json return_LNSgguT=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_HNgCroz;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_fUHWxpI=json({});
    return_fUHWxpI=[&]() {
    json return_ofGzuWN=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_fUHWxpI;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_KqazzRE=json({});
    return_KqazzRE=[&]() {
    json return_YBCrSCF=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_KqazzRE;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_LciZTXG=json({});
    return_LciZTXG=[&]() {
    json return_HSWMIGU=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_LciZTXG;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_xtduUUF=json({});
    return_xtduUUF=[&]() {
    json return_hUhsvvN=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_xtduUUF;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GcvevWY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cSqtfjp=json({});
    
        if (name.pNext==NULL){
            return_cSqtfjp["null"]=true;
            return return_cSqtfjp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_uRRGToE=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qpqerxL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EYZwCPk=json({});
    
        if (name.pNext==NULL){
            return_EYZwCPk["null"]=true;
            return return_EYZwCPk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_xsRjBlw=json({});
    return_xsRjBlw=[&]() {
    json return_YeyTFlw=json({});
    return serialize_uint64_t(name.address);}();return return_xsRjBlw;}();
result["members"]["range"]=[&]() {
    json return_VtdFgPn=json({});
    return_VtdFgPn=[&]() {
    json return_TbDbIeM=json({});
    return serialize_uint64_t(name.range);}();return return_VtdFgPn;}();
result["members"]["format"]=[&]() {
    json return_jHCyWRe=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YgYQfTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bgIjjnb=json({});
    
        if (name.pNext==NULL){
            return_bgIjjnb["null"]=true;
            return return_bgIjjnb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_IpwOzmi=json({});
    return_IpwOzmi=[&]() {
    json return_zNPcSRg=json({});
    return serialize_uint64_t(name.address);}();return return_IpwOzmi;}();
result["members"]["usage"]=[&]() {
    json return_nMcIUPr=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OBzuKBB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MSKOrzQ=json({});
    
        if (name.pNext==NULL){
            return_MSKOrzQ["null"]=true;
            return return_MSKOrzQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_dHPTnkL=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_bEhGkgW=json({});
    
        if (name.pSampler==NULL){
            return_bEhGkgW["null"]=true;
            return return_bEhGkgW;
        }
        return_bEhGkgW=[&]() {
    json return_FqcjvGs=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_bEhGkgW;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_UhFAtuO=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_UhFAtuO["null"]=true;
            return return_UhFAtuO;
        }
        return_UhFAtuO=[&]() {
    json return_cUKlcnO=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_UhFAtuO;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_PKbIBWj=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_PKbIBWj["null"]=true;
            return return_PKbIBWj;
        }
        return_PKbIBWj=[&]() {
    json return_GYRmcWR=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_PKbIBWj;}();
result["members"]["pSampledImage"]=[&]() {
    json return_jPlNkaP=json({});
    
        if (name.pSampledImage==NULL){
            return_jPlNkaP["null"]=true;
            return return_jPlNkaP;
        }
        return_jPlNkaP=[&]() {
    json return_yVROaYF=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_jPlNkaP;}();
result["members"]["pStorageImage"]=[&]() {
    json return_SLyrkBW=json({});
    
        if (name.pStorageImage==NULL){
            return_SLyrkBW["null"]=true;
            return return_SLyrkBW;
        }
        return_SLyrkBW=[&]() {
    json return_ScrLsex=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_SLyrkBW;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_sSeZKUn=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_sSeZKUn["null"]=true;
            return return_sSeZKUn;
        }
        return_sSeZKUn=[&]() {
    json return_JfzFdib=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_sSeZKUn;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_SasgsCs=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_SasgsCs["null"]=true;
            return return_SasgsCs;
        }
        return_SasgsCs=[&]() {
    json return_gKPuIbE=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_SasgsCs;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_MDargFq=json({});
    
        if (name.pUniformBuffer==NULL){
            return_MDargFq["null"]=true;
            return return_MDargFq;
        }
        return_MDargFq=[&]() {
    json return_GmrzczV=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_MDargFq;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_UNbgrdS=json({});
    
        if (name.pStorageBuffer==NULL){
            return_UNbgrdS["null"]=true;
            return return_UNbgrdS;
        }
        return_UNbgrdS=[&]() {
    json return_DCXmuwW=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_UNbgrdS;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_XiWcYoR=json({});
    return_XiWcYoR=[&]() {
    json return_ncWbKhe=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_XiWcYoR;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_ahqglxU;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_ahqglxU=NULL;
        }
    [&]() {
*(temp_ahqglxU)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_ahqglxU;}();
[&]() {
VkDescriptorImageInfo* temp_OMShtvW;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_OMShtvW=NULL;
        }
    [&]() {
*(temp_OMShtvW)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_OMShtvW;}();
[&]() {
VkDescriptorImageInfo* temp_kLWkUdu;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_kLWkUdu=NULL;
        }
    [&]() {
*(temp_kLWkUdu)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_kLWkUdu;}();
[&]() {
VkDescriptorImageInfo* temp_tNnOQma;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_tNnOQma=NULL;
        }
    [&]() {
*(temp_tNnOQma)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_tNnOQma;}();
[&]() {
VkDescriptorImageInfo* temp_XoMaFFE;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_XoMaFFE=NULL;
        }
    [&]() {
*(temp_XoMaFFE)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_XoMaFFE;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_cNBHitf;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_cNBHitf=NULL;
        }
    [&]() {
*(temp_cNBHitf)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_cNBHitf;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_vaIHSxD;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_vaIHSxD=NULL;
        }
    [&]() {
*(temp_vaIHSxD)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_vaIHSxD;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_LjzQDvM;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_LjzQDvM=NULL;
        }
    [&]() {
*(temp_LjzQDvM)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_LjzQDvM;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_FODdwZa;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_FODdwZa=NULL;
        }
    [&]() {
*(temp_FODdwZa)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_FODdwZa;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_itLNLfN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Gnpuuan=json({});
    
        if (name.pNext==NULL){
            return_Gnpuuan["null"]=true;
            return return_Gnpuuan;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_lctYrzZ=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_kxuOeve=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cwHjpTK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cwHjpTK=NULL;
        }
    temp_cwHjpTK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cwHjpTK;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iDSKHEs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KUHrriQ=json({});
    
        if (name.pNext==NULL){
            return_KUHrriQ["null"]=true;
            return return_KUHrriQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_OnpHziD=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DuNabHV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DuNabHV=NULL;
        }
    temp_DuNabHV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DuNabHV;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZfCEfAJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CUEXZvK=json({});
    
        if (name.pNext==NULL){
            return_CUEXZvK["null"]=true;
            return return_CUEXZvK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_BYKmldM=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RxBTDoz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RxBTDoz=NULL;
        }
    temp_RxBTDoz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RxBTDoz;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ReYdfKP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MLYxhvm=json({});
    
        if (name.pNext==NULL){
            return_MLYxhvm["null"]=true;
            return return_MLYxhvm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_xIlPXpQ=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dBUwZzG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dBUwZzG=NULL;
        }
    temp_dBUwZzG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dBUwZzG;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MmmEert=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mGCUrlm=json({});
    
        if (name.pNext==NULL){
            return_mGCUrlm["null"]=true;
            return return_mGCUrlm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampler"]=[&]() {
    json return_lFhVAlm=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YVDoqYy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YVDoqYy=NULL;
        }
    temp_YVDoqYy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YVDoqYy;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LqcItMJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ePjqCFp=json({});
    
        if (name.pNext==NULL){
            return_ePjqCFp["null"]=true;
            return return_ePjqCFp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_IeSWmVI=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_YCLEISo=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tmyTtHu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tmyTtHu=NULL;
        }
    temp_tmyTtHu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tmyTtHu;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qAbikwG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YgzGHUB=json({});
    
        if (name.pNext==NULL){
            return_YgzGHUB["null"]=true;
            return return_YgzGHUB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_VuidDCU=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_VuidDCU["null"]=true;
            return return_VuidDCU;
        }
        return serialize_void_p(name.opaqueCaptureDescriptorData);
}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QrfUBXY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QrfUBXY=NULL;
        }
    temp_QrfUBXY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QrfUBXY;}();
[&]() {
void* temp_ILdjslZ;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_ILdjslZ=NULL;
        }
    temp_ILdjslZ=deserialize_void_p(name["members"]["opaqueCaptureDescriptorData"]);
}();result.opaqueCaptureDescriptorData=temp_ILdjslZ;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ftPKsDF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EWCjPjY=json({});
    
        if (name.pNext==NULL){
            return_EWCjPjY["null"]=true;
            return return_EWCjPjY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_sPoWKbI=json({});
    return_sPoWKbI=[&]() {
    json return_ZzLkzGZ=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_sPoWKbI;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RoTijJU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sYzPfPj=json({});
    
        if (name.pNext==NULL){
            return_sYzPfPj["null"]=true;
            return return_sYzPfPj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_WMjCPQE=json({});
    return_WMjCPQE=[&]() {
    json return_zeDImxK=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_WMjCPQE;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CTGwhSZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ARrRYrZ=json({});
    
        if (name.pNext==NULL){
            return_ARrRYrZ["null"]=true;
            return return_ARrRYrZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_IkWWkYx=json({});
    return_IkWWkYx=[&]() {
    json return_TVIMqUB=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_IkWWkYx;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_hNGLcLT=json({});
    return_hNGLcLT=[&]() {
    json return_SMStUSC=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_hNGLcLT;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_DqhdVVK=json({});
    return_DqhdVVK=[&]() {
    json return_gWaybsQ=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_DqhdVVK;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_vqZwjhX=json({});
    return_vqZwjhX=[&]() {
    json return_ddEGfwm=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_vqZwjhX;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_NQNsXNq=json({});
    return_NQNsXNq=[&]() {
    json return_llADugc=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_NQNsXNq;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_joaRwTY=json({});
    return_joaRwTY=[&]() {
    json return_eYhSluf=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_joaRwTY;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_wGTIqif=json({});
    return_wGTIqif=[&]() {
    json return_IcSiDuq=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_wGTIqif;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_bFpxrUx=json({});
    return_bFpxrUx=[&]() {
    json return_FUFvdua=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_bFpxrUx;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_XmDbFfy=json({});
    return_XmDbFfy=[&]() {
    json return_XDePweq=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_XmDbFfy;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_GxmWKXV=json({});
    return_GxmWKXV=[&]() {
    json return_UqDJslg=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_GxmWKXV;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_rZEeUkS=json({});
    return_rZEeUkS=[&]() {
    json return_QTPRZxp=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_rZEeUkS;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_cVkOFRZ=json({});
    return_cVkOFRZ=[&]() {
    json return_gKJyZGP=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_cVkOFRZ;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_MNqbjOx=json({});
    return_MNqbjOx=[&]() {
    json return_UybTvOk=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_MNqbjOx;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_dgKqDNc=json({});
    return_dgKqDNc=[&]() {
    json return_ltqEjMX=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_dgKqDNc;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_wxpJlqc=json({});
    return_wxpJlqc=[&]() {
    json return_lQBpYLZ=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_wxpJlqc;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_DrgEkTL=json({});
    return_DrgEkTL=[&]() {
    json return_JkMXDsN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_DrgEkTL;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_pPkvIFI=json({});
    return_pPkvIFI=[&]() {
    json return_FjlftGz=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_pPkvIFI;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_YdkyONT=json({});
    return_YdkyONT=[&]() {
    json return_yHykThc=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_YdkyONT;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_rfiRgmZ=json({});
    return_rfiRgmZ=[&]() {
    json return_zwpvbCg=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_rfiRgmZ;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_IqYZDXo=json({});
    return_IqYZDXo=[&]() {
    json return_hlBXWmR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_IqYZDXo;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_TdxftTM=json({});
    return_TdxftTM=[&]() {
    json return_nBzIkuO=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_TdxftTM;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_CFRAKKc=json({});
    return_CFRAKKc=[&]() {
    json return_HXwOhLb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_CFRAKKc;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_VxYjtXh=json({});
    return_VxYjtXh=[&]() {
    json return_vcVfdKv=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_VxYjtXh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_tisvhJj=json({});
    return_tisvhJj=[&]() {
    json return_MheIyOa=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_tisvhJj;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_rztAnnP=json({});
    return_rztAnnP=[&]() {
    json return_bqljiSv=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_rztAnnP;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_KpepMxr=json({});
    return_KpepMxr=[&]() {
    json return_yGHHhhH=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_KpepMxr;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_yGYdgzV=json({});
    return_yGYdgzV=[&]() {
    json return_jyAZkFE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_yGYdgzV;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_tfESJWN=json({});
    return_tfESJWN=[&]() {
    json return_auMIDtV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_tfESJWN;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_jYduxrB=json({});
    return_jYduxrB=[&]() {
    json return_nygBnCF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_jYduxrB;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_EFfoDvX=json({});
    return_EFfoDvX=[&]() {
    json return_NLWIBiM=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_EFfoDvX;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pyJtcxR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CCqXozc=json({});
    
        if (name.pNext==NULL){
            return_CCqXozc["null"]=true;
            return return_CCqXozc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_guCuBNL=json({});
    return_guCuBNL=[&]() {
    json return_oWVCpQc=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_guCuBNL;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_RujrceL=json({});
    return_RujrceL=[&]() {
    json return_BGVCgFq=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_RujrceL;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_yovryKW=json({});
    return_yovryKW=[&]() {
    json return_AFdNwMY=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_yovryKW;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_IeSTHfX=json({});
    return_IeSTHfX=[&]() {
    json return_uwchvcp=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_IeSTHfX;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_HMNiXsG=json({});
    return_HMNiXsG=[&]() {
    json return_iKLUBdH=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_HMNiXsG;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_UvMCMOh=json({});
    return_UvMCMOh=[&]() {
    json return_jKuryLN=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_UvMCMOh;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_ktwwmGb=json({});
    return_ktwwmGb=[&]() {
    json return_AOBNpuN=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_ktwwmGb;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_RfXboKq=json({});
    return_RfXboKq=[&]() {
    json return_ilVxZuG=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_RfXboKq;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_HkrDfWl=json({});
    return_HkrDfWl=[&]() {
    json return_NHbqqeF=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_HkrDfWl;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_CJEdiFM=json({});
    return_CJEdiFM=[&]() {
    json return_appaNzq=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_CJEdiFM;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_YILZQYI=json({});
    return_YILZQYI=[&]() {
    json return_PNYMdjt=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_YILZQYI;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_uQDmnZG=json({});
    return_uQDmnZG=[&]() {
    json return_DDYzFrc=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_uQDmnZG;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_NzbKaww=json({});
    return_NzbKaww=[&]() {
    json return_huGPWpc=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_NzbKaww;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_NArUoCp=json({});
    return_NArUoCp=[&]() {
    json return_vlzdvFF=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_NArUoCp;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_OtPmJro=json({});
    return_OtPmJro=[&]() {
    json return_lTqIwPe=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_OtPmJro;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_ixmQNgJ=json({});
    return_ixmQNgJ=[&]() {
    json return_BChJnqy=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_ixmQNgJ;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_BjjKWGp=json({});
    return_BjjKWGp=[&]() {
    json return_kTyCtQI=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_BjjKWGp;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_uZzhPDT=json({});
    return_uZzhPDT=[&]() {
    json return_ipwFXfE=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_uZzhPDT;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_LqOLVxi=json({});
    return_LqOLVxi=[&]() {
    json return_FJpeTln=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_LqOLVxi;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_fnMiDGZ=json({});
    return_fnMiDGZ=[&]() {
    json return_uJSTzfY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_fnMiDGZ;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_aJwgTkn=json({});
    return_aJwgTkn=[&]() {
    json return_ruOXhPF=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_aJwgTkn;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_vSYGfne=json({});
    return_vSYGfne=[&]() {
    json return_UkGZPuJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_vSYGfne;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_sUjkiJJ=json({});
    return_sUjkiJJ=[&]() {
    json return_jgAgWrT=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_sUjkiJJ;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_FeJrYSU=json({});
    return_FeJrYSU=[&]() {
    json return_jhSIXvW=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_FeJrYSU;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_FuLkEQC=json({});
    return_FuLkEQC=[&]() {
    json return_aVVKAWS=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_FuLkEQC;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_cidSoXa=json({});
    return_cidSoXa=[&]() {
    json return_KfsCSGD=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_cidSoXa;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_AxCfaiq=json({});
    return_AxCfaiq=[&]() {
    json return_jnkSPRJ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_AxCfaiq;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_oIkAcZN=json({});
    return_oIkAcZN=[&]() {
    json return_XtUJyaf=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_oIkAcZN;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_OqpnTPg=json({});
    return_OqpnTPg=[&]() {
    json return_IduRJeb=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_OqpnTPg;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_XFYEnKT=json({});
    return_XFYEnKT=[&]() {
    json return_eyfsesk=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_XFYEnKT;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DtCZAIn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_laIRxXD=json({});
    
        if (name.pNext==NULL){
            return_laIRxXD["null"]=true;
            return return_laIRxXD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hasPrimary"]=[&]() {
    json return_aohfSWX=json({});
    return_aohfSWX=[&]() {
    json return_OGheZQn=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_aohfSWX;}();
result["members"]["hasRender"]=[&]() {
    json return_eIixdJn=json({});
    return_eIixdJn=[&]() {
    json return_iKYssaj=json({});
    return serialize_uint32_t(name.hasRender);}();return return_eIixdJn;}();
result["members"]["primaryMajor"]=[&]() {
    json return_LHlpGLl=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_HDqWLIz=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_qqBPMNP=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_bAIVzLy=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ebyzfcc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gcXywXE=json({});
    
        if (name.pNext==NULL){
            return_gcXywXE["null"]=true;
            return return_gcXywXE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_kDdYFFc=json({});
    return_kDdYFFc=[&]() {
    json return_UKTglLJ=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_kDdYFFc;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oTqiGco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pJkBcGN=json({});
    
        if (name.pNext==NULL){
            return_pJkBcGN["null"]=true;
            return return_pJkBcGN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_KVordbP=json({});
    return_KVordbP=[&]() {
    json return_ZaAPair=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_KVordbP;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_khecruD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NDeWJXK=json({});
    
        if (name.pNext==NULL){
            return_NDeWJXK["null"]=true;
            return return_NDeWJXK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_vmIYGUG=json({});
    return_vmIYGUG=[&]() {
    json return_kODswNd=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_vmIYGUG;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OQrmhjd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OJZCIJZ=json({});
    
        if (name.pNext==NULL){
            return_OJZCIJZ["null"]=true;
            return return_OJZCIJZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_sUMGkdK=json({});
    return_sUMGkdK=[&]() {
    json return_zmiQrLI=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_sUMGkdK;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_bCTGbIp=json({});
    return_bCTGbIp=[&]() {
    json return_tWYwqWx=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_bCTGbIp;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VympACK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qzaBjBa=json({});
    
        if (name.pNext==NULL){
            return_qzaBjBa["null"]=true;
            return return_qzaBjBa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_usysWUA=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oSBWQGK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oSBWQGK=NULL;
        }
    temp_oSBWQGK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oSBWQGK;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JnEGFzn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HUFMicw=json({});
    
        if (name.pNext==NULL){
            return_HUFMicw["null"]=true;
            return return_HUFMicw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInstances"]=[&]() {
    json return_eeldXGY=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_WyAAmXP=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SRUgCVd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SRUgCVd=NULL;
        }
    temp_SRUgCVd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SRUgCVd;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_lFAIwti=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_ONWUYFH=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_TjYHfRV=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_IYNJddD=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_cAFzohr=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_kakWOoq=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_saZLFrj=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_JZkKHth=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_irMFscr=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_wDAlUVf=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_FloBnod=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_ioozKkH=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_GIPFDBt=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_QgQXZQS=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_qSMZHyi=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_TzciiYX=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_YgIMRLV=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_uHWImHT=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_KFZYCnO=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_cTSvzhS=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_epFIiHv=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_EgDdskg=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_LQWAvix=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_AUzVzyp=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_fwWnJIn=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_TmpsVcD=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_RWAIJxX=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_TLSHefL=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_RLKSwBh=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_jcQLdzG=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_gjzvCxL=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_hGDwTDU=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_JAGtfZw=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_KrZIQEP=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_gurjQbU=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_dmNRUGc=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BJrerfa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lZEESLC=json({});
    
        if (name.pNext==NULL){
            return_lZEESLC["null"]=true;
            return return_lZEESLC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_serpwvM=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_YWMJdhU=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IyCJpqo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IyCJpqo=NULL;
        }
    temp_IyCJpqo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IyCJpqo;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRBHmiz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eKRxoUI=json({});
    
        if (name.pNext==NULL){
            return_eKRxoUI["null"]=true;
            return return_eKRxoUI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_uZGlqih=json({});
    return_uZGlqih=[&]() {
    json return_AaXLoGx=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_uZGlqih;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dtWlHKf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EPEBuuV=json({});
    
        if (name.pNext==NULL){
            return_EPEBuuV["null"]=true;
            return return_EPEBuuV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_KnWAHQe=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_cPQHgBO=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_LROnbcO=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ejPDovT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mjQlGvD=json({});
    
        if (name.pNext==NULL){
            return_mjQlGvD["null"]=true;
            return return_mjQlGvD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_IICnaxK=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_enAodtg=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_lXGTMfZ=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QTQTuHu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYsGnZZ=json({});
    
        if (name.pNext==NULL){
            return_vYsGnZZ["null"]=true;
            return return_vYsGnZZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_wnADCPb=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_sjjZjRF=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_sjjZjRF["null"]=true;
            return return_sjjZjRF;
        }
        
        return_sjjZjRF["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_uwCrnzD=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[i]);}();
            return_sjjZjRF["members"][std::to_string(i)].push_back(temp);
        }
        return return_sjjZjRF;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int ZbpiHWE=0; ZbpiHWE < result.drmFormatModifierCount; ZbpiHWE++){
            [&]() {
result.pDrmFormatModifierProperties[ZbpiHWE]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][ZbpiHWE]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_xaloTAT=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_xFltdaq=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_WEIIOcq=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lmJvBRS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GBsaJVQ=json({});
    
        if (name.pNext==NULL){
            return_GBsaJVQ["null"]=true;
            return return_GBsaJVQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_xXIUKLa=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_FpzmsCY=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_KZjxpkF=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_KZjxpkF["null"]=true;
            return return_KZjxpkF;
        }
        
        return_KZjxpkF["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_WNIUEKB=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_KZjxpkF["members"][std::to_string(i)].push_back(temp);
        }
        return return_KZjxpkF;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_ZaTqWrX=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_nUKMICt=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tKSqlvY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tKSqlvY=NULL;
        }
    temp_tKSqlvY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tKSqlvY;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_lOpCoPE;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_lOpCoPE=NULL;
        }
    temp_lOpCoPE=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int ebphoig=0; ebphoig < result.colorAttachmentCount; ebphoig++){
            [&]() {
temp_lOpCoPE[ebphoig]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][ebphoig]);}();;
        }
        }();result.pColorAttachmentFormats=temp_lOpCoPE;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vDgUwPm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xlouanI=json({});
    
        if (name.pNext==NULL){
            return_xlouanI["null"]=true;
            return return_xlouanI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_NwgHthE=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_eOpXiZy=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_LGpjpSq=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_LGpjpSq["null"]=true;
            return return_LGpjpSq;
        }
        
        return_LGpjpSq["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_OspkWDR=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_LGpjpSq["members"][std::to_string(i)].push_back(temp);
        }
        return return_LGpjpSq;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_tlNyxkg=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_HZyyDTt=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NtnzVjK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NtnzVjK=NULL;
        }
    temp_NtnzVjK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NtnzVjK;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_kxSNQGc;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_kxSNQGc=NULL;
        }
    temp_kxSNQGc=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int yKAwTbf=0; yKAwTbf < result.colorAttachmentCount; yKAwTbf++){
            [&]() {
temp_kxSNQGc[yKAwTbf]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][yKAwTbf]);}();;
        }
        }();result.pColorAttachmentFormats=temp_kxSNQGc;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DfjFHsk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uykKaEQ=json({});
    
        if (name.pNext==NULL){
            return_uykKaEQ["null"]=true;
            return return_uykKaEQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hjuYWIr=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_qwfWflx=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_mFiaflH=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_ghJCOej=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_hiucbzt=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_pABBYIp=json({});
    
        if (name.pColorAttachments==NULL){
            return_pABBYIp["null"]=true;
            return return_pABBYIp;
        }
        
        return_pABBYIp["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_dAjFdce=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_pABBYIp["members"][std::to_string(i)].push_back(temp);
        }
        return return_pABBYIp;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_hEcspeB=json({});
    
        if (name.pDepthAttachment==NULL){
            return_hEcspeB["null"]=true;
            return return_hEcspeB;
        }
        return_hEcspeB=[&]() {
    json return_SIDEBkZ=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_hEcspeB;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_AMJRiCO=json({});
    
        if (name.pStencilAttachment==NULL){
            return_AMJRiCO["null"]=true;
            return return_AMJRiCO;
        }
        return_AMJRiCO=[&]() {
    json return_kdwOGHj=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_AMJRiCO;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jGxxxaV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jGxxxaV=NULL;
        }
    temp_jGxxxaV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jGxxxaV;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_WZxpQQz;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_WZxpQQz=NULL;
        }
    temp_WZxpQQz=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int fqmbgQh=0; fqmbgQh < result.colorAttachmentCount; fqmbgQh++){
            [&]() {
temp_WZxpQQz[fqmbgQh]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][fqmbgQh]);}();;
        }
        }();result.pColorAttachments=temp_WZxpQQz;}();
[&]() {
VkRenderingAttachmentInfo* temp_EsvgepE;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_EsvgepE=NULL;
        }
    [&]() {
*(temp_EsvgepE)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_EsvgepE;}();
[&]() {
VkRenderingAttachmentInfo* temp_HRmoBZm;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_HRmoBZm=NULL;
        }
    [&]() {
*(temp_HRmoBZm)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_HRmoBZm;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XpKBwfz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hlHJSvQ=json({});
    
        if (name.pNext==NULL){
            return_hlHJSvQ["null"]=true;
            return return_hlHJSvQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RmXDwEa=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_dDZUetp=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_zguxoBv=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_cIXaQWU=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ZbdoEyM=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_asYVJOS=json({});
    
        if (name.pColorAttachments==NULL){
            return_asYVJOS["null"]=true;
            return return_asYVJOS;
        }
        
        return_asYVJOS["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_QlDTeKA=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_asYVJOS["members"][std::to_string(i)].push_back(temp);
        }
        return return_asYVJOS;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_YOxLBsT=json({});
    
        if (name.pDepthAttachment==NULL){
            return_YOxLBsT["null"]=true;
            return return_YOxLBsT;
        }
        return_YOxLBsT=[&]() {
    json return_SDIZGkE=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_YOxLBsT;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_BtgnEWb=json({});
    
        if (name.pStencilAttachment==NULL){
            return_BtgnEWb["null"]=true;
            return return_BtgnEWb;
        }
        return_BtgnEWb=[&]() {
    json return_GfeqCMR=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_BtgnEWb;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yJogwXZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yJogwXZ=NULL;
        }
    temp_yJogwXZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yJogwXZ;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_ArFSvlD;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_ArFSvlD=NULL;
        }
    temp_ArFSvlD=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int qSSExHP=0; qSSExHP < result.colorAttachmentCount; qSSExHP++){
            [&]() {
temp_ArFSvlD[qSSExHP]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][qSSExHP]);}();;
        }
        }();result.pColorAttachments=temp_ArFSvlD;}();
[&]() {
VkRenderingAttachmentInfo* temp_AQYTJma;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_AQYTJma=NULL;
        }
    [&]() {
*(temp_AQYTJma)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_AQYTJma;}();
[&]() {
VkRenderingAttachmentInfo* temp_LpjTBgb;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_LpjTBgb=NULL;
        }
    [&]() {
*(temp_LpjTBgb)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_LpjTBgb;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oQuWAkH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LQHHfOh=json({});
    
        if (name.pNext==NULL){
            return_LQHHfOh["null"]=true;
            return return_LQHHfOh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_jDnheGA=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_ZzPEaUE=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_mMViUow=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_JaUiHsW=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_wAShssc=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_rEvfpDz=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_YlIdYxj=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_jBCATPA=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SwzjKDS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SwzjKDS=NULL;
        }
    temp_SwzjKDS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SwzjKDS;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XVkVnOO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GoeTuEE=json({});
    
        if (name.pNext==NULL){
            return_GoeTuEE["null"]=true;
            return return_GoeTuEE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_qVDSiQK=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_vZjeeAK=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_hvovabl=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_TWAJQku=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_yQHxgWh=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_eJgNLdb=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_BCYUqdU=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_HWPAuXG=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vOtcTEG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vOtcTEG=NULL;
        }
    temp_vOtcTEG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vOtcTEG;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_loygdnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wNOWRAH=json({});
    
        if (name.pNext==NULL){
            return_wNOWRAH["null"]=true;
            return return_wNOWRAH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_evIfdXT=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_UlYiICy=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_rgEvjsp=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uPnhFOF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uPnhFOF=NULL;
        }
    temp_uPnhFOF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uPnhFOF;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fqFejlp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qiQTOoS=json({});
    
        if (name.pNext==NULL){
            return_qiQTOoS["null"]=true;
            return return_qiQTOoS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_sDZdcKB=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_sSZOfgG=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ytsQVJu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ytsQVJu=NULL;
        }
    temp_ytsQVJu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ytsQVJu;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HmPiGFK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vNHPaZk=json({});
    
        if (name.pNext==NULL){
            return_vNHPaZk["null"]=true;
            return return_vNHPaZk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_pJkyNuo=json({});
    return_pJkyNuo=[&]() {
    json return_JxjWIFB=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_pJkyNuo;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DmAMXUx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vWttrmr=json({});
    
        if (name.pNext==NULL){
            return_vWttrmr["null"]=true;
            return return_vWttrmr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_qPBNwRt=json({});
    return_qPBNwRt=[&]() {
    json return_oKBBrOq=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_qPBNwRt;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cfcMBFP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zhLbZrA=json({});
    
        if (name.pNext==NULL){
            return_zhLbZrA["null"]=true;
            return return_zhLbZrA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WUANWqu=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_MeWdXqH=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_XcRyJty=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_CCWFfui=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_gWHSsUD=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_gWHSsUD["null"]=true;
            return return_gWHSsUD;
        }
        
        return_gWHSsUD["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_hvNFIqW=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_gWHSsUD["members"][std::to_string(i)].push_back(temp);
        }
        return return_gWHSsUD;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_FaokUBd=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_xBFpULu=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_mlOIujB=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HlCHEij;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HlCHEij=NULL;
        }
    temp_HlCHEij=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HlCHEij;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_OpmmZVW;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_OpmmZVW=NULL;
        }
    temp_OpmmZVW=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int ULIQvsm=0; ULIQvsm < result.colorAttachmentCount; ULIQvsm++){
            [&]() {
temp_OpmmZVW[ULIQvsm]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][ULIQvsm]);}();;
        }
        }();result.pColorAttachmentFormats=temp_OpmmZVW;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_trCotWS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AyklEVD=json({});
    
        if (name.pNext==NULL){
            return_AyklEVD["null"]=true;
            return return_AyklEVD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PVdIQPS=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_VYYxpBY=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_dWwdhrZ=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_eGJWrYX=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_owfVlkc=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_owfVlkc["null"]=true;
            return return_owfVlkc;
        }
        
        return_owfVlkc["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_sUEBCmC=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_owfVlkc["members"][std::to_string(i)].push_back(temp);
        }
        return return_owfVlkc;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_kBKmxRx=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_XHWCoQy=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_fCvRBqH=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EokSsbD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EokSsbD=NULL;
        }
    temp_EokSsbD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EokSsbD;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_WJuHGcL;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_WJuHGcL=NULL;
        }
    temp_WJuHGcL=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int GjLHcol=0; GjLHcol < result.colorAttachmentCount; GjLHcol++){
            [&]() {
temp_WJuHGcL[GjLHcol]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][GjLHcol]);}();;
        }
        }();result.pColorAttachmentFormats=temp_WJuHGcL;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wIsvBDy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pTxGUlp=json({});
    
        if (name.pNext==NULL){
            return_pTxGUlp["null"]=true;
            return return_pTxGUlp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_CXogWHW=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_dEkWHsr=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_dEkWHsr["null"]=true;
            return return_dEkWHsr;
        }
        
        return_dEkWHsr["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_WEmGZBa=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_dEkWHsr["members"][std::to_string(i)].push_back(temp);
        }
        return return_dEkWHsr;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_XMsasuR=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xYVdqid;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xYVdqid=NULL;
        }
    temp_xYVdqid=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xYVdqid;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_VXOSAIE;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_VXOSAIE=NULL;
        }
    temp_VXOSAIE=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int GtJUXsp=0; GtJUXsp < result.colorAttachmentCount; GtJUXsp++){
            [&]() {
temp_VXOSAIE[GtJUXsp]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][GtJUXsp]);}();;
        }
        }();result.pColorAttachmentSamples=temp_VXOSAIE;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cuEcfmU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bmFyrGc=json({});
    
        if (name.pNext==NULL){
            return_bmFyrGc["null"]=true;
            return return_bmFyrGc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_shlhbCB=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_ifEoDvW=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_ifEoDvW["null"]=true;
            return return_ifEoDvW;
        }
        
        return_ifEoDvW["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_kubVIhy=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_ifEoDvW["members"][std::to_string(i)].push_back(temp);
        }
        return return_ifEoDvW;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_RWlHqcP=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qppIWMg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qppIWMg=NULL;
        }
    temp_qppIWMg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qppIWMg;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_EhLVaVc;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_EhLVaVc=NULL;
        }
    temp_EhLVaVc=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int luqaxfT=0; luqaxfT < result.colorAttachmentCount; luqaxfT++){
            [&]() {
temp_EhLVaVc[luqaxfT]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][luqaxfT]);}();;
        }
        }();result.pColorAttachmentSamples=temp_EhLVaVc;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EhlAfWR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uZoNMZm=json({});
    
        if (name.pNext==NULL){
            return_uZoNMZm["null"]=true;
            return return_uZoNMZm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewAttributes"]=[&]() {
    json return_wuBkugY=json({});
    return_wuBkugY=[&]() {
    json return_WEsNUnZ=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_wuBkugY;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_VPOMADY=json({});
    return_VPOMADY=[&]() {
    json return_QhMguET=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_VPOMADY;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qHZMjnH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qHZMjnH=NULL;
        }
    temp_qHZMjnH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qHZMjnH;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bsSPcMG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nJlOUpP=json({});
    
        if (name.pNext==NULL){
            return_nJlOUpP["null"]=true;
            return return_nJlOUpP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_RcDqRMx=json({});
    return_RcDqRMx=[&]() {
    json return_qVpKcms=json({});
    return serialize_uint32_t(name.minLod);}();return return_RcDqRMx;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pzTvqMn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hZsqYYK=json({});
    
        if (name.pNext==NULL){
            return_hZsqYYK["null"]=true;
            return return_hZsqYYK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_fvYVROt=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_isvsMCE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_isvsMCE=NULL;
        }
    temp_isvsMCE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_isvsMCE;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uLLKBqU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VKASNCP=json({});
    
        if (name.pNext==NULL){
            return_VKASNCP["null"]=true;
            return return_VKASNCP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_rRSATTi=json({});
    return_rRSATTi=[&]() {
    json return_KgqUVxD=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_rRSATTi;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_lgDSCSW=json({});
    return_lgDSCSW=[&]() {
    json return_TqXHPrN=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_lgDSCSW;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_hIrAEgV=json({});
    return_hIrAEgV=[&]() {
    json return_MxJUXNB=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_hIrAEgV;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SmQmEvF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NdbSWeQ=json({});
    
        if (name.pNext==NULL){
            return_NdbSWeQ["null"]=true;
            return return_NdbSWeQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_njvaAuW=json({});
    return_njvaAuW=[&]() {
    json return_nZfIVti=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_njvaAuW;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_iRbIzhN=json({});
    return_iRbIzhN=[&]() {
    json return_BKIBblW=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_iRbIzhN;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_NqpxGFv=json({});
    return_NqpxGFv=[&]() {
    json return_HhMpnqS=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_NqpxGFv;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lQPQxPo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yjSehDn=json({});
    
        if (name.pNext==NULL){
            return_yjSehDn["null"]=true;
            return return_yjSehDn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_YeNctmV=json({});
    return_YeNctmV=[&]() {
    json return_chMAoRQ=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_YeNctmV;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PuqKjNq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GubBLTd=json({});
    
        if (name.pNext==NULL){
            return_GubBLTd["null"]=true;
            return return_GubBLTd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_qkiIgwu=json({});
    return_qkiIgwu=[&]() {
    json return_QVQbnyt=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_qkiIgwu;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fvUxtZz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XQRUIjF=json({});
    
        if (name.pNext==NULL){
            return_XQRUIjF["null"]=true;
            return return_XQRUIjF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_nQDkPCy=json({});
    return_nQDkPCy=[&]() {
    json return_tmbIoDF=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_nQDkPCy;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_WxgVCMZ=json({});
    return_WxgVCMZ=[&]() {
    json return_CYdcmwD=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_WxgVCMZ;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KcKnIys=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sAwkZlz=json({});
    
        if (name.pNext==NULL){
            return_sAwkZlz["null"]=true;
            return return_sAwkZlz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MeXyryP=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FMFmwTT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FMFmwTT=NULL;
        }
    temp_FMFmwTT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FMFmwTT;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vVafihK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eUyILvn=json({});
    
        if (name.pNext==NULL){
            return_eUyILvn["null"]=true;
            return return_eUyILvn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_NlFNRnF=json({});
    return_NlFNRnF=[&]() {
    json return_dGYnibL=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_NlFNRnF;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zsoynSl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IUPgLTW=json({});
    
        if (name.pNext==NULL){
            return_IUPgLTW["null"]=true;
            return return_IUPgLTW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_csznlGk=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_VqLVDRA=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VTnGtOp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VTnGtOp=NULL;
        }
    temp_VTnGtOp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VTnGtOp;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cpkBLdF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SWDrwrv=json({});
    
        if (name.pNext==NULL){
            return_SWDrwrv["null"]=true;
            return return_SWDrwrv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorOffset"]=[&]() {
    json return_euHRIjB=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_FCiSfJQ=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TKfnLAW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NHXocBI=json({});
    
        if (name.pNext==NULL){
            return_NHXocBI["null"]=true;
            return return_NHXocBI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_elFuTtE=json({});
    return_elFuTtE=[&]() {
    json return_stJsoel=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_elFuTtE;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VDKxqtk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bgBwLxp=json({});
    
        if (name.pNext==NULL){
            return_bgBwLxp["null"]=true;
            return return_bgBwLxp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_ZwZXkFN=json({});
    
        return_ZwZXkFN["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_CVhpmUd=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[i]);}();
            return_ZwZXkFN["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZwZXkFN;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int nAFbMpa=0; nAFbMpa < VK_UUID_SIZE; nAFbMpa++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[nAFbMpa]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][nAFbMpa]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ItnDhwJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TAUlzmi=json({});
    
        if (name.pNext==NULL){
            return_TAUlzmi["null"]=true;
            return return_TAUlzmi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_QFlgvzC=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_PLEeONP=json({});
    
        if (name.pIdentifier==NULL){
            return_PLEeONP["null"]=true;
            return return_PLEeONP;
        }
        
        return_PLEeONP["members"]={};
        for(int i=0; i < name.identifierSize; i++){
            json temp;
            temp=[&]() {
    json return_oaEQYVF=json({});
    return serialize_uint8_t(name.pIdentifier[i]);}();
            return_PLEeONP["members"][std::to_string(i)].push_back(temp);
        }
        return return_PLEeONP;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wUOtEmh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wUOtEmh=NULL;
        }
    temp_wUOtEmh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wUOtEmh;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_DZJMiWN;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_DZJMiWN=NULL;
        }
    temp_DZJMiWN=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int DKfRSbx=0; DKfRSbx < result.identifierSize; DKfRSbx++){
            [&]() {
temp_DZJMiWN[DKfRSbx]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][DKfRSbx]);}();;
        }
        }();result.pIdentifier=temp_DZJMiWN;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rTGgNny=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vNgXgnp=json({});
    
        if (name.pNext==NULL){
            return_vNgXgnp["null"]=true;
            return return_vNgXgnp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_nUTyGKM=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_qpGratT=json({});
    
        return_qpGratT["members"]={};
        for(int i=0; i < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; i++){
            json temp;
            temp=[&]() {
    json return_AJUlCIo=json({});
    return serialize_uint8_t(name.identifier[i]);}();
            return_qpGratT["members"][std::to_string(i)].push_back(temp);
        }
        return return_qpGratT;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int cLOhdvC=0; cLOhdvC < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; cLOhdvC++){
            [&]() {
result.identifier[cLOhdvC]=deserialize_uint8_t(name["members"]["identifier"]["members"][cLOhdvC]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OkxUmuH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cgumJdO=json({});
    
        if (name.pNext==NULL){
            return_cgumJdO["null"]=true;
            return return_cgumJdO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LljtcKq=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_SQsjKri=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_lTqXYGH=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_lTqXYGH["null"]=true;
            return return_lTqXYGH;
        }
        
        return_lTqXYGH["members"]={};
        for(int i=0; i < name.compressionControlPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_EIQmLhu=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[i]);}();
            return_lTqXYGH["members"][std::to_string(i)].push_back(temp);
        }
        return return_lTqXYGH;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rpBqhnP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rpBqhnP=NULL;
        }
    temp_rpBqhnP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rpBqhnP;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int sTKurfm=0; sTKurfm < result.compressionControlPlaneCount; sTKurfm++){
            [&]() {
result.pFixedRateFlags[sTKurfm]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][sTKurfm]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLopDpr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cFfFndd=json({});
    
        if (name.pNext==NULL){
            return_cFfFndd["null"]=true;
            return return_cFfFndd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_yeMuACX=json({});
    return_yeMuACX=[&]() {
    json return_golrvCa=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_yeMuACX;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GEKuPkK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zjosxaP=json({});
    
        if (name.pNext==NULL){
            return_zjosxaP["null"]=true;
            return return_zjosxaP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_nLhcszb=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_PqUDzDq=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rLUJAqQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MLVTctQ=json({});
    
        if (name.pNext==NULL){
            return_MLVTctQ["null"]=true;
            return return_MLVTctQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_VTxWzTL=json({});
    return_VTxWzTL=[&]() {
    json return_yDRKKHb=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_VTxWzTL;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gzupXzr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UMjPnRK=json({});
    
        if (name.pNext==NULL){
            return_UMjPnRK["null"]=true;
            return return_UMjPnRK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_Rdlfynp=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eZaMlId=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Hrztiny=json({});
    
        if (name.pNext==NULL){
            return_Hrztiny["null"]=true;
            return return_Hrztiny;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_CUbeFjV=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oMtuXVO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XIVEAUo=json({});
    
        if (name.pNext==NULL){
            return_XIVEAUo["null"]=true;
            return return_XIVEAUo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_DAYcqNx=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PQolnUU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EMTPOoO=json({});
    
        if (name.pNext==NULL){
            return_EMTPOoO["null"]=true;
            return return_EMTPOoO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_tCpfRjU=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VvKWSzm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_chabiqk=json({});
    
        if (name.pNext==NULL){
            return_chabiqk["null"]=true;
            return return_chabiqk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disallowMerging"]=[&]() {
    json return_GmpPkEN=json({});
    return_GmpPkEN=[&]() {
    json return_KqVWYde=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_GmpPkEN;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gnokMAj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gnokMAj=NULL;
        }
    temp_gnokMAj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gnokMAj;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_hAPswCD=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WxroOza=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rHfrnBe=json({});
    
        if (name.pNext==NULL){
            return_rHfrnBe["null"]=true;
            return return_rHfrnBe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_oivsSiJ=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_oivsSiJ["null"]=true;
            return return_oivsSiJ;
        }
        return_oivsSiJ=[&]() {
    json return_SHBQuIQ=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_oivsSiJ;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CVSWpxa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CVSWpxa=NULL;
        }
    temp_CVSWpxa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CVSWpxa;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        }
    [&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_RYVCvFK=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_GZVkixD=json({});
    
        return_GZVkixD["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_nrgKKjN=json({});
    return serialize_char(name.description[i]);}();
            return_GZVkixD["members"][std::to_string(i)].push_back(temp);
        }
        return return_GZVkixD;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_nYVzOuA=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int NzfWgsO=0; NzfWgsO < VK_MAX_DESCRIPTION_SIZE; NzfWgsO++){
            [&]() {
result.description[NzfWgsO]=deserialize_char(name["members"]["description"]["members"][NzfWgsO]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NEQkTEe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QYjLvJj=json({});
    
        if (name.pNext==NULL){
            return_QYjLvJj["null"]=true;
            return return_QYjLvJj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_uFZftMJ=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_uFZftMJ["null"]=true;
            return return_uFZftMJ;
        }
        return_uFZftMJ=[&]() {
    json return_HWnqncw=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_uFZftMJ;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eLgRLAW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eLgRLAW=NULL;
        }
    temp_eLgRLAW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eLgRLAW;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        }
    [&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_puZAGpa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EQHvJEo=json({});
    
        if (name.pNext==NULL){
            return_EQHvJEo["null"]=true;
            return return_EQHvJEo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_rUEZdPc=json({});
    return_rUEZdPc=[&]() {
    json return_oeacRQc=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_rUEZdPc;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_anXEUgv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yZdejhr=json({});
    
        if (name.pNext==NULL){
            return_yZdejhr["null"]=true;
            return return_yZdejhr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_pVISWPQ=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_mRiwvfa=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_uJbWGCb=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_jcURKfk=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_XSKJSvW=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_ynTkBFT=json({});
    
        if (name.pUsageCounts==NULL){
            return_ynTkBFT["null"]=true;
            return return_ynTkBFT;
        }
        
        return_ynTkBFT["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_hzjakoT=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_ynTkBFT["members"][std::to_string(i)].push_back(temp);
        }
        return return_ynTkBFT;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_IKGyzJu=json({});
    
        if (name.ppUsageCounts==NULL){
            return_IKGyzJu["null"]=true;
            return return_IKGyzJu;
        }
        
        return_IKGyzJu["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_exphFvE=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_exphFvE["null"]=true;
            return return_exphFvE;
        }
        
        return_exphFvE["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_PTfMYIU=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_exphFvE["members"][std::to_string(i)].push_back(temp);
        }
        return return_exphFvE;
        }();
            return_IKGyzJu["members"][std::to_string(i)].push_back(temp);
        }
        return return_IKGyzJu;
        }();
result["members"]["data"]=[&]() {
    json return_HQHZdEI=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_BnvPazt=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_lSOSABj=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_ohmvqzg=json({});
    return_ohmvqzg=[&]() {
    json return_xOtVWFD=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_ohmvqzg;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bMihXUt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bMihXUt=NULL;
        }
    temp_bMihXUt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bMihXUt;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_vvABWTJ;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_vvABWTJ=NULL;
        }
    temp_vvABWTJ=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int fjKecGf=0; fjKecGf < result.usageCountsCount; fjKecGf++){
            [&]() {
temp_vvABWTJ[fjKecGf]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][fjKecGf]);}();;
        }
        }();result.pUsageCounts=temp_vvABWTJ;}();
[&]() {
VkMicromapUsageEXT** temp_PAqltAe;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_PAqltAe=NULL;
        }
    temp_PAqltAe=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int OiPpgmj=0; OiPpgmj < result.usageCountsCount; OiPpgmj++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][OiPpgmj].contains("null")){
        temp_PAqltAe[OiPpgmj]=NULL;
        }
    temp_PAqltAe[OiPpgmj]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int izvkuGy=0; izvkuGy < 1; izvkuGy++){
            [&]() {
temp_PAqltAe[OiPpgmj][izvkuGy]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][OiPpgmj]["members"][izvkuGy]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_PAqltAe;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MbOiqLu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qmMoYTy=json({});
    
        if (name.pNext==NULL){
            return_qmMoYTy["null"]=true;
            return return_qmMoYTy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_CrVNcNT=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_grESVGt=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_zRUczNB=json({});
    return_zRUczNB=[&]() {
    json return_wXaRIdJ=json({});
    return serialize_uint64_t(name.offset);}();return return_zRUczNB;}();
result["members"]["size"]=[&]() {
    json return_SWvImCl=json({});
    return_SWvImCl=[&]() {
    json return_hCNguVS=json({});
    return serialize_uint64_t(name.size);}();return return_SWvImCl;}();
result["members"]["type"]=[&]() {
    json return_idlxNJf=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_TQwLThS=json({});
    return_TQwLThS=[&]() {
    json return_cJjexSe=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_TQwLThS;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rCTQCNN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rCTQCNN=NULL;
        }
    temp_rCTQCNN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rCTQCNN;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AfMAirM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PXhOorT=json({});
    
        if (name.pNext==NULL){
            return_PXhOorT["null"]=true;
            return return_PXhOorT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_mlRBfcw=json({});
    
        if (name.pVersionData==NULL){
            return_mlRBfcw["null"]=true;
            return return_mlRBfcw;
        }
        
        return_mlRBfcw["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_OvgHYpw=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_mlRBfcw["members"][std::to_string(i)].push_back(temp);
        }
        return return_mlRBfcw;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bOcbLAX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bOcbLAX=NULL;
        }
    temp_bOcbLAX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bOcbLAX;}();
[&]() {
uint8_t* temp_TVJXaVA;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_TVJXaVA=NULL;
        }
    temp_TVJXaVA=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int ovvHjiJ=0; ovvHjiJ < 2*VK_UUID_SIZE; ovvHjiJ++){
            [&]() {
temp_TVJXaVA[ovvHjiJ]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][ovvHjiJ]);}();;
        }
        }();result.pVersionData=temp_TVJXaVA;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ewMpDgx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KQikNRt=json({});
    
        if (name.pNext==NULL){
            return_KQikNRt["null"]=true;
            return return_KQikNRt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_vgUJKpY=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_cKblFUz=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_hPzqAmJ=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EoGXZSa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EoGXZSa=NULL;
        }
    temp_EoGXZSa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EoGXZSa;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gQdzalb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNYAgSz=json({});
    
        if (name.pNext==NULL){
            return_SNYAgSz["null"]=true;
            return return_SNYAgSz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_wPVYwuI=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_MSKbeBg=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_hCuWbDw=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yUpvBRN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yUpvBRN=NULL;
        }
    temp_yUpvBRN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yUpvBRN;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xmhxuEq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gUfEMzQ=json({});
    
        if (name.pNext==NULL){
            return_gUfEMzQ["null"]=true;
            return return_gUfEMzQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_khZvYUY=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_TBPqLrR=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_XuHSRjg=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zxAmNEk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zxAmNEk=NULL;
        }
    temp_zxAmNEk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zxAmNEk;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_brgMcxn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AcFsmlp=json({});
    
        if (name.pNext==NULL){
            return_AcFsmlp["null"]=true;
            return return_AcFsmlp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromapSize"]=[&]() {
    json return_gtvYjHk=json({});
    return_gtvYjHk=[&]() {
    json return_nzkGjAj=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_gtvYjHk;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_AFasXKz=json({});
    return_AFasXKz=[&]() {
    json return_rIvIcyY=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_AFasXKz;}();
result["members"]["discardable"]=[&]() {
    json return_vFdOVbk=json({});
    return_vFdOVbk=[&]() {
    json return_PnyBtSW=json({});
    return serialize_uint32_t(name.discardable);}();return return_vFdOVbk;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_agqNqxr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_agqNqxr=NULL;
        }
    temp_agqNqxr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_agqNqxr;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_UEwSSnM=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_hplJWjf=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_RHoTwqD=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_nJKWSHF=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_eISjLPX=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_grQvWNa=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pUVGnay=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QZrtbaf=json({});
    
        if (name.pNext==NULL){
            return_QZrtbaf["null"]=true;
            return return_QZrtbaf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromap"]=[&]() {
    json return_fnMkTpi=json({});
    return_fnMkTpi=[&]() {
    json return_hvQUhxM=json({});
    return serialize_uint32_t(name.micromap);}();return return_fnMkTpi;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_lwiHrPL=json({});
    return_lwiHrPL=[&]() {
    json return_TuMWLpE=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_lwiHrPL;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_QwlBRHI=json({});
    return_QwlBRHI=[&]() {
    json return_CPyusXY=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_QwlBRHI;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YlkJQCH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PYSpatH=json({});
    
        if (name.pNext==NULL){
            return_PYSpatH["null"]=true;
            return return_PYSpatH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_YfdQCuL=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_xkfytyq=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vAAPbul=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZETLfxX=json({});
    
        if (name.pNext==NULL){
            return_ZETLfxX["null"]=true;
            return return_ZETLfxX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexType"]=[&]() {
    json return_CPHRcfm=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_NcIhGSB=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_HSIOmpG=json({});
    return_HSIOmpG=[&]() {
    json return_NLAqcMM=json({});
    return serialize_uint64_t(name.indexStride);}();return return_HSIOmpG;}();
result["members"]["baseTriangle"]=[&]() {
    json return_fbcZstl=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_AnNmZBK=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_YnNEbQQ=json({});
    
        if (name.pUsageCounts==NULL){
            return_YnNEbQQ["null"]=true;
            return return_YnNEbQQ;
        }
        
        return_YnNEbQQ["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_BbabHaw=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_YnNEbQQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_YnNEbQQ;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_ffBlZtr=json({});
    
        if (name.ppUsageCounts==NULL){
            return_ffBlZtr["null"]=true;
            return return_ffBlZtr;
        }
        
        return_ffBlZtr["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_uecEUgl=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_uecEUgl["null"]=true;
            return return_uecEUgl;
        }
        
        return_uecEUgl["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_RiElNmD=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_uecEUgl["members"][std::to_string(i)].push_back(temp);
        }
        return return_uecEUgl;
        }();
            return_ffBlZtr["members"][std::to_string(i)].push_back(temp);
        }
        return return_ffBlZtr;
        }();
result["members"]["micromap"]=[&]() {
    json return_jpgXxad=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_rYxZjzS;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_rYxZjzS=NULL;
        }
    temp_rYxZjzS=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int ipHwzCf=0; ipHwzCf < result.usageCountsCount; ipHwzCf++){
            [&]() {
temp_rYxZjzS[ipHwzCf]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][ipHwzCf]);}();;
        }
        }();result.pUsageCounts=temp_rYxZjzS;}();
[&]() {
VkMicromapUsageEXT** temp_jsGPthe;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_jsGPthe=NULL;
        }
    temp_jsGPthe=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int SVMpTOM=0; SVMpTOM < result.usageCountsCount; SVMpTOM++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][SVMpTOM].contains("null")){
        temp_jsGPthe[SVMpTOM]=NULL;
        }
    temp_jsGPthe[SVMpTOM]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int eiFOSTY=0; eiFOSTY < 1; eiFOSTY++){
            [&]() {
temp_jsGPthe[SVMpTOM][eiFOSTY]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][SVMpTOM]["members"][eiFOSTY]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_jsGPthe;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZolysLQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YUPZXko=json({});
    
        if (name.pNext==NULL){
            return_YUPZXko["null"]=true;
            return return_YUPZXko;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_QRxnWGt=json({});
    
        return_QRxnWGt["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RHXumNH=json({});
    return serialize_uint8_t(name.pipelineIdentifier[i]);}();
            return_QRxnWGt["members"][std::to_string(i)].push_back(temp);
        }
        return return_QRxnWGt;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int OXnDYgL=0; OXnDYgL < VK_UUID_SIZE; OXnDYgL++){
            [&]() {
result.pipelineIdentifier[OXnDYgL]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][OXnDYgL]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZtwJOaT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JCAHHXo=json({});
    
        if (name.pNext==NULL){
            return_JCAHHXo["null"]=true;
            return return_JCAHHXo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_UEUIRmk=json({});
    return_UEUIRmk=[&]() {
    json return_QCHPAcA=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_UEUIRmk;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EQwJudv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EOciCqQ=json({});
    
        if (name.pNext==NULL){
            return_EOciCqQ["null"]=true;
            return return_EOciCqQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_VbQsqwN=json({});
    return_VbQsqwN=[&]() {
    json return_gmlOPPS=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_VbQsqwN;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oJQkNzD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qVJbOGJ=json({});
    
        if (name.pNext==NULL){
            return_qVJbOGJ["null"]=true;
            return return_qVJbOGJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_HfZonZd=json({});
    return_HfZonZd=[&]() {
    json return_wsJiVHI=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_HfZonZd;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rvEMtYR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rvEMtYR=NULL;
        }
    temp_rvEMtYR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rvEMtYR;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rVRMAFt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mswQpfR=json({});
    
        if (name.pNext==NULL){
            return_mswQpfR["null"]=true;
            return return_mswQpfR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_etgWDam=json({});
    return_etgWDam=[&]() {
    json return_lWZjjJW=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_etgWDam;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EvHDSGo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rvvmxax=json({});
    
        if (name.pNext==NULL){
            return_rvvmxax["null"]=true;
            return return_rvvmxax;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_pozVUCO=json({});
    return_pozVUCO=[&]() {
    json return_RYMVWmO=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_pozVUCO;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fOZFUHX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_quVrMso=json({});
    
        if (name.pNext==NULL){
            return_quVrMso["null"]=true;
            return return_quVrMso;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffers"]=[&]() {
    json return_ufJLIGM=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_UxfzcgF=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_VWeuswn=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_sLYJmxj=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VsVtbaf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VsVtbaf=NULL;
        }
    temp_VsVtbaf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VsVtbaf;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TWKCyqd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uAhDbpX=json({});
    
        if (name.pNext==NULL){
            return_uAhDbpX["null"]=true;
            return return_uAhDbpX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_DWrgUBT=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_jijQwXT=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_eckVjmi=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_OyjgYUS=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FsbiQtb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tcCjcXL=json({});
    
        if (name.pNext==NULL){
            return_tcCjcXL["null"]=true;
            return return_tcCjcXL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCenter"]=[&]() {
    json return_uKafljT=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_MbmjpRy=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_MjdDwoD=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aIDZdMJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aIDZdMJ=NULL;
        }
    temp_aIDZdMJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aIDZdMJ;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aiGBfdt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JEuBnyK=json({});
    
        if (name.pNext==NULL){
            return_JEuBnyK["null"]=true;
            return return_JEuBnyK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_VPqRVIq=json({});
    return_VPqRVIq=[&]() {
    json return_KaCVcZa=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_VPqRVIq;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_Smlqgzn=json({});
    return_Smlqgzn=[&]() {
    json return_HyCArmJ=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_Smlqgzn;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_aYRvQKC=json({});
    return_aYRvQKC=[&]() {
    json return_nxwElxs=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_aYRvQKC;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DEGKkLG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_domxjOa=json({});
    
        if (name.pNext==NULL){
            return_domxjOa["null"]=true;
            return return_domxjOa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_gJzkDHC=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_kcsmmdI=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_RhNBuSd=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_IsEuASL=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ruWutHV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EvDSfJo=json({});
    
        if (name.pNext==NULL){
            return_EvDSfJo["null"]=true;
            return return_EvDSfJo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileProperties"]=[&]() {
    json return_HZYlPQp=json({});
    return_HZYlPQp=[&]() {
    json return_oqdVrMb=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_HZYlPQp;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_egEyxLd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UNvjGHU=json({});
    
        if (name.pNext==NULL){
            return_UNvjGHU["null"]=true;
            return return_UNvjGHU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileSize"]=[&]() {
    json return_nXATKHT=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_GCnPsSX=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_hDfgBAt=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kJSFAmt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JULmXPA=json({});
    
        if (name.pNext==NULL){
            return_JULmXPA["null"]=true;
            return return_JULmXPA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["amigoProfiling"]=[&]() {
    json return_pNQbYii=json({});
    return_pNQbYii=[&]() {
    json return_NiEPnMS=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_pNQbYii;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tnOObMP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VgErPiC=json({});
    
        if (name.pNext==NULL){
            return_VgErPiC["null"]=true;
            return return_VgErPiC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_wIzujxc=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_VXgBuCv=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tYddPFs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tYddPFs=NULL;
        }
    temp_tYddPFs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tYddPFs;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VwXKfjE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EVPqWER=json({});
    
        if (name.pNext==NULL){
            return_EVPqWER["null"]=true;
            return return_EVPqWER;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_EPAMGsQ=json({});
    return_EPAMGsQ=[&]() {
    json return_pBpiTcu=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_EPAMGsQ;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_evoUgQe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aEPfDVL=json({});
    
        if (name.pNext==NULL){
            return_aEPfDVL["null"]=true;
            return return_aEPfDVL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_ljwxUdk=json({});
    return_ljwxUdk=[&]() {
    json return_okjeXgC=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_ljwxUdk;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eFssQWz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CzICsdw=json({});
    
        if (name.pNext==NULL){
            return_CzICsdw["null"]=true;
            return return_CzICsdw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_txNdOIt=json({});
    return_txNdOIt=[&]() {
    json return_IgUnNUS=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_txNdOIt;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qsLWROQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dXiUFZZ=json({});
    
        if (name.pNext==NULL){
            return_dXiUFZZ["null"]=true;
            return return_dXiUFZZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_dAqMLre=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_EhKeMLF=json({});
    return_EhKeMLF=[&]() {
    json return_ZqiFmns=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_EhKeMLF;}();
result["members"]["size"]=[&]() {
    json return_OryARRZ=json({});
    return_OryARRZ=[&]() {
    json return_vmYOeVy=json({});
    return serialize_uint64_t(name.size);}();return return_OryARRZ;}();
result["members"]["bindingType"]=[&]() {
    json return_JMAfFbl=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_grFqjOO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RxWNGUJ=json({});
    
        if (name.pNext==NULL){
            return_RxWNGUJ["null"]=true;
            return return_RxWNGUJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opticalFlow"]=[&]() {
    json return_StgSfJb=json({});
    return_StgSfJb=[&]() {
    json return_xSOhoqm=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_StgSfJb;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_svtkBdk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LBZSSki=json({});
    
        if (name.pNext==NULL){
            return_LBZSSki["null"]=true;
            return return_LBZSSki;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_nitIRjY=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_TMvLwrQ=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_DEgyXmj=json({});
    return_DEgyXmj=[&]() {
    json return_pSkBcRZ=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_DEgyXmj;}();
result["members"]["costSupported"]=[&]() {
    json return_uKtZbry=json({});
    return_uKtZbry=[&]() {
    json return_aaGJfAe=json({});
    return serialize_uint32_t(name.costSupported);}();return return_uKtZbry;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_AfNFosK=json({});
    return_AfNFosK=[&]() {
    json return_SSgZuvc=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_AfNFosK;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_WdGBvEI=json({});
    return_WdGBvEI=[&]() {
    json return_CEwpuom=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_WdGBvEI;}();
result["members"]["minWidth"]=[&]() {
    json return_bMISTJX=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_eoRnCnj=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_xUHtAKR=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_mHxQSJl=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_OYBfGrl=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uDkIZqB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NcPDylC=json({});
    
        if (name.pNext==NULL){
            return_NcPDylC["null"]=true;
            return return_NcPDylC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_GMfhmuB=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VjFhCxj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VjFhCxj=NULL;
        }
    temp_VjFhCxj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VjFhCxj;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_utkJzLK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iFsmbol=json({});
    
        if (name.pNext==NULL){
            return_iFsmbol["null"]=true;
            return return_iFsmbol;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_QmiDFCA=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZBQHdsi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZBQHdsi=NULL;
        }
    temp_ZBQHdsi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZBQHdsi;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zyeVVyW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VHwTyxs=json({});
    
        if (name.pNext==NULL){
            return_VHwTyxs["null"]=true;
            return return_VHwTyxs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["width"]=[&]() {
    json return_taWSsFB=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_looeVnY=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_MCeyRzg=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_ikqaWsZ=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_VnBEkRH=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_CPUYHdS=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_kclxFnG=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_SEYuAPV=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_URBDLaK=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lWKOYjd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kZlDRaS=json({});
    
        if (name.pNext==NULL){
            return_kZlDRaS["null"]=true;
            return return_kZlDRaS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["id"]=[&]() {
    json return_LFdesly=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_AQcahws=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_nevwqfM=json({});
    
        if (name.pPrivateData==NULL){
            return_nevwqfM["null"]=true;
            return return_nevwqfM;
        }
        return serialize_void_p(name.pPrivateData);
}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_qosJdpx;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_qosJdpx=NULL;
        }
    temp_qosJdpx=deserialize_void_p(name["members"]["pPrivateData"]);
}();result.pPrivateData=temp_qosJdpx;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SOPHnVF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wCoAxnu=json({});
    
        if (name.pNext==NULL){
            return_wCoAxnu["null"]=true;
            return return_wCoAxnu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NpRDxiK=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_GlRyUcr=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_vDSNAeG=json({});
    
        if (name.pRegions==NULL){
            return_vDSNAeG["null"]=true;
            return return_vDSNAeG;
        }
        
        return_vDSNAeG["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_ymJHxBE=json({});
    return serialize_VkRect2D(name.pRegions[i]);}();
            return_vDSNAeG["members"][std::to_string(i)].push_back(temp);
        }
        return return_vDSNAeG;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_DrCgmVX;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_DrCgmVX=NULL;
        }
    temp_DrCgmVX=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int rVFHmEx=0; rVFHmEx < result.regionCount; rVFHmEx++){
            [&]() {
temp_DrCgmVX[rVFHmEx]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][rVFHmEx]);}();;
        }
        }();result.pRegions=temp_DrCgmVX;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tCkPddj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TJGAKDq=json({});
    
        if (name.pNext==NULL){
            return_TJGAKDq["null"]=true;
            return return_TJGAKDq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceFault"]=[&]() {
    json return_ekbThQy=json({});
    return_ekbThQy=[&]() {
    json return_bsaqqxI=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_ekbThQy;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_ZxyjtzT=json({});
    return_ZxyjtzT=[&]() {
    json return_kdHrzUp=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_ZxyjtzT;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_dizZfDt=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_YlsCJbU=json({});
    return_YlsCJbU=[&]() {
    json return_ypqVKcw=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_YlsCJbU;}();
result["members"]["addressPrecision"]=[&]() {
    json return_gqmzlar=json({});
    return_gqmzlar=[&]() {
    json return_VZeFFTN=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_gqmzlar;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_eHTRDLD=json({});
    
        return_eHTRDLD["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_rezCzjd=json({});
    return serialize_char(name.description[i]);}();
            return_eHTRDLD["members"][std::to_string(i)].push_back(temp);
        }
        return return_eHTRDLD;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_mDfjBXs=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_bTcxehh=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int ZXRIuaC=0; ZXRIuaC < VK_MAX_DESCRIPTION_SIZE; ZXRIuaC++){
            [&]() {
result.description[ZXRIuaC]=deserialize_char(name["members"]["description"]["members"][ZXRIuaC]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TptfAlH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_soJnlzM=json({});
    
        if (name.pNext==NULL){
            return_soJnlzM["null"]=true;
            return return_soJnlzM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["addressInfoCount"]=[&]() {
    json return_JRAdpyz=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_vUjKzeR=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_YQXllDx=json({});
    return_YQXllDx=[&]() {
    json return_HbutfDH=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_YQXllDx;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vgTQpRl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_efNezuc=json({});
    
        if (name.pNext==NULL){
            return_efNezuc["null"]=true;
            return return_efNezuc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["description"]=[&]() {
    json return_EhDTiSf=json({});
    
        return_EhDTiSf["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aCIqhpl=json({});
    return serialize_char(name.description[i]);}();
            return_EhDTiSf["members"][std::to_string(i)].push_back(temp);
        }
        return return_EhDTiSf;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_vJJYxgx=json({});
    
        if (name.pAddressInfos==NULL){
            return_vJJYxgx["null"]=true;
            return return_vJJYxgx;
        }
        return_vJJYxgx=[&]() {
    json return_qhuuOpp=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_vJJYxgx;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_waGEzhS=json({});
    
        if (name.pVendorInfos==NULL){
            return_waGEzhS["null"]=true;
            return return_waGEzhS;
        }
        return_waGEzhS=[&]() {
    json return_wdknHWK=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_waGEzhS;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_iNzWzww=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_iNzWzww["null"]=true;
            return return_iNzWzww;
        }
        return serialize_void_p(name.pVendorBinaryData);
}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int vlowxeQ=0; vlowxeQ < VK_MAX_DESCRIPTION_SIZE; vlowxeQ++){
            [&]() {
result.description[vlowxeQ]=deserialize_char(name["members"]["description"]["members"][vlowxeQ]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        }
    [&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        }
    [&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        }
    result.pVendorBinaryData=deserialize_void_p(name["members"]["pVendorBinaryData"]);
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_KgSQkyc=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_ikleCUR=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_VwLjTjM=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_kKcXNog=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_KuqtgVx=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_AZFbkbZ=json({});
    
        return_AZFbkbZ["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZnfdbSj=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_AZFbkbZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_AZFbkbZ;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_EqPVzSh=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_wTRchPu=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_NpvhcGG=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_Vidxptu=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_YwPjyat=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int jnfAyie=0; jnfAyie < VK_UUID_SIZE; jnfAyie++){
            [&]() {
result.pipelineCacheUUID[jnfAyie]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][jnfAyie]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_amXcFzL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xuBKUuq=json({});
    
        if (name.pNext==NULL){
            return_xuBKUuq["null"]=true;
            return return_xuBKUuq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_MSLOVrA=json({});
    return_MSLOVrA=[&]() {
    json return_TyAPmbK=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_MSLOVrA;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gxnmnmX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sWKrtmj=json({});
    
        if (name.pNext==NULL){
            return_sWKrtmj["null"]=true;
            return return_sWKrtmj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_VoEfErD=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_kVILTmo=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_tksXVsx=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ESOWsSr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ESOWsSr=NULL;
        }
    temp_ESOWsSr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ESOWsSr;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qznIRTb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LWfRLZe=json({});
    
        if (name.pNext==NULL){
            return_LWfRLZe["null"]=true;
            return return_LWfRLZe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_whvlglJ=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_kotKfJQ=json({});
    return_kotKfJQ=[&]() {
    json return_TjBSPWg=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_kotKfJQ;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nAuTcfS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nAuTcfS=NULL;
        }
    temp_nAuTcfS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nAuTcfS;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_uhbeNXO=json({});
    return_uhbeNXO=[&]() {
    json return_qiHhjxf=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_uhbeNXO;}();
result["members"]["dstAddress"]=[&]() {
    json return_UDhqIIf=json({});
    return_UDhqIIf=[&]() {
    json return_RMTIPoM=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_UDhqIIf;}();
result["members"]["compressedSize"]=[&]() {
    json return_idoWPTB=json({});
    return_idoWPTB=[&]() {
    json return_NODqurq=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_idoWPTB;}();
result["members"]["decompressedSize"]=[&]() {
    json return_iaEycob=json({});
    return_iaEycob=[&]() {
    json return_kvGJXPv=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_iaEycob;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_XFmHHKd=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dGwmjwl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CeCCFCx=json({});
    
        if (name.pNext==NULL){
            return_CeCCFCx["null"]=true;
            return return_CeCCFCx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_tqTbsog=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_XCxKfji=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_WgLrtqc=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zLGLFMM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sxIiWqZ=json({});
    
        if (name.pNext==NULL){
            return_sxIiWqZ["null"]=true;
            return return_sxIiWqZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_RRcIzzY=json({});
    return_RRcIzzY=[&]() {
    json return_oHhNSUs=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_RRcIzzY;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_btyawAu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_awlvrfP=json({});
    
        if (name.pNext==NULL){
            return_awlvrfP["null"]=true;
            return return_awlvrfP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lmXUGbT=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_VYOmvLa=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_TtNpxFL=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_uCpkVDO=json({});
    
        if (name.pImages==NULL){
            return_uCpkVDO["null"]=true;
            return return_uCpkVDO;
        }
        
        return_uCpkVDO["members"]={};
        for(int i=0; i < name.imageCount; i++){
            json temp;
            temp=[&]() {
    json return_ahBtQbL=json({});
    return serialize_VkImage(name.pImages[i]);}();
            return_uCpkVDO["members"][std::to_string(i)].push_back(temp);
        }
        return return_uCpkVDO;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_QJhFMak=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_Cfjwejc=json({});
    
        if (name.pBuffers==NULL){
            return_Cfjwejc["null"]=true;
            return return_Cfjwejc;
        }
        
        return_Cfjwejc["members"]={};
        for(int i=0; i < name.bufferCount; i++){
            json temp;
            temp=[&]() {
    json return_zQZXQuN=json({});
    return serialize_VkBuffer(name.pBuffers[i]);}();
            return_Cfjwejc["members"][std::to_string(i)].push_back(temp);
        }
        return return_Cfjwejc;
        }();
result["members"]["tagName"]=[&]() {
    json return_GNFTdZM=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_gFTAsKu=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_QDJrpEr=json({});
    
        if (name.pTag==NULL){
            return_QDJrpEr["null"]=true;
            return return_QDJrpEr;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wNhVwkP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wNhVwkP=NULL;
        }
    temp_wNhVwkP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wNhVwkP;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_ACMQCcu;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_ACMQCcu=NULL;
        }
    temp_ACMQCcu=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int VEYLbdo=0; VEYLbdo < result.imageCount; VEYLbdo++){
            [&]() {
temp_ACMQCcu[VEYLbdo]=deserialize_VkImage(name["members"]["pImages"]["members"][VEYLbdo]);}();;
        }
        }();result.pImages=temp_ACMQCcu;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_caJSaxz;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_caJSaxz=NULL;
        }
    temp_caJSaxz=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int UOIqilm=0; UOIqilm < result.bufferCount; UOIqilm++){
            [&]() {
temp_caJSaxz[UOIqilm]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][UOIqilm]);}();;
        }
        }();result.pBuffers=temp_caJSaxz;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_IxWLxul;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_IxWLxul=NULL;
        }
    temp_IxWLxul=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_IxWLxul;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oxYMjIz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lQvWFyV=json({});
    
        if (name.pNext==NULL){
            return_lQvWFyV["null"]=true;
            return return_lQvWFyV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["frameBoundary"]=[&]() {
    json return_lxLyKLW=json({});
    return_lxLyKLW=[&]() {
    json return_rsmyehi=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_lxLyKLW;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FIMksFA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UkshqGB=json({});
    
        if (name.pNext==NULL){
            return_UkshqGB["null"]=true;
            return return_UkshqGB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_hpdRCiw=json({});
    return_hpdRCiw=[&]() {
    json return_gwuVdIr=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_hpdRCiw;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hguSYwK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jEeecwz=json({});
    
        if (name.pNext==NULL){
            return_jEeecwz["null"]=true;
            return return_jEeecwz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMode"]=[&]() {
    json return_mfJwpSJ=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ziRJJBT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fcIYLYb=json({});
    
        if (name.pNext==NULL){
            return_fcIYLYb["null"]=true;
            return return_fcIYLYb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_bYbkvFf=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_jkDmzUW=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_GiSbwlK=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_DdWBBxu=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_sNpRLpU=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hGOMmvT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHmICrw=json({});
    
        if (name.pNext==NULL){
            return_HHmICrw["null"]=true;
            return return_HHmICrw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_ddpmDbJ=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_FVmJywS=json({});
    
        if (name.pPresentModes==NULL){
            return_FVmJywS["null"]=true;
            return return_FVmJywS;
        }
        
        return_FVmJywS["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_pPPmetK=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_FVmJywS["members"][std::to_string(i)].push_back(temp);
        }
        return return_FVmJywS;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int gaLKhUZ=0; gaLKhUZ < result.presentModeCount; gaLKhUZ++){
            [&]() {
result.pPresentModes[gaLKhUZ]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][gaLKhUZ]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PTkmiPR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YvAKiZr=json({});
    
        if (name.pNext==NULL){
            return_YvAKiZr["null"]=true;
            return return_YvAKiZr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_izNBPAs=json({});
    return_izNBPAs=[&]() {
    json return_NhVWVNr=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_izNBPAs;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RSTcliG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZpZzLom=json({});
    
        if (name.pNext==NULL){
            return_ZpZzLom["null"]=true;
            return return_ZpZzLom;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_PSNuEBT=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_pHrPMdo=json({});
    
        if (name.pFences==NULL){
            return_pHrPMdo["null"]=true;
            return return_pHrPMdo;
        }
        
        return_pHrPMdo["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_ukbyqoC=json({});
    return serialize_VkFence(name.pFences[i]);}();
            return_pHrPMdo["members"][std::to_string(i)].push_back(temp);
        }
        return return_pHrPMdo;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CPgFsNU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CPgFsNU=NULL;
        }
    temp_CPgFsNU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CPgFsNU;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_JBlRISF;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_JBlRISF=NULL;
        }
    temp_JBlRISF=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int MyykYtY=0; MyykYtY < result.swapchainCount; MyykYtY++){
            [&]() {
temp_JBlRISF[MyykYtY]=deserialize_VkFence(name["members"]["pFences"]["members"][MyykYtY]);}();;
        }
        }();result.pFences=temp_JBlRISF;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BUJCuoP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QJwqQrR=json({});
    
        if (name.pNext==NULL){
            return_QJwqQrR["null"]=true;
            return return_QJwqQrR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_boxlImJ=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_cDJhrXF=json({});
    
        if (name.pPresentModes==NULL){
            return_cDJhrXF["null"]=true;
            return return_cDJhrXF;
        }
        
        return_cDJhrXF["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_AoNXLIH=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_cDJhrXF["members"][std::to_string(i)].push_back(temp);
        }
        return return_cDJhrXF;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GCydXFz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GCydXFz=NULL;
        }
    temp_GCydXFz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GCydXFz;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_XlvaZOW;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_XlvaZOW=NULL;
        }
    temp_XlvaZOW=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int cdJrnYI=0; cdJrnYI < result.presentModeCount; cdJrnYI++){
            [&]() {
temp_XlvaZOW[cdJrnYI]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][cdJrnYI]);}();;
        }
        }();result.pPresentModes=temp_XlvaZOW;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XGfQxfJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GqFJcWT=json({});
    
        if (name.pNext==NULL){
            return_GqFJcWT["null"]=true;
            return return_GqFJcWT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_vgwkwXP=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_vNWomxH=json({});
    
        if (name.pPresentModes==NULL){
            return_vNWomxH["null"]=true;
            return return_vNWomxH;
        }
        
        return_vNWomxH["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_jPhtXrO=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_vNWomxH["members"][std::to_string(i)].push_back(temp);
        }
        return return_vNWomxH;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sQayBAf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sQayBAf=NULL;
        }
    temp_sQayBAf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sQayBAf;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_zqTrNOQ;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_zqTrNOQ=NULL;
        }
    temp_zqTrNOQ=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int hOfJTkd=0; hOfJTkd < result.swapchainCount; hOfJTkd++){
            [&]() {
temp_zqTrNOQ[hOfJTkd]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][hOfJTkd]);}();;
        }
        }();result.pPresentModes=temp_zqTrNOQ;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mkVhxfl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PeNiSLL=json({});
    
        if (name.pNext==NULL){
            return_PeNiSLL["null"]=true;
            return return_PeNiSLL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalingBehavior"]=[&]() {
    json return_wmLEXiB=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_gLtUfIf=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_FwxDFqC=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vquFDqh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vquFDqh=NULL;
        }
    temp_vquFDqh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vquFDqh;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jtZeEZI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mjPgFtQ=json({});
    
        if (name.pNext==NULL){
            return_mjPgFtQ["null"]=true;
            return return_mjPgFtQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_ceeWVcm=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_TZPjdtX=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_HfboUJu=json({});
    
        if (name.pImageIndices==NULL){
            return_HfboUJu["null"]=true;
            return return_HfboUJu;
        }
        
        return_HfboUJu["members"]={};
        for(int i=0; i < name.imageIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_qJKtsYr=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_HfboUJu["members"][std::to_string(i)].push_back(temp);
        }
        return return_HfboUJu;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OfBaZyX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OfBaZyX=NULL;
        }
    temp_OfBaZyX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OfBaZyX;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_JXKWThP;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_JXKWThP=NULL;
        }
    temp_JXKWThP=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int VcpwhPq=0; VcpwhPq < result.imageIndexCount; VcpwhPq++){
            [&]() {
temp_JXKWThP[VcpwhPq]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][VcpwhPq]);}();;
        }
        }();result.pImageIndices=temp_JXKWThP;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TOEsbcY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BjkCvLN=json({});
    
        if (name.pNext==NULL){
            return_BjkCvLN["null"]=true;
            return return_BjkCvLN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasControl"]=[&]() {
    json return_WCOXtlc=json({});
    return_WCOXtlc=[&]() {
    json return_lwxBDFs=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_WCOXtlc;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_rBdTJVh=json({});
    return_rBdTJVh=[&]() {
    json return_BrxWnSR=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_rBdTJVh;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_vFdJWeB=json({});
    return_vFdJWeB=[&]() {
    json return_DZCvCdo=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_vFdJWeB;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_CCCKPrE=json({});
    return_CCCKPrE=[&]() {
    json return_ytGeEpy=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_CCCKPrE;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EzlrhWu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RSAiRLW=json({});
    
        if (name.pNext==NULL){
            return_RSAiRLW["null"]=true;
            return return_RSAiRLW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_xyYTLkF=json({});
    return_xyYTLkF=[&]() {
    json return_nsSbpho=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_xyYTLkF;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BnYVWqE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JnRPmfz=json({});
    
        if (name.pNext==NULL){
            return_JnRPmfz["null"]=true;
            return return_JnRPmfz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_ANUCFMP=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_azRWLLG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hRtnSKR=json({});
    
        if (name.pNext==NULL){
            return_hRtnSKR["null"]=true;
            return return_hRtnSKR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uHvIdWJ=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_BPMOpKn=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);
        #endif
        }();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yeaShiP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dXMsOwc=json({});
    
        if (name.pNext==NULL){
            return_dXMsOwc["null"]=true;
            return return_dXMsOwc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_kZrDrPb=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_ezrlfhj=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_aAhJYWn=json({});
    
        if (name.pDrivers==NULL){
            return_aAhJYWn["null"]=true;
            return return_aAhJYWn;
        }
        
        return_aAhJYWn["members"]={};
        for(int i=0; i < name.driverCount; i++){
            json temp;
            temp=[&]() {
    json return_CDMzGgA=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[i]);}();
            return_aAhJYWn["members"][std::to_string(i)].push_back(temp);
        }
        return return_aAhJYWn;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_oqkbxHG;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_oqkbxHG=NULL;
        }
    temp_oqkbxHG=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int pGFastI=0; pGFastI < result.driverCount; pGFastI++){
            [&]() {
temp_oqkbxHG[pGFastI]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][pGFastI]);}();;
        }
        }();result.pDrivers=temp_oqkbxHG;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jqgxPNG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PIEiFID=json({});
    
        if (name.pNext==NULL){
            return_PIEiFID["null"]=true;
            return return_PIEiFID;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_zwUMAiO=json({});
    return_zwUMAiO=[&]() {
    json return_PrunBKz=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_zwUMAiO;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pcScvxx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BtKSonK=json({});
    
        if (name.pNext==NULL){
            return_BtKSonK["null"]=true;
            return return_BtKSonK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_aKJwbDQ=json({});
    return_aKJwbDQ=[&]() {
    json return_nTlzAYM=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_aKJwbDQ;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fXvHlAK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ImgQYXR=json({});
    
        if (name.pNext==NULL){
            return_ImgQYXR["null"]=true;
            return return_ImgQYXR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_ySJmUUX=json({});
    
        if (name.pCreateInfo==NULL){
            return_ySJmUUX["null"]=true;
            return return_ySJmUUX;
        }
        return_ySJmUUX=[&]() {
    json return_XqVZDQr=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_ySJmUUX;}();
result["members"]["pSubresource"]=[&]() {
    json return_BniwoqY=json({});
    
        if (name.pSubresource==NULL){
            return_BniwoqY["null"]=true;
            return return_BniwoqY;
        }
        return_BniwoqY=[&]() {
    json return_EWaKFWn=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_BniwoqY;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bIkWROs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bIkWROs=NULL;
        }
    temp_bIkWROs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bIkWROs;}();
[&]() {
VkImageCreateInfo* temp_cpTTwSK;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_cpTTwSK=NULL;
        }
    [&]() {
*(temp_cpTTwSK)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_cpTTwSK;}();
[&]() {
VkImageSubresource2KHR* temp_mykBWMc;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_mykBWMc=NULL;
        }
    [&]() {
*(temp_mykBWMc)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_mykBWMc;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nLbNAGr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cUgSTmX=json({});
    
        if (name.pNext==NULL){
            return_cUgSTmX["null"]=true;
            return return_cUgSTmX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pixelRate"]=[&]() {
    json return_DikbvoZ=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_HWPOWSD=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_SvpLdaK=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CgUmBQg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JYUlRpX=json({});
    
        if (name.pNext==NULL){
            return_JYUlRpX["null"]=true;
            return return_JYUlRpX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_vuJxpem=json({});
    return_vuJxpem=[&]() {
    json return_BZmWczw=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_vuJxpem;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BsZnhfh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OSrGRrM=json({});
    
        if (name.pNext==NULL){
            return_OSrGRrM["null"]=true;
            return return_OSrGRrM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_VsUKJrV=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_rsQUJfw=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_rsQUJfw["null"]=true;
            return return_rsQUJfw;
        }
        
        return_rsQUJfw["members"]={};
        for(int i=0; i < name.perViewRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_EOymNjM=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[i]);}();
            return_rsQUJfw["members"][std::to_string(i)].push_back(temp);
        }
        return return_rsQUJfw;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HYBxvQs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HYBxvQs=NULL;
        }
    temp_HYBxvQs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HYBxvQs;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_uEvjNsb;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_uEvjNsb=NULL;
        }
    temp_uEvjNsb=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int NbcktmR=0; NbcktmR < result.perViewRenderAreaCount; NbcktmR++){
            [&]() {
temp_uEvjNsb[NbcktmR]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][NbcktmR]);}();;
        }
        }();result.pPerViewRenderAreas=temp_uEvjNsb;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oMnXhPU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QoTEUSi=json({});
    
        if (name.pNext==NULL){
            return_QoTEUSi["null"]=true;
            return return_QoTEUSi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_ibhAqyq=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_ibhAqyq["null"]=true;
            return return_ibhAqyq;
        }
        return serialize_void_p(name.pQueriedLowLatencyData);
}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xCoCWBB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xCoCWBB=NULL;
        }
    temp_xCoCWBB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xCoCWBB;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        }
    result.pQueriedLowLatencyData=deserialize_void_p(name["members"]["pQueriedLowLatencyData"]);
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ValxqaG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TgJBcLB=json({});
    
        if (name.pNext==NULL){
            return_TgJBcLB["null"]=true;
            return return_TgJBcLB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_cwVuCDY=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_wKjAliQ=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_GKNDAZg=json({});
    return_GKNDAZg=[&]() {
    json return_ymgDrUI=json({});
    return serialize_uint64_t(name.offset);}();return return_GKNDAZg;}();
result["members"]["size"]=[&]() {
    json return_KNkuXqJ=json({});
    return_KNkuXqJ=[&]() {
    json return_CncBANw=json({});
    return serialize_uint64_t(name.size);}();return return_KNkuXqJ;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Xihqyar;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Xihqyar=NULL;
        }
    temp_Xihqyar=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Xihqyar;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OVCqlHH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AqCgBYW=json({});
    
        if (name.pNext==NULL){
            return_AqCgBYW["null"]=true;
            return return_AqCgBYW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MZSoWcJ=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_wbqxUJp=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EshAelX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EshAelX=NULL;
        }
    temp_EshAelX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EshAelX;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VdhgJjK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wwoRuxw=json({});
    
        if (name.pNext==NULL){
            return_wwoRuxw["null"]=true;
            return return_wwoRuxw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderObject"]=[&]() {
    json return_EeFVelJ=json({});
    return_EeFVelJ=[&]() {
    json return_iqSrBSz=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_EeFVelJ;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PjXKcyU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rXzFofP=json({});
    
        if (name.pNext==NULL){
            return_rXzFofP["null"]=true;
            return return_rXzFofP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_IhbDjfe=json({});
    
        return_IhbDjfe["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_nMpthfb=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[i]);}();
            return_IhbDjfe["members"][std::to_string(i)].push_back(temp);
        }
        return return_IhbDjfe;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_ixxIZvb=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int oKUFYtr=0; oKUFYtr < VK_UUID_SIZE; oKUFYtr++){
            [&]() {
result.shaderBinaryUUID[oKUFYtr]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][oKUFYtr]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OccCZNf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_znpFIfl=json({});
    
        if (name.pNext==NULL){
            return_znpFIfl["null"]=true;
            return return_znpFIfl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PzlsRQE=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_KuuWLjL=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_SszYbXB=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_CcKAdZc=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_CHLtbiZ=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_YFIjXYf=json({});
    
        if (name.pCode==NULL){
            return_YFIjXYf["null"]=true;
            return return_YFIjXYf;
        }
        return serialize_void_p(name.pCode);
}();
result["members"]["pName"]=[&]() {
    json return_NIrcYuA=json({});
    
        if (name.pName==NULL){
            return_NIrcYuA["null"]=true;
            return return_NIrcYuA;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["setLayoutCount"]=[&]() {
    json return_inIbLDq=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_kdKDScD=json({});
    
        if (name.pSetLayouts==NULL){
            return_kdKDScD["null"]=true;
            return return_kdKDScD;
        }
        
        return_kdKDScD["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_xTdvewL=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_kdKDScD["members"][std::to_string(i)].push_back(temp);
        }
        return return_kdKDScD;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_MsHZKZw=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_FiMwUto=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_FiMwUto["null"]=true;
            return return_FiMwUto;
        }
        
        return_FiMwUto["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_SPnIEVM=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_FiMwUto["members"][std::to_string(i)].push_back(temp);
        }
        return return_FiMwUto;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_DjyysUj=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_DjyysUj["null"]=true;
            return return_DjyysUj;
        }
        return_DjyysUj=[&]() {
    json return_wIMETQb=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_DjyysUj;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hBVCWJf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hBVCWJf=NULL;
        }
    temp_hBVCWJf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hBVCWJf;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_BfiuXjG;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_BfiuXjG=NULL;
        }
    temp_BfiuXjG=deserialize_void_p(name["members"]["pCode"]);
}();result.pCode=temp_BfiuXjG;}();
[&]() {
char* temp_xqEqOrs;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_xqEqOrs=NULL;
        }
    temp_xqEqOrs=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_xqEqOrs;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_eFMXGNZ;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_eFMXGNZ=NULL;
        }
    temp_eFMXGNZ=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int ltJtVPe=0; ltJtVPe < result.setLayoutCount; ltJtVPe++){
            [&]() {
temp_eFMXGNZ[ltJtVPe]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][ltJtVPe]);}();;
        }
        }();result.pSetLayouts=temp_eFMXGNZ;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_nhURSuo;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_nhURSuo=NULL;
        }
    temp_nhURSuo=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int LIikNIO=0; LIikNIO < result.pushConstantRangeCount; LIikNIO++){
            [&]() {
temp_nhURSuo[LIikNIO]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][LIikNIO]);}();;
        }
        }();result.pPushConstantRanges=temp_nhURSuo;}();
[&]() {
VkSpecializationInfo* temp_lLhpzhD;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_lLhpzhD=NULL;
        }
    [&]() {
*(temp_lLhpzhD)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_lLhpzhD;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CSmsiLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wJsMkhF=json({});
    
        if (name.pNext==NULL){
            return_wJsMkhF["null"]=true;
            return return_wJsMkhF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_AiwziKS=json({});
    return_AiwziKS=[&]() {
    json return_GYCqiNL=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_AiwziKS;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_PsHXySM=json({});
    return_PsHXySM=[&]() {
    json return_UqAwyuM=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_PsHXySM;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_rKaWgcp=json({});
    return_rKaWgcp=[&]() {
    json return_jejAdTW=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_rKaWgcp;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uAjDZKX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cUkaMUu=json({});
    
        if (name.pNext==NULL){
            return_cUkaMUu["null"]=true;
            return return_cUkaMUu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_DoewVJR=json({});
    return_DoewVJR=[&]() {
    json return_hrOhrlf=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_DoewVJR;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_UrLqALb=json({});
    return_UrLqALb=[&]() {
    json return_rWPpmIg=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_UrLqALb;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_xsLVuYk=json({});
    return_xsLVuYk=[&]() {
    json return_tVDUpAQ=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_xsLVuYk;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TjMuiAC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cfqsmYb=json({});
    
        if (name.pNext==NULL){
            return_cfqsmYb["null"]=true;
            return return_cfqsmYb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_RHETeuP=json({});
    return_RHETeuP=[&]() {
    json return_vyVykks=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_RHETeuP;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_xFgIEuL=json({});
    return_xFgIEuL=[&]() {
    json return_GQcAwqI=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_xFgIEuL;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zSDflqY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AgUtkma=json({});
    
        if (name.pNext==NULL){
            return_AgUtkma["null"]=true;
            return return_AgUtkma;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_TwoWAqK=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_kxlyJnv=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_gMUShzJ=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_Mdnoetl=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_DIdYphF=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_UFVHMlP=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_arxVGiX=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_WwgNtkj=json({});
    return_WwgNtkj=[&]() {
    json return_eGFnoiD=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_WwgNtkj;}();
result["members"]["scope"]=[&]() {
    json return_NVVCeyT=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UUevTJm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_omrQatC=json({});
    
        if (name.pNext==NULL){
            return_omrQatC["null"]=true;
            return return_omrQatC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_TRFClnr=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mrOxhMn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YnJkHgK=json({});
    
        if (name.pNext==NULL){
            return_YnJkHgK["null"]=true;
            return return_YnJkHgK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_YuqgaZP=json({});
    return_YuqgaZP=[&]() {
    json return_ViWqNTJ=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_YuqgaZP;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sIgBjLi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HGLenwr=json({});
    
        if (name.pNext==NULL){
            return_HGLenwr["null"]=true;
            return return_HGLenwr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_wSyIYbf=json({});
    return_wSyIYbf=[&]() {
    json return_jUwPEeN=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_wSyIYbf;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aMunNtJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Zeuskyx=json({});
    
        if (name.pNext==NULL){
            return_Zeuskyx["null"]=true;
            return return_Zeuskyx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enableYDegamma"]=[&]() {
    json return_jTqkFff=json({});
    return_jTqkFff=[&]() {
    json return_ordrbsj=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_jTqkFff;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_jdAFzAj=json({});
    return_jdAFzAj=[&]() {
    json return_IAhcQzz=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_jdAFzAj;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gwEJFOc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NaYJrvW=json({});
    
        if (name.pNext==NULL){
            return_NaYJrvW["null"]=true;
            return return_NaYJrvW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_iYWiQzg=json({});
    return_iYWiQzg=[&]() {
    json return_DmlSQpF=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_iYWiQzg;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DqSzrST=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DhwiIbK=json({});
    
        if (name.pNext==NULL){
            return_DhwiIbK["null"]=true;
            return return_DhwiIbK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_euzaDUa=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_paaAkCY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_paaAkCY=NULL;
        }
    temp_paaAkCY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_paaAkCY;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XAShPLd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_siOYxHl=json({});
    
        if (name.pNext==NULL){
            return_siOYxHl["null"]=true;
            return return_siOYxHl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_LufKYfL=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UsYgnOf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UsYgnOf=NULL;
        }
    temp_UsYgnOf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UsYgnOf;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nGlKZXY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QwYadiw=json({});
    
        if (name.pNext==NULL){
            return_QwYadiw["null"]=true;
            return return_QwYadiw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_VDbrLNP=json({});
    return_VDbrLNP=[&]() {
    json return_DWiUnED=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_VDbrLNP;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bFlLsgl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bjIGmsJ=json({});
    
        if (name.pNext==NULL){
            return_bjIGmsJ["null"]=true;
            return return_bjIGmsJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_bDFXUji=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vDKoWmC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sHHNCpc=json({});
    
        if (name.pNext==NULL){
            return_sHHNCpc["null"]=true;
            return return_sHHNCpc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["windowExtent"]=[&]() {
    json return_IopuZlT=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_smsyQFj=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jVQQuUf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jVQQuUf=NULL;
        }
    temp_jVQQuUf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jVQQuUf;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dPRTyhJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IBZEuWu=json({});
    
        if (name.pNext==NULL){
            return_IBZEuWu["null"]=true;
            return return_IBZEuWu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_SrgxScn=json({});
    return_SrgxScn=[&]() {
    json return_hlttVtO=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_SrgxScn;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LAathXK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GdqHooV=json({});
    
        if (name.pNext==NULL){
            return_GdqHooV["null"]=true;
            return return_GdqHooV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["underlyingAPI"]=[&]() {
    json return_TIpdFQB=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_void_p(const void* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            void* deserialize_void_p(json name){
                return (void*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char_p(const char* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            char* deserialize_char_p(json name){
                return (char*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_JKETZjY=json({});
    
        if (_struct->pUserData==NULL){
            return_JKETZjY["null"]=true;
            return return_JKETZjY;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_CcKYDCs=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_jxjlSfB=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_wxxnkNc=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_sPEYfNb=json({});
    
        if (pUserData==NULL){
            return_sPEYfNb["null"]=true;
            return return_sPEYfNb;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_CWYOrqO=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_hUKNzuW=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_WQfpdrd=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_tEwdLwb=json({});
    
        if (_struct->pUserData==NULL){
            return_tEwdLwb["null"]=true;
            return return_tEwdLwb;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_FyvJovx=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_WyjTNfG=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_dmpmehc=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_iFWJmAm=json({});
    
        if (pUserData==NULL){
            return_iFWJmAm["null"]=true;
            return return_iFWJmAm;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_FISPkSd=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_UTpEYQQ=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_bHqKATu=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_sPcMMSN=json({});
    
        if (_struct->pUserData==NULL){
            return_sPcMMSN["null"]=true;
            return return_sPcMMSN;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pOriginal"]=[&]() {
    json return_omxmHuO=json({});
    
        if (pOriginal==NULL){
            return_omxmHuO["null"]=true;
            return return_omxmHuO;
        }
        return serialize_void_p(pOriginal);
}();
data["members"]["size"]=[&]() {
    json return_kEKqaxm=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_amLxYPO=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_YMWtntG=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_TMUSlPG=json({});
    
        if (result_temp==NULL){
            return_TMUSlPG["null"]=true;
            return return_TMUSlPG;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_CdXEpti=json({});
    
        if (pUserData==NULL){
            return_CdXEpti["null"]=true;
            return return_CdXEpti;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pOriginal"]=[&]() {
    json return_EFcEGKD=json({});
    
        if (pOriginal==NULL){
            return_EFcEGKD["null"]=true;
            return return_EFcEGKD;
        }
        return serialize_void_p(pOriginal);
}();
result["params"]["size"]=[&]() {
    json return_XUhNPpc=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_fRYLgJh=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_RQwzhmA=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_ZSGoqQw=json({});
    
        if (_struct->pUserData==NULL){
            return_ZSGoqQw["null"]=true;
            return return_ZSGoqQw;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_AKnImNA=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_yXHXFtH=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_oCGJwBF=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_LryeWyU=json({});
    
        if (result_temp==NULL){
            return_LryeWyU["null"]=true;
            return return_LryeWyU;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_BPyHREv=json({});
    
        if (pUserData==NULL){
            return_BPyHREv["null"]=true;
            return return_BPyHREv;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_dzvhyJG=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_wdHjvXJ=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_TzSiQLh=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_Iutxlbs=json({});
    
        if (_struct->pUserData==NULL){
            return_Iutxlbs["null"]=true;
            return return_Iutxlbs;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pMemory"]=[&]() {
    json return_FpaaLfs=json({});
    
        if (pMemory==NULL){
            return_FpaaLfs["null"]=true;
            return return_FpaaLfs;
        }
        return serialize_void_p(pMemory);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_rIUPBOB=json({});
    
        if (pUserData==NULL){
            return_rIUPBOB["null"]=true;
            return return_rIUPBOB;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pMemory"]=[&]() {
    json return_qbmTZsm=json({});
    
        if (pMemory==NULL){
            return_qbmTZsm["null"]=true;
            return return_qbmTZsm;
        }
        return serialize_void_p(pMemory);
}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_NfuSauw=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_VCZKnUR=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_ompGjpo=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_slseZFR=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_JsTpUBj=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_Aajohkh=json({});
    
        if (pLayerPrefix==NULL){
            return_Aajohkh["null"]=true;
            return return_Aajohkh;
        }
        return serialize_char_p(pLayerPrefix);
}();
data["members"]["pMessage"]=[&]() {
    json return_UeOZJIt=json({});
    
        if (pMessage==NULL){
            return_UeOZJIt["null"]=true;
            return return_UeOZJIt;
        }
        return serialize_char_p(pMessage);
}();
data["members"]["pUserData"]=[&]() {
    json return_RGPuGeN=json({});
    
        if (_struct->pUserData==NULL){
            return_RGPuGeN["null"]=true;
            return return_RGPuGeN;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_xhuCafj;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_xhuCafj=NULL;
        }
    temp_xhuCafj=deserialize_char_p(data["members"]["pLayerPrefix"]);
}();pLayerPrefix=temp_xhuCafj;}();
const char*                                 pMessage;
[&]() {
char* temp_QpYiGSr;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_QpYiGSr=NULL;
        }
    temp_QpYiGSr=deserialize_char_p(data["members"]["pMessage"]);
}();pMessage=temp_QpYiGSr;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_hKIDLhK=json({});
    return_hKIDLhK=[&]() {
    json return_tMhFcKN=json({});
    return serialize_uint32_t(result_temp);}();return return_hKIDLhK;}();
result["params"]["flags"]=[&]() {
    json return_MzNOSlw=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_LKMOKfJ=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_RAounIb=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_oUuVpLA=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_kHLQJyL=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_lYwtcMq=json({});
    
        if (pLayerPrefix==NULL){
            return_lYwtcMq["null"]=true;
            return return_lYwtcMq;
        }
        return serialize_char_p(pLayerPrefix);
}();
result["params"]["pMessage"]=[&]() {
    json return_afuvraO=json({});
    
        if (pMessage==NULL){
            return_afuvraO["null"]=true;
            return return_afuvraO;
        }
        return serialize_char_p(pMessage);
}();
result["params"]["pUserData"]=[&]() {
    json return_ecOrXDq=json({});
    
        if (pUserData==NULL){
            return_ecOrXDq["null"]=true;
            return return_ecOrXDq;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_wYhierm=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_uKixvcC=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_WJxLKWz=json({});
    
        if (pCallbackData==NULL){
            return_WJxLKWz["null"]=true;
            return return_WJxLKWz;
        }
        return_WJxLKWz=[&]() {
    json return_GFAFvEB=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_WJxLKWz;}();
data["members"]["pUserData"]=[&]() {
    json return_NVhDCOm=json({});
    
        if (_struct->pUserData==NULL){
            return_NVhDCOm["null"]=true;
            return return_NVhDCOm;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_XLcuZBx;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_XLcuZBx=NULL;
        }
    [&]() {
*(temp_XLcuZBx)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_XLcuZBx;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_XeEXppm=json({});
    return_XeEXppm=[&]() {
    json return_GZpiTmh=json({});
    return serialize_uint32_t(result_temp);}();return return_XeEXppm;}();
result["params"]["messageSeverity"]=[&]() {
    json return_KXTSqFi=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_yKCOFHl=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_RtTnmcF=json({});
    
        if (pCallbackData==NULL){
            return_RtTnmcF["null"]=true;
            return return_RtTnmcF;
        }
        return_RtTnmcF=[&]() {
    json return_ZYabdrl=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_RtTnmcF;}();
result["params"]["pUserData"]=[&]() {
    json return_IeogBkz=json({});
    
        if (pUserData==NULL){
            return_IeogBkz["null"]=true;
            return return_IeogBkz;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_MfFWZqw=json({});
    
        if (pCallbackData==NULL){
            return_MfFWZqw["null"]=true;
            return return_MfFWZqw;
        }
        return_MfFWZqw=[&]() {
    json return_SHnsMoc=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_MfFWZqw;}();
data["members"]["pUserData"]=[&]() {
    json return_PXXnkGN=json({});
    
        if (_struct->pUserData==NULL){
            return_PXXnkGN["null"]=true;
            return return_PXXnkGN;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_zooBzHD;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_zooBzHD=NULL;
        }
    [&]() {
*(temp_zooBzHD)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_zooBzHD;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_EbNVJWY=json({});
    
        if (pCallbackData==NULL){
            return_EbNVJWY["null"]=true;
            return return_EbNVJWY;
        }
        return_EbNVJWY=[&]() {
    json return_BGhMhYI=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_EbNVJWY;}();
result["params"]["pUserData"]=[&]() {
    json return_AyRjeAf=json({});
    
        if (pUserData==NULL){
            return_AyRjeAf["null"]=true;
            return return_AyRjeAf;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
